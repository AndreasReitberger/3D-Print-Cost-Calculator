<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Wpf.ListBox</name>
  </assembly>
  <members>
    <member name="T:Xceed.Wpf.Controls.IDataNavigationHost">
      <summary>Defines members that can be implemented to provide data navigation capabilities.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.IFilterExpressionProvider">
      <summary>Provides properties and methods that can be implemented to provide filter expression capabilities.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.IDataNavigationHost.NavigateToKey(System.Object)">
      <summary>Causes the listbox to navigate to the group corresponding to the passed key.</summary>
      <param name="key">An object representing the key that will be used in the data navigation operation.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.IDataNavigationHost.Configuration">
      <summary>Gets the DataNavigationConfiguration of the control implementing
<strong>IDataNavigationHost</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.IDataNavigationHost.NavigateToKeyCommand">
      <summary>Gets the NavigateToKey command.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.IFilterExpressionProvider.ClearFilterExpression">
      <summary>Clears the filter expression.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.IFilterExpressionProvider.ClearFilterCommand">
      <summary>Gets the command associated with the ClearFilter command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.IFilterExpressionProvider.FilteredFieldNames">
      <summary>Gets the list of field names that the class implementing IFilterExpressionProvider will use to filter its items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.IFilterExpressionProvider.FilterExpression">
      <summary>Gets or sets the filter expression that the class implementing IFilterExpressionProvider will use to filter items.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.FilterMode">
      <summary>Value indicating how filters in the FilterControl are applied.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterMode.And">
      <summary>The data items will be filtered according to <strong>all</strong> the filtering criteria defined by each column. If a data item matches all the criteria, it
will be included.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterMode.Or">
      <summary>The data items will be filtered according to <strong>at least one</strong> of the filtering criteria defined by the columns. If a data item matches at least
one criteria, it will be included.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.AlphabeticalDataNavigationConfiguration">
      <summary>Used to configure the DataNavigationControl to display buttons that correspond to
alphabetical keys (A through Z).</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.DataNavigationConfiguration">
      <summary>Base class of the classes used to configure the DataNavigationControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.DataNavigationControl">
      <summary>
        <para>Provides a data navigation panel containing buttons that correspond to keys, which are used to browse to first-level groups corresponding to the value
represented by the keys.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.DataNavigationItem">
      <summary>Represents an item in the data navigation control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.FieldNameList">
      <summary>Represents a list of field names.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.FilterControl">
      <summary>Represents the control used to filter (search) the items in the listbox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.SearchTextBox">
      <summary>Represents the text box into which searches (filters) are typed by the end user.</summary>
    </member>
    <member name="T:Xceed.Wpf.Controls.UniformGrid">
      <summary>Provides a way to arrange content in a grid layout where all the cells in the grid have the same size.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.AlphabeticalDataNavigationConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>AlphabeticalDataNavigationConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.AlphabeticalDataNavigationConfiguration.GetKeys">
      <summary>Returns a list of the keys used by the configuration.</summary>
      <returns>A list containing the keys used by the configuration.</returns>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationConfiguration.GetKeys">
      <summary>Returns a list of the keys used by the configuration.</summary>
      <returns>A list containing the keys used by the configuration.</returns>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationConfiguration.IsInitialized">
      <summary>Gets or sets a value that indicates whether this element has been initialized.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationConfiguration.ItemTemplate">
      <summary>Gets or sets the data template used to display each item.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationConfiguration.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.#ctor">
      <summary>Initializes a new instance of the <strong>DataNavigationControl</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.ChangeVisualState">
      <summary>Updates the visual state of the DataNavigationControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.ChangeVisualStateCore(System.Boolean)">
      <summary>Updates the visual state of the DataNavigationControl, specifying whether
transitions should be used.</summary>
      <param name="useTransitions">
        <strong>true</strong> if transitions should be used; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>
        <span>
          <span>The element that is used to display the given item.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.GetDataNavigationConfiguration(System.Windows.DependencyObject)">
      <summary>Returns the DataNavigationConfiguration of an element.</summary>
      <returns>The <strong>DataNavigationConfiguration</strong> of <em>obj</em>.</returns>
      <param name="obj">The element whose <strong>DataNavigationConfiguration</strong> will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <strong>GotFocus</strong> event occurs.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <strong>LostFocus</strong> event occurs.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <strong>MouseEnter</strong> event occurs.</summary>
      <param name="e">A MouseEventArgs that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <strong>MouseLeave</strong> event occurs.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <para>Prepares the specified element to display the specified item.</para>
      </summary>
      <param name="element">The element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.SetDataNavigationConfiguration(System.Windows.DependencyObject,Xceed.Wpf.Controls.DataNavigationConfiguration)">
      <summary>Sets the DataNavigationConfiguration of the passed object.</summary>
      <param name="obj">The object whose <strong>DataNavigationConfiguration</strong> will be set.</param>
      <param name="value">The <strong>DataNavigationConfiguration</strong> to set on <em>obj</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.ChangeVisualState">
      <summary>Updates the visual state of the DataNavigationControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationControl.ChangeVisualState(System.Boolean)">
      <summary>Updates the visual state of the DataNavigationControl. specifying whether
transitions should be used.</summary>
      <param name="useTransitions">
        <strong>true</strong> if transitions should be used; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationControl.DataNavigationHost">
      <summary>Gets or sets the host of the DataNavigationControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationControl.Keys">
      <summary>Gets the keys being used in the DataNavigationControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationControl.NavigateToKeyCommand">
      <summary>Gets or sets the navigate to key command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationControl.Orientation">
      <summary>Gets or sets the orientation of the DataNavigationControl.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationControl.DataNavigationConfigurationProperty">
      <summary>Identifies the <strong>DataNavigationConfiguration</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationControl.DataNavigationHostProperty">
      <summary>Identifies the DataNavigationHost dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationControl.KeysProperty">
      <summary>Identifies the Keys dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationControl.NavigateToKeyCommandProperty">
      <summary>Identifies the NavigateToKeyCommand dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationControl.OrientationProperty">
      <summary>Identifies the dependency property.<br />
The identifier for the dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.#ctor">
      <summary>Initializes a new instance of the <strong>DataNavigationItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.ExecuteCommand">
      <summary>Executes Command.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the Click event.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <strong>GotFocus</strong> event occurs.</summary>
      <param name="e">
        <para>A <strong>RoutedEventArgs</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Called before the <strong>LostFocus</strong> event occurs.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <strong>MouseEnter</strong> event occurs.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Called before the <strong>MouseLeave</strong> event occurs.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called before the <strong>MouseLeftButtonDown</strong> event occurs.</summary>
      <param name="e">A MouseButtonEventArgs that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.ChangeVisualState(System.Boolean)">
      <summary>Updates the visual state of the DataNavigationItem, specifying whether transitions
should be used.</summary>
      <param name="useTransitions">
        <strong>true</strong> if transitions should be used; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnLoaded">
      <summary>Called when the <strong>Loaded</strong> event occurs.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.DataNavigationItem.OnUnloaded">
      <summary>Called when the <strong>Unloaded</strong> event occurs.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationItem.Command">
      <summary>Gets or sets the command associated with this element.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationItem.CommandParameter">
      <summary>Gets or sets the data to be used by the command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.DataNavigationItem.ContentTemplate">
      <summary>Gets or sets the data template of the DataNavigationItem.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationItem.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationItem.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.DataNavigationItem.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Controls.DataNavigationItem.Click">
      <summary>Occurs when the DataNavigationItem is clicked.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.#ctor">
      <summary>Initializes a new instance of the FieldNameList class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.Add(System.String)">
      <summary>Adds an object to the end of the collection.</summary>
      <param name="value">The object to be added to the end of the collection</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.Contains(System.String)">
      <summary>Determines whether an element is in the collection.</summary>
      <returns>
        <strong>true</strong> if the string is found in the IList; otherwise, <strong>false</strong>.</returns>
      <param name="value">
        <span>
          <span>The string to locate in the IList.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <strong>IEnumerator</strong> for the collection.</returns>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.IndexOf(System.String)">
      <summary>Searches for the specified string and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
      <param name="value">The string to locate in the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.Insert(System.Int32,System.String)">
      <summary>Inserts an element into the collection at the specified index.</summary>
      <param name="index">
        <para>The zero-based index at which item should be inserted.</para>
      </param>
      <param name="value">
        <para>The object to insert.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.Remove(System.String)">
      <summary>Removes the first occurrence of a specific string from the collection.</summary>
      <param name="value">The string to remove from the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FieldNameList.RemoveAt(System.Int32)">
      <summary>Removes the string at the specified index of the collection.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.FieldNameList.Count">
      <summary>Gets a value representing the number of strings in the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FieldNameList.IsFixedSize">
      <summary>Gets a value indicating whether the <strong>IList</strong> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FieldNameList.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FieldNameList.Item(System.Int32)">
      <summary>Gets the item at the specified index.</summary>
      <param name="index">The zero-based index at which to retrieve the item.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.FieldNameList.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to the <strong>IList</strong>.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Controls.FieldNameList.CollectionChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.#ctor">
      <summary>Initializes a new instance of the <strong>FilterControl</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ChangeVisualState">
      <summary>Updates the visual state of the FilterControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ChangeVisualStateCore(System.Boolean)">
      <summary>Updates the visual state of the FilterControl, specifying whether transitions should be
used.</summary>
      <param name="useTransitions">
        <strong>true</strong> if transitions should be used; otherwise, <strong>false</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ClearFilterCanExecute(System.Object)">
      <summary>
        <para>Returns a value indicating whether the filter can be cleared in its current state.</para>
      </summary>
      <returns>
        <span>
          <span>
            <font color="black">
              <strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</font>
          </span>
        </span>
      </returns>
      <param name="parameter">
        <span>
          <span>Data used by the command.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ClearFilterExcecute(System.Object)">
      <summary>Defines the method to be called when the ClearFilter command is invoked.</summary>
      <param name="parameter">
        <span>
          <span>Data used by the command.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.OnApplyDataSourceFilterExpressionFromUIFilterExpressionBase(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Raised when a DataSourceFilterExpression is applied from a
<see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Controls.FilterControl~UIFilterExpression.html">UIFilterExpression</see>.</summary>
      <param name="filterExpressionBase">The filter expression being applied.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ChangeVisualState">
      <summary>Updates the visual state of the FilterControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.ChangeVisualState(System.Boolean)">
      <summary>Updates the visual state of the FilterControl, specifying whether to use transitions.</summary>
      <param name="useTransitions">
        <strong>true</strong> if transitions should be used; otherwise, <strong>false</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.OnDataSourceFilterExpressionChanged(Xceed.Wpf.Data.FilterExpressionBase,Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Raised when the DataSourceFilterExpression changes.</summary>
      <param name="oldValue">The old filter expression.</param>
      <param name="newValue">The new filter expression.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.FilterControl.OnUIFilterExpressionChanged(Xceed.Wpf.Data.FilterExpressionBase,Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Raised when the UIFilterExpression changes.</summary>
      <param name="oldValue">The old filter expression.</param>
      <param name="newValue">The new filter expression.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.FilterControl.ApplyFilterInterval">
      <summary>Gets or sets the length of time that the FilterControl waits before updating DataSourceFilterExpression with <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Controls.FilterControl~UIFilterExpression.html">UIFilterExpression</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FilterControl.ClearFilterButtonVisibility">
      <summary>Gets or sets a value indicating the display state of the clear filter button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FilterControl.ClearFilterCommand">
      <summary>The command associated with the clear filter button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FilterControl.DataSourceFilterExpression">
      <summary>Gets or sets the filter expression that will be applied to the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.FilterControl.UIFilterExpression">
      <summary>Gets or sets the filter expression that is updated in real-time.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterControl.ApplyFilterIntervalProperty">
      <summary>Identifies the ApplyFilterInterval dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterControl.ClearFilterButtonVisibilityProperty">
      <summary>Identifies the ClearFilterButtonVisibility dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterControl.DataSourceFilterExpressionProperty">
      <summary>Identifies the DataSourceFilterExpression dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.FilterControl.UIFilterExpressionProperty">
      <summary>Identifies the UIFilterExpression dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.#ctor">
      <summary>Initializes a new instance of the <strong>SearchTextBox</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.ClearFilterCanExecute(System.Object)">
      <summary>
        <para>Returns a value indicating whether the filter can be cleared in its current state.</para>
      </summary>
      <param name="parameter">
        <span>
          <span>Data used by the command.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.ClearFilterExcecute(System.Object)">
      <summary>Defines the method to be called when the ClearFilter command is invoked.</summary>
      <param name="parameter">
        <span>
          <span>Data used by the command.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.ClearFilterExpression">
      <summary>Clears the filter expression.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.ClearFilterExpressionCore">
      <summary>Clears the filter expression.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.CreateFilterExpression">
      <summary>Creates a filter expression from the text contained in the SearchTextBox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.CreateFilterExpressionCore">
      <summary>Creates a filter expression from the text contained in the SearchTextBox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.EndInitCore">
      <summary>Indicates that the initialization process for the element is complete.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.GetFilteredFieldNames(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>FilteredFieldNames</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>FilteredFieldNames</strong> property value for the dependency object. By default, null.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.GetTooComplexText(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the value of the <strong>TooComplexText</strong> attached property for the specified dependency object.</para>
      </summary>
      <returns>The <strong>TooComplexText</strong> property value for the dependency object. By default, "#######".</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Called when the <strong>TextChanged</strong> event occurs.</summary>
      <param name="e">A <strong>TextChangedEventArgs</strong> that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.SetFilteredFieldNames(System.Windows.DependencyObject,Xceed.Wpf.Controls.FieldNameList)">
      <summary>Sets the value of the <strong>FilteredFieldNames</strong> attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The needed FieldNameList value.</param>
    </member>
    <member name="M:Xceed.Wpf.Controls.SearchTextBox.SetTooComplexText(System.Windows.DependencyObject,System.String)">
      <summary>Sets the value of the <strong>TooComplexText</strong> attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The needed string value.</param>
    </member>
    <member name="P:Xceed.Wpf.Controls.SearchTextBox.ClearFilterCommand">
      <summary>Gets the command associated with the ClearFilter command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.SearchTextBox.FilteredFieldNames">
      <summary>Gets the list of field names that the SearchTextBox will use to filter its items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.SearchTextBox.FilterExpression">
      <summary>Gets or sets the filter expression that will be used to filter items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.SearchTextBox.SearchValueDelimiters">
      <summary>Gets or sets the characters accepted as search-value delimiters in the SearchTextBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.SearchTextBox.TooComplexText">
      <summary>Gets or sets the string to display when the search text is too complex.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.SearchTextBox.FilteredFieldNamesProperty">
      <summary>Identifies the FilteredFieldNames dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.SearchTextBox.FilterExpressionProperty">
      <summary>Identifies the FilterExpression dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.SearchTextBox.SearchValueDelimitersProperty">
      <summary>Identifies the SearchValueDelimiters dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.SearchTextBox.TooComplexTextProperty">
      <summary>Identifies the TooComplexText dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Controls.UniformGrid.#ctor">
      <summary>Initializes a new instance of the <strong>UniformGrid</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.UniformGrid.Columns">
      <summary>Gets or sets the number of columns that are in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.UniformGrid.Orientation">
      <summary>Gets or sets the orientation that determines how the children are laid out.</summary>
    </member>
    <member name="P:Xceed.Wpf.Controls.UniformGrid.Rows">
      <summary>Gets or sets the number of rows that are in the grid.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.UniformGrid.ColumnsProperty">
      <summary>Identifies the Columns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.UniformGrid.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Controls.UniformGrid.RowsProperty">
      <summary>Identifies the Rows dependency property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.IAsyncDataSourceProvider">
      <summary>Indicates that the data-source provider is used within the context of an asynchronous data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.IBufferConfigurable">
      <summary>Indicates that the data-source provider exposes a property containing the object that can be used to configure the buffering behavior.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataSourceChangedAction">
      <summary>Describes the action that caused the data source to change.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.DataSourceChangedAction.Add">
      <summary>One or more items were added to the data source.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.DataSourceChangedAction.Remove">
      <summary>One or more items were removed from the data source.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.DataSourceChangedAction.Replace">
      <summary>One or more items were replaced in the data source .</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.DataSourceChangedAction.Reset">
      <summary>The content of the data source changed dramatically.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.ErrorResultAction">
      <summary>Describes the action to take when an exception is thrown by the data source that is wrapped by the provider.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.ErrorResultAction.Abort">
      <summary>The operation should be aborted.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.ErrorResultAction.Retry">
      <summary>The operation should be retried.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterOperator">
      <summary>Value representing the operator to use when filtering values.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.Equal">
      <summary>The value must be equal to filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.NotEqual">
      <summary>The value must not be equal to the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.LessThan">
      <summary>The value must be less than the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.LessThanOrEqual">
      <summary>The value must be less than or equal to the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.GreaterThan">
      <summary>The value must be greater than the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.GreaterThanOrEqual">
      <summary>The value must be greater than or equal to the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.StartsWith">
      <summary>The value must start with the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.EndsWith">
      <summary>The value must end with the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.Contains">
      <summary>The value must contained the filter value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.FilterOperator.ContainedIn">
      <summary>The filter value must be contained in the value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.GroupTarget">
      <summary>Value representing the group that is the target of a navigation operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.GroupTarget.Current">
      <summary>The current group.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.GroupTarget.Previous">
      <summary>The previous group.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.GroupTarget.Next">
      <summary>The next group.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.HeaderFooterType">
      <summary>Value representing header or footer type.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SortDirection">
      <summary>Value representing the direction of a sort operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.SortDirection.None">
      <summary>Not sorted.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.SortDirection.Ascending">
      <summary>Sorts in ascending order.</summary>
    </member>
    <member name="F:Xceed.Wpf.Data.SortDirection.Descending">
      <summary>Sorts in descending order.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.CountQueryParameters">
      <summary>Provides information about the operations that must be executed by a count query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataQueryParameters">
      <summary>Provides information about the operations that must be executed by a data query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FindQueryParameters">
      <summary>Provides information about the operations that must be executed by a find query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.GroupCountQueryParameters">
      <summary>Provides information about the operations that must be executed by a group-count query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.StatQueryParameters">
      <summary>Provides information about the operations that must be executed by a stat query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.CountQueryParameters.Filter">
      <summary>Gets the filter request that provides information about the filter that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryParameters.Filter">
      <summary>Gets the filter request that provides information about the filter that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryParameters.ItemJump">
      <summary>Gets the item-jump request that provides information about the item-jump operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryParameters.Skip">
      <summary>Gets the skip request that provides information about the skip operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryParameters.Sort">
      <summary>Gets the sort request that provides information about the sort operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryParameters.Take">
      <summary>Gets the take request that provides information about the take operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.GroupCountQueryParameters.Filter">
      <summary>Gets the filter request that provides information about the filter that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.AndFilterExpression">
      <summary>Represents a logical AND filter expression, which states that an item must match <strong>all</strong> the specified child filters in order to be included.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.AsyncDataSourceProvider">
      <summary>Provides asynchronous access to a data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.AsyncIndexDataSourceProvider">
      <summary>Provides asynchronous access to a data source that uses index-based navigation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.AsyncSqlDataSourceProvider">
      <summary>Provides asynchronous access to a data source that uses SQL-like navigation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.BufferConfiguration">
      <summary>Base class for all buffer-configuration classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.CountQueryResult">
      <summary>Represents the result of a count query.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataException">
      <summary>Exception that occurs when an unexpected error occurs in the data-management engine.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataInternalException">
      <summary>Exception that occurs when an unexpected and fatal error occurs in the data-management engine.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataItem">
      <summary>Class that wraps a data item.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataQueryResult">
      <summary>Represents the result of a data query.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataSourceChangedEventArgs">
      <summary>Provides information on the changes that occurred in the data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataSourceProvider">
      <summary>Base class for all data-source providers.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DataSourceProviderException">
      <summary>Exception that is raised when an exception is thrown by the data source that is wrapped by the provider.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.DynamicBufferConfiguration">
      <summary>Dynamic buffer configuration that adjusts its size as well as the active pre-fetch size in relation to the number of elements requested.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterExpression">
      <summary>Represents a filter expression, which states that an item must match the specified criteria in order to be included.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterExpressionBase">
      <summary>Base class for all filter expressions.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterExpressionCollection">
      <summary>Contains a collection of filter expressions objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterExpressionFormatter">
      <summary>Base class that transforms a FilterExpression into a string suitably formatted for its
consumer.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterExpressionOperator">
      <summary>Base class for logical filter expressions.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterGroupRequest">
      <summary>Represents a filter-group request that provides information about the filter-group operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FilterRequest">
      <summary>Represents a filter request that provides information about the filter that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FindRequest">
      <summary>Represents a find request that provides information about the find operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.FixedBufferConfiguration">
      <summary>Buffer configuration that defines fixed sizes for its buffer as well as its active and passive pre-fetching.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.GroupCountQueryResult">
      <summary>Represents the result of a group-count query.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.HeaderFooterDataItem">
      <summary>Class that wraps an element contained in a header or footer section.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.IndexBasedDataSourceProvider">
      <summary>Wrapper class that provides index-based navigation for non-indexed based data-source providers</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.IndexDataSourceProvider">
      <summary>Base class for index-based data-source providers.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.ItemJumpRequest">
      <summary>Represents an item-jump request that provides information about the item-jump operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.JumpRequest">
      <summary>Represents a jump request that provides information about the jump operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.ListDataSourceProvider">
      <summary>Provides synchronous access to a local data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.MsSqlFilterExpressionFormatter">
      <summary>Class that transforms a FilterExpression into an MSSQL-like string.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.NotFilterExpression">
      <summary>Represents a logical NOT filter expression, which states that an item must <strong>not</strong> match the specified child filter in order to be included.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.OrFilterExpression">
      <summary>Represents a logical OR filter expression, which states that an item must match <strong>one</strong> of the specified child filters in order to be included.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.PredicateBuilder">
      <summary>Helper class that creates converts a filter expression to a predicate.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.PredicateExpressionBuilder">
      <summary>Helper class that creates converts a filter expression to a predicate expression.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SimpleAsyncIndexDataSourceProvider">
      <summary>Simplified version of the AsyncIndexDataSourceProvider.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SimpleSyncIndexDataSourceProvider">
      <summary>Simplified version of the SyncIndexDataSourceProvider.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SkipRequest">
      <summary>Represents a skip request that provides information about the skip operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SortRequest">
      <summary>Represents a sort request that provides information about the sort operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SqlFilterExpressionFormatter">
      <summary>Class that transforms a FilterExpression into an SQL-like string.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.StatQueryResult">
      <summary>Represents the result of a stat query.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.StatRequest">
      <summary>Represents a stat request that provides information about the stat operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SyncDataSourceProvider">
      <summary>Provides synchronous access to a data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.SyncIndexDataSourceProvider">
      <summary>Ideal for a synchronous data source that can easily access items from an index or that cannot filter items efficiently.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.TakeRequest">
      <summary>Represents a take request that provides information about the take operation that must be executed by a query on an underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.UnhandledDataExceptionEventArgs">
      <summary>Provides information related to the exception that was thrown from the data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider">
      <summary>Provides asynchronous access to a WCF Data Services web service. Although not obsolete, it is recommended to use the generic version instead.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider`1">
      <summary>Provides asynchronous access to a WCF Data Services web service.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.WcfDataServicesDataSourceProviderBase">
      <summary>Base class for data-source providers that provide asynchronous access to a WCF Data Services web service.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.WcfDataServicesDataSourceProviderBase`1">
      <summary>Base class for data-source providers that provide asynchronous access to a WCF Data Services web service.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>AndFilterExpression</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.#ctor(Xceed.Wpf.Data.FilterExpressionBase[])">
      <summary>Initializes a new instance of the <strong>AndFilterExpression</strong> class specifying its child filter expressions</summary>
      <param name="expressions">A parameter array of at least two child filter expressions. If less than two filter expressions are provided, an <strong>InvalidOperationException</strong>
will be throw when the filter expression is queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.#ctor(System.Collections.Generic.IEnumerable{Xceed.Wpf.Data.FilterExpressionBase})">
      <summary>Initializes a new instance of the <strong>AndFilterExpression</strong> class specifying its child filter expressions</summary>
      <param name="expressions">An <strong>IEnumerable</strong> of FilterExpressionBase objects containing at least
two child filter expressions. If less than two filter expressions are provided, an <strong>InvalidOperationException</strong> will be throw when the filter
expression is queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>AndFilterExpression</strong> class. This constructor can only be used when declaring an
<strong>AndFilterExpression</strong> in XAML.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AndFilterExpression.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.BeginExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.BeginExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.BeginExecuteGroupCountQuery(Xceed.Wpf.Data.GroupCountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A GroupCountQueryParameters that contains information about the operations that
must be executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.BeginExecuteStatQuery(Xceed.Wpf.Data.StatQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A StatQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.EndExecuteCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.EndExecuteDataQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An IAsyncResult representing the result of the operation as returned by BeginExecuteDataQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.EndExecuteGroupCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>A GroupCountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteGroupCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncDataSourceProvider.EndExecuteStatQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>A StatQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteStatQuery.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncDataSourceProvider.CanFilter">
      <summary>Gets a value indicating whether the data-source provider supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncDataSourceProvider.CanSkip">
      <summary>Gets a value indicating whether the data-source provider supports skipping.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncDataSourceProvider.QueryRequestInterval">
      <summary>Gets or sets a value representing the interval at which the query requests are sent.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.BeginExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.BeginExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.BeginExecuteFindQuery(Xceed.Wpf.Data.FindQueryParameters,System.AsyncCallback,System.Object)">
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.BeginExecuteGroupCountQuery(Xceed.Wpf.Data.GroupCountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A GroupCountQueryParameters that contains information about the operations that
must be executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.BeginExecuteStatQuery(Xceed.Wpf.Data.StatQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A StatQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.EndExecuteCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.EndExecuteDataQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteDataQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.EndExecuteGroupCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>A GroupCountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteGroupCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.EndExecuteStatQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>A StatQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteStatQuery.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncIndexDataSourceProvider.QueryRequestInterval">
      <summary>Gets or sets a value representing the interval at which the query requests are sent.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginCount(Xceed.Wpf.Data.SqlFilterExpressionResult,System.AsyncCallback,System.Object)">
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginExecuteGroupCountQuery(Xceed.Wpf.Data.GroupCountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A GroupCountQueryParameters that contains information about the operations that
must be executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginExecuteStatQuery(Xceed.Wpf.Data.StatQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">A StatQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginGetData(System.Int32,System.Int64,System.Collections.Generic.IEnumerable{System.ComponentModel.SortDescription},Xceed.Wpf.Data.SqlFilterExpressionResult,System.AsyncCallback,System.Object)">
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.BeginGetStatResult(Xceed.Wpf.Data.Stats.StatFunction,Xceed.Wpf.Data.SqlFilterExpressionResult,System.AsyncCallback,System.Object)">
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.EndExecuteCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.EndExecuteDataQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteDataQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.EndExecuteGroupCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its group count.</summary>
      <returns>A GroupCountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteGroupCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.EndExecuteStatQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for the result of a statistical function.</summary>
      <returns>A StatQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteStatQuery.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.CanCount">
      <summary>Gets a value indicating whether the data-source provider can provide the item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.CanFilter">
      <summary>Gets a value indicating whether the data-source provider supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.CanGroupCount">
      <summary>Gets a value indicating whether the data-source provider can provide the group count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.CanJumpToItem">
      <summary>Gets a value indicating whether the data-source provider supports starting operations from a specific item in the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.AsyncSqlDataSourceProvider.CanSkip">
      <summary>Gets a value indicating whether the data-source provider supports skipping.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.CountQueryResult.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <strong>CountQueryResult</strong> class specifying the count that was returned by the data-source provider.</summary>
      <param name="count">
        <para>A value representing the number of items in a data source.</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.Data.CountQueryResult.Count">
      <summary>Gets the number of items in a data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataException.#ctor">
      <summary>Initializes a new instance of the <strong>DataException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataException.#ctor">
      <summary>Initializes a new instance of the <strong>DataException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>DataException</strong> class specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>DataException</strong> class specifying the exception message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataInternalException.#ctor">
      <summary>Initializes a new instance of the <strong>DataInternalException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataInternalException.#ctor">
      <summary>Initializes a new instance of the <strong>DataInternalException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataInternalException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>DataInternalException</strong> class specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataInternalException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <strong>DataInternalException</strong> class specifying the inner exception.</summary>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataInternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>DataInternalException</strong> class specifying the exception message and the inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.#ctor">
      <summary>Initializes a new instance of the <strong>DataItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.#ctor">
      <summary>Initializes a new instance of the <strong>DataItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>DataItem</strong> class specifying the data item to wrap.</summary>
      <param name="data">An object representing the data item to wrap.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current instance.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.DataItem.ToString">
      <summary>Retrieves the string representation of the current instance.</summary>
      <returns>A string representing the current instance.</returns>
    </member>
    <member name="P:Xceed.Wpf.Data.DataItem.Data">
      <summary>Gets an object representing the data item to wrap.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataItem.IsLoaded">
      <summary>Gets a value indicating if the data item is loaded.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataQueryResult.#ctor(System.Collections.IEnumerable,System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <strong>DataQueryResult</strong> class specifying the data that was retrieved by a data query as well as the inline and total
item counts.</summary>
      <param name="data">The data that was retrieved by a data query.</param>
      <param name="inlineCount">The inline item count.</param>
      <param name="totalCount">The total item count.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryResult.Data">
      <summary>Gets the data that was retrieved by a data query.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryResult.InlineCount">
      <summary>Gets or sets the inline item count, which represents the item count that was returned in the request response.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataQueryResult.TotalCount">
      <summary>Gets or sets the total number of items that are in the source.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceChangedEventArgs.#ctor">
      <summary>Initializes a new instance of the <strong>DataSourceChangedEventArgs</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceChangedEventArgs.#ctor(Xceed.Wpf.Data.DataSourceChangedAction)">
      <summary>Initializes a new instance of the <strong>DataSourceChangedEventArgs</strong> class specifying the action that caused the data source to change. Only the
<strong>Reset</strong> action is supported by this constructor.</summary>
      <exception caption="" cref="System.ArgumentException">Only the Reset action is supported by this constructor.</exception>
      <param name="action">The DataSourceChangedAction that caused the data source to change.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceChangedEventArgs.#ctor(Xceed.Wpf.Data.DataSourceChangedAction,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Initializes a new instance of the <strong>DataSourceChangedEventArgs</strong> class specifying the action that caused the data source to change as well as the
new items involved in the change, and those affected by it.</summary>
      <exception caption="" cref="System.ArgumentException">newItems must be specified when the Add action is specified.oldItems must be specified when the Remove action is specified.newItems must be specified when the Replace action is specified.oldItems must be specified when the Replace action is specified.</exception>
      <param name="action">The DataSourceChangedAction that caused the data source to change.</param>
      <param name="newItems">The new items involved in the change</param>
      <param name="oldItems">The list of items affected by the change</param>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceChangedEventArgs.Action">
      <summary>Gets the action that caused the data source to change.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceChangedEventArgs.NewItems">
      <summary>Gets the list of new items involved in the change.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceChangedEventArgs.OldItems">
      <summary>Gets the list of items affected by the change.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.CanSortBy(System.Collections.Generic.IEnumerable{System.ComponentModel.SortDescription})">
      <summary>Retrieves a value indicating whether the specified sort criteria are supported by the data source.</summary>
      <returns>
        <strong>true</strong> if the sort criteria are supported by the data source; <strong>false</strong> otherwise. If one or more of the sort criteria are not
supported, <strong>false</strong> will be returned.</returns>
      <param name="sortOrder">The sort criteria to validate.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.GetPrimaryKeyInfo">
      <summary>Retrieves information about the data source's primary key(s).</summary>
      <returns>A generic <strong>IEnumerable</strong> of <strong>SortDescription</strong> objects containing information about the data source's primary key(s).</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.GetSupportedFilterOperators(System.Type)">
      <summary>Retrieves a list of the filter operators that are supported for the specified data type.</summary>
      <returns>A generic <strong>IEnumerable</strong> containing the FilterOperator values that are
supported for the specified data type.</returns>
      <param name="dataType">The <strong>Type</strong> being queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.GetSupportedStatFunctions(System.Type)">
      <summary>Retrieves a list of the statistical functions that are supported for the specified data type.</summary>
      <returns>A generic <strong>IEnumerable</strong> containing the type of the statistical functions that are supported for the specified data type.</returns>
      <param name="dataType">The <strong>Type</strong> being queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.Initialize">
      <summary>Initializes the data-source provider.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyItemsAdded">
      <summary>Notifies the data-source provider that new items have been added to the data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyItemsChanged">
      <summary>Notifies the data-source provided that items in the data source have changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyItemsRemoved">
      <summary>Notifies the data-source provider that items have been removed from the data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyReset">
      <summary>Notifies the data-source provider that the data source has been reset.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.OnDataSourceChanged(Xceed.Wpf.Data.DataSourceChangedEventArgs)">
      <summary>Notifies the data-source provider that the underlying data source has changed.</summary>
      <param name="e">A <strong>DataSourceChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyItemsAdded(System.Object)">
      <summary>Notifies the data-source provider that the specified item has been added to the data source.</summary>
      <param name="itemAdded">An object representing the item that has been added to the data source.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProvider.NotifyItemsRemoved(System.Object)">
      <summary>Notifies the data-source provider that the specified item has been removed from the data source.</summary>
      <param name="itemRemoved">An object representing the item that has been removed from the data source.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.CanCount">
      <summary>Gets a value indicating whether the data-source provider can provide the item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.CanFilter">
      <summary>Gets a value indicating whether the data-source provider supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.CanGroupCount">
      <summary>Gets a value indicating whether the data-source provider supports retrieving the group count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.CanJumpToItem">
      <summary>Gets a value indicating whether the data-source provider supports starting operations from a specific item in the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.CanSkip">
      <summary>Gets a value indicating whether the data-source provider supports skipping.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.ElementType">
      <summary>Gets the type of the elements in the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.DataSourceProvider.PageSize">
      <summary>Gets or sets the number of items that will be requested when a data request query is sent to the server.</summary>
      <exception caption="" cref="System.ArgumentOutOfRangeException">PageSize must be greater than or equal to zero.</exception>
    </member>
    <member name="E:Xceed.Wpf.Data.DataSourceProvider.UnhandledException">
      <summary>Raised when an exception is thrown by the data source that is wrapped by the provider.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProviderException.#ctor">
      <summary>Initializes a new instance of the <strong>DataSourceProviderException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProviderException.#ctor">
      <summary>Initializes a new instance of the <strong>DataSourceProviderException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProviderException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>DataSourceProviderException</strong> class specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.DataSourceProviderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>DataSourceProviderException</strong> class specifying the exception message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>FilterExpression</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.#ctor(System.String,Xceed.Wpf.Data.FilterOperator,System.Object)">
      <summary>Initializes a new instance of the <strong>FilterExpression</strong> class specifying the name of the member by whose values the items are to be filtered, the
filter operator to use, as well as the filter value.</summary>
      <param name="memberName">A string representing the name of the member by whose values the items are to be filtered.</param>
      <param name="filterOperator">A FilterOperator value representing the operator to use.</param>
      <param name="value">An object representing the filter value.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.#ctor(System.String,Xceed.Wpf.Data.FilterOperator,System.String,System.Nullable{System.Boolean})">
      <summary>Initializes a new instance of the <strong>FilterExpression</strong> class specifying the name of the member by whose values the items are to be filtered, the
filter operator, the string filter value, as well as indicating whether the filter value is case sensitive.</summary>
      <param name="memberName">A string representing the name of the member by whose values the items are to be filtered.</param>
      <param name="filterOperator">A FilterOperator value representing the operator to use.</param>
      <param name="value">A string representing the filter value.</param>
      <param name="isCaseSensitive">
        <strong>true</strong> if the filter value is case sensitive; <strong>false</strong> otherwise. If a null reference (<b>Nothing</b> in Visual Basic), the filter value will be considered case sensitive.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.#ctor(System.String,Xceed.Wpf.Data.FilterOperator,System.DateTime,System.Nullable{System.Boolean})">
      <summary>Initializes a new instance of the <strong>FilterExpression</strong> class specifying the name of the member by whose values the items are to be filtered, the
filter operator, the date-time filter value, as well as indicating whether the time portion of the value should be considered.</summary>
      <param name="memberName">A string representing the name of the member by whose values the items are to be filtered.</param>
      <param name="filterOperator">A FilterOperator value representing the operator to use.</param>
      <param name="value">A <strong>DateTime</strong> representing the filter value.</param>
      <param name="isTimeSensitive">
        <strong>true</strong> if the time portion of the <em>value</em> should be considered; <strong>false</strong> if it should be ignored. If a null reference (<b>Nothing</b> in Visual Basic), the time
portion will be considered.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>FilterExpression</strong> class. This constructor can only be used when declaring a <strong>FilterExpression</strong>
in XAML.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpression.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpression.FilterOperator">
      <summary>Gets or sets the operator to use when filtering values.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpression.IsCaseSensitive">
      <summary>Gets or sets a value indicating whether the filter value is case sensitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpression.IsTimeSensitive">
      <summary>Gets or sets a value indicating whether the filter value is time sensitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpression.MemberName">
      <summary>Gets or sets a string representing the name of the member by whose values the items are to be filtered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpression.Value">
      <summary>Get or sets the filter value.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionBase.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionBase.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionBase.op_Equality(Xceed.Wpf.Data.FilterExpressionBase,Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Determines whether two filter expression are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="left">The first FilterExpressionBase to compare.</param>
      <param name="right">The second FilterExpressionBase to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionBase.op_Inequality(Xceed.Wpf.Data.FilterExpressionBase,Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Determines whether two filter expression are different.</summary>
      <returns>
        <strong>true</strong> if the objects are different; <strong>false</strong> otherwise.</returns>
      <param name="left">The first FilterExpressionBase to compare.</param>
      <param name="right">The second FilterExpressionBase to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.Add(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Adds a filter expression to the end of the collection.</summary>
      <param name="item">The FilterExpressionBase to add to the end of the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.Clear">
      <summary>Removes all filter expressions from the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.Contains(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Determines whether the specified filter expression is in the collection.</summary>
      <returns>
        <strong>true</strong> if the filter expression is found; <strong>false</strong> otherwise.</returns>
      <param name="item">The FilterExpressionBase to located in the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.CopyTo(Xceed.Wpf.Data.FilterExpressionBase[],System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index in the destination array.</summary>
      <param name="array">The one-dimensional array of FilterExpressionBase objects to where the elements in the
collection are to be copied.</param>
      <param name="arrayIndex">The zero-based index in the array at which to begin copying.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.GetEnumerator">
      <summary>Retrieves an enumerator that iterates through the collection.</summary>
      <returns>An <strong>IEnumertor&lt;</strong>FilterExpressionBase<strong>&gt;</strong> for the collection.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.IndexOf(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Retrieves the index of the first occurrence of specified filter expression.</summary>
      <returns>The zero-based index of the first occurrence of the filter expression within the entire collection.</returns>
      <param name="item">The FilterExpressionBase to located.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.Insert(System.Int32,Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Inserts a filter expression into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the filter expression.</param>
      <param name="item">The FilterExpressionBase to insert.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.Remove(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Removes the specified filter expression from the collection.</summary>
      <returns>
        <strong>true</strong> if the item was successfully removed; <strong>false</strong> otherwise.</returns>
      <param name="item">The FilterExpressionBase to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionCollection.RemoveAt(System.Int32)">
      <summary>Removes the filter expression at the specified index from the collection.</summary>
      <param name="index">The zero-based index of the FilterExpressionBase to remove.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpressionCollection.Count">
      <summary>Gets the number of filter expressions contained in the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpressionCollection.IsReadOnly">
      <summary>Gets a value indicating if the collection is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpressionCollection.Item(System.Int32)">
      <summary>Gets or sets the filter expression at the specified index.</summary>
      <param name="index">The zero-based index of the FilterExpressionBase to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionOperator.Add(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Adds a child filter expression, which will be used as part of a logical filter operation.</summary>
      <param name="expression">The FilterExpressionBase to add.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionOperator.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FilterExpressionOperator.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterExpressionOperator.ChildExpressions">
      <summary>Gets a list of the child filter expressions.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.FilterRequest.Expression">
      <summary>
        <para>Gets the filter expression that is used by the filter request.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FixedBufferConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>FixedBufferConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.FixedBufferConfiguration.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <strong>FixedBufferConfiguration</strong> class specifying its buffer capacity.</summary>
      <param name="bufferCapacity">The buffer's capacity.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FixedBufferConfiguration.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>FixedBufferConfiguration</strong> class specifying its buffer capacity and active pre-fetch size.</summary>
      <param name="bufferCapacity">The buffer's capacity.</param>
      <param name="activePreFetchSize">The buffer's active pre-fetch size.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.FixedBufferConfiguration.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>FixedBufferConfiguration</strong> class specifying its buffer capacity and active and passive pre-fetch sizes.</summary>
      <param name="bufferCapacity">The buffer's capacity.</param>
      <param name="activePreFetchSize">The buffer's active pre-fetch size.</param>
      <param name="passivePreFetchSize">The buffer's passive pre-fetch size.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.GroupCountQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Initializes a new instance of the <strong>GroupCountQueryResult</strong> class, specifying the group count for each group level.</summary>
      <param name="groupCounts">An <strong>IList&lt;long&gt;</strong> containing the group count for each group level.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.GroupCountQueryResult.GroupCounts">
      <summary>Gets the group count for each group level.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.HeaderFooterDataItem.#ctor(System.Object,Xceed.Wpf.Data.HeaderFooterType)">
      <summary>Initializes a new instance of the <strong>HeaderFooterDataItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.IndexBasedDataSourceProvider.#ctor(Xceed.Wpf.Data.DataSourceProvider)">
      <summary>Initializes a new instance of the <strong>IndexBasedDataSourceProvider</strong> class specifying the data-source provider to wrap.</summary>
      <param name="dataSourceProvider">The DataSourceProvider to wrap.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.ItemJumpRequest.Item">
      <summary>Gets the item to which to jump.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.ListDataSourceProvider.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <strong>ListDataSourceProvider</strong> class specifying the local data source to wrap.</summary>
      <param name="dataSource">An <strong>IEnumerable</strong> representing the data source to wrap.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.ListDataSourceProvider.ExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters)">
      <summary>Queries the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="queryParameters">
        <para>A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.ListDataSourceProvider.ExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters)">
      <summary>Queries the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="queryParameters">
        <para>A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.ListDataSourceProvider.GetPrimaryKeyInfo">
      <summary>Retrieves information about the data source's primary key(s).</summary>
      <returns>A generic <strong>IEnumerable</strong> of <strong>SortDescription</strong> objects containing information about the data source's primary key(s).</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.ListDataSourceProvider.Initialize">
      <summary>Initializes the data-source provider.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.ListDataSourceProvider.CanCount">
      <summary>Gets a value indicating whether the data-source provider can provide the item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.ListDataSourceProvider.CanGroupCount">
      <summary>Gets a value indicating whether the data-source provider supports retrieving the group count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.ListDataSourceProvider.CanJumpToItem">
      <summary>Gets a value indicating whether the data-source provider supports starting operations from a specific item in the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.ListDataSourceProvider.CanSkip">
      <summary>Gets a value indicating whether the data-source provider supports skipping.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.ListDataSourceProvider.ElementType">
      <summary>Gets the type of the elements in the data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.MsSqlFilterExpressionFormatter.#ctor(Xceed.Wpf.Data.FilterExpressionBase,Xceed.Wpf.Data.DataSourceProvider)">
      <summary>Initializes a new instance of the <strong>MsSqlFilterExpressionFormatter</strong> class specifying the filter expression to convert and the target data-source
provider.</summary>
      <param name="expression">The FilterExpressionBase to convert.</param>
      <param name="dataSourceProvider">The target DataSourceProvider.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.NotFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>NotFilterExpression</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.NotFilterExpression.#ctor(Xceed.Wpf.Data.FilterExpressionBase)">
      <summary>Initializes a new instance of the <strong>NotFilterExpression</strong> class specifying its child filter expression.</summary>
      <param name="expression">The child filter expression. At least one filter expression must be provided otherwise an <strong>InvalidOperationException</strong> will be throw when the
filter expression is queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.NotFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>NotFilterExpression</strong> class. This constructor can only be used when declaring a
<strong>NotFilterExpression</strong> in XAML.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.NotFilterExpression.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.NotFilterExpression.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Xceed.Wpf.Data.NotFilterExpression.ChildExpression">
      <summary>Gets the child filter expression.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>OrFilterExpression</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.#ctor(Xceed.Wpf.Data.FilterExpressionBase[])">
      <summary>Initializes a new instance of the <strong>OrFilterExpression</strong> class specifying its child filter expressions.</summary>
      <param name="expressions">A parameter array of at least two child filter expressions. If less than two filter expressions are provided, an <strong>InvalidOperationException</strong>
will be throw when the filter expression is queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.#ctor(System.Collections.Generic.IEnumerable{Xceed.Wpf.Data.FilterExpressionBase})">
      <summary>Initializes a new instance of the <strong>OrFilterExpression</strong> class specifying its child filter expressions.</summary>
      <param name="expressions">An <strong>IEnumerable</strong> of FilterExpressionBase objects containing at least
two child filter expressions. If less than two filter expressions are provided, an <strong>InvalidOperationException</strong> will be throw when the filter
expression is queried.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.#ctor">
      <summary>Initializes a new instance of the <strong>OrFilterExpression</strong> class. This constructor can only be used when declaring an
<strong>OrFilterExpression</strong> in XAML.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.Equals(System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.OrFilterExpression.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.PredicateBuilder.ToPredicate``1">
      <summary>Creates a predicate from the filter expression that was passed at construction</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.PredicateExpressionBuilder.ToExpression">
      <summary>Creates a predicate expression from the filter expression that was passed at construction</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.PredicateExpressionBuilder.ToExpression(System.Type)">
      <summary>Creates a predicate expression from the filter expression that was passed at construction</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.PredicateExpressionBuilder.ToExpression``1">
      <summary>Creates a predicate expression from the filter expression that was passed at construction</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.SkipRequest.Count">
      <summary>Gets the count of items to skip.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.SortRequest.SortDescriptions">
      <summary>Gets the sort descriptions used by the sort request.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.SyncDataSourceProvider.ExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters)">
      <summary>Queries the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="queryParameters">
        <para>A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.SyncDataSourceProvider.ExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters)">
      <summary>Queries the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="queryParameters">
        <para>A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.SyncDataSourceProvider.ExecuteGroupCountQuery(Xceed.Wpf.Data.GroupCountQueryParameters)">
      <summary>Queries the underlying data source for its group count.</summary>
      <returns>A GroupCountQueryResult containing the result of the query.</returns>
      <param name="queryParameters">
        <para>A GroupCountQueryParameters that contains information about the operations
that must be executed by the query on the underlying data source.</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.Data.SyncDataSourceProvider.CanFilter">
      <summary>Gets a value indicating whether the data-source provider supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.SyncDataSourceProvider.CanSkip">
      <summary>Gets a value indicating whether the data-source provider supports skipping.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.TakeRequest.Count">
      <summary>Gets the count of items to take.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.UnhandledDataExceptionEventArgs.Exception">
      <summary>Gets the exception that was thrown by the data source that is wrapped by the provider.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.UnhandledDataExceptionEventArgs.Handled">
      <summary>Gets or sets a value indicating whether the event was handled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.UnhandledDataExceptionEventArgs.Result">
      <summary>Gets or sets the action to take when an exception is thrown from the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.UnhandledDataExceptionEventArgs.RetryCount">
      <summary>Gets a value representing the number of attempts that were made to send the data queries.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.#ctor">
      <summary>Initializes a new instance of the <strong>WcfDataServicesDataSourceProvider</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.#ctor(System.Data.Services.Client.DataServiceQuery)">
      <summary>Initializes a new instance of the <strong>WcfDataServicesDataSourceProvider</strong> class specifying the <strong>DataServiceQuery</strong> to wrap.</summary>
      <param name="dataServiceQuery">The <strong>DataServiceQuery</strong> to wrap.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.#ctor(System.Data.Services.Client.DataServiceQuery,System.Data.Services.Client.DataServiceContext)">
      <summary>Initializes a new instance of the <strong>WcfDataServicesDataSourceProvider</strong> class specifying the <strong>DataServiceQuery</strong> to wrap and its
<strong>DataServiceContext</strong>.</summary>
      <param name="dataServiceQuery">The <strong>DataServiceQuery</strong> to wrap.</param>
      <param name="dataServiceContext">The <strong>DataServiceContext</strong> of the specified <em>dataServiceQuery</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.BeginExecuteCountQuery(Xceed.Wpf.Data.CountQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">
        <para>A CountQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.BeginExecuteDataQuery(Xceed.Wpf.Data.DataQueryParameters,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="queryParameters">
        <para>A DataQueryParameters that contains information about the operations that must be
executed by the query on the underlying data source.</para>
      </param>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="state">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.EndExecuteCountQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its count.</summary>
      <returns>A CountQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteCountQuery.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.EndExecuteDataQuery(System.IAsyncResult)">
      <summary>Ends the asynchronous operation of querying the underlying data source for its data.</summary>
      <returns>A DataQueryResult containing the result of the query.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginExecuteDataQuery.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.CanCount">
      <summary>Gets a value indicating whether the data-source provider can provide the item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.WcfDataServicesDataSourceProvider.ElementType">
      <summary>Gets the type of the elements in the data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.AverageFunction">
      <summary>
        <para>Class that represents the Average statistical function, which is the measure of central tendency of a set of values computed by dividing the sum of the
values by their number; commonly called the arithmetic mean or the average.</para>
        <para>The Average function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction">
      <summary>
        <para>Class the represents the Correlation Coefficient statistical function, which represents the quantity that gives the quality of a least squares fitting to
the original data. Also known as cross-correlation coefficient.</para>
        <para>The Correlation Coefficient function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.CountFunction">
      <summary>Class that represents the Count statistical function, which is the result of a tally that reveals the number of items in a set.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.CovarianceFunction">
      <summary>
        <para>Class that represents the Covariance statistical function, which is the measure of the strength of the correlation between two sets of random variates.</para>
        <para>The Covariance function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.CumulativeStatFunction">
      <summary>Base class for statistical functions that accumulate the values required to calculate the result of a statistical function from the result of a child group</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.GeometricMeanFunction">
      <summary>
        <para>Class that represents the Geometric Mean statistical function, which is defined as the product of all the members of a set of positive data, raised to a
power equal to the reciprocal of the number of members.</para>
        <para>The Geometric Mean function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.HarmonicMeanFunction">
      <summary>
        <para>Class that represents the Harmonic Mean statistical function, which is defined as the number of elements to be averaged divided by the sum of the
reciprocals of the elements.</para>
        <para>The Harmonic Mean function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.InvalidValueException">
      <summary>Exception that is thrown when a statistical function encounters an invalid value during the calculation of its result.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.MaximumFunction">
      <summary>
        <para>Class that represents the Maximum statistical function, which the highest value among a set of items.</para>
        <para>The Maximum function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.MedianFunction">
      <summary>
        <para>Class that represents the Median statistical function, which is the middle number in a set of ordered data. If the set contains an even number of items, the
arithmetic mean of the 2 middle values will be returned.</para>
        <para>The Median function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.MinimumFunction">
      <summary>
        <para>Class that represents the Minimum statistical function, which is the lowest value among a set of items.</para>
        <para>The Minimum function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.ModeFunction">
      <summary>
        <para>Class that represents the Mode statistical function, which is the value that has the largest number of observations, namely the most frequent value or
values. The mode is not necessarily unique, unlike the arithmetic mean.</para>
        <para>The Mode function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.NotSupportedStatFunctionException">
      <summary>Exception that is thrown when a statistical function is not supported.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.RootMeanSquareFunction">
      <summary>
        <para>Class that represents the Root-Mean-Square statistical function, which is the square root of the arithmetical average of a set of squared instantaneous
values. The root mean square is also known as the quadratic mean.</para>
        <para>The Root-Mean-Square function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.StandardDeviationFunction">
      <summary>
        <para>Class that represents the Standard Deviation statistical function, which is the measure of the degree of dispersion of sample or population data from the
mean value.</para>
        <para>The Standard Deviation function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.StatContext">
      <summary>Represents the context from which statistical functions retrieve the values needed to calculate their results and exposes the results through an indexer.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.StatFunction">
      <summary>Base class for all statistical functions.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.StatFunctionCollection">
      <summary>Contains a collection of statistical functions.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.StatResult">
      <summary>Represents the result of a statistical function.</summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.SumFunction">
      <summary>
        <para>Class that represents the Sum statistical function, which is the result of the addition of the values of a set of items.</para>
        <para>The Sum function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Data.Stats.VarianceFunction">
      <summary>
        <para>Class that represents the Variance statistical function, which is a non-negative number that gives an idea of how widely spread the values of the random
variable are likely to be; the larger the variance, the more scattered the observations on average.</para>
        <para>The Variance function is not supported when using a remote data source.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.#ctor">
      <summary>Initializes a new instance of the <strong>AverageFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.#ctor">
      <summary>Initializes a new instance of the <strong>AverageFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>AverageFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term>Char</term>
            <description>Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.AverageFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The Average statistical function uses the Sum and <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.CountFunction.html">Count</see> functions as its prerequisites.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.AverageFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.AverageFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.AverageFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CorrelationCoefficientFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CorrelationCoefficientFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>CorrelationCoefficientFunction</strong> class specifying the result and source property names.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">
        <para>A string representing the names of the columns whose values are to be used to calculate the result of the statistical function. <strong>Two column names,
separated by a comma (,), must be specified.</strong> For example "Freight, DutyFees".</para>
        <para>Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function. The order in which the values are provided corresponds to the
order of the names specified by the SourcePropertyName property.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the types of the columns specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term>Char</term>
            <description>Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The prerequisite functions for the Correlation Coefficient function are internal classes that are only used to reduce the number of passes (i.e., calls to
the Accumulate method).</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.CorrelationCoefficientFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class specifying the result and source property name as well as indicating whether
<strong>null</strong> (<strong>Nothing</strong> in Visual Basic) and <strong>DBNull</strong> values are to be counted.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="includeNullValues">
        <strong>true</strong> if <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) and <strong>DBNull</strong> values are to be counted;
<strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.InitializeFromInstance(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be created.</summary>
      <param name="source">A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.IsEquivalent(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current function such that both will return the same result for the same
set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current function; <strong>false</strong> otherwise.</returns>
      <param name="statFunction">The statistical function to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CountFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.CountFunction.IncludeNullValues">
      <summary>Gets or sets a value indicating whether <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) and <strong>DbNull</strong> values are to be counted.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CovarianceFunction</strong> class</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CovarianceFunction</strong> class</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>CovarianceFunction</strong> class specifying the result and source property names.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">
        <para>A string representing the names of the columns whose values are to be used to calculate the result of the statistical function. <strong>Two column names,
separated by a comma (,), must be specified.</strong> For example "Freight, DutyFees".</para>
        <para>Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function. The order in which the values are provided corresponds to the
order of the names specified by the SourcePropertyName property.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the types of the columns specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term>Char</term>
            <description>Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.StatFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The prerequisite functions for the Covariance function are internal classes that are only used to reduce the number of passes (i.e., calls to the Accumulate method).</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CovarianceFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.CovarianceFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.CumulativeStatFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term>Char</term>
            <description>UInt64</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>UInt64</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>UInt64</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>UInt64</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>UInt64</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.GeometricMeanFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The Geometric Mean statistical function uses the Count function as its
prerequisite.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.GeometricMeanFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.GeometricMeanFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class specifying the result and source property name.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class specifying the result and source property name.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term height="15">Char</term>
            <description height="15">Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.HarmonicMeanFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.InvalidValueException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidValueExeption</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.InvalidValueException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidValueExeption</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.InvalidValueException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>InvalidValueExeption</strong> class, specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.InvalidValueException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>InvalidValueExeption</strong> class, specifying the exception message and the inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MaximumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MaximumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MaximumFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MaximumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MedianFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MedianFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MedianFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term height="15">Char</term>
            <description height="15">Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MedianFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MinimumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MinimumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MinimumFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.MinimumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.#ctor">
      <summary>Initializes a new instance of the <strong>ModeFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.#ctor">
      <summary>Initializes a new instance of the <strong>ModeFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>ModeFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.InitializeFromInstance(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be created.</summary>
      <param name="source">A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.IsEquivalent(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current function such that both will return the same result for the same
set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current function; <strong>false</strong> otherwise.</returns>
      <param name="statFunction">The statistical function to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.ModeFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.ModeFunction.AllowMultimodal">
      <summary>Gets or sets a value indicating whether the result of the statistical function can be multimodal.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.NotSupportedStatFunctionException.#ctor">
      <summary>Initializes a new instance of the <strong>NotSupportStatFunctionException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.NotSupportedStatFunctionException.#ctor">
      <summary>Initializes a new instance of the <strong>NotSupportStatFunctionException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.NotSupportedStatFunctionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>NotSupportStatFunctionException</strong> class, specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.NotSupportedStatFunctionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>NotSupportStatFunctionException</strong> class, specifying the exception message and the inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.#ctor">
      <summary>Initializes a new instance of the <strong>RootMeanSquareFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.#ctor">
      <summary>Initializes a new instance of the <strong>RootMeanSquareFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>RootMeanSquareFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term height="15">Char</term>
            <description height="15">Int64</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.RootMeanSquareFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.#ctor">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.#ctor">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class specifying the result and source property name as well as indicating whether
the deviation is to be calculated for the entire population.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="entirePopulation">
        <strong>true</strong> the result is to be calculated for the entire population; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.InitializeFromInstance(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be created.</summary>
      <param name="source">A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.StatFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The Standard Deviation statistical function uses the Variance function as its
prerequisite.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.IsEquivalent(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current function such that both will return the same result for the same
set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current function; <strong>false</strong> otherwise.</returns>
      <param name="statFunction">The statistical function to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StandardDeviationFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StandardDeviationFunction.EntirePopulation">
      <summary>Gets or sets a value indicating whether the result is calculated for an entire population.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StandardDeviationFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StandardDeviationFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatContext.Item(System.String)">
      <summary>Gets the result of the statistical function with the specified result property name.</summary>
      <param name="resultName">A string representing the result property name (see ResultPropertyName property) of the statistical function whose result is to
be retrieved.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatContext.StatResultNames">
      <summary>Gets a list of all the statistical function results that are available through the context.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function. The order in which the values are provided corresponds to the
order of the names specified by the SourcePropertyName property.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.CheckSealed">
      <summary>Checks whether an instance of a statistical function is in an immutable state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">An array containing the type(s) of the column(s) specified by the SourcePropertyName property.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.InitializeFromInstance(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be created.</summary>
      <param name="source">A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">An array of StatResult objects representing the results of the prerequisite functions. The
results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.StatFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.IsEquivalent(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current function such that both will return the same result for the same
set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current function; <strong>false</strong> otherwise.</returns>
      <param name="statFunction">The statistical function to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.IsInitialized">
      <summary>Gets a value indicating whether the Initialize method has been called,
indicating that the types in which the values will be accumulated have been initialized.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.IsSealed">
      <summary>Gets a value indicating whether an instance of a statistical function is in an immutable state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.ResultPropertyName">
      <summary>Gets or sets the unique, case-sensitive property name from which the result of the statistical function can be retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunction.SourcePropertyName">
      <summary>Gets or sets the name of the column whose values will be used to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunctionCollection.InsertItem(System.Int32,Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Inserts the specified statistical function into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the statistical function.</param>
      <param name="item">The statistical function to add to the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunctionCollection.SetItem(System.Int32,Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Replaces the statistical function at the specified index with the provided function.</summary>
      <param name="index">The zero-based index of the statistical function to replace.</param>
      <param name="item">The new statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatFunctionCollection.Contains(System.String)">
      <summary>Determines whether a statistical function with the specified result property name is contained in the collection.</summary>
      <returns>
        <strong>true</strong> if the statistical function with the specified result property name is contained in the collection; <strong>false</strong> otherwise.</returns>
      <param name="resultPropertyName">The unique, case-sensitive property name from which the result of the function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatFunctionCollection.Item(System.String)">
      <summary>Gets the statistical function with the specified result property name.</summary>
      <param name="resultPropertyName">A string representing the result property name of the statistical function to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.StatResult.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>StatResult</strong> class, specifying its value.</summary>
      <param name="value">An object representing the value of the statistical function.</param>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.StatResult.Value">
      <summary>Gets the value of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>SumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>SumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>SumFunction</strong> class specifying the result and source property name.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.AccumulateChildResult(Xceed.Wpf.Data.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
      <param name="childResult">A StatResult containing the accumulation of the values from the child groups.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term height="15">Char</term>
            <description height="15">Int64</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Int64</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.SumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class specifying the result and source property names.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class specifying the result and source property name as well as indicating whether the
variance is to be calculated for the entire population.</summary>
      <param name="resultPropertyName">A string representing the unique, case-sensitive property name from which the result of the statistical function can be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="sourcePropertyName">A string representing the name of the column whose values are to be used to calculate the result of the statistical function. Cannot by a null reference (<b>Nothing</b> in Visual Basic) or empty.</param>
      <param name="entirePopulation">
        <strong>true</strong> the result is to be calculated for the entire population; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
      <param name="values">An array of values that will be accumulated to calculate the result of the statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function</returns>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
      <param name="sourcePropertyTypes">
        <para>An array containing the type of the column specified by the SourcePropertyName property.</para>
        <para>See the following table for a list of the accumulation types:</para>
        <para></para>
        <list type="table">
          <listheader>
            <term>Column Data Type</term>
            <description>Accumulation Data Type</description>
          </listheader>
          <item>
            <term height="15">Char</term>
            <description height="15">Double</description>
          </item>
          <item>
            <term>Byte, SByte</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int16, UInt16</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int32, UInt32</term>
            <description>Double</description>
          </item>
          <item>
            <term>Int64, UInt64</term>
            <description>Double</description>
          </item>
          <item>
            <term>Single</term>
            <description>Double</description>
          </item>
          <item>
            <term>Double</term>
            <description>Double</description>
          </item>
          <item>
            <term>Decimal</term>
            <description>Decimal</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.InitializeFromInstance(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be created.</summary>
      <param name="source">A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical function.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.InitializePrerequisites(Xceed.Wpf.Data.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
      <param name="prerequisitesValues">
        <para>An array of StatResult objects representing the results of the prerequisite functions.
The results will be returned in the same order as the statistical functions defined by the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.StatFunction~PrerequisiteFunctions.html">PrerequisiteFunctions</see> property.</para>
        <para>The Variance statistical function uses the Average and <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.Data.Stats.CountFunction.html">Count</see> functions as its prerequisites.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.IsEquivalent(Xceed.Wpf.Data.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current function such that both will return the same result for the same
set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current function; <strong>false</strong> otherwise.</returns>
      <param name="statFunction">The statistical function to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.Data.Stats.VarianceFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.VarianceFunction.EntirePopulation">
      <summary>Gets or sets a value indicating whether the result is calculated for an entire population.</summary>
    </member>
    <member name="P:Xceed.Wpf.Data.Stats.VarianceFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current function in order to calculate its own result.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.IDropTarget">
      <summary>Defines members that targets can implement to handle dropped items.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.IProvideDraggedContentPresenter">
      <summary>
        <para>Defines members that source controls can implement to provide content presenters of dragged items.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IDropTarget.CanDropElement(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Determines whether the <strong>IDropTarget</strong>-derived control can receive dragged items.</summary>
      <returns>
        <strong>true</strong> if the <strong>IDropTarget</strong>-derived control can receive dragged items; <strong>false</strong> otherwise.</returns>
      <param name="dragContext">A DragContext containing information on the drag operation.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IDropTarget.DragEnter(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Occurs when an object is dragged into the IDropTarget-derived control's bounds.</summary>
      <param name="dragContext">A DragContext containing information on the drag operation.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IDropTarget.DragLeave(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Occurs when the dragged item leaves the <strong>IDropTarget</strong>-derived control's bounds.</summary>
      <param name="dragContext">A DragContext containing information on the drag operation.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IDropTarget.DragOver(Xceed.Wpf.DragDrop.DragDropContext,System.Windows.Point)">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
      <param name="dragContext">A DragContext containing information on the drag operation.</param>
      <param name="mousePosition">A <strong>Point</strong> describing the mouse position during the <strong>DragOver</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IDropTarget.Drop(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Occurs when an item is dropped on an <strong>IDropTarget</strong>-derived control.</summary>
      <param name="dragContext">A DragContext containing information on the drag operation.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IProvideDraggedContentPresenter.ClearDraggedContentPresenter(System.Windows.Controls.ContentPresenter)">
      <summary>Clears the content presenter of dragged items.</summary>
      <param name="contentPresenter">The <strong>ContentPresenter</strong> that is to be cleared.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IProvideDraggedContentPresenter.CreateDraggedContentPresenter">
      <summary>Retrieves a new content presenter for dragged items.</summary>
      <returns>The <strong>ContentPresenter</strong> that is created.</returns>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.IProvideDraggedContentPresenter.PrepareDraggedContentPresenter(System.Windows.Controls.ContentPresenter)">
      <summary>Prepares the content presenter of the dragged items.</summary>
      <param name="contentPresenter">The <strong>ContentPresenter</strong> of the dragged items.</param>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DragDropCursor">
      <summary>Value representing the cursor that will be used.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DragDropCancelEventArgs">
      <summary>Represents event data used by the DragStarting event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DragDropContext">
      <summary>Represents the context of the drag-drop operation</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DragDropManager">
      <summary>Provides utility methods related to drag or drop operations.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DraggedElementConfiguration">
      <summary>Contains information used to set various properties on a DragContext when it is created.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.DropEventArgs">
      <summary>Provides information for drop-related events.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DragDropCancelEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the drag-drop operation is canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.#ctor">
      <summary>Initializes a new instance of the DragDropContext class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.#ctor(System.Windows.FrameworkElement,Xceed.Wpf.DragDrop.DraggedElementConfiguration,System.Collections.Generic.IEnumerable{System.Windows.FrameworkElement})">
      <summary>Initializes a new instance of the DragDropContext class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.#ctor(System.Windows.FrameworkElement,Xceed.Wpf.DragDrop.DraggedElementConfiguration)">
      <summary>Initializes a new instance of the DragDropContext class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.#ctor(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Collections.Generic.IEnumerable{System.Windows.FrameworkElement},Xceed.Wpf.DragDrop.DraggedElementConfiguration,System.Object)">
      <summary>Initializes a new instance of the DragDropContext class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.GetParentDragContext(System.Windows.DependencyObject)">
      <summary>Returns the value of the ParentDragContext dependency property of the specified object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropContext.OnPropertyChanged">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DragDropManager.PrepareDrag(Xceed.Wpf.DragDrop.DragDropContext,System.Windows.Input.MouseButtonEventArgs)">
      <summary>Prepares the drag operation.</summary>
      <param name="dragContext">A <strong>DragContect</strong> object.</param>
      <param name="e">A <strong>MouseButtonEventArgs</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DraggedElementConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>DraggedElementConfiguration</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.CanDropCursor">
      <summary>Gets or sets the cursor used to show that a drop operation can be performed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.CanDropCursorTemplate">
      <summary>Gets or sets the data template used to display the CanDropCursor.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.DisplaySiblingElements">
      <summary>Gets a value that determines whether dragged elements that are siblings of the main element being dragged will be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementFadeInDuration">
      <summary>Gets or sets the duration of the dragged element's fade-in animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementFadeOutDuration">
      <summary>Gets or sets the duration of the dragged element's fade-out animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementTemplate">
      <summary>Gets or sets the data template used to display the dragged element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.NoDropCursor">
      <summary>Gets or sets the cursor used to show that a drop operation cannot be performed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.PositionAdornerRelativeToElement">
      <summary>Gets or sets a value that determines whether the adorner is positioned relative to the dragged element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DraggedElementConfiguration.SiblingElementTemplate">
      <summary>The data template used to display the dragged elements that are siblings of the main dragged element.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.CanDropCursorProperty">
      <summary>Identifies the CanDropCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.CanDropCursorTemplateProperty">
      <summary>Identifies the CanDropCursorTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.DisplaySiblingElementsProperty">
      <summary>Identifies the DisplaySiblingElements dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementFadeInDurationProperty">
      <summary>Identifies the ElementFadeInDuration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementFadeOutDurationProperty">
      <summary>Identifies the ElementFadeOutDuration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.ElementTemplateProperty">
      <summary>Identifies the ElementTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.NoDropCursorProperty">
      <summary>Identifies the NoDropCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.NoDropCursorTemplateProperty">
      <summary>Identifies the NoDropCursorTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.PositionAdornerRelativeToElementProperty">
      <summary>Identifies the PositionAdornerRelativeToElement dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DragDrop.DraggedElementConfiguration.SiblingElementTemplateProperty">
      <summary>Identifies the SiblingElementTemplate dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DragDrop.DropEventArgs.#ctor(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Initializes a new instance of the <strong>DropEventArgs</strong> class, using the supplied DragContext.</summary>
      <param name="dragContext">A DragContext providing information on the drag operation.</param>
    </member>
    <member name="P:Xceed.Wpf.DragDrop.DropEventArgs.DragContext">
      <summary>Gets <strong>DragContext</strong> of the event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DragDrop.CanDropEventHandler">
      <summary>Represents the method that will handle the IDropTargetCanDropElement event.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.IOrientedView">
      <summary>Interface implemented by Views supporting orientations.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IOrientedView.Orientation">
      <summary>Gets the orientation of the View.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IOrientedView.ScrollOrientation">
      <summary>Gets the scroll orientation of the View.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ConfigurationType">
      <summary>
        <para>Value representing what kind of container a configuration targets.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ConfigurationType.All">
      <summary>The container targets any type of container.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ConfigurationType.Item">
      <summary>The container targets a ListBoxItem.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ConfigurationType.GroupHeader">
      <summary>The container targets a ListBoxGroupHeader.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ContainerLayoutMode">
      <summary>Value representing the layout mode of a container.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerLayoutMode.Default">
      <summary>
        <para>The container layout is inherited from the panel or active view.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerLayoutMode.Horizontal">
      <summary>
        <para>The container is laid out horizontally.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerLayoutMode.Vertical">
      <summary>
        <para>The container is part of a floating layout.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerLayoutMode.Floating">
      <summary>
        <para>The container is laid out vertically.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ContainerOrientation">
      <summary>Value representing the orientation of a container on the path when using a PathPanel as the
<see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ItemsPanelTemplate.html">ItemsPanelTemplate</see> or using a <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.PathView.html">PathView</see> in a <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.MultiViewPanel.html">MultiViewPanel</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerOrientation.None">
      <summary>Containers will always be laid out leveled without regard to the path's layout (parallel to the horizontal edges of the application, window, or screen, for
example).</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerOrientation.OrientOnPath">
      <summary>Containers will be rotated to be perpendicular to the axis of the path segment they are on.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ItemScrollingBehavior">
      <summary>Value indicating how the data items in a grid are scrolled.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ItemScrollingBehavior.Deferred">
      <summary>The data items are not scrolled until the scroll thumb is released.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ItemScrollingBehavior.Immediate">
      <summary>The data items are scrolled immediately as the thumb is dragged.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectionType">
      <summary>Value representing the selection type of a selection range.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SelectionType.Selection">
      <summary>The selection range is selected items.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SelectionType.Unselection">
      <summary>The selection range is unselecting items.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.StyleUsageMode">
      <summary>Value indicating whether styles in a theme resource dictionary will be applied implicitly or explicitly.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.StyleUsageMode.Implicit">
      <summary>Styles will be applied implicitly (automatically).</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.StyleUsageMode.Explicit">
      <summary>
        <para>Styles will be applied explicitly. (Defined styles will not be overridden.)</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ContainerConfigurations">
      <summary>A group of configurations that determine how ListBoxContainer-derived objects (<see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBoxItem.html">ListBoxItem</see> and <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBoxGroupHeader.html">ListBoxGroupHeader</see>) are displayed.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ContainerConfigurationsBase">
      <summary>A group of configurations that determine how ListBoxContainer-derived objects (<see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBoxItem.html">ListBoxItem</see> and <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBoxGroupHeader.html">ListBoxGroupHeader</see>) are displayed. Base class of the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.View.html">View</see> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.FieldNameValuePair">
      <summary>Represents a value and field name pair.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.GroupDataContext">
      <summary>Used to represent the data context of a ListBoxGroupHeader container.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.GroupValueDataTemplate">
      <summary>Represents the data template used for a group level displayed in a ListBoxGroupHeader</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.HierarchicalGroupValueControl">
      <summary>Displays the hierarchy of group values in group headers.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.HierarchicalGroupValueItem">
      <summary>Represents a group value in a group header.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.IndicatorBase">
      <summary>Base class from which indicator-related classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ItemsPanelTemplate">
      <summary>Represents a data template used to wrap a PanelBase-derived object.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ItemsPresenter">
      <summary>Specifies where items are placed in a control.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBox">
      <summary>Represents the core class of listbox control, which derives from <strong>Control</strong> and is used to display and manipulate data, containing a list of
selectable items.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxAnimationSettings">
      <summary>Represents the settings of the animations contained within the listbox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxContainer">
      <summary>Base class of any container that can be hosted in the ListBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxContainerConfiguration`1">
      <summary>Base class from which all container configuration classes derive.</summary>
      <typeparam name="T">The base type of the object.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase">
      <summary>Base class of ListBoxContainerConfiguration.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxException">
      <summary>Exception that occurs when an unexpected error occurs.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxFilterEventArgs">
      <summary>Provides information and event data for the Filter event.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxGroupHeader">
      <summary>Container that displays group breaks in the ListBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration">
      <summary>
        <para>Provides configuration information for a ListBoxGroupHeader.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxInternalException">
      <summary>Exception that occurs when an unexpected and fatal error.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxItem">
      <summary>
        <para>Represents a selectable item in the ListBox.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ListBoxItemConfiguration">
      <summary>Provides configuration information for a ListBoxItem.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.LoadingIndicator">
      <summary>Control that is displayed while items are being loaded into a listbox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.LoadingSpinner">
      <summary>Control that is displayed while items are being loaded into a listbox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.MultiViewPanel">
      <summary>Represents a panel that lays out its containers depending on an active view defined in its Views collection.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.PanelBase">
      <summary>Base class of all panels that can be used in an <span style="FONT-FAMILY: 'Calibri','sans-serif'; FONT-SIZE: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA" lang="EN-CA" xml:lang="EN-CA">ItemsPanelTemplate.</span></summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.PathConfiguration">
      <summary>
        <para>Provides configuration information for the path used in a PathPanel or a <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.PathView.html">PathView</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.PathPanel">
      <summary>Represents a panel that lays out its containers along a specified path.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.PathView">
      <summary>Provides a view that lays out its containers along a path.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.PrepareDragEventArgs">
      <summary>Provides information and event data in preparation of a drag event.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ScalingStop">
      <summary>Defines an offset along a path and a scaling factor to apply to containers in the ListBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectedItemsWrapper">
      <summary>Represents a non-generic collection of objects that can be individually accessed by index.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectionRange">
      <summary>Represents a range that defines which items in a source are selected.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectionRange.EndRangeDictionary">
      <summary>Represents a notification dictionary of key/value pairs that represents the end range-information for a SelectionRange.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectionRange.NotificationDictionary`2">
      <summary>Base class for all notification dictionaries</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SelectionRange.StartRangeDictionary">
      <summary>Represents a notification dictionary of key/value pairs that represents the start range-information for a SelectionRange.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.SpinnerBase">
      <summary>Base class from which spinner-related classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.StackPanel">
      <summary>Represents a panel that stacks its containers horizontally or vertically.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.StackView">
      <summary>Provides a view that stacks its containers horizontally or vertically.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ThemeResourceDictionary">
      <summary>Base class for all theme resource dictionaries.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.View">
      <summary>Base class of all of the listbox views.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.ZIndexStop">
      <summary>
        <para>Represents an offset and a z-index factor to apply to containers.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ContainerConfigurations.#ctor">
      <summary>Initializes a new instance of the <strong>ContainerConfigurations</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ContainerConfigurationsBase.Invalidate">
      <summary>Forces the ListBox using the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ContainerConfigurations.html">ContainerConfigurations</see> instance to refresh its active container configurations.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ContainerConfigurationsBase.DraggedElementConfiguration">
      <summary>Gets or sets the dragged container configuration.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ContainerConfigurationsBase.ListBoxGroupHeaderConfiguration">
      <summary>Gets or sets the listbox's group header configuration.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ContainerConfigurationsBase.ListBoxItemConfiguration">
      <summary>Gets or sets the listbox's item configuration.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerConfigurationsBase.DraggedElementConfigurationProperty">
      <summary>Identifies the DraggedElementConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerConfigurationsBase.ListBoxGroupHeaderConfigurationProperty">
      <summary>Identifies the ListBoxGroupHeaderConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ContainerConfigurationsBase.ListBoxItemConfigurationProperty">
      <summary>Identifies the ListBoxItemConfiguration dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.FieldNameValuePair.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <strong>FieldNameValuePair</strong> class.</summary>
      <param name="value">The value associated with the field name.</param>
      <param name="fieldName">The field name with which the value is associated.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.FieldNameValuePair.FieldName">
      <summary>Gets the field name of this pair.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.FieldNameValuePair.IsLeaf">
      <summary>Gets a value indicating whether the pair is a leaf.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.FieldNameValuePair.IsRoot">
      <summary>Gets a value indicating whether the pair is a root.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.FieldNameValuePair.Value">
      <summary>Gets the value associated with <strong>FieldName</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.GroupDataContext.ToString">
      <summary>Returns GroupValue.ToString.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupDataContext.FieldNameValuePairs">
      <summary>Gets a collection of FieldNameValuePair objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupDataContext.GroupValue">
      <summary>
        <para>Gets a value corresponding to the last of the listbox's GroupDescription fields for this specific ListBoxGroupHeader.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupDataContext.LeafValue">
      <summary>Gets the leaf value used in the group data context.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupDataContext.RootValue">
      <summary>Gets the root value used in the group data context.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.GroupDataContext.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.GroupValueDataTemplate.#ctor">
      <summary>Initializes a new instance of the <strong>GroupValueDataTemplate</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupValueDataTemplate.FieldNames">
      <summary>Gets a collection of the field names to which Template will be applied
in the creation of the group header.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.GroupValueDataTemplate.Template">
      <summary>Gets the data template that will be applied to the field names in FieldNames.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.GroupValueDataTemplate.TemplateProperty">
      <summary>Identifies the Template dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.#ctor">
      <summary>Initializes a new instance of the <strong>HierarchicalGroupValueControl</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Undoes the effects of the PrepareContainerForItemOverride method.</summary>
      <param name="element">
        <span>
          <span>The container element.</span>
        </span>
      </param>
      <param name="item">The item.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>
        <span>
          <span>The element that is used to display the given item.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.GetParentHierarchicalGroupValueControl(System.Windows.DependencyObject)">
      <summary>Returns the parent HierarchicalGroupValueControl of the passed object.</summary>
      <returns>The parent HierarchicalGroupValueControl.</returns>
      <param name="obj">The object whose parent HierarchicalGroupValueControl will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">
        <span>
          <span>The element used to display the specified item.</span>
        </span>
      </param>
      <param name="item">
        <span>
          <span>The item to display.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.SetParentHierarchicalGroupValueControl(System.Windows.DependencyObject,Xceed.Wpf.ListBox.HierarchicalGroupValueControl)">
      <summary>Sets the parent HierarchicalGroupValueControl of an object.</summary>
      <param name="obj">The object whose parent HierarchicalGroupValueControl will be set.</param>
      <param name="value">The HierarchicalGroupValueControl to set as the parent of obj.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.GroupValueDataTemplates">
      <summary>Gets or sets a list of GroupValueDataTemplate objects to use with the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.HierarchicalGroupValueControl.html">HierarchicalGroupValueControl</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.SeparatorVisibility">
      <summary>Gets or sets a value indicating whether the separator used in the HierarchicalGroupValueControl is visible.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.GroupValueDataTemplatesProperty">
      <summary>Identifies the GroupValueDataTemplates dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.HierarchicalGroupValueControl.ParentHierarchicalGroupValueControlProperty">
      <summary>Identifies the <strong>ParentHierarchicalGroupValueControl</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.#ctor">
      <summary>Initializes a new instance of the <strong>HierarchicalGroupValueItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.ContentTemplate">
      <summary>Gets or sets the data template to use on the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.IsLeaf">
      <summary>Gets a value indicating whether the item is a leaf.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.IsRoot">
      <summary>Gets a value indicating whether the item is a root.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.ParentHierarchicalGroupValueControl">
      <summary>Gets the parent HierarchicalGroupValueControl of the item.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.HierarchicalGroupValueItem.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.AnimatedValue">
      <summary>Gets or sets the value associated with the indicator.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.AnimationDuration">
      <summary>Gets or sets the duration of the animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.FadeOutAnimationDuration">
      <summary>Gets or sets the duration of the fade-out animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.Maximum">
      <summary>Gets or sets the maximum value to which AnimatedValue will cycle.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.Minimum">
      <summary>Gets or sets the minimum value from which AnimatedValue will cycle.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.IndicatorBase.RefreshRate">
      <summary>Gets or sets the refresh rate at which the indicator is updated.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.AnimatedValueProperty">
      <summary>Identifies the AnimatedValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.AnimationDurationProperty">
      <summary>Identifies the AnimationDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.FadeOutAnimationDurationProperty">
      <summary>Identifies the FadeOutAnimationDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.MaximumProperty">
      <summary>Identifies the Maximum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.MinimumProperty">
      <summary>Identifies the Minimum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.IndicatorBase.RefreshRateProperty">
      <summary>Identifies the RefreshRate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ItemsPanelTemplate.#ctor">
      <summary>Initializes a new instance of the IntemsPanelTemplate class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ItemsPresenter.#ctor">
      <summary>Initializes a new instance of the ItemsPresenter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.#ctor">
      <summary>Initializes a new instance of the <strong>ListBox</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the children of the element.</summary>
      <returns>A <strong>Size</strong> that represents the arranged size of the element.</returns>
      <param name="finalSize">The size that the element uses to arrange its children.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.BeginGetSelectedItems(System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous retrieval of the selected items.</summary>
      <returns>An <strong>IAsyncResult</strong> representing the result of the operation.</returns>
      <param name="callback">The <strong>AsyncCallback</strong> delegate to be called when the operation is complete.</param>
      <param name="asyncState">An object containing state information for the operation.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.ClearContainerForItem(Xceed.Wpf.ListBox.ListBoxContainer)">
      <summary>
        <span>Removes any bindings and templates applied to the item container</span>.</summary>
      <param name="container">The ListBoxContainer whose bindings and templates will be removed.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.EndGetSelectedItems(System.IAsyncResult)">
      <summary>Ends the asynchronous retrieval of the selected items.</summary>
      <returns>A generic <strong>IEnumerable</strong> of objects representing the selected items.</returns>
      <param name="asyncResult">An <strong>IAsyncResult</strong> representing the result of the operation as returned by BeginGetSelectedItems</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.GetContainerFromItem(System.Object)">
      <summary>Retrieves the container used to display the specified item.</summary>
      <returns>A <strong>DependencyObject</strong> representing the item's container.</returns>
      <param name="item">An object representing the item whose container is to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.GetParentListBox(System.Windows.DependencyObject)">
      <summary>Returns the parent ListBox of a <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBoxContainer.html">ListBoxContainer</see>.</summary>
      <returns>The parent <strong>ListBox</strong>.</returns>
      <param name="obj">The <strong>ListBoxContainer</strong> whose parent <strong>ListBox</strong> will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.InvalidateContainerConfigurationCache(Xceed.Wpf.ListBox.ConfigurationType)">
      <summary>Invalidates the container configuration cache of the ListBox.</summary>
      <param name="configurationType">A ConfigurationType representing the type whose container configuration cache will be
invalidated.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnApplyTemplate">
      <summary>Builds the visual tree for the element.<br /></summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <strong>GotFocus</strong> event.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnHideDataNavigationPaneCanExecute(System.Object)">
      <summary>Defines the method that determines whether the HideDataNavigationPane command can execute in its current state.</summary>
      <returns>
        <strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</returns>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <strong>null</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnHideDataNavigationPaneExecute(System.Object)">
      <summary>Defines the method to be called when the HideDataNavigationPane command is invoked.</summary>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <strong>null</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Raises the <strong>KeyDown</strong> event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnNavigateToGroupCanExecute(System.Object)">
      <summary>Defines the method to be called when NavigateToGroupCommand is invoked.</summary>
      <returns>
        <strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</returns>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnNavigateToGroupExecuted(System.Object)">
      <summary>Defines the method to be called when NavigateToGroupCommand is invoked.</summary>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnShowDataNavigationPaneCanExecute(System.Object)">
      <summary>Defines the method that determines whether the ShowDataNavigationPane command can execute in its current state.</summary>
      <returns>
        <strong>true</strong> if this command can be executed; otherwise, <strong>false</strong>.</returns>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <strong>null</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.OnShowDataNavigationPaneExecute(System.Object)">
      <summary>Defines the method to be called when the ShowDataNavigationPane command is invoked.</summary>
      <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <strong>null</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.PrepareContainerForItem(Xceed.Wpf.ListBox.ListBoxContainer,System.Object)">
      <summary>Prepares the container to display the specified item.</summary>
      <param name="container">The ListBoxContainer that will be prepared.</param>
      <param name="item">The object that will be displayed in the container.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.Refresh">
      <summary>Forces a refresh of the layout and configurations.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.ScrollIntoView(System.Object)">
      <summary>Scrolls the specified item into view.</summary>
      <param name="item">An object representing the item to be scrolled into view.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBox.SelectAll">
      <summary>Selects all of the items in the ListBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.AllowDrag">
      <summary>Gets or sets a value indicating whether the ListBox can be a drag source for purposes of drag-and-drop operations.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.AnimationSettings">
      <summary>Gets or sets the animation settings of the ListBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ContainerConfigurations">
      <summary>Gets or sets the container configurations of the ListBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.DisplayMemberPath">
      <summary>Gets or sets the name or path of the property that is displayed for each data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.FilterExpression">
      <summary>Gets or sets the filter expression, which is embedded into the data query that is used to request data and filter the items that are displayed in a listbox.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.GroupDescriptions">
      <summary>Gets a collection of group descriptions that describe how the items in a listbox are grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.HideDataNavigationPaneCommand">
      <summary>Gets the HideDataNavigation pane command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.HorizontalScrollBarVisibility">
      <summary>Gets or sets the visibility of the horizontal scroll bar.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ItemContainerStyle">
      <summary>Gets or sets the style that is used when rendering the item containers.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.Items">
      <summary>Gets a list of the items (business objects) contained within the listbox, in the order in which they appear.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ItemScrollingBehavior">
      <summary>Gets or sets a value indicating how the data items in the grid are scrolled.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ItemsPanel">
      <summary>Gets or sets the template that defines the panel that controls the layout of items.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ItemsSource">
      <summary>Gets or sets the data source to which a listbox is bound.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ItemTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display each item.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.NavigateToGroupCommand">
      <summary>Gets the navigate to group command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.NextViewCommand">
      <summary>Gets the next view command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.PreviousViewCommand">
      <summary>Gets the previous view command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectedItem">
      <summary>Gets or sets the first item in the current selection or returns null if the selection is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectedItems">
      <summary>Gets the list of currently selected items for the ListBox control.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectedRanges">
      <summary>Gets the ranges of items that are selected in a listbox.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectedValue">
      <summary>
        <para>Gets or sets the value of the SelectedItem, obtained by using <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBox~SelectedValuePath.html">SelectedValuePath</see>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectedValuePath">
      <summary>
        <para>Gets or sets the path that is used to get the SelectedValue property of the
<see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.ListBox~SelectedItem.html">SelectedItem</see> property.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SelectionMode">
      <summary>Gets or sets a value indicating how the items in a listbox are selected at run time.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ShowDataNavigationPaneCommand">
      <summary>Gets the show data navigation pane command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.SortDescriptions">
      <summary>Gets a collection of sort descriptions that describe how the items in a listbox are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.ToolPaneVisibility">
      <summary>Gets or sets the visibility of the tool pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBox.VerticalScrollBarVisibility">
      <summary>Gets or sets the visibility of the vertical scroll bar.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.AllowDragProperty">
      <summary>Identifies the AllowDrag dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.AnimationSettingsProperty">
      <summary>Identifies the AnimationSettings dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ContainerConfigurationsProperty">
      <summary>Identifies the ContainerConfigurations dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.DisplayMemberPathProperty">
      <summary>Identifies the DisplayMemberPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.FilterExpressionProperty">
      <summary>Identifies the FilterExpression dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the HorizontalScrollBarVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ItemsPanelProperty">
      <summary>Identifies the ItemsPanel dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ItemTemplateProperty">
      <summary>Identifies the ItemTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ParentListBoxProperty">
      <summary>Identifies the <strong>ParentListBox</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.SelectedValuePathProperty">
      <summary>Identifies the SelectedValuePath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.SelectedValueProperty">
      <summary>Identifies the SelectedValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.ToolPaneVisibilityProperty">
      <summary>Identifies the ToolPaneVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBox.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the VerticalScrollBarVisibility dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.DragStarting">
      <summary>Raised when a drag operation is starting.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.Filter">
      <summary>Raised for each item in the data source that has not already been excluded by a filter expression to determine if it passes a filter.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.IDropTargetCanDropElement">
      <summary>Raised when a drag operation enters an IDropTarget.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.IDropTargetDragEnter">
      <summary>
        <para>Raised when a drag operation enters an IDropTarget.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.IDropTargetDragLeave">
      <summary>Raised when a drag operation leaves an IDropTarget.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.IDropTargetDragOver">
      <summary>Raised when a drag operation hover over an IDropTarget.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.IDropTargetDrop">
      <summary>Raised when a drag operation sucessfully drops on an IDropTarget.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.ListBox.SelectionChanged">
      <summary>Raised when the selection is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxAnimationSettings.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxAnimationSettings</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.AddingItemDuration">
      <summary>Gets or sets a value representing the duration of the animation when an item is added.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.DefaultDuration">
      <summary>Gets or sets the default duration to use for any "duration" property that does not have an explicit value.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.DefaultEasingFunction">
      <summary>Gets or sets the default easing function to use for any "easing-function" property that does not have an explicit value.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ItemSizeChangingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the animation when an item's size is changing.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LineScrollingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the line-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LineScrollingEasingFunction">
      <summary>
        <para>Get or sets the easing function used by the line-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LoadingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the item-loading animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.PageScrollingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the page-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.PageScrollingEasingFunction">
      <summary>
        <para>Get or sets the easing function used by the page-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.RemovingItemDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the animation when an item is removed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ThumbScrollingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the thumb-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ThumbScrollingEasingFunction">
      <summary>
        <para>Get or sets the easing function used by the thumb-scrolling animation.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ViewChangingDuration">
      <summary>
        <para>Gets or sets a value representing the duration of the view-change animation.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.AddingItemDurationProperty">
      <summary>Identifies the AddingItemDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.DefaultDurationProperty">
      <summary>Identifies the DefaultDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.DefaultEasingFunctionProperty">
      <summary>Identifies the DefaultEasingFunction dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ItemSizeChangingDurationProperty">
      <summary>Identifies the ItemSizeChangingDuration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LineScrollingDurationProperty">
      <summary>Identifies the LineScrollingDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LineScrollingEasingFunctionProperty">
      <summary>Identifies the LineScrollingEasingFunction
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.LoadingDurationProperty">
      <summary>Identifies the LoadingDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.PageScrollingDurationProperty">
      <summary>Identifies the PageScrollingDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.PageScrollingEasingFunctionProperty">
      <summary>Identifies the PageScrollingEasingFunction
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.RemovingItemDurationProperty">
      <summary>Identifies the RemovingItemDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ThumbScrollingDurationProperty">
      <summary>Identifies the ThumbScrollingDuration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ThumbScrollingEasingFunctionProperty">
      <summary>Identifies the ThumbScrollingEasingFunction
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxAnimationSettings.ViewChangingDurationProperty">
      <summary>Identifies the ViewChangingDuration dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxContainer</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the child elements.</summary>
      <returns>
        <para>A <strong>Size</strong> that represents the arranged size of the element.</para>
      </returns>
      <param name="finalSize">
        <para>The <strong>Size</strong> this element uses to arrange its child elements.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.ClearDraggedContentPresenter(System.Windows.Controls.ContentPresenter)">
      <summary>Clears the content presenter of dragged items.</summary>
      <param name="contentPresenter">The <strong>ContentPresenter</strong> that is to be cleared.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.CreateDraggedContentPresenter">
      <summary>Retrieves a new content presenter for dragged items.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.GetLayoutMode(System.Windows.DependencyObject)">
      <summary>Returns the layout mode the container.</summary>
      <param name="obj">A ContainerLayoutMode value.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.GetSiblingDraggedElementsCore">
      <summary>Returns this ListBoxContainer's dragged sibling elements during a drag operation.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <strong>GotFocus</strong> event.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Raises the <strong>KeyDown</strong> event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Raises the <strong>LostFocus</strong> event.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Raises the <strong>MouseEnter</strong> event.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Raises the <strong>MouseLeave</strong> event.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <para>Raises the <strong>MouseLeftButtonDown</strong> event.</para>
      </summary>
      <param name="e">
        <para>A <strong>MouseButtonDown</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <para>Raises the <strong>MouseLeftButtonDown</strong> event.</para>
      </summary>
      <param name="e">
        <para>A <strong>MouseButtonDown</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Raises the <strong>MouseWheel</strong> event.</summary>
      <param name="e">A <strong>MouseWheelEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.PrepareDraggedContentPresenter(System.Windows.Controls.ContentPresenter)">
      <summary>Prepares the content presenter of the dragged items.</summary>
      <param name="contentPresenter">The <strong>ContentPresenter</strong> of the dragged items.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainer.SetLayoutMode(System.Windows.DependencyObject,Xceed.Wpf.ListBox.ContainerLayoutMode)">
      <summary>The setter for this attached property is public in order to allow support for Blend. It is recommended that this property be changed only by Xceed.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainer.Content">
      <summary>
        <para>Gets or sets the <strong>ListBoxContainer</strong>'s content.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainer.ContentTemplate">
      <summary>
        <para>Gets or sets the data template that is used to display the content of the <strong>ListBoxContainer</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainer.IsSelected">
      <summary>Gets or sets a value indicating whether the container is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainer.ParentListBox">
      <summary>Gets the ListBox instance in which this container is hosted.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainer.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainer.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainer.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainer.LayoutModeProperty">
      <summary>Identifies the <strong>LayoutMode</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainerConfiguration`1.CreateContainerCore">
      <summary>Override to return a new instance of a ListBoxContainer made for this configuration.</summary>
      <returns>A new instance of a ListBoxContainer made for this configuration.</returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainerConfiguration`1.PrepareContainerForItemCore(`0,System.Object)">
      <summary>Applies extra properties when the ListBoxContainer is about to be used to represent a
new item.</summary>
      <param name="container">The container to be prepared.</param>
      <param name="item">The object used to prepare the container.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.CreateInstance">
      <summary>Creates an instance of <strong>ListBoxContainerConfigurationBase</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.CanStick">
      <summary>Gets or sets a value indicating whether the container can be sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.ConfigurationType">
      <summary>Gets a configuration type indicating what kind of container the configuration represents.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.ContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers created by this configuration.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.ContentTemplate">
      <summary>Gets or sets the data template that will be used to display the container's content created by this configuration.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.IsSticky">
      <summary>Gets or sets a value indicating whether the container is sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.LayoutMode">
      <summary>Gets or sets the layout mode of the container.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.ContainerStyleProperty">
      <summary>Identifies the ContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.ContentTemplateProperty">
      <summary>Identifies the ContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.IsStickyProperty">
      <summary>Identifies the IsSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxContainerConfigurationBase.LayoutModeProperty">
      <summary>Identifies the LayoutMode dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxException.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxException.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>ListBoxException</strong> class specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>ListBoxException</strong> class specifying the exception message and the inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxFilterEventArgs.Accepted">
      <summary>
        <strong>true</strong> if the item passes the filter; <strong>false</strong> otherwise. By default, <strong>true</strong>.<br />
The item to inspect.<br /></summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxFilterEventArgs.Item">
      <summary>The item to inspect.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeader.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxGroupHeader</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxGroupHeader.GroupValueDataTemplates">
      <summary>Gets a collection of GroupValueDataTemplate objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxGroupHeader.NavigateToNextGroupCommand">
      <summary>Gets the NavigateToNextGroup command.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxGroupHeader.NavigateToPreviousGroupCommand">
      <summary>Gets the NavigateToPreviousGroup command.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.ListBoxGroupHeader.GroupValueDataTemplatesProperty">
      <summary>Identifies the GroupValueDataTemplates dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxGroupHeaderConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxGroupHeaderConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.#ctor(Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration)">
      <summary>Initializes a new instance of the <strong>ListBoxGroupHeaderConfiguration</strong> class using the specified <strong>ListBoxGroupHeaderConfiguration</strong>.</summary>
      <param name="template">The <strong>ListBoxGroupHeaderConfiguration</strong> to use as a template.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.CreateContainerCore">
      <summary>Returns a new instance of ListBoxGroupHeader created with this configuration.</summary>
      <returns>The ListBoxGroupHeader object created.</returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.CreateInstance">
      <summary>Returns an instance of ListBoxContainerConfigurationBase.</summary>
      <returns>An instance of ListBoxContainerConfigurationBase.</returns>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.CanStick">
      <summary>
        <para>Gets a value indicating whether the container can be sticky.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxGroupHeaderConfiguration.GroupValueDataTemplates">
      <summary>Gets a collection of GroupValueDataTemplate objects.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxInternalException.#ctor">
      <summary>
        <para>Initializes a new instance of the <strong>ListBoxInternalException</strong> class.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxInternalException.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxInternalException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxInternalException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>ListBoxInternalException</strong> class specifying the exception message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxInternalException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <strong>ListBoxInternalException</strong> class specifying the inner exception.</summary>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxInternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>ListBoxInternalException</strong> class specifying the exception message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <strong>ListBoxItem</strong> class.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItemConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxItemConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItemConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>ListBoxItemConfiguration</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItemConfiguration.#ctor(Xceed.Wpf.ListBox.ListBoxItemConfiguration)">
      <summary>Initializes a new instance of the <strong>ListBoxItemConfiguration</strong> class using the specified <strong>ListBoxItemConfiguration</strong>.</summary>
      <param name="template">The specified <strong>ListBoxItemConfiguration</strong> to use as a template.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItemConfiguration.CreateContainerCore">
      <summary>Returns a new instance of ListBoxItem created with this configuration.</summary>
      <returns>The ListBoxItem created.</returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ListBoxItemConfiguration.CreateInstance">
      <summary>Returns an instance of ListBoxContainerConfigurationBase.</summary>
      <returns>An instance of ListBoxContainerConfigurationBase.</returns>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ListBoxItemConfiguration.CanStick">
      <summary>
        <para>Gets a value indicating whether the container can be sticky.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.LoadingIndicator.#ctor">
      <summary>Initializes a new instance of the <strong>LoadingIndicator</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.LoadingIndicator.UpdateRequestStates(System.Boolean)">
      <summary>Helper method that determines which state to use for the <strong>LoadingIndicator</strong>.</summary>
      <param name="useTransitions">
        <strong>true</strong> to use a System.Windows.VisualTransition to transition between states; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.LoadingIndicator.RequestsPending">
      <summary>
        <para>Gets or sets a value indicating whether there are pending requests.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.LoadingIndicator.RequestsPendingProperty">
      <summary>
        <para>Identifies the RequestsPending dependency property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.LoadingSpinner.#ctor">
      <summary>Initializes a new instance of the <strong>LoadingSpinner</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.MultiViewPanel.#ctor">
      <summary>Initializes a new instance of the <strong>MultiViewPanel</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.MultiViewPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the children of the element.</summary>
      <returns>A <strong>Size</strong> that represents the arranged size of the element.</returns>
      <param name="finalSize">
        <para>The size that the element uses to arrange its children.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.MultiViewPanel.GetActiveView(System.Windows.DependencyObject)">
      <summary>Returns the MultiViewPanel's active view.</summary>
      <returns>A View representing the active view.</returns>
      <param name="obj">The object whose active view will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.MultiViewPanel.GetPanelViews(System.Windows.DependencyObject)">
      <summary>Returns a list of the Views in the <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.MultiViewPanel.html">MultiViewPanel</see>.</summary>
      <returns>A list of View objects.</returns>
      <param name="obj">The object whose views will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.MultiViewPanel.SetActiveView(System.Windows.DependencyObject,Xceed.Wpf.ListBox.View)">
      <summary>Sets the MultiViewPanel's active view.</summary>
      <param name="obj">The object whose active view will be set.</param>
      <param name="value">The View to set as the active view.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.MultiViewPanel.Views">
      <summary>Gets a list of the MultiViewPanel's views.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.MultiViewPanel.ActiveViewProperty">
      <summary>Identifies the <strong>ActiveView</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.MultiViewPanel.PanelViewsProperty">
      <summary>Identifies the <strong>PanelViews</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PanelBase.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the children of the element.</summary>
      <returns>A <strong>Size</strong> that represents the arranged size of the element.</returns>
      <param name="finalSize">
        <para>The size that the element uses to arrange its children.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PanelBase.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>Measures the child elements in anticipation of arranging them during the <strong>ArrangeOverride</strong> pass.</para>
      </summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
      <param name="availableSize">
        <para>An upper limit <strong>Size</strong> that should not be exceeded.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PathConfiguration.#ctor">
      <summary>Initializes a new instance of the <strong>PathConfiguration</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.ContainerOrientation">
      <summary>Gets or sets the orientation of the item and group header containers along the path.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.ContainerPadding">
      <summary>Gets or sets the padding between containers.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.PathGeometry">
      <summary>Gets or sets the geometry used to lay out the containers on the path.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.PathPadding">
      <summary>Gets or sets the padding between the path and the panel's bounds.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.PathStretch">
      <summary>Gets or sets a value that determines how the path geometry is resized to fill its allocated space.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.ScalingStops">
      <summary>Gets a collection of ScalingStop objects that influence the scaling of containers depending
on their current position on the path.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.StartOffset">
      <summary>
        <para>Gets or sets the offset on the path where the first item is initially displayed and where it falls when at the "top" of the list.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathConfiguration.ZIndexStops">
      <summary>Gets a collection of ZIndexStop objects that influence the z-order, or perceived depth, of
containers depending on their current position on the path.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.ContainerOrientationProperty">
      <summary>Identifies the ContainerOrientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.ContainerPaddingProperty">
      <summary>Identifies the ContainerPadding dependency property.<br /></summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.PathGeometryProperty">
      <summary>Identifies the PathGeometry dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.PathPaddingProperty">
      <summary>Identifies the PathPadding dependency property.<br /></summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.PathStretchProperty">
      <summary>Identifies the PathStretch dependency property.<br /></summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathConfiguration.StartOffsetProperty">
      <summary>Identifies the StartOffset dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PathPanel.#ctor">
      <summary>Initializes a new instance of the <strong>PathPanel</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathPanel.PathConfiguration">
      <summary>Gets or sets the PathPanel's path configuration.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathPanel.PathConfigurationProperty">
      <summary>Identifies the PathConfiguration dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PathView.#ctor">
      <summary>Initializes a new instance of the PathView class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PathView.PathConfiguration">
      <summary>Gets or sets the PathView's path configuration.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.PathView.PathConfigurationProperty">
      <summary>Identifies the PathConfiguration dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.PrepareDragEventArgs.#ctor(Xceed.Wpf.DragDrop.DragDropContext)">
      <summary>Initializes a new instance of the <strong>PrepareDragEventArgs</strong> class using the specified DragDropContext.</summary>
      <param name="dragDropContext">The DragDropContext used to create this instance.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.PrepareDragEventArgs.DragDropContext">
      <summary>Gets the DragDropContext of the drag or drop operation.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ScalingStop.#ctor">
      <summary>Initializes a new instance of the <strong>ScalingStop</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ScalingStop.Offset">
      <summary>Gets or sets the offset on the path at which the corresponding ScalingFactor
value of this ScalingStop should be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ScalingStop.ScalingFactor">
      <summary>
        <para>Gets or sets the scaling factor that will be applied to containers at this ScalingStop.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.#ctor(Xceed.Wpf.ListBox.ListBox)">
      <summary>Initializes a new instance of the <strong>SelectedItemsWrapper</strong> class using the passed ListBox.</summary>
      <param name="listBox">The ListBox to use to create this instance.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.Add(System.Object)">
      <summary>
        <span>Adds an item to the <span><span class="selflink">SelectedItemsWrapper</span></span>.</span>
      </summary>
      <returns>
        <span>
          <span>The position into which the new element was inserted.</span>
        </span>
      </returns>
      <param name="value">The Object to add to the <strong>SelectedItemsWrapper</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.Clear">
      <summary>Removes all items from the <strong>SelectedItemsWrapper</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.Contains(System.Object)">
      <summary>
        <span>Determines whether the <span><span class="selflink">SelectedItemsWrapper</span></span> contains a specific value.</span>
      </summary>
      <returns>
        <span>
          <span>
            <font color="black">true if the Object</font> is found in the <span><strong>SelectedItemsWrapper</strong>;</span> otherwise, false.</span>
        </span>
      </returns>
      <param name="value">
        <span>
          <span>The Object to locate in the</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an Array, starting at a particular Array index.</summary>
      <param name="array">
        <span>
          <span>The one-dimensional Array that is the destination of the elements copied from the collection. The Array must have zero-based
indexing.</span>
        </span>
      </param>
      <param name="index">
        <span>
          <span>The zero-based index in <span class="parameter">array</span> at which copying begins.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>
        <span>
          <span>An IEnumerator object that can be used to iterate through the collection.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <strong>SelectedItemsWrapper</strong>.</summary>
      <returns>
        <span>
          <span>The index of <span class="parameter">value</span> if found in the <strong>SelectedItemsWrapper</strong>; otherwise, -1.</span>
        </span>
      </returns>
      <param name="value">The Object to locate in the <strong>SelectedItemsWrapper</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <strong>SelectedItemsWrapper</strong> at the specified index.</summary>
      <param name="index">
        <span>
          <span>The zero-based index at which <span class="parameter">value</span> should be inserted.</span>
        </span>
      </param>
      <param name="value">
        <span>
          <span>The Object to insert into the <strong>SelectedItemsWrapper</strong>.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <strong>SelectedItemsWrapper</strong>.</summary>
      <param name="value">
        <para>The Object to remove from the <strong>SelectedItemsWrapper</strong>.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectedItemsWrapper.RemoveAt(System.Int32)">
      <summary>Removes the <strong>SelectedItemsWrapper</strong> item at the specified index.</summary>
      <param name="index">
        <span>
          <span>The zero-based index of the item to remove.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.IsFixedSize">
      <summary>Gets a value indicating whether the <strong>SelectedItemsWrapper</strong> has a fixed size.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.IsReadOnly">
      <summary>Gets a value indicating whether the <span><strong>SelectedItemsWrapper</strong></span> is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">
        <span>
          <span>The zero-based index of the element to get or set.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectedItemsWrapper.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.SelectedItemsWrapper.CollectionChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="E:Xceed.Wpf.ListBox.SelectedItemsWrapper.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.#ctor">
      <summary>Initializes a new instance of the <strong>SelectionRange</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>SelectionRange</strong> class specifying the item to select or deselect.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.#ctor(Xceed.Wpf.Data.FilterExpressionBase,System.Predicate{System.Object})">
      <summary>Initializes a new instance of the <strong>SelectionRange</strong> class specifying filtering criteria. If this constructor is used, all items that pass the
filters will be selected.</summary>
      <param name="filterExpression">
        <para>The FilterExpression to be used to filter the items server-side. Can be a null
reference (<strong>Nothing</strong> in Visual Basic).</para>
      </param>
      <param name="filter">The filter predicate to be used to filter the items locally (see <strong>Remarks</strong> section). Can be a null reference (<strong>Nothing</strong> in Visual
Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.SortDescription},Xceed.Wpf.Data.FilterExpressionBase,System.Predicate{System.Object})">
      <summary>Initializes a new instance of the <strong>SelectionRange</strong> class specifying sorting and filtering criteria. This constructor is to be used when a start
and/or end needs to be specified for the <strong>SelectionRange</strong> (see StartRangeInfos and <see cref="Xceed.Wpf.ListBox~Xceed.Wpf.ListBox.SelectionRange~EndRangeInfos.html">EndRangeInfos</see> properties).</summary>
      <exception caption="" cref="System.ArgumentNullException">One or more SortDescriptions must be specified.</exception>
      <param name="sortDescriptons">
        <para>One or more <strong>SortDescription</strong> objects, which will be used to create the data query that is sent to the data source. Must be provided at
construction time.</para>
      </param>
      <param name="filterExpression">The FilterExpressionBase to be used to filter the items server-side. Can be a null
reference (<strong>Nothing</strong> in Visual Basic).</param>
      <param name="filter">The filter predicated to be used to filter the items locally (see <strong>Remarks</strong> section). Can be a null reference (<strong>Nothing</strong> in
Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.Equals">
      <summary>
        <para>Determines whether two objects are equal.</para>
      </summary>
      <returns>
        <strong>true</strong> if the objects are equal; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.All">
      <summary>Gets a selection range that will select all the items in a source.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.EndRangeInfos">
      <summary>Gets a notification dictionary of key/value pairs that represents the end range-information for a selection range.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.Filter">
      <summary>
        <para>Gets the filter predicate to be used to filter the items locally (see <strong>Remarks</strong> section).</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.FilterExpression">
      <summary>
        <para>Gets the FilterExpressionBase to be used to filter the items server-side.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.IsEmpty">
      <summary>
        <para>Gets a value indicating whether the selection range is empty.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.SelectionType">
      <summary>Gets or sets a value indicating whether the selection range is selecting or unselecting items.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.SortDescriptions">
      <summary>
        <para>Gets the <strong>SortDescription</strong> objects, which will be used to create the data query that is sent to the data source. Must be provided at
construction time.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.StartRangeInfos">
      <summary>
        <para>Gets a notification dictionary of key/value pairs that represents the start range-information for a selection range.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.EndRangeDictionary.ToEnd">
      <summary>Allows all items after the start range selection to be selected.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.EndRangeDictionary.ToItem(System.Object)">
      <summary>Specifies the item at which to end the selection range.</summary>
      <param name="item">An object representing the item at which to end the selection range.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.EndRangeDictionary.IsInclusive">
      <summary>
        <para>Gets or sets a value indicating whether the start or end range-information dictionaries are inclusive.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.StartRangeDictionary.FromItem(System.Object)">
      <summary>Specifies the item from which to start the selection range.</summary>
      <param name="item">An object representing the item from which to start the selection range.</param>
    </member>
    <member name="M:Xceed.Wpf.ListBox.SelectionRange.StartRangeDictionary.FromStart">
      <summary>Allows all items before the end range selection to be selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.SelectionRange.StartRangeDictionary.IsInclusive">
      <summary>
        <para>Gets or sets a value indicating whether the start or end range-information dictionaries are inclusive.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.HighlightBrushProperty">
      <summary>Identifies the HighlightBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.MaximumProperty">
      <summary>Identifies the Maximum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.MinimumProperty">
      <summary>Identifies the Minimum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.RatioProperty">
      <summary>Identifies the Ratio dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.ShadowBrushProperty">
      <summary>Identifies the ShadowBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.SpinnerBase.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.StackPanel.#ctor">
      <summary>Initializes an instance of the <strong>StackPanel</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the children of the element.</summary>
      <returns>A <strong>Size</strong> that represents the arranged size of the element.</returns>
      <param name="finalSize">The size that the element uses to arrange its children.</param>
    </member>
    <member name="P:Xceed.Wpf.ListBox.StackPanel.Orientation">
      <summary>Gets or sets the orientation of the panel's containers.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.StackPanel.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.StackView.#ctor">
      <summary>Initializes a new instance of the StackView class.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.StackView.Orientation">
      <summary>Gets or sets the orientation of the panel's containers.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.StackView.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.ListBox.ThemeResourceDictionary.UpdateResources">
      <summary>Determines, usually according to the value of the StyleUsageMode
property, which resources should be used by the theme resource dictionary.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ThemeResourceDictionary.StyleUsageMode">
      <summary>Gets or sets a value indicating whether styles in a theme resource dictionary will be applied implicitly or explicitly.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.View.IsActiveView">
      <summary>Gets or sets a value indicating whether the view is currently the active view on the MultiViewPanel.</summary>
    </member>
    <member name="F:Xceed.Wpf.ListBox.View.IsActiveViewProperty">
      <summary>Identifies the IsActiveView dependency property.<br />
The identifier for the dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ZIndexStop.Offset">
      <summary>Gets or sets the offset on the path at which the exact ZIndexFactor value of
this ZIndexStop should be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.ListBox.ZIndexStop.ZIndexFactor">
      <summary>Gets or sets the z-index factor to be used when calculating the z-index at this z-index stop.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.UIAutomation.ListBoxAutomationPeer">
      <summary>The AutomationPeer class used for ListBoxes in the ListBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.ListBox.UIAutomation.ListBoxItemAutomationPeer">
      <summary>The AutomationPeer class used for ListBoxItems in the ListBox.</summary>
    </member>
  </members>
</doc>