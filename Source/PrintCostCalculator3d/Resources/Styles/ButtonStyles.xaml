<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LoginButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="{DynamicResource GreenBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource GreenBrush8}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource GreenBrush8}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource GreenBrush9}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="HighlightedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageWithTextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ImageButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="CleanButton" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsButton" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>