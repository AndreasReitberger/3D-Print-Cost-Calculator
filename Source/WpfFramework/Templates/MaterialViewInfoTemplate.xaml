<UserControl x:Class="WpfFramework.Templates.MaterialViewInfoTemplate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:local="clr-namespace:WpfFramework.Templates"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:CSMSControls="clr-namespace:WpfFramework.Controls"
             xmlns:Models="clr-namespace:WpfFramework.Models._3dprinting"
             xmlns:converters="clr-namespace:WpfFramework.Converters"
             xmlns:validators="clr-namespace:WpfFramework.Validators"
             xmlns:localization="clr-namespace:WpfFramework.Resources.Localization"
             
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Models:_3dPrinterMaterial}"
             d:DesignHeight="250" d:DesignWidth="450">
    <UserControl.Resources>
        <!-- Rectangle -->
        <Style TargetType="{x:Type Rectangle}" x:Key="RectangleTemplate">
            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- Label -->
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}" x:Key="LabelTemplate">
            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- TextBlock -->
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlock}" x:Key="TextBlockTemplate">
            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <converters:IsObjectNullToBoolConverter x:Key="IsObjectNullToBoolConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="48"/>
        </Grid.RowDefinitions>
        <!-- Icon -->
        <Rectangle Grid.Column="0" Margin="10">
            <Rectangle.OpacityMask>
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved, can not bind to (networkManager:SettingsViewInfo.Icon) -->
                <VisualBrush Stretch="Uniform" Visual="{Binding Icon}" />
            </Rectangle.OpacityMask>
            <Rectangle.Style>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <!-- Material Name -->
        <TextBlock Grid.Column="1" Text="{Binding Name}" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <!-- SKU -->
        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Material.SKU}" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Left" >
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        
        <StackPanel Grid.Column="2" Grid.Row="1">
            <!-- Label -->
            <TextBlock Text="{x:Static localization:Strings.LabelPriceMandatory}" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                        <Setter Property="Margin" Value="0,0,10,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!-- Package -->
            <DockPanel Grid.Column="1" Grid.Row="2" LastChildFill="False">
                <!-- Unit Price -->
                <TextBlock Text="{Binding Material.UnitPrice, StringFormat={}{0:C}}" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="36" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock  Text="/" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Center" DockPanel.Dock="Left">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock  Text="{Binding Material.PackageSize}" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Center" DockPanel.Dock="Left">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock  Text="{Binding Material.Unit}" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Center" DockPanel.Dock="Left">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DockPanel>
            
        </StackPanel>
        <!-- Checkbox -->
        <CheckBox Grid.Column="0" Grid.Row="2" Content="" IsEnabled="False"
            IsChecked="{Binding Selected}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <!-- Delete Button -->
        <Button Margin="5" VerticalAlignment="Top" Height="38" Width="45"
                        Command="{Binding DataContext.DeleteMaterialCommand, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Material}" 
                        Grid.ColumnSpan="1" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Right"
                        >
            <Button.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Delete}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="1" Text="" TextAlignment="Center" Margin="10,5" />
                </Grid>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                    <Setter Property="IsEnabled" Value="True" />
                    <!--
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=nudMachineHoursPerYear, Path=(Validation.HasError)}" Value="False" />
                                <Condition Binding="{Binding ElementName=nudUsefulYears, Path=(Validation.HasError)}" Value="False" />
                                <Condition Binding="{Binding ElementName=nudInterests, Path=(Validation.HasError)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                    -->
                </Style>
            </Button.Style>
        </Button>
        <!-- Reorder Button -->
        <Button Margin="5" VerticalAlignment="Top" Height="38"
                        Command="{Binding DataContext.ReorderMaterialCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding Material.LinkToReorder}" 
                        Grid.ColumnSpan="1" Grid.Row="3" Grid.Column="3"
                        >
            <Button.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Shopping}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Reorder}" TextAlignment="Center" Margin="10,5" />
                </Grid>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Material.LinkToReorder, Converter={StaticResource IsObjectNullToBoolConverter}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!-- Edit Button -->
        <Button Margin="5" VerticalAlignment="Top" Height="38"
                        Command="{Binding DataContext.EditMaterialCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" 
                            CommandParameter="{Binding Material}" 
                        Grid.ColumnSpan="1" Grid.Row="3" Grid.Column="1"
                        >
            <Button.Content>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=CircleEditOutline}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Edit}" TextAlignment="Center" Margin="10,5" />
                </Grid>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                    <Setter Property="IsEnabled" Value="True" />
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>