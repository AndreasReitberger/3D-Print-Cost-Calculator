<UserControl x:Class="WpfFramework.Views._3dPrinting.NewPrinterDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:viewModels="clr-namespace:WpfFramework.ViewModels._3dPrinting"
             xmlns:converters="clr-namespace:WpfFramework.Converters"
             xmlns:validators="clr-namespace:WpfFramework.Validators"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:enu="clr-namespace:WpfFramework.Models._3dprinting"
             xmlns:localization="clr-namespace:WpfFramework.Resources.Localization"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             MinWidth="840"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d"  d:DataContext="{d:DesignInstance viewModels:New3DPrinterViewModel}"
             d:DesignHeight="900" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:ColorToStringConverter x:Key="ColorToStringConverter" />
        <converters:StringToColorConverter x:Key="StringToColorConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedReverseConverter x:Key="BooleanToVisibilityCollapsedReverseConverter" />
        <converters:BooleanToValidInvalidConverter x:Key="BooleanToValidInvalidConverter" />
        <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        <!-- Enum Lists -->
        <ObjectDataProvider x:Key="MaterialKinds" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enu:_3dPrinterMaterialKind"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="Technologies" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enu:_3dPrinterType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="180"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer HorizontalScrollBarVisibility="Disabled">
            <StackPanel>
                <!-- Guid -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Key}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelGuidReadOnly}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <TextBlock Text="{Binding Id}" Style="{StaticResource AccentTextBlock}" Margin="5" VerticalAlignment="Center"/>
                </DockPanel>
                <!-- Printer Type -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Printer3d}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelPrinterTypeMandatory}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <ComboBox x:Name="cbProcessTechnology" ItemsSource="{Binding Source={StaticResource Technologies}}" SelectedItem="{Binding Type}" Margin="5" Height="38">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
                <!-- Material Kind -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Select}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelMaterialKindMandatory}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource MaterialKinds}}" SelectedItem="{Binding Kind}" Margin="5" Height="38">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
                <!-- Printer Model -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Domain}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelPrinterModelMandatory}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <TextBox x:Name="tbModel" Height="38" Margin="5">
                        <TextBox.Text>
                            <Binding Path="Model" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
                <!-- Power Consumption -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=PowerPlug}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelMaxPowerConsumptionMandatory}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <DockPanel>
                        <Label Content="{x:Static localization:StaticStrings.Watt}" DockPanel.Dock="Right" Margin="5,0" VerticalAlignment="Center"/>
                        <Controls:NumericUpDown x:Name="nudPowerConsumption" HasDecimals="False" HorizontalAlignment="Stretch" Margin="5" Width="Auto" MinWidth="110" DockPanel.Dock="Left">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="PowerConsumption" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                        </Controls:NumericUpDown>
                    </DockPanel>
                </DockPanel>
                <!-- Nozzle -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Fire}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelNozzleTemp}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <DockPanel>
                        <Controls:NumericUpDown x:Name="nudNozzleTemp" HasDecimals="False" HorizontalAlignment="Stretch" Margin="5" Width="Auto" DockPanel.Dock="Right">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="TemperatureNozzle" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                            <Controls:NumericUpDown.Style>
                                <Style TargetType="{x:Type Controls:NumericUpDown}" BasedOn="{StaticResource DefaultNumericUpDown}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=cbProcessTechnology, Path=SelectedItem}" Value="FDM" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Controls:NumericUpDown.Style>
                        </Controls:NumericUpDown>
                    </DockPanel>
                </DockPanel>
                <!-- Heatbed -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Layers}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelHasHeatbed}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <DockPanel>
                        <CheckBox x:Name="ckbHeatbed" Content="{x:Static localization:Strings.LabelHasHeatbed}" IsChecked="{Binding hasHeatbed}" Margin="5" DockPanel.Dock="Left">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBox}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=cbProcessTechnology, Path=SelectedItem}" Value="FDM" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <Label Content="{x:Static localization:Strings.LabelHeatbedTempMandatory}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                        <Controls:NumericUpDown x:Name="nudHeatbedTemp" HasDecimals="False" HorizontalAlignment="Stretch" Margin="5" Width="Auto" DockPanel.Dock="Right">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="TemperatureHeatbed" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                            <Controls:NumericUpDown.Style>
                                <Style TargetType="{x:Type Controls:NumericUpDown}" BasedOn="{StaticResource DefaultNumericUpDown}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=ckbHeatbed, Path=IsChecked}" Value="True" />
                                                <Condition Binding="{Binding ElementName=cbProcessTechnology, Path=SelectedItem}" Value="FDM" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Controls:NumericUpDown.Style>
                        </Controls:NumericUpDown>
                    </DockPanel>
                </DockPanel>
                <!-- Build Volume -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=CubeOutline}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelVolumeMandatory}" MinWidth="200" VerticalAlignment="Center" Margin="5"/>
                  
                </DockPanel>
                <DockPanel>
                        <!-- X -->
                        <Label Content="X" Margin="5" DockPanel.Dock="Left"/>
                        <Controls:NumericUpDown x:Name="nudX" StringFormat="F0" HasDecimals="True" HorizontalAlignment="Stretch" Margin="5" Width="Auto" MinWidth="110" DockPanel.Dock="Left">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="BuildVolume.X" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                        </Controls:NumericUpDown>
                        <Label Content="{x:Static localization:StaticStrings.cm}" Margin="5" DockPanel.Dock="Left"/>
                        <!-- Y -->
                        <Label Content="Y" Margin="5" DockPanel.Dock="Left"/>
                        <Controls:NumericUpDown x:Name="nudY" StringFormat="F0" HasDecimals="True" HorizontalAlignment="Stretch" Margin="5" Width="Auto" MinWidth="110" DockPanel.Dock="Left">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="BuildVolume.Y" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                        </Controls:NumericUpDown>
                        <Label Content="{x:Static localization:StaticStrings.cm}" Margin="5" DockPanel.Dock="Left"/>
                        <!-- Z -->
                        <Label Content="Z" Margin="5" DockPanel.Dock="Left"/>
                        <Controls:NumericUpDown x:Name="nudZ" StringFormat="F0" HasDecimals="True" HorizontalAlignment="Stretch" Margin="5" Width="Auto" MinWidth="110" DockPanel.Dock="Left">
                            <Controls:NumericUpDown.Value>
                                <Binding Path="BuildVolume.Z" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Controls:NumericUpDown.Value>
                        </Controls:NumericUpDown>
                        <Label Content="{x:Static localization:StaticStrings.cm}" Margin="5" DockPanel.Dock="Left"/>
                        <!-- Z -->
                        <Label Content="{x:Static localization:StaticStrings.cm_3}" Margin="5" DockPanel.Dock="Right"/>
                        <Label Content="{Binding BuildVolume.Volume}" Margin="5" DockPanel.Dock="Left"/>
                    </DockPanel>

                <!-- Unit Price -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Tag}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelPriceMandatory}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <Controls:NumericUpDown x:Name="nudPrice" StringFormat="C" HasDecimals="True" HorizontalAlignment="Stretch" Margin="5" Width="Auto">
                        <Controls:NumericUpDown.Value>
                            <Binding Path="Price" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validators:GreaterThanZeroValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </Controls:NumericUpDown.Value>
                    </Controls:NumericUpDown>
                </DockPanel>

                <!-- Manufacturer -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Factory}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelManufacturer}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <DockPanel>
                        <Button Margin="5" VerticalAlignment="Top" Height="38" Command="{Binding NewManufacturerCommand}" DockPanel.Dock="Right" 
                    >
                            <Button.Content>
                                <Grid Margin="5,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5" HorizontalAlignment="Left">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Plus}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.New}" TextAlignment="Center" Margin="10,5" />
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">

                                </Style>
                            </Button.Style>
                        </Button>
                        <ComboBox SelectedItem="{Binding Manufacturer}" ItemsSource="{Binding Manufacturers}" Margin="5" Height="38"/>
                    </DockPanel>
                </DockPanel>
                <!-- Vendor -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=PointOfSale}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelVendor}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <DockPanel>
                        <Button Margin="5" VerticalAlignment="Top" Height="38" Command="{Binding NewSupplierCommand}" DockPanel.Dock="Right" 
                    >
                            <Button.Content>
                                <Grid Margin="5,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5" HorizontalAlignment="Left">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Plus}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.New}" TextAlignment="Center" Margin="10,5" />
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">

                                </Style>
                            </Button.Style>
                        </Button>
                        <ComboBox SelectedItem="{Binding Supplier}" ItemsSource="{Binding Suppliers}" Margin="5" Height="38"/>
                    </DockPanel>
                </DockPanel>
                <!-- Shop Link -->
                <DockPanel>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Shopping}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{x:Static localization:Strings.LabelShopUri}" VerticalAlignment="Center" MinWidth="200" Margin="5"/>
                    <TextBox x:Name="tbReorderUri" Height="38" Margin="5"  Controls:TextBoxHelper.Watermark="https://..."
                     >
                        <TextBox.Text>
                            <Binding Path="LinkToReorder" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                <Binding.ValidationRules>
                                    <validators:IsLinkOrEmptyValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DockPanel>
            </StackPanel>
        </ScrollViewer>
        <!-- Confirm Button -->
        <Button x:Name="btnSave" Margin="5" VerticalAlignment="Top" Height="42"
                Command="{Binding SaveCommand}" Grid.Row="1"
                >
            <Button.Content>
                <Grid Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5" HorizontalAlignment="Left">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=ContentDuplicate}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <!-- Add Dialog -->
                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.AddPrinter}" TextAlignment="Center" Margin="10,5"
                               Visibility="{Binding IsEdit, Converter={StaticResource BooleanToVisibilityCollapsedReverseConverter}}"
                               />
                    <!-- Save Dialog -->
                    <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.SaveChanges}" TextAlignment="Center" Margin="10,5"
                               Visibility="{Binding IsEdit, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                               />
                </Grid>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=tbModel, Path=(Validation.HasError)}" Value="False" />
                                <Condition Binding="{Binding ElementName=nudPrice, Path=(Validation.HasError)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!-- Cancel Button -->
        <Button x:Name="btnCancel" Content="{x:Static localization:Strings.Cancel}" Margin="5" VerticalAlignment="Top" Height="42"
                Command="{Binding CancelCommand}" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"
                />
        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Margin="5,15,5,5" TextWrapping="Wrap" Text="{x:Static localization:Strings.MarkedFiledsMandatory}" VerticalAlignment="Top"/>
    </Grid>
</UserControl>
