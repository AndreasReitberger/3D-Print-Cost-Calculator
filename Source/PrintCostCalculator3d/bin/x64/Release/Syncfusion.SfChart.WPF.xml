<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfChart.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfChart3D">
            <summary>
            Represents the 3DChart control which is used to visualize the data graphically in three dimension.
            </summary>
            <remarks>
            The Chart is often used to make it easier to
            understand large amount of data and the relationship between different parts
            of the data. Chart can usually be read more quickly than the raw data that they
            come from. Certain <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D"/> are more useful for
            presenting a given data set than others. For example, data that presents
            percentages in different groups (such as "satisfied, not satisfied, unsure") are
            often displayed in a <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries3D"/> chart, but are more easily
            understood when presented in a horizontal <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries3D"/> chart.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartBase">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartBase"/> is a base class for chart. Which represents a chart control with basic presentation characteristics. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ICloneable">
            <summary>
            Interface implementation for ICloneable
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.AxisThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.AxisThickness"/> property.
            </summary>        
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.RowProperty">
            <summary>
            The DependencyProperty for <see cref="!:Row"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnSpanProperty">
            <summary>
            The DependencyProperty for <see cref="!:ColumnSpan"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.RowSpanProperty">
            <summary>
            The DependencyProperty for <see cref="!:RowSpan"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnProperty">
            <summary>
            The DependencyProperty for <see cref="!:Column"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeries"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.PaletteProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.Palette"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacementProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacement"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.HeaderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.Header"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColorModelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.ColorModel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.TooltipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.Tooltip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ChartResourceDictionaryProperty">
            <summary>
            The Dependency property for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.ChartResourceDictionary"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetRow(System.Windows.UIElement)">
            <summary>
            Return row value from the given ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <returns>Row value of given object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetRow(System.Windows.UIElement,System.Int32)">
            <summary>
            Method implementation for set row value to ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <param name="value">Row value of the object.</param>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetColumn(System.Windows.UIElement)">
            <summary>
            Get the column value from the given ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <returns>Column value of given object.</returns>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetColumnSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property from a given UIElement. 
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property.</returns>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetRowSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property from a given UIElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetColumn(System.Windows.UIElement,System.Int32)">
            <summary>
            Set column to ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <param name="value">Column value of the object.</param>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetColumnSpan(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property to a given UIElement.
            </summary>
            <param name="element"> The element on which to set the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property.</param>
            <param name="value">The property value to set.</param>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetRowSpan(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property to a given UIElement.
            </summary>
            <param name="element"> The element on which to set the Syncfusion.UI.Xaml.Charts.RowSpan attached property.</param>
            <param name="value">The property value to set.</param>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SuspendSeriesNotification">
            <summary>
            Suspends all the series from updating the data till ResumeSeriesNotification is called. It is specifically used when you need to append the collection of data.
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ResumeSeriesNotification">
            <summary>
            Processes the data that is added to the data source after the SuspendSeriesNotification is called.
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Clone">
            <summary>
            Clone the entire chart control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetCumulativeStackInfo(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">ChartSeries</param>
            <param name="reqNegStack">RequiresNegativeStack</param>
            <returns>StackedYValues collection.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Save(System.String)">
            <summary>
            Export the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> into image with the given filename to the mentioned location.
            </summary>
            <example>
            <code language="C#">
            chart.Save("sfchart.jpg", //..KnownFolders.PicturesLibrary);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Save(System.IO.Stream,System.Windows.Media.Imaging.BitmapEncoder)">
            <summary>
            Export the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> into image using the stream with provided bitmap encoder value.
            </summary>
            <example>
            <code language="C#">
            var stream = await file.OpenAsync(Windows.Storage.FileAccessMode.ReadWrite);
            {
            chart.Save(stream, BitmapEncoder.BmpEncoderId);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Print">
            <summary>
            Method used to print the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Print(System.Windows.HorizontalAlignment,System.Windows.VerticalAlignment,System.Windows.Thickness,System.Boolean,System.Boolean)">
            <summary>
            Method used to print the chart.
            </summary>
            <param name="HorizontalAlignment">Used to specify horizontal alignment.</param>
            <param name="VerticalAlignment">Used to specify vertical alignment.</param>
            <param name="PageMargin">Used to specify page margin.</param>
            <param name="PrintLandscape">Used to specify whether print landscape mode or not.</param>
            <param name="ShrinkToFit">Used to specify shrinktofit or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Serialize(System.String)">
            <summary>
            Method used to generate a serialize file in default location.
            </summary>
            <param name="fileName">Used to specify file name.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Serialize(System.IO.Stream)">
            <summary>
            Method used to generate a serialize the stream in default location.
            </summary>
            <param name="stream">Used to specify stream value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Serialize">
            <summary>
            Method used to serialize the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Deserialize(System.IO.Stream)">
            <summary>
            Method used to deserialize the serialized file.
            </summary>
            <param name="stream">Used to specify stream value.</param>
            <returns>The deserialized object from the stream.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Deserialize">
            <summary>
            Method used to deserialize the serialized file.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Deserialize(System.String)">
            <summary>
            Method used to deserialize the serialized file.
            </summary>
            <param name="fileName">Used to specify file name.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to highlight selected index series.
            </summary>
            <param name="newIndex">Used to indicate current selected index.</param>
            <param name="oldIndex">Used to indicate previous selected index.</param>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts the chart value to screen point.
            </summary>
            <param name="axis">The Chart axis.</param>
            <param name="value">The value.</param>
            <returns>The double value to point.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.PointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Converts screen point to chart value.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="point">The point.</param>
            <returns>The double point to value.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnRowColumnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method to notify row definition and column definition collection changed. 
            </summary>
            <param name="e">NotifyCollectionChanged event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.CloneChart">
            <summary>
            Clone the entire chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateArea(System.Boolean)">
            <summary>
            Update the chart area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ValueToLogPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to Log point.
            </summary>
            <param name="axis">The Logarithmic axis.</param>
            <param name="value">The value.</param>
            <returns>The double value to point.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateAxisLayoutPanels">
            <summary>
            Updates the entire chart series and axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualRow(System.Windows.UIElement)">
            <summary>
            Gets actual row value from the given ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <returns>Actual row value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualColumn(System.Windows.UIElement)">
            <summary>
            Gets actual column value from the given ChartAxis.
            </summary>
            <param name="obj">The UIElement.</param>
            <returns>Actual column value.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualColumnSpan(System.Windows.UIElement)">
            <summary>
            Gets the actual value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property from a given UIElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualRowSpan(System.Windows.UIElement)">
            <summary>
            Gets the actual value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property from a given UIElement.
            </summary>
            <param name="obj">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property.</returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get brush for series selection.
            </summary>
            <param name="series">The chart series.</param>
            <returns>The brush value for series selection.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetEnableSeriesSelection">
            <summary>
            Method used to get EnableSeriesSelection property value.
            </summary>
            <returns>The bool value to enable/disable the series selection.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetEnableSegmentSelection">
            <summary>
            Method used to get EnableSegmentSelection property value.
            </summary>
            <returns>The bool value to enable/disable the segment selection.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetSelectionBehaviour">
            <summary>
            Method used to set selection behavior.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetTooltipBehavior">
            <summary>
            Method used to set the TooltipBehavior.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.RaiseSeriesSelectionChangedEvent">
            <summary>
            Method to raise SelectionChanged event when SeriesSelectedIndex is set at chart load time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnSeriesBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs)">
            <summary>
            Event invokes when the plot area size changed.
            </summary>
            <param name="args">Which indicates <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnSelectionChanged(Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs)">
            <summary>
            Called when selection changed in SfChart.
            </summary>
            <param name="eventArgs">ChartSelectionChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnBoxSelectionChanged(Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs)">
            <summary>
            Called when selection changed in SfChart.
            </summary>
            <param name="eventArgs">ChartSelectionChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnSelectionChanging(Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs)">
            <summary>
            It's a preview event before SelectionChanged.
            </summary>
            <param name="eventArgs">ChartSelectionChangingEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnRootPanelSizeChanged(System.Windows.Size)">
            <summary>
            Called when root panel size changed.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.LegendProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBase.Legend"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateLegendArrangeRect(Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Updates the legend arrange rect.
            </summary>
            <param name="legend">The legend.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateLegendArrangeRect">
            <summary>
            Updates the legend arrange rect.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SelectionChanged">
            <summary>
            Event correspond to series and segment selection. It invokes once selection changed from a series or segment.
            </summary>
            <remarks>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SelectionChanging">
            <summary>
            Event correspond to series and segment selection. It invokes before selection changing from a series or segment.
            </summary>
            <remarks>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs"/>
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesBoundsChanged">
            <summary>
            Event correspond to plot area bound. It invokes when the plot area size changes.
            </summary>
            <remarks>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs"/>
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.PropertyChanged">
            <summary>
            Event correspond to property value changed. It invokes when the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartBase"/> properties changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.AxisThickness">
            <summary>
            Gets or sets thickness to the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesClipRect">
            <summary>
            Gets a bounds of chart area excluding axis and chart header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeries">
            <summary>
            Gets the collection of visible series in the chart.
            </summary>
            <remarks>
            This property is intended to be used for custom <see>
            <cref>ChartArea</cref>
            </see>
            templates.
            </remarks>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Palette">
            <summary>
            Gets or sets palette for chart. By default, it is <see cref="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Metro"/>.
            </summary> 
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartColorPalette"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndex">
            <summary>
            Gets or sets the index to select the series.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnDefinitions">
            <summary>
            Gets or sets the collection of ChartColumnDefinition objects defined in the chart.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.RowDefinitions">
            <summary>
            Gets or sets the collection of ChartRowDefinition objects defined in chart.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Axes">
            <summary>
            Gets the collection of horizontal and vertical axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacement">
            <summary>
            Gets or sets the value that indicates whether the series can be placed side by side.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Header">
            <summary>
            Gets or sets title for the chart.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment">
            <summary>
            Gets or sets the horizontal alignment for the header.
            </summary>
            <value>
            <see cref="T:System.Windows.HorizontalAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment">
            <summary>
            Gets or sets the vertical alignment for the header.
            </summary>
            <value>
            <see cref="T:System.Windows.VerticalAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ColorModel">
            <summary>
            Gets or sets the color schemes for all series in the chart.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartColorModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ChartResourceDictionary">
            <summary>
            Gets or sets the chart resource dictionary file path which is used to customize the control default styles for custom themes.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.InternalPrimaryAxis">
            <summary>
            Gets or sets the intermediate PrimaryAxis object used for internal calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.InternalDepthAxis">
            <summary>
            Gets or sets the intermediate DepthAxis object used for internal calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.InternalSecondaryAxis">
            <summary>
            Gets or sets the intermediate SecondaryAxis object used for internal calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.MinPointsDelta">
            <summary>
            Gets the calclulated minimum delta value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.AreaType">
            <summary>
            Gets or sets the type of the chart area.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAreaType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ChartAxisLayoutPanel">
            <summary>
            Gets or sets the chart axis layout panel.
            </summary>
            <value>
            The chart axis layout panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Tooltip">
            <summary>
            Gets or sets the current Tooltip object, which is displaying in the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Legend">
            <summary>
            Gets or sets a legend that helps to identify the series in the chart.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.DepthAxisProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.DepthAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.WallSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.WallSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableRotationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableRotation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSeriesSelectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSeriesSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSegmentSelectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSegmentSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.TopWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.TopWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.BottomWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BottomWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.RightWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.RightWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.LeftWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.LeftWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.BackWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BackWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.PerspectiveAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PerspectiveAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.PrimaryAxisProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PrimaryAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.SecondaryAxisProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SecondaryAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.SeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Series"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.TiltProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Tilt"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.DepthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Depth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.RotationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Rotation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionCursorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionCursor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.zminPointsDelta">
            <summary>
            Backing store for ZMinPointsDelta/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.leftSideWallPlans">
            <summary>
            Plans of the left side wall.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.bottomSideWallPlans">
            <summary>
            Plans of the bottom side wall.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.topSideWallPlans">
            <summary>
            Plans of the top side wall.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.rightSideWallPlans">
            <summary>
            Plans of the right side wall.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.currentSeries">
            <summary>
            Represents the current series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.series">
            <summary>
            Used to temporarily store the series for display tooltip hovering on adornment or adornment label.
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.previousChartPosition">
            <summary>
            Holds the previous chart position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.rotationActivated">
            <summary>
            Checks the rotation activation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.previousAutoDepth">
            <summary>
            Holds the previous auto depth.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.sumByIndex">
            <summary>
            Holds the sum by index.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.is3DUpdateScheduled">
            <summary>
            Checks whether the 3D schedule is updated.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.mouseMoveSegment">
            <summary>
            Represents the segment on which the mouse is moved.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.controlsPresenter">
            <summary>
            Represents the controls presenter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
             Method used to highlight selected index series.
            </summary>
            <param name="newIndex">The New Index</param>
            <param name="oldIndex">The Old Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.PointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Converts point to value.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="point">The point.</param>
            <returns>
            The double point to value
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart Axis.</param>
            <param name="value">The Value.</param>
            <returns>
            The double value to point
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnResetSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Updates the chart when reset the series.
            </summary>
            <param name="series">The Series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.InitializeDefaultAxes">
            <summary>
             Set default axes for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart3D"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.IsManhattanAxis">
            <summary>
            Checks for the manhattan axis.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean"/> value indicating whether Manhattan Axis Required.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.SetPrimaryAxis(Syncfusion.UI.Xaml.Charts.ChartValueType)">
            <summary>
            Set PrimaryAxis for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart3D"/>
            </summary>
            <param name="type">The Type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.SetDepthAxis(Syncfusion.UI.Xaml.Charts.ChartValueType)">
            <summary>
            Set DepthAxis for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart3D"/>
            </summary>
            <param name="type">The Type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.CloneChart">
            <summary>
            Clone the entire chart
            </summary>
            <returns>The Cloned Chart.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.GetPercentByIndex(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D},System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets the percent by index.
            </summary>
            <param name="series">The Series</param>
            <param name="index">The Index</param>
            <param name="value">The Value</param>
            <param name="isReCalculation">Is Recalculation Required</param>
            <returns>The Percent</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.RenderSeries">
            <summary>
            Renders the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateRightWall">
            <summary>
            Updates the right wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateLeftWall">
            <summary>
            Updates the left wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateTopWall">
            <summary>
            Updates the top wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateBottomWall">
            <summary>
            Updates the bottom wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateBackWall">
            <summary>
            Updates the back wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.IsChartRotated">
            <summary>
            Checks whether the chart is rotated.
            </summary>
            <returns>Indicates a <see cref="T:System.Boolean"/> value whether the chart is Rotated</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateAxisLayoutPanels">
            <summary>
            Updates the entire chart series and axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateArea(System.Boolean)">
            <summary>
            Update the chart area
            </summary>
            <param name="forceUpdate">Triggers Force Update</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the chart on mouse move.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the chart on mouse left button down.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the chart on mouse left button up.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the chart on mouse leave.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.CheckRotationAngleSameQuadrant(System.Double,System.Double)">
            <summary>
            To prevent the call of update area each time the angle is changed.
            </summary>
            <param name="actualRotation">The Actual Rotation Angle</param>
            <param name="previousRotation">The Previous Rotation Angle</param>
            <returns>Is rotation angle at the same quadrant.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.CheckTiltAngleSameQuadrant(System.Double,System.Double)">
            <summary>
            To prevent the call of update area each time the tilt is changed.
            </summary>
            <param name="actualtilt">The Actual Rotation Angle</param>
            <param name="previousTilt">The Previous Rotation Angle</param>
            <returns>Is tilt angle at the same quadrant.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.CheckSeriesTransposition(Syncfusion.UI.Xaml.Charts.ChartSeries3D)">
            <summary>
            Checks the series transposition.
            </summary>
            <param name="series">The Series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.IsSeriesEventTrigger(System.Object,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            This method is used to return the <see cref="T:System.Boolean"/> value when the AdornmentTemplate is selected.
            </summary>
            <param name="source">The Source</param>
            <param name="series">The Series</param>
            <returns>Returns the <see cref="T:System.Boolean"/> value indicating whether the series event triggered.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnDepthAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when depth axis is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnEnableSeriesSelectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyChangeCallback for EnableSeriesSelection property.
            </summary>
            <param name="d">The DependencyObject</param>
            <param name="e">The DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnEnableSegmentSelectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyChangeCallback for EnableSegmentSelection.
            </summary>
            <param name="d">The DependencyObject</param>
            <param name="e">The DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSelectionStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart style when style is set.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnTopWallBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the top wall color when top wall brush changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBottomWallBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the bottom wall color when top wall brush changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnRightWallBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Update the right wall color when top wall brush changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnLeftWallBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the left wall color when left wall brush changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBackWallBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the back wall color when back wall brush is applied.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnPerspectiveAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when PerspectiveAngle is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnPrimaryAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the primary axis is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSecondaryAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the secondary axis is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSeriesPropertyCollectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the series property collection changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnDepthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the depth property is changed.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnRotationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the rotation property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnTiltPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when tilt property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBackWallBrushChanged">
            <summary>
            Update Back Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnLeftWallBrushChanged">
            <summary>
            Update Left Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnRightWallBrushChanged">
            <summary>
            Update Right Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBottomWallBrushChanged">
            <summary>
            Update Bottom Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnTopWallBrushChanged">
            <summary>
            Update Top Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UnRegisterSeries(Syncfusion.UI.Xaml.Charts.ISupportAxes)">
            <summary>
            Unregisters the series.
            </summary>
            <param name="series">The Series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateVisibleSeries(System.Collections.IList)">
            <summary>
            Updates the visible series.
            </summary>
            <param name="seriesColl">The Series Collection</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSeriesPropertyCollectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when the series collection changed.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnPerspectiveAngleChanged">
            <summary>
            Updates the chart when the perspective angle is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the chart when the series collection is changed.
            </summary>
            <param name="sender">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the chart on chart size changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.RotateChart(System.Windows.Point)">
            <summary>
            Rotates the chart.
            </summary>
            <param name="updatedPosition">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateFrontWall">
            <summary>
            Updates the front wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Update3DWall">
            <summary>
            Update3D the wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Update3DView">
            <summary>
            Update the 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.AutoDepthAdjust">
            <summary>
            Automatics the depth adjust.
            </summary>
            <returns>Need auto depth adjust</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ChartMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Updates the interactions when chart is moved.
            </summary>
            <param name="source">The Source</param>
            <param name="position">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ChartMouseDown(System.Object,System.Windows.Point,System.Object)">
            <summary>
            Updates the interactions when the chart mouse button is down.
            </summary>
            <param name="source">The Source</param>
            <param name="position">The Position</param>
            <param name="pointer">The pointer</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ChartMouseUp(System.Object,System.Windows.Point,System.Object)">
            <summary>
            Updates the interactions when the chart mouse button is up.
            </summary>
            <param name="source">The Source</param>
            <param name="position">The Position</param>
            <param name="pointer">The Pointer</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ExplodeOnMouseClick(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Explodes the chart on mouse click.
            </summary>
            <param name="element">The Element</param>
            <param name="position">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Schedule3DUpdate">
            <summary>
            Schedule the 3d update.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnAxisChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
            <cref>E:AxisChanged</cref>
            </see>
            event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/>Instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.LayoutAxis(System.Windows.Size)">
            <summary>
            Layouts the axis.
            </summary>
            <param name="availableSize">Size of the available.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ScheduleRenderSeries">
            <summary>
            Renders the segment at the given schedules.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.DepthAxis">
            <summary>
            Gets or sets the horizontal axis(Z) for the <c>SfChart3D</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.WallSize">
            <summary>
            Gets or sets the size of the axis wall. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableRotation">
            <summary>
            Gets or sets a value indicating whether the rotation is enabled for <c>SfChart3D</c>.
            </summary>
            <value>
              <c>true</c> if rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSeriesSelection">
            <summary>
            Gets or sets a value indicating whether the series selection is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSegmentSelection">
            <summary>
            Gets or sets a value indicating whether if the segment (or) data point selection is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionStyle">
            <summary>
            Gets or sets the type of selection. By Default Single Selection is enabled.
            </summary>
            <value>
                <c>SelectionStyle3D.Single</c> for selecting single point/series; 
                <c>SelectionStylr3D.Multiple</c> for selecting multiple point/series. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SelectionCursor">
            <summary>
            Gets or sets the mouse cursor for the series, which indicates that this series is selectable
            </summary>
            <remarks>
            Default value is null
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.TopWallBrush">
            <summary>
            Gets or sets the brush for the Top wall.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BottomWallBrush">
            <summary>
            Gets or sets the brush for the Bottom wall.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.RightWallBrush">
            <summary>
            Gets or sets brush for the Right wall.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.LeftWallBrush">
            <summary>
            Gets or sets the brush for Left wall.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BackWallBrush">
            <summary>
            Gets or sets the brush for the Back wall.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PerspectiveAngle">
            <summary>
            Gets or sets the angle for the perspective view. By default its 90 degree.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PrimaryAxis">
            <summary>
            Gets or sets the horizontal axis(X) for the <c>SfChart3D</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SecondaryAxis">
            <summary>
            Gets or sets the vertical axis(Y) for the <c>SfChart3D</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Series">
            <summary>
            Gets or sets the series added to the <c>SfChart3D</c>.
            </summary>
            <example>
            The following is an example for initializing the <c>Series</c>
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:AreaSeries3d/&gt;
                    &lt;syncfusion:AreaSeries3d/&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                SfChart sfChart = new SfChart();
                AreaSeries3D areaSereis1 = new AreaSeries3D();
                AreaSeries3D areaSereis2 = new AreaSeries3D();
                sfChart.Series.Add(areaSereis1);
                sfChart.Series.Add(areaSereis2);
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Tilt">
            <summary>
            Gets or sets the Tilt angle for the 3D charts.
            </summary>
            <remark>
                The default angle is 0d.
            </remark>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Depth">
            <summary>
            Gets or sets the depth of field for 3D view.
            </summary>
            <remark>
                The default value is 100d.
            </remark>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Rotation">
            <summary>
            Gets or sets the rotation angle for the 3D charts.
            </summary>
            <remark>
                The default angle is 0d.
            </remark>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.IsRenderSeriesDispatched">
            <summary>
            Gets or sets a value indicating whether series rendering dispatched.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Graphics3D">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Graphics3D"/> for render the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.ZMinPointsDelta">
            <summary>
            Gets the spacing for the column typed series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.IsAutoDepth">
            <summary>
            Gets or sets a value indicating whether auto depth need to be set.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.RootPanel">
            <summary>
            Gets or sets the root panel of the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.IsRotationScheduleUpdate">
            <summary>
            Gets or sets a value indicating whether the rotation schedule update is required.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.ActualRotationAngle">
            <summary>
            Gets or sets the rotation angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.ActualTiltAngle">
            <summary>
            Gets or sets the tilt angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.ActualDepth">
            <summary>
            Gets or sets the actual depth of the chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CategoryAxis3D">
            <summary>
            Class implementation for CategoryAxis
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D">
            <summary>
            Class implementation for ChartAxisBase3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxis">
            <summary>
            Enables plotting of data points in a chart control.
            </summary>
            <remarks>
            The Chart requires a minimum of two axes namely primary axis and secondary axis to plot data points. 
            Values / data in the chart are plotted against these two axes. 
            Chart WINRT also supports adding multiple axes to the chart and the series can be drawn with 
            reference to any x-axis,y-axis added to <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>
            </remarks>
            <example>
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                      &lt;syncfusion:SfChart.PrimaryAxis&gt;
                            &lt;syncfusion:ChartAxis/&gt;
                      &lt;/syncfusion:SfChart.PrimaryAxis&gt;
                      &lt;syncfusion:SfChart.SecondaryAxis &gt;
                            &lt;syncfusion:ChartAxis/&gt;                      
                      &lt;/syncfusion:SfChart.SecondaryAxis&gt;
                &lt;/syncfusion:SfChart &gt;
            </code>
            <code language="C#">
                ChartAxis xAxis = new ChartAxis();
                    chartArea.PrimaryAxis = xAxis;
                ChartAxis yAxis = new ChartAxis();
                    chartArea.SecondaryAxis = yAxis;
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.CRoundDecimals">
            <summary>
            CRoundDecimals const variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MaximumLabelsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MaximumLabels"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormatProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffsetProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectActionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSourceProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotationAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotationAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyleProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCountProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCount"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelTemplateProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelTemplate"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Header"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OriginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Origin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOriginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOrigin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOriginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOrigin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OriginLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.OriginLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfoProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfo"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplateProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplate"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLinesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLines"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualTrackBallLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualTrackBallLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OrientationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueTypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueType"/> property.
            </summary> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLabelAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLabelAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.RangeStylesProperty">
            <summary>
            The DependencyProperty for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.RangeStyles"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.c_intervalDivs">
            <summary>
            Initializes c_intervalDivs
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MaxPixelsCount">
            <summary>
            MaxPixelsCount  variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.m_actualRange">
            <summary>
            Contains  actual Range WithoutPadding
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.m_actualVisibleRange">
            <summary>
            Contains Actual VisibleRange
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.#ctor">
            <summary>
            Called when instance created for ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double)"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PolarCoefficientToValue(System.Double)">
            <summary>
            Converts Coefficient of Value related to chart control to Polar/Radar type axis unit.
            </summary>
            <param name="value"> Polar/Radar type axis Coefficient Value</param>
            <returns> The value of point on Polar/Radar type axis</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToActualValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units. It returns actual value instead of visible value.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double)">
            <summary>
            Converts value of passed point co-ordinate to control related co-ordinate.
            </summary>
            <param name="value">The value of point on axis.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValueCalc"/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPolarCoefficient(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to Polar/Radar type axis unit.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPolarCoefficient(System.Double)"/>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double,System.Boolean)">
            <summary>
            Converts value of passed point co-ordinate to control related co-ordinate.
            </summary>
            <param name="value">The value of point on axis.</param>
            <param name="isInversed">The value indicates whether <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed"/> is e/&gt;</param>
            <returns>Co-ordinate of point related to chart control.</returns>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValueCalc"/>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetLabelContent(System.Double)">
            <summary>
            Return Object value from the given position value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetRenderedRect">
            <summary>
            Gets the actual rect co-ordinates of an ChartAxis.
            </summary>
            <returns>returns rect</returns>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetArrangeRect">
            <summary>
            Gets the rect co-ordinates of an axis excluding its value of LabelOffset and AxisLineOffset.
            </summary>
            <returns>returns rect</returns>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.Clone">
            <summary>
            Clone the axis
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnLabelCreated(Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs)">
            <summary>
            Occurs when label is created.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateRangeAndInterval(System.Windows.Size)">
            <summary>
            Calculates actual range and actual interval
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.Invalidate">
            <summary>
            Recalculates visible range and visible labels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPoint(System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PointToValue(System.Windows.Point)">
            <summary>
            Converts point to value.
            </summary>
            <param name="point">The point.</param>
            <returns>The double point to value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnAxisBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Event invokes when axis bounds changed.
            </summary>
            <param name="args">Which indicates <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnAxisVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Event invokes when axis <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleRange"/> is changed.
            </summary>
            <param name="args">Which indicates <see cref="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SamllTicksPoint
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="position"></param>
            <param name="interval"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetActualDesiredIntervalsCount(System.Windows.Size)">
            <summary>
            Returns the maximum desired intervals count.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnPropertyChanged">
            <summary>
            Event correspond to property value changed. It invokes when the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> properties changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnRegisteredSeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when axis registered series collection changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnCreateAutomationPeer">
            <summary>
            Returns class-specific System.Windows.Automation.Peers.AutomationPeer implementations for the WPF infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.RaiseLabelCreated(Syncfusion.UI.Xaml.Charts.ChartAxisLabel)">
            <summary>
            Called when the label is created.
            </summary>
            <param name="axisLabel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PopulateVisibleLabelForCustomLabels">
            <summary>
            Sets the Custom Labels to Visible Labels Collection
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.m_VisibleLabels_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when visible labels collection is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsActualInversed">
            <summary>
            isInversed variable declarations
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisBoundsChanged">
            <summary>
            Occurs when axis plot area size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualRangeChanged">
            <summary>
            Occurs when [actual range changed].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelCreated">
            <summary>
            Occurs when the labels is created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsLogarithmic">
            <summary>
            Gets or sets IsLogarithmic property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualPlotOffset">
            <summary>
            Gets or sets the plot offset value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MaximumLabels">
            <summary>
            Gets or sets the maximum no of label to be displayed per 100 pixels.
            </summary>
            <remarks>
            This property used to avoid more no of labels on auto range calculation.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleRange">
            <summary>
            Gets the visible range of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderPosition">
            <summary>
            Gets or sets the position for Axis header, when enabling the ShowAxisNextToOrigin property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ArrangeRect">
            <summary>
            Gets the bounds of the chart axis size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPath">
            <summary>
            Gets or sets the property path to be bind with axis label position.
            </summary>
            <remarks>While using custom label source, the position(index) for labels will get from this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPath">
            <summary>
            Gets or sets the property path to be bind with axis label content(text).
            </summary>
            <remarks>While using custom label source, the label text will get from this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormat">
            <summary>
            Gets or sets the label formatting for the axis labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset">
            <summary>
            Gets or sets the offset value for applying the padding to the plot area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart">
            <summary>
            Gets or sets the value that used to offset the rendering of the axis at start position.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart"/> applies padding at start of plot area where the axis and its elements are rendered in chart with padding at start.
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart"/> is not applicable for polar and radar chart series.
            If the values set to both  <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart"/>,
            then <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/> takes highest precedence.
            </remarks>
            <value>
            The default value is 0.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd">
            <summary>
            Gets or sets the value that used to offset the rendering of the axis at end position.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd"/> applies padding at end of plot area where the axis and its elements are rendered in chart with padding at end.
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd"/> is not applicable for polar and radar chart series.
            If the values set to both  <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd"/>,
            then <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/> takes highest precedence.
            </remarks>
            <value>
            The default value is 0.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset">
            <summary>
            Gets or sets the offset value for applying padding to the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPosition">
            <summary>
            Gets or sets the position for the axis labels. Either inside or outside of the plot area.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.AxisElementPosition"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource">
            <summary>
            Gets or sets the custom labels collection to be displayed in axis .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplate">
            <summary>
            Gets or sets the custom template for the axis label postfix.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplate">
            <summary>
            Gets or sets the custom template for the axis label postfix.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction">
            <summary>
            Gets or sets a value which decides the mechanism to avoid the axis labels overlapping. 
            The overlapping labels can be hided, rotated or placed on next row.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent">
            <summary>
            Gets or sets the value that determines the distance between the axis label and axis title. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle of the axis labels.
            </summary>
            <remarks>
            The default value is 0 and the label will be rotated with center as origin.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle">
            <summary>
            Gets or sets the options for customizing for the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition">
            <summary>
            Gets or sets a value indicating whether to enable the axis to position opposite to its actual position. That is, to the other side of plot area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCount">
            <summary>
            Gets or sets the interval for the axis auto range calculation, if <see cref="T:Syncfusion.UI.Xaml.Charts.Interval"/> is not set explicitly.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelVisibility">
            <summary>
            Gets or sets visibility of label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelTemplate">
            <summary>
            Gets or sets the custom template for the scroll bar thumb.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Header">
            <summary>
            Gets or sets the header for the chart axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle">
            <summary>
            Gets or sets the style for the chart axis header.
            </summary>
            <value><see cref="T:Syncfusion.UI.Xaml.Charts.LabelStyle"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate">
            <summary>
            Gets or sets the custom template for the chart header.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize">
            <summary>
            Gets or sets the size for the axis tick lines.
            </summary>
            <remarks>
            The default value is 8.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleLabels">
            <summary>
            Gets the collection of axis labels in the visible region.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed">
            <summary>
            Gets or sets the value that indicates whether the axis visible range is inversed. 
            When reversed, the axis will render points from right to left if horizontal, top to bottom when vertical and clockwise if radial.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Origin">
            <summary>
            Gets or sets the origin value where its associated axis should place.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOrigin">
            <summary>
            Gets or sets a value indicating whether to show the origin line or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOrigin">
            <summary>
            Gets or sets a value indicating whether axis can be positioned across the plot area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.OriginLineStyle">
            <summary>
            Gets or sets the style for origin line when enable the ShowOrigin property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPosition">
            <summary>
            Gets or sets a value indicating whether the tick line position, either inside or outside.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode">
            <summary>
            Gets or sets mode which decides the mechanism for extreme(edge) labels.
            It can be position center, hide, etc.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityMode">
            <summary>
            Gets or sets the edge labels visibility mode for hiding the edge labels on zooming.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle">
            <summary>
            Gets or sets the style for the major grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyle">
            <summary>
            Gets or sets the style for the minor grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyle">
            <summary>
            Gets or sets the style for the major tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyle">
            <summary>
            Gets or sets the style for the minor tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfo">
            <summary>
            Gets or sets a value indicating whether to show track ball label for this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplate">
            <summary>
            Gets or sets the custom template for the trackball tooltip label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate">
            <summary>
            Gets or sets the custom template for the Crosshair labels.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            <code language="XAML">
                &lt;syncfusion:SfChart.PrimaryAxis&gt;
                    &lt;syncfusion:ChartAxis CrosshairLabelTemplate="{StaticResource crossHairTemplateX}"/&gt;
                &lt;/syncfusion:SfChart.PrimaryAxis&gt;
                &lt;syncfusion:SfChart.SecondaryAxis&gt;
                    &lt;syncfusion:ChartAxis CrosshairLabelTemplate="{StaticResource crossHairTemplateY}"/&gt;
                &lt;/syncfusion:SfChart.SecondaryAxis&gt;
            </code>
            <code language="C#">
                primaryAxis.ShowTrackballInfo = true;
                primaryAxis.CrosshairLabelTemplate = dataTemplateX;
                secondaryAxis.ShowTrackballInfo= true;
                secondaryAxis.CrosshairLabelTemplate = dataTemplateY;
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether the axis gird lines can be display or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming">
            <summary>
            GGets or sets the value that indicates whether to calculate the axis intervals on zooming.
            </summary>
            <remarks>While zooming, the range and interval will change with respect to zoom position or zoom factor
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle">
            <summary>
            Gets or sets the options for customizing the axis labels. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate">
            <summary>
            Gets or sets the custom template for the axis labels.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CustomLabels">
            <summary>
            Gets the axis custom labels collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualPlotOffsetStart">
            <summary>
            Gets or sets the plot offset start value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualPlotOffsetEnd">
            <summary>
            Gets or sets the plot offset end value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.RangeStyles">
            <summary>
            Gets or sets a collection of the ChartAxisRangeStyle to customize the axis gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLabelAlignment">
            <summary>
            Gets or sets the Alignment for the axis labels. Either Start, Center or End of the Axis area.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.LabelAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.StriplineXRange">
            <summary>
            Gets or sets the stripLine range corresponding to x axis, this property is used to include range of StripLine to axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.StriplineYRange">
            <summary>
            Gets or sets the stripLine range corresponding to y axis, this property is used to include range of StripLine to axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double)"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.CreateLineRecycler">
            <summary>
            Creates the line recycler.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.ComputeDesiredSize(System.Windows.Size)">
            <summary>
            Computes the desired size.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.OnAxisBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisBoundsChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.UpdatePanels">
            <summary>
            Updates the axis panels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.IsZAxis">
            <summary>
            Gets or sets a value indicating whether the axis is z axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.IsManhattanAxis">
            <summary>
            Gets or sets a value indicating whether the axis is manhattan axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.AxisPosition3D">
            <summary>
            Gets or sets the actual position of the whole axis.
            Please Note: It is not enabled in horizontal label scenarios.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.AxisDepth">
            <summary>
            Gets or sets the axis depth.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.LabelPlacementProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.LabelPlacement"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.IsIndexedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.IsIndexed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.AggregateFunctionsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.AggregateFunctions"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.Interval"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position">The Position</param>
            <returns>The Label Content</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range">The Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>Actual Interval</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval property changed 
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range">The Range</param>
            <param name="interval">The Interval</param>
            <returns>The Range Padding</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Visible labels for CategoryAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the axis.
            </summary>
            <param name="obj">The Object</param>
            <returns>Cloned Axis</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the interval property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its null-able.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.LabelPlacement">
            <summary>
            Gets or sets a property used to define the axis label placement with respect to tick lines.
            </summary>
            <value>
                <c>LabelPlacement.BetweenTicks</c>, to place label between the ticks;
                <c>LabelPlacement.OnTicks</c>, to place label with tick as center. This is default value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.IsIndexed">
            <summary>
            Gets or sets a value indicating whether to group the Category axis label values and create the segment based on it.
            </summary>
            <value>
                <c>True</c>, to created the segment based on the index value. This is default value.;
                <c>False</c>, to created the segment based on the axis label values.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.AggregateFunctions">
            <summary>
            Gets or sets a property used to aggregate the grouped values.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D">
            <summary>
            Class implementation for DateTimeAxis3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IRangeAxis">
            <summary>
            Interface implementation for IRangeAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis.Range">
            <summary>
            Gets Range property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerIntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerInterval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLineSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLineSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLinesPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLinesPosition"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SmallTicksPoint
            </summary>
            <param name="position">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis.
            </summary>
            <param name="position">The Position</param>
            <param name="interval">The Interval</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the given axis.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.OnSmallTicksPerIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerInterval"/> property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerInterval">
            <summary>
            Gets or sets small tick’s interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLineSize">
            <summary>
            Gets or sets small tick line size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLinesPosition">
            <summary>
            Gets or sets small tick lines position
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.Syncfusion#UI#Xaml#Charts#IRangeAxis#Range">
            <summary>
            Gets the interface range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.RangePadding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.IntervalTypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.IntervalType"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return object value from the given double value
            </summary>
            <param name="position">The Position</param>
            <returns>Return object value from the given double value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval.
            </summary>
            <param name="range">The Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>The Actual Interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates the nice interval.
            </summary>
            <param name="actualRange">The Actual Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the calculated nice interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CalculateActualRange">
            <summary>
            Calculates the actual range for the axis.
            </summary>
            <returns>Returns the calculated actual range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range">The Range</param>
            <param name="interval">The Interval</param>
            <returns>Returns the padded range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the axis.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property Changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation to Create VisibleLabels for DateTime axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the intervals changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the maximum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the minimum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnRangePaddingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the range padding changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnIntervalTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the interval type changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMinMaxChanged">
            <summary>
            Updates the axis when the minimum or maximum value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is null-able property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is null-able property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.RangePadding">
            <summary>
            Gets or sets a value indicating shift to the DateTimeAxis range inside or outside.
            </summary>
            <value>
                <c>Additional</c>, to extend the range,
                <c>Round</c>, to round-off the range,
                <c>None</c>, do nothing,
                <c>Auto</c>, auto range based on type of series.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.IntervalType">
            <summary>
            Gets or sets the type of interval to be displayed in axis.
            </summary>
            <remarks>
                This property hold the values ranges from Year, Months to Milliseconds.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.ActualIntervalType3D">
            <summary>
            Gets or sets the actual interval type for the axis.
            /// </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D">
            <summary>
            Class implementation for LogarithmicAxis3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.LogarithmicBaseProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.LogarithmicBase"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double)"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return the object Value from the given double value.
            </summary>
            <param name="position">The Position</param>
            <returns>Returns the label content.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval.
            </summary>
            <param name="actualRange">The Actual Range</param>
            <param name="availableSize">The Available Range</param>
            <returns>Returns the calculated nice interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="position">The Position</param>
            <param name="logarithmicBase">The Logarithmic Base</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range">The Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the calculated actual range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when maximum changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval changed
            </summary>
            <param name="e">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range.
            </summary>
            <returns>Returns the calculated range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range">The Range</param>
            <param name="interval">The Interval</param>
            <returns>Returns the padded range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the logarithmic axis.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GetRange(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            Get the range if date values contain 0 or double.NaN
            </summary>
            <param name="values">The Values</param>
            <param name="rangeEnd">The Range End</param>
            <returns>Returns the range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnLogarithmicAxisValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the logarithmic base changed. 
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis on minimum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the maximum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the intervals changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMinMaxChanged">
            <summary>
            Updates the axis when minimum and maximum value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateBaseActualRange">
            <summary>
            Calculates the base actual range.
            </summary>
            <returns>Returns the base actual range.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its null-able.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is null-able property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is null-able property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.LogarithmicBase">
            <summary>
            Gets or sets the base for the <c>LogarithmicAxis3D</c>.
            </summary>
            <value>
            <c>2</c> for binary logarithm,
            <c>10</c> for common logarithm.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NumericalAxis3D">
            <summary>
            Class implementation for RangeAxisBase3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.RangePadding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.StartRangeFromZeroProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.StartRangeFromZero"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval.
            </summary>
            <param name="range">The Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the actual interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Minimum property changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval changed
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns>Returns the calculated actual range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range">The Range</param>
            <param name="interval">The Interval</param>
            <returns>Returns the padded range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the <see cref="T:Syncfusion.UI.Xaml.Charts.NumericalAxis3D"/>.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.NumericalAxis3D"/> when anyone of it's property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the minimum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called Maximum property changed
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when the intervals changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMinMaxChanged">
            <summary>
            Updates the axis when minimum or maximum value changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its null-able.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is null-able property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is null-able property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
            <summary>
            Gets or sets Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.RangePadding">
            <summary>
            Gets or sets property used to shift the numeric range inside or outside.
            </summary>
            <value>
                <c>Additional</c>, to extend the range,
                <c>Round</c>, to round-off the range,
                <c>None</c>, do nothing,
                <c>Auto</c>, auto range based on type of series.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.StartRangeFromZero">
            <summary>
            Gets or sets a value indicating whether to start range from zero when range calculated automatically.
            </summary>
            <value>
                <c>True</c> will reset the range starting from zero.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.ActualRangePadding">
            <summary>
                Gets a NumericalPadding that describes the padding of a NumericalAxis3D.
            </summary>
            <remarks>
                The NumericalPadding that is used to set the padding of the NumericalAxis3D. 
                The default is <see cref="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.Auto"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D">
            <summary>
            Class implementation for TimeSpanAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.MaximumProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Minimum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return Object from the given double value. 
            </summary>
            <param name="position">The Position</param>
            <returns>The label content.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="range">The Range</param>
            <param name="availableSize">The Available Size</param>
            <returns>The calculated actual interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed 
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Method implementation for Minimum property changed
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range.
            </summary>
            <returns>Returns the actual range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval.
            </summary>
            <param name="range">The Range</param>
            <param name="interval">The Interval</param>
            <returns>Returns the padded range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.CloneAxis(System.Windows.DependencyObject)">
            <summary>
            Clones the <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/>.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/> on minimum property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/> on maximum property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/> on interval value changed.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMinMaxChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D"/> when the minimum or maximum value changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its null-able.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Minimum">
            <summary>
            Gets or sets the minimum value for the timespan axis range. This is null-able property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is null-able property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSeries3D">
            <summary>
            Class implementation for AreaSeries3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyDataSeries3D">
            <summary>
            Class implementation for <see cref="T:Syncfusion.UI.Xaml.Charts.XyDataSeries3D"/> 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CartesianSeries3D">
            <summary>
            Class implementation for CartesianSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D">
            <summary>
            Class implementation for ChartSeries3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase">
            <summary>
            Represents a base class for all the series types in chart.
            </summary>
            <remarks>
            Data points for ChartSeries would be populated <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/> from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/>property. Specify the binding paths for X-Values and Y-Values. The number of Y-Values may vary depending on the type of series. For e.g LineSeries requires only one y-value, whereas CandleSeries requires four y-values to plot a point.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SpacingProperty">
            <summary>
            Gets the value for width of a segment and value ranges from 0 to 1. This is attached property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TooltipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TooltipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowTooltipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowTooltip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ListenPropertyChangeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ListenPropertyChange"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSeriesVisibleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSeriesVisible"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPathProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortByProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortBy"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortDataProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortData"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.PaletteProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSourceProperty">
            <summary>
             Identifies the ItemsSource dependency property.
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.InteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Label"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIcon"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegendProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegend"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SegmentColorPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SegmentColorPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EnableAnimationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EnableAnimation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AnimationDurationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AnimationDuration"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPointsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualTrackballLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualTrackballLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Segments">
            <summary>
            segments variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Timer">
            <summary>
            Timer to handle the show duration of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.InitialDelayTimer">
            <summary>
            Timer to handle the initial delay of showing the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ChartTransformer">
            <summary>
            ChartTransformer variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.YPaths">
            <summary>
            YPaths variable declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.#ctor">
            <summary>
            Called when instance created for ChartSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetSpacing(System.Windows.DependencyObject)">
            <summary>
            Gets the Spacing for the SideBySide segments.
            </summary>
            <param name="obj">ChartSeries object</param>
            <returns>returns a double value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSpacing(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the Spacing for the SideBySide segments.
            </summary>
            <param name="obj">ChartSeries object</param>
            <param name="value">The value to set for calcaulting the segment width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CreateEmptyPointSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@)">
            <summary>
            Method called when creating emptypoint segments for series.
            </summary>
            <param name="YValues">YValues</param>
            <param name="yValList">YValues list</param>
            <param name="xValList">XValues list</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            An abstract method which will called over each time in its child class to update an segment.
            </summary>
            <param name="index">The index of the segment</param>
            <param name="action">The collection changed action which raises the notification</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetAvailableSize">
            <summary>
            Gets the available size of Chart.
            </summary>
            <returns>returns size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SuspendNotification">
            <summary>
            Suspends the series from updating the series data till ResumeNotification is called. 
            This is specifically used when we need to append collection of datas.
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ResumeNotification">
            <summary>
            Processes the data that is added to data source after SuspendNotification.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Invalidate">
            <summary>
            Invalidates the Series. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetSideBySideInfo(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the value of side by side position for a series.
            </summary>
            <param name="currentseries">ChartSeries.</param>
            <returns>The DoubleRange side by side Info</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Clone">
            <summary>
            Returns the instance of this series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetPropertyValue(System.Object,System.String[],System.Object)">
            <summary>
            Method implementation to set the updated data to the current object
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <param name="data">updated value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedSegmentsIndexes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the selection when selected index collection changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.InitialDelayTimer_Tick(System.Object,System.Object)">
            <summary>
             Timer Tick Handler for initial delay in opening the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AddTooltip">
            <summary>
            Calculate and draw tooltip based on Position of Tooltip.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetDataPointPosition(Syncfusion.UI.Xaml.Charts.ChartTooltip)">
            <summary>
            Calculate the position of the tooltip based on ChartSegment.
            </summary>
            <param name="tooltip">Instance of ChartTooltip</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AlignTooltip(System.Windows.Size,System.Windows.Point,Syncfusion.UI.Xaml.Charts.HorizontalPosition@,Syncfusion.UI.Xaml.Charts.VerticalPosition@)">
            <summary>
            Calculate the position and orientation of Tooltip nose.
            </summary>
            <param name="size">DesiredSize of ChartTooltip</param>
            <param name="position">Location of Tooltip whether based on Mouse or DataPoint</param>
            <param name="horizontal">Orientation of Tooltip nose</param>
            <param name="vertical">Orientation of Tooltip nose</param>
            <returns>returns the tooltip aligned point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GenerateTooltipPolygon(System.Windows.Controls.ContentControl)">
            <summary>
            Set the polygon points.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RemoveTooltip">
            <summary>
            Remove tooltip from adorning canvas
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateTooltip(System.Object)">
            <summary>
            Add and Update the Tooltip
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetDataPoint(System.Int32)">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSelectionChangedEventArgs">
            <summary>
            Set SelectionChanged event args
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.FindNearestFinancialChartPoint(Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator,System.Windows.Point,System.Double@,System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Double}@)">
            <summary>
            Finds the nearest point in technical indicator relative to the mouse point/touch position.
            </summary>
            <param name="technicalIndicator">Represents the indicator to which nearest point has to be calculated.</param>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y1">Series y-values of the nearest point</param>
            <param name="y2">Indicator y-values of the nearest point</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex">Used to indicate current selected index</param>
            <param name="oldIndex">Used to indicate previous selected index</param>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the SfChart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ResetAdornmentAnimationState">
            WPF-25124 Animation not working properly when resize the window.
            <summary>
            This method is used to reset the Adornment label animation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateSeriesTooltip(System.Object)">
            <summary>
            Add and Update the series Tooltip
            </summary>
            <param name="customTag"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSelectionChangingEventArgs(System.Int32,System.Int32)">
            <summary>
            Method used to set SelectionChangingEventArgs values
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RemoveSegments">
            <summary>
            Removes the Segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CalculateSideBySidePositions(System.Boolean)">
            <summary>
            calculates the side-by-side position for all applicable series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetArrayPropertyValue(System.Object,System.String[])">
            <summary>
            Method for getting the property values by the property name with its index
            </summary>
            <param name="parentObj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetPropertyValue(System.Object,System.String[])">
            <summary>
            Method for get the property values by the property name
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetTooltipTemplate">
            <summary>
            Get the Default Template for Tooltip
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.HookPropertyChangedEvent(System.Boolean,System.Object)">
            <summary>
            Method to hook the PropertyChange event for individual data point
            </summary>
            <param name="needPropertyChange"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CalculateHittestRect(System.Windows.Point,System.Int32@,System.Int32@,System.Windows.Rect@)">
            <summary>
            Method used to calculate the rect on mouse point to get hittest data point. 
            </summary>
            <param name="mousePos"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateAdornmentSelection(System.Int32)">
            <summary>
            Method used to select the adornment in given data point
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when the chart mouse up.
            </summary>
            <param name="source">source</param>
            <param name="position">position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when the chart mouse down.
            </summary>
            <param name="source">source</param>
            <param name="position">position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size.
            </summary>
            <param name="size">Size of the panel.</param>
            <param name="create">Used to specify whether to create the charttransform for not.</param>
            <returns>returns IChartTransformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GeneratePoints">
            <summary>
            method declaration for generatepoints in Chartseries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetXValues">
            <summary>
            Return collection of double values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetTooltipDuration">
            <summary>
            Set ToolTip duration.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsTooltipAvailable(System.Windows.Controls.Canvas)">
            <summary>
            Returns the tooltip is available or not in this series.
            </summary>
            <param name="canvas">canvas</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetDoubleAnimation(Syncfusion.UI.Xaml.Charts.ChartTooltip)">
            <summary>
            Set animation for tooltip.
            </summary>
            <param name="chartTooltip">ChartTooltip</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetIndividualPoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for generate points to given index.
            </summary>
            <param name="index">index</param>
            <param name="obj">object</param>
            <param name="replace">replace the data or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when XBindingPath or YBindingPath properties changed.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data</param>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <see cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetIndividualDataTablePoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for Set points to given index for data table.
            </summary>
            <param name="index">index</param>
            <param name="obj">object</param>
            <param name="replace">replace the data point or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Invoked when ItemsSource property changed.
            </summary>
            <param name="oldValue">Old itemssource collection.</param>
            <param name="newValue">New itemssource collection.</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ClearUnUsedSegments(System.Int32)">
            <summary>
            Method implementation for clear unused segments.
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of this series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when pointer or mouse pressed.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when pointer or mouse down.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse or pointer move to show the tooltip for series.
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer leave from segment.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Position(System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartTooltip@)">
            <summary>
            Set the Horizontal and Vertical Alignment for Tooltip.
            </summary>
            <param name="mousePos">Current Position</param>
            <param name="tooltip">Tooltip instance</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateArea">
            <summary>
            Method implementation for UpdateArea.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetPreviousSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return the previous series.
            </summary>
            <param name="series">ChartSeriesBase</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GeneratePoints(System.String[],System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Method used to generate data points for ChartSeries. 
            </summary>
            <param name="yPaths">Y paths</param>
            <param name="yValueLists">YValues list</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnDataSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.FadeInAnimation(Syncfusion.UI.Xaml.Charts.ChartTooltip@)">
            <summary>
            set fade animation for initial show delay
            </summary>
            <param name="chartTooltip"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Timer_Tick(System.Object,System.Object)">
            <summary>
            Timer Tick Handler for closing the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortChartPoints">
            <summary>
            Sorts the Chart Points 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``2(System.Collections.Generic.List{System.Tuple{``0,``1}})">
            <summary>
            Sort the ActualXValues and ActualYValues 
            </summary>
            <typeparam name="T">XValues</typeparam>
            <typeparam name="T1">YValues</typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``3(System.Collections.Generic.List{System.Tuple{``0,``1,``2}})">
            <summary>
            Sort the ActualXValues and ActualYValues 
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``5(System.Collections.Generic.List{System.Tuple{``0,``1,``2,``3,``4}})">
            <summary>
            Sort the ActualXValues and ActualYValues
            </summary>
            <typeparam name="T">XValues</typeparam>
            <typeparam name="T1">Y0Values</typeparam>
            <typeparam name="T2">Y1Values</typeparam>
            <typeparam name="T3">Y2Values</typeparam>
            <typeparam name="T4">Y3Values</typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UnHookPropertyChanged(System.Object)">
            <summary>
            Method to unhook the collection change event for the given collection
            </summary>      
            <param name="dataSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UnHookPropertyChangedEvent(System.Boolean,System.Object)">
            <summary>
            Method to unhook the PropertyChange event for individual data point
            </summary>
            <param name="needPropertyChange"></param>
            <param name="obj"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.PropertyChanged">
            <summary>
            Event correspond to property value changed. It invokes when the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/> properties changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValue">
            <summary>
            Gets or sets a value that determines how to calculate value for empty point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyle">
            <summary>
            Gets or sets EmptyPointStyle for an empty point. It determines how to differentiate empty point from other data points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplate">
            <summary>
            Gets or sets DataTemplate to be used when EmptyPointStyle is set to Symbol/ SymbolAndInterior. 
            By default, an ellipse will be displayed as symbol.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints">
            <summary>
            Gets or sets a value indicating whether to show empty points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior">
            <summary>
            Gets or sets interior color for empty point.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.DataCount">
            <summary>
            Gets the number of points given as input.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortData">
            <summary>
            Gets or sets a value indicating whether to sort the datas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirection">
            <summary>
            Gets or sets the Sorting Direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortBy">
            <summary>
            Gets or sets SortingAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TooltipTemplate">
            <summary>
            Gets or sets the custom template for Tooltip.
            </summary>
            <value>
            This accepts a <see cref="T:System.Windows.DataTemplate"/>.
            </value>
            <value>
            </value>
            <example>
            <code language="XAML">
              &lt;syncfusion:ColumnSeries ShowTooltip="True" ItemsSource="{Binding Demands} syncfusion:ChartTooltip.VerticalAlignment="Top" XBindingPath="Demand" YBindingPath="Year2010"&gt;
                 &lt;syncfusion:ColumnSeries.TooltipTemplate&gt;
                   &lt;DataTemplate&gt;
                       &lt;Border Background = "DarkGreen" CornerRadius="5" BorderThickness="2" BorderBrush="Black" Width="50" Height="30"&gt;
                           &lt;TextBlock Text = "{Binding Item.Year2010}" Foreground="White" FontWeight="Bold"  HorizontalAlignment="Center" VerticalAlignment="Center"/&gt;
                       &lt;/Border&gt;
                   &lt;/DataTemplate&gt;
                 &lt;/syncfusion:ColumnSeries.TooltipTemplate&gt;
              &lt;/syncfusion:ColumnSeries&gt;
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowTooltip">
            <summary>
            Gets or sets a value indicating whether to show or hide the tooltip for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ListenPropertyChange">
            <summary>
            Gets or sets a value that indicates whether to listen property change or not. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Adornments">
            <summary>
            Gets the adornments collection.
            </summary>
            <value>The adornments.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibleAdornments">
            <summary>
            Gets the adornments for the visible segments.
            </summary>
            <value>The adornments.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSeriesVisible">
            <summary>
            Gets or sets a value indicating whether is series visible.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette">
            <summary>
            Gets or sets ChartPalette for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource">
            <summary>
            Gets or sets a collection of data points used to generate Chart.
            </summary>
            <value>The ItemsSource value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplate">
            <summary>
            Gets or sets DataTemplate used to display label, when ChartTrackballBehavior is used.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            <code language="XAML">
              &lt;syncfusion:ColumnSeries ItemsSource="{Binding Demands} XBindingPath="Demand" YBindingPath="Year2010"&gt;
                 &lt;syncfusion:ColumnSeries.TrackBallLabelTemplate&gt;
                   &lt;DataTemplate&gt;
                       &lt;Border Background = "DarkGreen" CornerRadius="5" BorderThickness="2" BorderBrush="Black" Width="50" Height="30"&gt;
                           &lt;TextBlock Text = "{Binding Item.Year2010}" Foreground="White" FontWeight="Bold"  HorizontalAlignment="Center" VerticalAlignment="Center"/&gt;
                       &lt;/Border&gt;
                   &lt;/DataTemplate&gt;
                 &lt;/syncfusion:ColumnSeries.TrackBallLabelTemplate&gt;
              &lt;/syncfusion:ColumnSeries&gt;
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior">
            <summary>
            Gets or sets the brush to paint the interior of the series.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Label">
            <summary>
            Gets or sets the label that will be displayed in the associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIcon">
            <summary>
            Gets or sets ChartLegendIcon to be displayed in associated legend item.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLegendIcon"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplate">
            <summary>
            Gets or sets DataTemplate for legend icon.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegend">
            <summary>
            Gets or sets a value that determines whether to create a legend item for this series. 
            By default, legend item will be visible for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.Visibility"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesSelectionBrush">
            <summary>
            Gets or sets the brush to select the series.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModel">
            <summary>
            Gets or sets the color models for all series in the chart.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartColorModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath">
            <summary>
            Gets or sets the property path of x-data in ItemsSource to render the chart series. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SegmentColorPath">
            <summary>
            Gets or sets the property binding path for segment color. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EnableAnimation">
            <summary>
            Gets or sets a value indicating whether to animate the chart series on loading and whenever ItemsSource change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            <see cref="T:System.TimeSpan"/>
            </value>
            <example>
            <code language="XAML">
              &lt;syncfusion:ColumnSeries ItemsSource="{Binding Demands} AnimationDuration="00:00:03" XBindingPath="Demand" YBindingPath="Year2010"&gt;
              &lt;/syncfusion:ColumnSeries&gt;
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XValues">
            <summary>
            Gets or sets the x values in an unsorted order or in the order the data has been added to series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesYValues">
            <summary>
            Gets or sets the y values in an unsorted order or in the order the data has been added to series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualSeriesYValues">
            <summary>
            Gets or sets the sorted values, if the IsSortData is true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsMultipleYPathRequired">
            <summary>
            Gets or sets a value indicating whether multipleYValues is needed,will be set internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualTrackballLabelTemplate">
            <summary>
            Gets or sets internal DataTemplate used to display label, when ChartTrackballBehavior is used.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.NearestSegmentIndex">
            <summary>
            Gets or sets the nearest segment index corresponding to the mouse point when interactive behaviors used.
            Note: This get's updated only when FindNearestChartPoint() method is called for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
            <value>
            Returns the bool value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
            <value>
            Returns the bool value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsAreaTypeSeries">
            <summary>
            Gets the value which confirms whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsBitmapSeries">
            <summary>
            Gets whether this series is a bitmap series or not.
            </summary>
            <value>
            Returns the bool value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsColorPathSeries">
            <summary>
            This indicates whether its a colorpath series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsIndexed">
            <summary>
            Gets or sets a value indicating whether to treat x values as categories. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorValues">
            <summary>
            Gets or sets a series color values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualXValues">
            <summary>
            Gets or sets the sorted values, if the IsSortData is true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedSegmentsIndexes">
            <summary>
            Gets or sets the selected segments indexes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedSegment">
            <summary>
            Returns the corresponding series selected segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualXAxis">
            <summary>
            Gets actual series X-axis.
            </summary>
            <remarks>
            Gets actual XAxis for series with respect to chart type and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsActualTransposed"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualYAxis">
            <summary>
            Gets actual series Y-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsStacked">
            <summary>
            Gets a value indicating whether this series is a stacked series.
            </summary>
            <value><c>true</c> if the series is one of stacked series; otherwise, <c>false</c>. The default value is <c>true</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetReflectedProperty">
            <summary>
            References to method that reflects the value from the object
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">Path name</param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfoProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfo"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectionModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectionMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get selection brush for series selection.
            </summary>
            <param name="series">The Series</param>
            <returns>The series selection brush.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.GetZSideBySideInfo(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the value of side by side position for a series.
            </summary>
            <param name="currentseries">The ChartSeries.</param>
            <returns>The DoubleRange side by side Info</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedSegmentsIndexes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the chart when the selected segment index collection changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnResetSegment(System.Int32)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D"/> when the segment is reset.
            </summary>
            <param name="index">The Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raises the selection changing event.
            </summary>
            <param name="newIndex">The New Index</param>
            <param name="oldIndex">The Old Index</param>
            <returns>Returns a <see cref="T:System.Boolean"/> property to indicate the argument cancel.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnMouseMoveSelection(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Updates the series when mouse moved.
            </summary>
            <param name="element">The Element</param>
            <param name="pos">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnMouseDownSelection(System.Int32)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D"/> on mouse down selection.
            </summary>
            <param name="currentIndex">The Current Selected Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.UpdateOnSeriesBoundChanged(System.Windows.Size)">
            <summary>
            Updates the on series bound changed.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.CalculateSegments">
            <summary>
            Calculates the segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndex"/> <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment3D"/> 
            and trigger chart selection event.
            </summary>
            <param name="newIndex">The New Index</param>
            <param name="oldIndex">The Old Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse down].
            </summary>
            <param name="source">The source.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse up].
            </summary>
            <param name="source">The source.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse move].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseLeave(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse leave].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) 
            call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. 
            For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.CreateAdornment(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series">The series.</param>
            <param name="xVal">The x value.</param>
            <param name="yVal">The y value.</param>
            <param name="xPos">The x position.</param>
            <param name="yPos">The y position.</param>
            <param name="startDepth">The start depth.</param>
            <returns>Returns the created adornment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AddAdornments(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Adds the adornment to the adornments collection.
            </summary>
            <param name="xValue">The X Value</param>
            <param name="yValue">The Y Value</param>
            <param name="index">The Index</param>
            <param name="depth">The Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AddColumnAdornments(System.Double[])">
            <summary>
            Method implementation for Add ColumnAdornments in Chart.
            </summary>
            <param name="values">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AddAdornmentAtXY(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Method implementation for Add Adornments at XY
            </summary>
            <param name="x">The X Value</param>
            <param name="y">The Y Value</param>
            <param name="pointindex">The Point Index</param>
            <param name="startDepth">The Start Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue">The Old Value</param>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.ClearUnUsedAdornments(System.Int32)">
            <summary>
            Method implementation for Clear Unused Adornments
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>A DependencyObject.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSegmentSelectionBrush(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment selection color for the series.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnAdornmentsInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series adornments when the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfo"/> changed.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSelectedIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when selected index changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <example>
                <code language="C#">
                    series.SegmentSelectionBrush = new SolidColorBrush(Colors.Red);
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfo">
            <summary>
            <para>Gets or sets data labels for the series.</para> <para>This allows us to customize the appearance of a data point 
            by displaying labels, shapes and connector lines.</para>
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo3D"/> value.
            </value>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ColumnSeries3D.AdornmentsInfo&gt;
                        &lt;syncfusion:ChartAdornmentInfo3D ShowMarker="True" Symbol="Ellipse"&gt;
                    &lt;/syncfusion:ColumnSeries3D.AdornmentsInfo&gt;
                </code>
                <code language="C#">
                    ChartAdornmentInfo3D chartAdornmentInfo3D = new ChartAdornmentInfo3D();
                    chartAdornmentInfo3D.ShowMarker = true;
                    chartAdornmentInfo3D.Symbol = ChartSymbol.Ellipse;
                    ColumnSeries3D columnSeries3D = new ColumnSeries3D();
                    columnSeries3D.AdornmentsInfo = chartAdornmentInfo3D;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectionMode">
             <summary>
             Gets or sets the property which defines the way of selection.
             </summary>
             <value>
            <c>SelectionMode.MouseClick</c> will select the segment(s) using mouse or pointer click.
            <c>SelectionMode.MouseMove</c> will select the segment while hovering.
             </value>
            <remarks>
             Note : With <see cref="T:Syncfusion.UI.Xaml.Charts.SelectionStyle"/> as Multiple, MouseMove will not support.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.PrevSelectedIndex">
            <summary>
            Gets or sets the previous selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AnimationStoryboard">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard"/> for the series animation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.Area">
            <summary>
            Gets or sets the chart area <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart3D"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns <see cref="T:System.Collections.Generic.List`1"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedSegment">
            <summary>
            Gets the selected segment in this series, when we enable the single selection.
            </summary>
            <returns>
            It returns <c>ChartSegment</c>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISupportAxes3D">
            <summary>
            Interface implementation for support axis for 3D chart
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISupportAxes">
            <summary>
            Interface implementation for ISupportAxes
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.XRange">
            <summary>
            Gets XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.YRange">
            <summary>
            Gets YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.ActualXAxis">
            <summary>
            Gets ActualXAxis property.
            </summary>
            <value>It takes the <c>ChartAxis</c> value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.ActualYAxis">
            <summary>
            Gets ActualYAxis property.
            </summary>
            <value>It takes the <c>ChartAxis</c> value.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.IsTransposedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.IsTransposed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YAxis"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.UpdateRange">
            <summary>
            Updates the range of the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for YAxis Changed 
            </summary>
            <param name="oldAxis">The Old Axis</param>
            <param name="newAxis">The New Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for XAxis changed
            </summary>
            <param name="oldAxis">The Old Axis</param>
            <param name="newAxis">The New Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnTransposeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.IsTransposed"/> property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnXAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when x axis changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnYAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when the y axis changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnVisibleRangeChanged(System.Object,Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Updates the series when visible range changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XRange">
            <summary>
            Gets the x-axis range. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YRange">
            <summary>
            Gets the y-axis range. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.IsTransposed">
            <summary>
            Gets or sets a value indicating whether to change the orientation of the series.
            </summary>
            <value>
                <c>True</c> exchanges the horizontal axis to vertical and vice versa. 
                <c>False</c> is the default behavior.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualXAxis">
            <summary>
            Gets the actual x-axis instance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualYAxis">
            <summary>
            Gets the actual y-axis instance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XAxis">
            <summary>
            Gets or sets the additional x-axis(horizontal) for the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YAxis">
            <summary>
            Gets or sets the additional y-axis(vertical) for the series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YBindingPathProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YBindingPath"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.XyDataSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.GetPointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Method used to get the chart data at an given point
            </summary>
            <param name="axis">The Axis</param>
            <param name="point">The Point</param>
            <returns>The point to value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.OnLabelPropertyChanged">
            <summary>
            Updates the series on label property changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.GetSegmentDepth(System.Double)">
            <summary>
            Calculates the segment depth.
            </summary>
            <param name="depth">The Depth</param>
            <returns>Returns the calculated segment depth.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.ValidateYValues">
            <summary>
            Validate the data points for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Re-validate the data points for segment implementation.
            </summary>
            <param name="emptyPointIndex">Empty Point Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue">The Old Value</param>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
            <cref>E:BindingPathChanged</cref>
            </see>
            event.
            </summary>
            <param name="args">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.OnYBindingPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series on y binding path changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YBindingPath">
            <summary>
            Gets or sets the binding path for y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YValues">
            <summary>
            Gets or sets YValues
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.CreateSegments">
            <summary>
            Creates the segments of AreaSeries3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.CreateEmptyPointSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@)">
            <summary>
            Creates the empty segments.
            </summary>
            <param name="yValues">The y values</param>
            <param name="yValList">The y value list</param>
            <param name="xValList">The x value list</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.SelectedSegmentsIndexes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the series when selected segment index collection changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.GetAnimationIsActive">
            <summary>
            Checks the animation active state.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean"/> property which indicates whether animation is active.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.Animate">
            <summary>
            Animates the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries3D"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="point">The Mouse Position</param>
            <returns>Returns the data point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Updates the series when mouse moved.
            </summary>
            <param name="source">The Source</param>
            <param name="pos">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selected index chart segment and trigger chart selection event
            </summary>
            <param name="newIndex">The New Index</param>
            <param name="oldIndex">The Old Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.UpdateToolTip(System.Object,System.Windows.Point)">
            <summary>
            Updates the tooltip for the series.
            </summary>
            <param name="source">The Source</param>
            <param name="pos">The Position</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.Segment">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment3D"/> of this series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.IsAnimated">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries3D"/> is animated.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.IsAreaTypeSeries">
            <summary>
            This property used to confirm whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns <see cref="T:System.Collections.Generic.List`1"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries3D.SelectedSegment">
            <summary>
            Gets the selected segment in this series, when we enable the single selection.
            </summary>
            <returns>
            It returns <c>ChartSegment</c>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSeries3D">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries3D"/> displays its data points using a set of horizontal bars.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D">
            <summary>
            ColumnSeries displays its data points using a set of vertical bars.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D">
            <summary>
            Class implementation for <see cref="T:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D"/> 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GenerateDataTablePoints(System.String[],System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Generates the data table points.
            </summary>
            <param name="yPaths">The Y Paths</param>
            <param name="yLists">The Y Lists</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GeneratePropertyPoints(System.String[],System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Generates the property points
            </summary>
            <param name="yPaths">The Y Paths</param>
            <param name="yLists">The Y Lists</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GenerateComplexPropertyPoints(System.String[],System.Collections.Generic.IList{System.Double}[],Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetReflectedProperty)">
            <summary>
            Generates the complex property points
            </summary>
            <param name="yPaths">The Y Paths</param>
            <param name="yLists">The Y Lists</param>
            <param name="getPropertyValue">The Reflected Property Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GetZAdornmentAnglePosition(System.Double,System.Double)">
            <summary>
            Gets the adornment z position on rotation. 
            </summary>
            <param name="start">The Start Angle</param>
            <param name="end">The End Angle</param>
            <returns>Returns the z position to place the adornments.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GetZAdornmentAnglePosition(System.Double,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Gets the adornment z position on rotation. 
            </summary>
            <param name="z">The Z Value</param>
            <param name="zsbsInfo">The Z Axis Side By Side Information</param>
            <returns>Returns the z position to place the adornments.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GetXAdornmentAnglePosition(System.Double,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Gets the adornment x position on rotation.
            </summary>
            <param name="x">The X Value</param>
            <param name="sbsInfo">Side By Side Information</param>
            <returns>Returns the x position to place the adornments.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.GetZValues">
            <summary>
            Gets the z values.
            </summary>
            <returns>Returns the z values.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Updates the series on data source changed.
            </summary>
            <param name="oldValue">The Old Value</param>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.SetIndividualDataTablePoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for Set points to given index for data table
            </summary>
            <param name="index">The Index</param>
            <param name="obj">The Object</param>
            <param name="replace">The Replace Checker</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.SetIndividualPoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for Set points to given index
            </summary>
            <param name="index">The Index</param>
            <param name="obj">The Object</param>
            <param name="replace">Is Replace Required</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series on binding path changed.
            </summary>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.OnBindingPathZChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series on z binding path changed.
            </summary>
            <param name="obj">The Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZRange">
            <summary>
            Gets the z-axis range. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZBindingPath">
            <summary>
            Gets or sets the binding path for z axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZComplexPaths">
            <summary>
            Gets or sets the z complex paths.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZSideBySideInfoRangePad">
            <summary>
            Gets or sets the z axis side by side information.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZAxisValueType">
            <summary>
            Gets or sets the z axis value type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.IsIndexedZAxis">
            <summary>
            Gets a value indicating whether to treat z values as categories. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ActualZAxis">
            <summary>
            Gets the actual z axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ActualZValues">
            <summary>
            Gets or sets the sorted values, if the IsSortData is true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyzDataSeries3D.ZValues">
            <summary>
            Gets or sets the x values in an unsorted order or in the order the data has been added to series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISegmentSpacing">
            <summary>
            Defines members and methods necessary to customize segment in a <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ISegmentSpacing.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
             Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Segment spacing value.</param>
             <param name="Right">Segment right value.</param>
             <param name="Left">Segment left value.</param>
             <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISegmentSpacing.SegmentSpacing">
            <summary>
            Gets or sets SegmentSpacing property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.SegmentSpacing"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.CreateSegments">
            <summary>
            Creates the segments of ColumnSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the segment spacing.
            </summary>
            <param name="spacing">The Spacing</param>
            <param name="right">The Right</param>
            <param name="left">The Left</param>
            <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.OnTransposeChanged(System.Boolean)">
            <summary>
            Updates the series when transpose changed.
            </summary>
            <param name="val">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.GetAnimationIsActive">
            <summary>
            Gets the animation is active.
            </summary>
            <returns>Returns the animation state whether it is active or not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.Animate">
            <summary>
            Animates the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the segment spacing.
            </summary>
            <param name="spacing">The Spacing.</param>
            <param name="right">The Right Position.</param>
            <param name="left">The Left Position.</param>
            <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.OnSegmentSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segments when segment spacing value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries3D.OnTransposeChanged(System.Boolean)">
            <summary>
            Updates the series when transpose changed.
            </summary>
            <param name="val">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D">
            <summary>
            Class implementation for CircularSeriesBase3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ConnectorTypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ConnectorType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EnableSmartLabelsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EnableSmartLabels"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.CircleCoefficientProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.CircleCoefficient"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.LabelPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.LabelPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YBindingPathProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeRadiusProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeRadius"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeAllProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeAll"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.StartAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.StartAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EndAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EndAngle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ValidateYValues">
            <summary>
            Validate the data points for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GetCircularSeriesCount">
            <summary>
            Gets the circular series count.
            </summary>
            <returns>Gets the visible series count.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GetPieSeriesIndex">
            <summary>
            Gets the pie series index.
            </summary>
            <returns>Returns series index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the data points for segment implementation.
            </summary>
            <param name="emptyPointIndex">The Empty Points</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GetActualCenter(System.Windows.Point,System.Double)">
            <summary>
            Gets the actual center of the series.
            </summary>
            <param name="centerPoint">The Center Point</param>
            <param name="radius">The Radius</param>
            <returns>Returns the actual center point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.DegreeToRadianConverter(System.Double)">
            <summary>
            Degrees to radian converter.
            </summary>
            <param name="degree">The degree.</param>
            <returns>Returns the radian.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GeneratePoints">
            <summary>
            Method implementation for Generate points for Indicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property get changed
            </summary>
            <param name="oldValue">The Old Value</param>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
            <cref>E:BindingPathChanged</cref>
            </see>
            event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnCircleCoefficientChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when the circle coefficient changes.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Dependency Object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnYPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when the y path changes.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when it's properties changes.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnAngleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when the start or end angle changes.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GetMinMaxValue(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            Gets the minimum and maximum value.
            </summary>
            <param name="point1">The First Point</param>
            <param name="point2">The Second Point</param>
            <param name="degree">The Degree</param>
            <returns>Returns the minimum and maximum value.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ConnectorType">
            <summary>
            Gets or sets the type of line to be use for connecting data labels and segments.
            </summary>
            <value>
            <c>ConnectorMode.Line</c> will draw straight line.
            <c>ConnectorMode.Bezier</c> will draw bezier curve.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EnableSmartLabels">
            <summary>
            Gets or sets a value indicating whether to enable the smart label placement to avoid data label overlapping.
            </summary>
            <value>
              <c>true</c> to avoid overlapping;
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.CircleCoefficient">
            <summary>
            Gets or sets the coefficient defines the ratio of the series size with respect to chart area. 
            </summary>
            <remarks>
                This will be useful for reducing the white spaces around the series.
            </remarks>
            <value>
            Gets or sets the double value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.LabelPosition">
            <summary>
            Gets or sets the data labels position of the circular series.
            </summary>
            <value>
                <c>CircularSeriesLabelPosition.Inside</c>, adornment labels will be placed inside over the series.
                <c>CircularSeriesLabelPosition.Outside</c>, adornment labels will be  placed just outside over the series.
                <c>CircularSeriesLabelPosition.OutsideExtend</c>, adornment labels will be placed outside over the series at a certain distance.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YBindingPath">
            <summary>
            Gets or sets the binding path for y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeRadius">
            <summary>
            Gets or sets the radial distance for the exploded segment from center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeIndex">
            <summary>
            Gets or sets the index of data point (or segment) to be explode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeAll">
            <summary>
            Gets or sets a value indicating whether to explode all the pie slices (segments).
            </summary>
            <value>
                <c>True</c> will explode all the segments.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.StartAngle">
            <summary>
            Gets or sets the start angle for drawing the circular series.
            </summary>
            <value>
            The double value ranges from 0 to 360 degree.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EndAngle">
            <summary>
            Gets or sets the end angle for drawing the circular series.
            </summary>
            <value>
            The double value ranges from 0 to 360 degree.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.InternalCircleCoefficient">
            <summary>
            Gets or sets the internal circle co-efficient.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.Center">
            <summary>
            Gets or sets the center of the circular series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YValues">
            <summary>
            Gets or sets the YValues.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D">
            <summary>
            Class implementation for DoughnutSeries3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSeries3D">
            <summary>
            Class implementation for PieSeries3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSeries3D.ExplodeOnMouseClickProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSeries3D.ExplodeOnMouseClick"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.UpdateOnSeriesBoundChanged(System.Windows.Size)">
            <summary>
            Updates the series on bounds changed.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.UpdateEmptyPointSegments(System.Collections.Generic.List{System.Double},System.Boolean)">
            <summary>
            Updates the empty points.
            </summary>
            <param name="xValues">The X Values</param>
            <param name="isSidebySideSeries">Is Side By Side Series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.GetAnimationIsActive">
            <summary>
            Gets the animation active state.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean"/> value indicating whether the animation is active.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.Animate">
            <summary>
            Animates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/> value based upon the given size.
            </summary>
            <param name="size">The Size</param>
            <param name="create">The Create Indication</param>
            <returns>Returns the created chart transformer.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse move].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse up].
            </summary>
            <param name="source">The source.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse down].
            </summary>
            <param name="source">The source.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateAdornment(Syncfusion.UI.Xaml.Charts.ChartSeries3D,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series">The series.</param>
            <param name="xVal">The x value.</param>
            <param name="yVal">The y value.</param>
            <param name="angle">The angle.</param>
            <param name="radius">The radius.</param>
            <param name="startDepth">The start depth.</param>
            <returns>Returns the created adornment</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreatePoints">
            <summary>
            Creates the points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Updates the series when data source changed.
            </summary>
            <param name="oldValue">The Old Value</param>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.AddPieAdornments(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Adds the pie adornments.
            </summary>
            <param name="x">The X Value</param>
            <param name="y">The Y Value</param>
            <param name="startAngle">The Start Angle</param>
            <param name="endAngle">The End Angle</param>
            <param name="index">The Index</param>
            <param name="radius">The Radius</param>
            <param name="startDepth">The Start Depth</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries3D.ExplodeOnMouseClick">
            <summary>
            Gets or sets a value indicating whether to enable the segment explode on mouse click.
            </summary>
            <value>
            <c>true</c> to enable the explode on mouse click.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries3D.InnerRadius">
            <summary>
            Gets or sets the inner radius of the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries3D.Radius">
            <summary>
            Gets or sets the radius of the series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.DoughnutCoefficientProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.DoughnutCoefficient"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.GetDoughnutHoleSize(System.Windows.DependencyObject)">
            <summary>
            Gets the doughnut hole size.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the doughnut hole size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.SetDoughnutHoleSize(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the doughnut hole size.
            </summary>
            <param name="obj">The Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.CreatePoints">
            <summary>
            Creates the point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.OnDoughnutCoefficientChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when doughnut coefficient changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.OnDoughnutHoleSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the doughnut series when doughnut hole size changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.DoughnutCoefficient">
            <summary>
            Gets or sets the inner circular radius of the <c>DoughnutSeries3D</c>.
            </summary>
            <value>
            The double value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.InternlDoughnutCoefficient">
            <summary>
            Gets or sets the internal doughnut co-efficient.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSeries3D">
            <summary>
            Class implementation for LineSeries3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries3D.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.CreateSegments">
            <summary>
            Creates the segments of LineSeries3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.CreateEmptyPointSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@)">
            <summary>
            Creates the empty segments.
            </summary>
            <param name="yValues">The y values</param>
            <param name="yValList">The y value list</param>
            <param name="xValList">The x value list</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.GetAnimationIsActive">
            <summary>
            Gets the animation state.
            </summary>
            <returns>Returns a value indicating whether the animation is active.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.Animate">
            <summary>
            Animates the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="point">The Mouse Position</param>
            <returns>Returns the data point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.SelectedSegmentsIndexes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the chart when the selected segment index collection changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set segment selection brush to selected index chart segment and trigger chart selection event
            </summary>
            <param name="newIndex">The New Index</param>
            <param name="oldIndex">The Old Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Updates the mouse move interactions.
            </summary>
            <param name="source">The Source</param>
            <param name="pos">The Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.OnStrokeThicknessValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when stroke thickness changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.UpdateToolTip(System.Object,System.Windows.Point)">
            <summary>
            Updates the tooltip for the series.
            </summary>
            <param name="source">The Hit Object</param>
            <param name="pos">The Mouse Position</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the <c>LineSeries3D</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.Segment">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment3D"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.IsAnimated">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries3D"/> is animated.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns <see cref="T:System.Collections.Generic.List`1"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.SelectedSegment">
            <summary>
            Gets the selected segment in this series, when we enable the single selection.
            </summary>
            <returns>
            It returns <c>ChartSegment</c>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSeries3D">
            <summary>
            Class implementation for the <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries3D"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterHeight"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.CreateSegments">
            <summary>
            Creates the segments of ScatterSeries3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.GetAnimationIsActive">
            <summary>
            Checks the animation active state.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean"/> value indicating animation state.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.Animate">
            <summary>
            Animates the <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries3D"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.OnSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when size changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.Segment">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSegment3D"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterWidth">
            <summary>
            Gets or sets the width of the scatter points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterHeight">
            <summary>
            Gets or sets the height of the scatter points.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBar100Series3D">
            <summary>
            Class implementation for StackingBar100Series3D.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumn100Series3D">
            <summary>
            Class implementation for StackingColumn100Series3D.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D">
            <summary>
            StackingColumnSeries3D is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D"/>.
            Each series is then stacked vertically one above the other.
            If there exists only single series, it will resemble like a simple <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D"/> chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D">
            <summary>
            Class implementation for StackingSeriesBase3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GroupingLabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GroupingLabel"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point.</param>
            <param name="stackedYValue">The Stacked Y Value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GetCumulativeStackValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">The ChartSeries</param>
            <returns>StackedYValues class instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GetStackedYValue(System.Int32)">
            <summary>
            Return double value from the given index.
            </summary>
            <param name="index">The Index</param>
            <returns>Returns the stacked y values.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned chart.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.OnGroupingLabelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when grouping label changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.CalculateStackingValues">
            <summary>
            Calculates stacking values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GroupingLabel">
            <summary>
            Gets or sets the label to categorize the stacking series as a single unit.
            </summary>
            <remarks>
            We can group one or more series into a single group by specifying this property.
            The series coming under same group will stack with other series in group.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.StackValueCalculated">
            <summary>
            Gets or sets a value indicating whether the stack value is calculated.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.YRangeStartValues">
            <summary>
            Gets or sets the starting y values collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.YRangeEndValues">
            <summary>
            Gets or sets the ending y values collection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.SegmentSpacing"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.CreateSegments">
            <summary>
            creates the segments of StackingColumnSeries3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the segment spacing.
            </summary>
            <param name="spacing">The Spacing.</param>
            <param name="right">The Right Position.</param>
            <param name="left">The Left Position.</param>
            <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.GetAnimationIsActive">
            <summary>
            Checks the animation active state.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean"/> property which indicates whether animation is active.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.Animate">
            <summary>
            Animates the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the segment spacing.
            </summary>
            <param name="spacing">The Spacing.</param>
            <param name="right">The Right Position.</param>
            <param name="left">The Left Position.</param>
            <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.OnSegmentSpacingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segments when segment spacing value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.Storyboard_Completed(System.Object,System.EventArgs)">
            <summary>
            Updates animation when story board completed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.IsStacked">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series3D.CreateSegments">
            <summary>
            Creates the segments of StackingColumn100Series3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBar100Series3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series3D.OnTransposeChanged(System.Boolean)">
            <summary>
            Updates the series when transpose changed.
            </summary>
            <param name="val">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries3D">
            <summary>
            Class implementation for StackingBarSeries3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries3D.OnTransposeChanged(System.Boolean)">
            <summary>
            Updates the series when transpose changed.
            </summary>
            <param name="val">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns the cloned series.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ClassifyPointResult">
            <summary>
            Specifies the point location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnFront">
            <summary>
            Point is in the front of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnBack">
            <summary>
            Point is at the back of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnPlane">
            <summary>
            Point is on the plane.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult">
            <summary>
            Specifies the polygon location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.OnPlane">
            <summary>
            Polygon is on the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.ToRight">
            <summary>
            Polygon is from right of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.ToLeft">
            <summary>
            Polygon is from left of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.Unknown">
            <summary>
            Location of polygon is unknown.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BspTreeBuilder">
            <summary>
            This class contains methods to compute the Binary Space Partitioning (BSP) tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Add(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Adds the specified poly.
            </summary>
            <param name="poly">The poly.</param>
            <returns>Returns the last index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Remove(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Removes the specified polygon.
            </summary>
            <param name="polygon">The polygon.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Clear">
            <summary>
            Clear the polygons.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Count">
            <summary>
            Calculate the available polygons.
            </summary>
            <returns>Returns the polygon count.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Build">
            <summary>
            Builds this instance.
            </summary>
            <returns>Returns the built <see cref="T:Syncfusion.UI.Xaml.Charts.BspNode"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Build(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Polygon3D})">
            <summary>
            Builds the specified collection of polygons.
            </summary>
            <param name="arlist">The collection of polygons.</param>
            <returns>Returns the built <see cref="T:Syncfusion.UI.Xaml.Charts.BspNode"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.GetNodeCount(Syncfusion.UI.Xaml.Charts.BspNode)">
            <summary>
            Gets the node count.
            </summary>
            <param name="el">The el.</param>
            <returns>Returns the node count.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.CutOutBackPolygon(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification},Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification,System.Collections.Generic.ICollection{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Cuts the out back polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The Vertical Index Classification.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.CutOutFrontPolygon(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification},Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification,System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Cuts the out front polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The Vertical Index Classification.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.GetNext(System.Int32,System.Int32)">
            <summary>
            Get the next item.
            </summary>
            <param name="index">The Index</param>
            <param name="count">The Count</param>
            <returns>Returns the next index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.ClassifyPolygon(Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Classify the polygon.
            </summary>
            <param name="polygon1">The First Polygon.</param>
            <param name="polygon2">The Second Polygon.</param>
            <returns>Returns the classified result.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.ClassifyPoint(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Classifies the point.
            </summary>
            <param name="point3D">The 3D Point</param>
            <param name="polygon3D">The 3D Polygon</param>
            <returns>Returns the classified point result.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.SplitPolygon(Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D[]@,Syncfusion.UI.Xaml.Charts.Polygon3D[]@)">
            <summary>
            Split the polygon.
            </summary>
            <param name="poly">The Polygon</param>
            <param name="part">The Part</param>
            <param name="backPoly">The Back Polygon</param>
            <param name="frontPoly">The Front Polygon</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Item(System.Int32)">
            <summary>
            Gets the <see>
            <cref>PiePrototype.Polygon</cref>
            </see>
            at the specified index.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.
            </value>
            <param name="index">The index.</param>
            <returns>Returns the polygon 3D.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification">
            <summary>
            Class implementation for <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,System.Int32,Syncfusion.UI.Xaml.Charts.ClassifyPointResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification"/> class.
            </summary>
            <param name="point">The Vector3D point.</param>
            <param name="ind">The index.</param>
            <param name="res">The ClassifyPointResult.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Vector">
            <summary>
            Gets or sets the vector.
            </summary>
            <value>The vector.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Result">
            <summary>
            Gets or sets the classify result.
            </summary>
            <value>The classify result.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingBackPoint">
            <summary>
            Gets or sets a value indicating whether [cutting back point].
            </summary>
            <value><c>true</c> if [cutting back point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingFrontPoint">
            <summary>
            Gets or sets a value indicating whether [cutting front point].
            </summary>
            <value><c>true</c> if [cutting front point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingBackPairIndex">
            <summary>
            Gets or sets the index of the cutting back pair.
            </summary>
            <value>The index of the cutting back pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingFrontPairIndex">
            <summary>
            Gets or sets the index of the cutting front pair.
            </summary>
            <value>The index of the cutting front pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.AlreadyCuttedBack">
            <summary>
            Gets or sets a value indicating whether [already cut back].
            </summary>
            <value><c>true</c> if [already cut back]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.AlreadyCuttedFront">
            <summary>
            Gets or sets a value indicating whether [already cut front].
            </summary>
            <value><c>true</c> if [already cut front]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BspNode">
            <summary>
            Class Implementation for <see cref="T:Syncfusion.UI.Xaml.Charts.BspNode"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Back">
            <summary>
            Gets or sets the back node.
            </summary>
            <value>The back node.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Front">
            <summary>
            Gets or sets the front node.
            </summary>
            <value>The front node.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Plane">
            <summary>
            Gets or sets the plane.
            </summary>
            <value>The plane.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Graphics3D">
            <summary>
            Represents Graphics3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.GetVisualCount">
            <summary>
            Gets the visual count.
            </summary>
            <returns>Returns the count.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.AddVisual(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/> class.
            </summary>
            <summary>
            Adds the polygon to the drawing.
            </summary>
            <param name="polygon">The <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.</param>
            <returns>Returns the last index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.Remove(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Removes the specified polygon.
            </summary>
            <param name="polygon">The polygon.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.ClearVisual">
            <summary>
            clear the polygon from visual tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.GetVisual">
            <summary>
            Gets the visual.
            </summary>
            <returns>Returns the visual.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.PrepareView">
            <summary>
            Computes the BSP tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.PrepareView(System.Double,System.Double,System.Double,System.Double,System.Windows.Size)">
            <summary>
            Computes the BSP tree.
            </summary>
            <param name="perspectiveAngle">The Perspective Angle</param>
            <param name="depth">The Chart Depth</param>
            <param name="rotation">The Rotation Angle</param>
            <param name="tilt">The Tilt Angle</param>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.View(System.Windows.Controls.Panel)">
            <summary>
            Draws the paths to the panel/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.View(System.Windows.Controls.Panel,System.Double,System.Double,System.Windows.Size,System.Double,System.Double)">
            <summary>
            Draws the polygons to the Graphics.
            </summary>
            <param name="panel">The Panel</param>
            <param name="rotation">The Rotation Angle</param>
            <param name="tilt">The Tilt Angle</param>
            <param name="size">The Size</param>
            <param name="perspectiveAngle">The Perspective Angle</param>
            <param name="depth">The Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.DrawBspNode3D(Syncfusion.UI.Xaml.Charts.BspNode,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.Controls.Panel)">
            <summary>
            Draws the BSP node in 3D.
            </summary>
            <param name="tree">The Tree.</param>
            <param name="eye">The Eye Position.</param>
            <param name="panel">The Panel.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Graphics3D.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Matrix3D">
            <summary>
            Represents the matrix 4x4.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/> struct.
            </summary>
            <param name="m11">The M11 element of matrix.</param>
            <param name="m12">The M12 element of matrix.</param>
            <param name="m13">The M13 element of matrix.</param>
            <param name="m14">The M14 element of matrix.</param>
            <param name="m21">The M21 element of matrix.</param>
            <param name="m22">The M22 element of matrix.</param>
            <param name="m23">The M23 element of matrix.</param>
            <param name="m24">The M24 element of matrix.</param>
            <param name="m31">The M31 element of matrix.</param>
            <param name="m32">The M32 element of matrix.</param>
            <param name="m33">The M33 element of matrix.</param>
            <param name="m34">The M34 element of matrix.</param>
            <param name="m41">The M41 element of matrix.</param>
            <param name="m42">The M42 element of matrix.</param>
            <param name="m43">The M43 element of matrix.</param>
            <param name="m44">The M44 element of matrix.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/> struct.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Addition(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Add the matrixes.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="m2">The Second Matrix</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Method used to returns x, y, z values.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="point">The Three Dimensional Vector</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_BitwiseAnd(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Method used to returns x, y, z values.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="v1">The Three Dimensional Vector</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(System.Double,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the multiplied matrix values.
            </summary>
            <param name="f1">The Double Value</param>
            <param name="m1">The Matrix</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the multiplied matrix values.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="m2">The Second Matrix</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Equality(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the equality check <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="m2">The Second Matrix</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Inequality(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the matrix equality <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="m1">The First Matrix</param>
            <param name="m2">The Second Matrix</param>
            <returns>Returns the result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetD(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the determinant.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns>Returns the determinant of the matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetIdentity">
            <summary>
            Gets the identity matrix.
            </summary>
            <returns>Returns the identity matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Transform(System.Double,System.Double,System.Double)">
            <summary>
            Transforms the specified vector.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="z">The Z coordinate.</param>
            <returns>Returns the transformed matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Turn(System.Double)">
            <summary>
            Turns by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns>Returns the resultant turn matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Tilt(System.Double)">
            <summary>
            Tilts by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns>Returns the resultant turn matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Transposed(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Transposes the specified matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns>Returns the transposed matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Shear(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Shears the specified values.
            </summary>
            <param name="xy">The x y shear.</param>
            <param name="xz">The x z shear.</param>
            <param name="yx">The y x shear.</param>
            <param name="yz">The y z shear.</param>
            <param name="zx">The z x shear.</param>
            <param name="zy">The z y shear.</param>
            <returns>Returns the sheared values.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if object and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetInvertal(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Intervals the matrix.
            </summary>
            <param name="matrix3D">The Matrix.</param>
            <returns>Returns the interval.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetMinor(Syncfusion.UI.Xaml.Charts.Matrix3D,System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns>Returns the minor of the matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.TiltArbitrary(System.Double,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Tilts by the specified angle in arbitrary axis direction.
            </summary>
            <param name="angle">The Angle</param>
            <param name="vector3D">The Vector3D</param>
            <returns>Returns the resultant turn matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetDeterminant(System.Collections.Generic.IList{System.Double[]})">
            <summary>
            Calculates determinant row given matrix..
            </summary>
            <param name="dd">The matrix to calculate determinant.</param>
            <returns>Determinant of the given matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetMMtr(System.Collections.Generic.IList{System.Double[]},System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns>Returns the matrix.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.Identity">
            <summary>
            Gets the identity matrix.
            </summary>
            <value>The identity matrix.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.IsAffine">
            <summary>
            Gets a value indicating whether this matrix is affine.
            </summary>
            <value><c>true</c> if this matrix is affine; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> with the specified column and row.
            </summary>
            <param name="i">The I Value</param>
            <param name="j">The J Value</param>
            <returns>Returns the value at the specified location.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Vector3D">
            <summary>
            Represents the coordinates of a 3D point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Vector3D.Empty">
            <summary>
            The empty <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3D"/>. All coordinates is zero.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3D"/> struct.
            </summary>
            <param name="vx">The v x Point</param>
            <param name="vy">The v y Point</param>
            <param name="vz">The v z Point</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.#ctor(System.Windows.Point,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3D"/> struct.
            </summary>
            <param name="points">The Points</param>
            <param name="vz">The v z value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Subtraction(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Addition(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the cross product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_BitwiseAnd(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the dot product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Vector3D,System.Double)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="v1">The v1.</param>
            <param name="val">The val.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns>Returns the square root of the current matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/> method.
            </summary>
            <returns>The text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if object and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
            <value>The Z.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>True</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSegment3D">
            <summary>
            Represents a polygon, which is a connected series of lines that form a closed shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment3D"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSegment3D">
            <summary>
            An abstract base class for 3D type of chart segments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSegment">
            <summary>
            An abstract base class for all type of chart segments.
            </summary>
            <remarks>
            You can create a custom chart segment by inheriting from <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>. You can also customize the appearance of a chart segment,
            by specifying values for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Interior"/>,<see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness"/> properties.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.InteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeDashArray"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xVals">Used to specify the segment x values.</param>
            <param name="yVals">Used to specify the segment y values.</param> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the 3DChart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="startDepth"></param>
            <param name="endDepth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="strokeBrush"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush,System.Int32)">
            <summary>
            Sets the values for Technical indicator segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xVals">Used to specify the segment x-values</param>
            <param name="yVals">Used to specify the segment y-values</param>
            <param name="strokeBrush">Used to specify the segment stroke brush</param>
            <param name="length">Used to specify the segment range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="Values">Used to specify the segment values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overridden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
            /// <param name="yOpenValues"></param>
            /// <param name="yCloseValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="x1Values">Used to specify the segment x1 values</param>
            <param name="y1Values">Used to specify the segment y1 values</param>
            <param name="x2Values">Used to specify the segment x2 values</param>
            <param name="y2Values">Used to specify the segment y2 values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="leftpoint"></param>
            <param name="rightpoint"></param>
            <param name="toppoint"></param>
            <param name="bottompoint"></param>
            <param name="vercappoint"></param>
            <param name="horcappoint"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="BottomLeft"></param>
            <param name="RightTop"></param>
            <param name="hipoint"></param>
            <param name="loPoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overridden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overridden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.BindWaterfallSegmentInterior(Syncfusion.UI.Xaml.Charts.WaterfallSegment)">
            <summary>
            Method used to update the segment's interior color based on WaterfallSegmentType. 
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.IsSegmentSelected">
            <summary>
            Method used to check the current segment is selected index segment or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.GetEnableSegmentSelection(System.Windows.Media.Brush)">
            <summary>
            Method used to check corresponding segment is selectable or not.
            </summary>
            <param name="segmentSelectionBrush"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.AlignHiLoSegment(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This method is used to change High and Low values,
            When the High value lesser than Open value or Low value greater than Close value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set binding to ChartSegments properties.
            </summary>
            <param name="element"><see cref="T:System.Windows.Shapes.Shape"/> element to be bind.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartSegment.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.XRange">
            <summary>
            Gets or sets the x-value range for the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.YRange">
            <summary>
            Gets or sets the y-value range for the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Item">
            <summary>
            Gets or sets the data object that this segment belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Interior">
             <summary>
             Gets or sets the brush to paint the interior of the segment.
             </summary>
            <remarks>
            By default,the interior value for a chart segment will be calculated and set automatically based on the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette"/> set.
             </remarks>
             <value>
             The <see cref="T:System.Windows.Media.Brush"/> value.
             </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness value of the segment.
            </summary>
            <remarks>
            By default, this property inherits its value from series StrokeThickness property.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the segment shape.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.DoubleCollection"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke">
            <summary>
             Gets or sets the stroke value of the segment.
            </summary>
             <remarks>
             By default, this property inherits its value from series Stroke property.
             </remarks>
             <value>
             The <see cref="T:System.Windows.Media.Brush"/> value.
             </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Series">
            <summary>
            Gets the value of underlying series of a chart segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.PolygonPoints">
            <summary>
            Gets or sets the point collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.IsEmptySegmentInterior">
            <summary>
            Gets or sets IsEmptySegmentinterior property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment3D.ZRange">
            <summary>
            Gets or sets the z-value range for the segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AreaSegment3D.YProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AreaSegment3D.Y"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment3D"/> class with default settings.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AreaSeries3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment3D"/> class.
            </summary>
            <param name="xValues">The X Values</param>
            <param name="YValues">The Y Values</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
            <param name="areaSeries3D">The AreaSeries 3D</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.SetData(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues">The X Values</param>
            <param name="YValues">The Y Values</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. 
            This method is not intended to be called explicitly outside the Chart  
            but it can be overridden by any derived class.
            </summary>
            <param name="size">The Size</param>
            <returns>Returns the created visual.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>Returns the rendered visual</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. 
            This method is not intended to be called explicitly outside the Chart 
            but it can be overridden by any derived class.
            </summary>
            <param name="transformer">The Chart Points Positioning Transformer</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Method Implementation for set  Binding to ChartSegments properties.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment when Y value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.ScheduleRender">
            <summary>
            Renders the segment at the given schedules.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.OnValueChanged">
            <summary>
            Updates the segment when Y value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.ScheduleView">
            <summary>
            Updates the segment schedule on view changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment3D.OnViewChanged">
            <summary>
            Updates the segment on view changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSegment3D.XData">
            <summary>
            Gets or sets the x value of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSegment3D.YData">
            <summary>
            Gets or sets the y value of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSegment3D.Y">
            <summary>
            Gets or sets the y value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSegment3D">
            <summary>
            Represents chart column segment.
            </summary>
            <remarks>Class instance is created automatically by WinRT Chart building system.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.TopProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Top"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.BottomProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Bottom"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment3D"/> class.
            </summary>
            <param name="x1">The X1 Value</param>
            <param name="y1">The Y1 Value</param>
            <param name="x2">The X2 Value</param>
            <param name="y2">The Y2 Value</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param> 
            <param name="series">The Series</param>        /// 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment3D"/> class.
            </summary>
            <param name="x1">The X1 Value</param>
            <param name="y1">The Y1 Value</param>
            <param name="x2">The X2 Value</param>
            <param name="y2">The Y2 Value</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="values">The Column Segment Values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UI Element
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Bindings to properties in ColumnSegment.
            </summary>
            <param name="element">The Element To Be Bind</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment on top or bottom Value Changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.OnValueChanged">
            <summary>
            Updates the segment on top or bottom Value Changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.XData">
            <summary>
            Gets the XData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.YData">
            <summary>
            Gets the YData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.ZData">
            <summary>
            Gets the ZData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Width">
            <summary>
            Gets or sets Width property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Height">
            <summary>
            Gets or sets Height property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectX">
            <summary>
            Gets or sets <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectX"/> property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectY">
            <summary>
            Gets or sets <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectY"/> property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.InternalBottom">
            <summary>
            Gets or sets the bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Plans">
            <summary>
            Gets or sets the polygon 3D Plans.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.InternalTop">
            <summary>
            Gets or sets the internal top.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Left">
            <summary>
            Gets or sets the left of the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Right">
            <summary>
            Gets or sets the right of the segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D">
            <summary>
            Class implementation for DoughnutSegment3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSegment3D">
            <summary>
            Class implementation for PieSegment3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualStartValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualStartValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualEndValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualEndValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment3D"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="center">The center.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="height">The height.</param>
            <param name="r">The r.</param>
            <param name="i">The i.</param>
            <param name="y">The y.</param>
            <param name="insideRadius">The inside radius.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UI Element
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="values">The PieSegment Values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.CreateSector">
            <summary>
            Creates the sector.
            </summary>
            <returns>Returns the sector.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.OnValuesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment when Y value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.ScheduleRender">
            <summary>
            Renders the segment at the given schedules.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.OnValuesChanged">
            <summary>
            Updates the segment when <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualEndValue"/> value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.ScheduleView">
            <summary>
            Updates the segment schedule on view changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.OnViewChanged">
            <summary>
            Updates the segment on view changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.YData">
            <summary>
            Gets or sets the y value of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.XData">
            <summary>
            Gets or sets the x value of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.Points">
            <summary>
            Gets or sets the points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.Center">
            <summary>
            Gets or sets the center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.StartValue">
            <summary>
            Gets or sets the start value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.EndValue">
            <summary>
            Gets or sets the end value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualStartValue">
            <summary>
            Gets or sets the actual start value.
            </summary>
            <value>
            The actual start value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualEndValue">
            <summary>
            Gets or sets the actual end value.
            </summary>
            <value>
            The actual end value.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="center">The center.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="height">The height.</param>
            <param name="r">The r.</param>
            <param name="i">The i.</param>
            <param name="y">The y.</param>
            <param name="insideRadius">The inside radius.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSegment3D">
            <summary>
            Class implementation for LineSegment3D.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSegment3D.YProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineSegment3D.Y"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment3D"/> class with default settings.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double,Syncfusion.UI.Xaml.Charts.LineSeries3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment3D"/> class with default settings.
            </summary>
            <param name="xValues">The X Values</param>
            <param name="YValues">The Y Values</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
            <param name="lineSeries3D">The LineSeries3D</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.SetData(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues">The X Values</param>
            <param name="YValues">The Y Values</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UI Element
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.GetLinePoints(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[])">
            <summary>
            Gets the line points.
            </summary>
            <param name="x1">The X1 Value</param>
            <param name="y1">The Y1 Value</param>
            <param name="x2">The X2 Value</param>
            <param name="y2">The Y2 Value</param>
            <param name="leftThickness">The Left Thickness</param>
            <param name="rightThickness">The Right Thickness</param>
            <param name="points">The Points</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment on y value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.ScheduleRender">
            <summary>
            Renders the segment at the given schedules.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.OnValueChanged">
            <summary>
            Updates the segment on y value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.ScheduleView">
            <summary>
            Updates the segment schedule on view changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.OnViewChanged">
            <summary>
            Updates the segment on view changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.RenderFrontPolygon(System.Double[],System.Double,System.Double,System.Windows.Media.Brush)">
            <summary>
            Renders the front polygon.
            </summary>
            <param name="point1">The Points Array</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
            <param name="color">The Color</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.UpdatePoints2(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Updates the second points.
            </summary>
            <param name="xStart">The Start X Value</param>
            <param name="yStart">The Start Y Value</param>
            <param name="xEnd">The End X Value</param>
            <param name="yEnd">The End Y Value</param>
            <param name="leftThickness">The Left Thickness</param>
            <param name="rightThickness">The Right Thickness</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment3D.FindIntersectingPoint(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Finds the intersecting point.
            </summary>
            <param name="x11">The X11 Point</param>
            <param name="y11">The Y11 Point</param>
            <param name="x12">The X12 Point</param>
            <param name="y12">The Y12 Point</param>
            <param name="x21">The X21 Point</param>
            <param name="y21">The Y21 Point</param>
            <param name="x22">The X22 Point</param>
            <param name="y22">The Y22 Point</param>
            <returns>Returns the intersection point.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment3D.XData">
            <summary>
            Gets or sets the x value of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment3D.YData">
            <summary>
            Gets or sets the y data of this segment (data point).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment3D.Y">
            <summary>
            Gets or sets the y value for the segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Polygon3D">
            <summary>
            Represents chart polygon to create any shapes in 3D.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.Epsilon">
            <summary>
            The epsilon.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.VectorPoints">
            <summary>
            Points of polygon.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.d">
            <summary>
            The constant of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.normal">
            <summary>
            The normal of plane.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="index">The Index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="normal">The normal.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.DependencyObject,System.Int32,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The Points</param>
            <param name="tag">The Tag</param>
            <param name="index">The Index</param>
            <param name="stroke">The Stroke</param>
            <param name="strokeThickness">The StrokeThickness</param>
            <param name="fill">The Fill Color</param>
            <param name="name">The Name</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.DependencyObject,System.Int32,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The Points.</param>
            <param name="tag">The Tag</param>
            <param name="index">The Index</param>
            <param name="stroke">The Stroke</param>
            <param name="strokeThickness">The Stroke Thickness</param>
            <param name="fill">The Fill</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="polygon">The plane.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Test">
            <summary>
            Tests this instance to the existing.
            </summary>
            <returns>Indicates whether Normal of Plane is valid or Not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetPoint(System.Double,System.Double)">
            <summary>
            Gets the point on the plane.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetPoint(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Gets the point of intersect ray with plane.
            </summary>
            <param name="position">The position.</param>
            <param name="ray">The ray.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Transform(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Transforms by the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/>.
            </summary>
            <param name="matrix">The 3D Matrix</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateUIElement(Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.UIElement,System.Double,System.Double,System.Boolean,Syncfusion.UI.Xaml.Charts.UIElementLeftShift,Syncfusion.UI.Xaml.Charts.UIElementTopShift)">
            <summary>
            Creates the UI element.
            </summary>
            <param name="position">The Position</param>
            <param name="element">The Element</param>
            <param name="xLen">The X Length</param>
            <param name="yLen">The Y Length</param>
            <param name="isFront">Is Front Position</param>
            <param name="leftShiftType">The Left Shift Type</param>
            <param name="topShiftType">The Top Shift Type</param>
            <returns>Returns the created <see cref="T:Syncfusion.UI.Xaml.Charts.UIElement3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreatePolyline(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3D},System.Windows.Shapes.Path,System.Boolean)">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.Charts.PolyLine3D"/> with the specified values.
            </summary>
            <param name="points">The Points</param>
            <param name="element">The Path Element</param>
            <param name="isFront">The Front</param>
            <returns>Returns the Created <see cref="T:Syncfusion.UI.Xaml.Charts.PolyLine3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateBox(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.DependencyObject,System.Int32,Syncfusion.UI.Xaml.Charts.Graphics3D,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Double,System.Boolean,System.String)">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> with the specified values.
            </summary>
            <param name="vector1">The First Vector</param>
            <param name="vector2">The Second Vector</param>
            <param name="tag">The Tag</param>
            <param name="index">The Index</param>
            <param name="graphics3D">The Graphics 3D</param>
            <param name="stroke">The Stroke</param>
            <param name="fill">The Fill Color</param>
            <param name="strokeThickness">The Stroke Thickness</param>
            <param name="inverse">The Inverse <see cref="T:System.Boolean"/></param>
            <param name="name">The Name</param>
            <returns>Returns the created <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateBox(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.DependencyObject,System.Int32,Syncfusion.UI.Xaml.Charts.Graphics3D,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Double,System.Boolean)">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> with the specified values.
            </summary>
            <param name="vector1">The First Vector</param>
            <param name="vector2">The Second Vector</param>
            <param name="tag">The Tag</param>
            <param name="index">The Index</param>
            <param name="graphics3D">The Graphics 3D</param>
            <param name="stroke">The Stroke</param>
            <param name="fill">The Fill Color</param>
            <param name="strokeThickness">The Stroke Thickness</param>
            <param name="inverse">The Inverse</param>
            <returns>Returns the created <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.UpdateBox(Syncfusion.UI.Xaml.Charts.Polygon3D[],Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.Media.Brush,System.Windows.Visibility)">
            <summary>
            Updates the box.
            </summary>
            <param name="plan">The plan.</param>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="stroke">The stroke.</param>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateLine(System.Windows.Shapes.Line,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates the line.
            </summary>
            <param name="line">The line.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="z1">The z1.</param>
            <param name="z2">The z2.</param>
            <param name="isfront">The front indication.</param>
            <returns>Returns the created<see cref="T:Syncfusion.UI.Xaml.Charts.Line3D"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Graphics3D"/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.ReDraw">
            <summary>
            Redraws the segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Update(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.Media.Brush,System.Windows.Visibility)">
            <summary>
            Updates the polygon.
            </summary>
            <param name="updatedPoints">The Updated Points</param>
            <param name="interior">The Interior</param>
            <param name="visibility">The Visibility</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CalcNormal">
            <summary>
            Calculates the normal.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetNormal(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the normal.
            </summary>
            <param name="transform">The transform.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CalcNormal(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Calculates the normal.
            </summary>
            <param name="vector1">The First Vector.</param>
            <param name="vector2">The Second Vector.</param>
            <param name="vector3">The Third Vector.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.ApplyZLight(System.Windows.Media.Color)">
            <summary>
            Applies the z light.
            </summary>
            <param name="color">The Color</param>
            <returns>Returns the Z light.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.ApplyXLight(System.Windows.Media.Color)">
            <summary>
            Applies the X light.
            </summary>
            <param name="color">The Color</param>
            <returns>Returns the X light.</returns>
            
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Element">
            <summary>
            Gets or sets the element.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.A">
            <summary>
            Gets the A component.
            </summary>
            <value>The A component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.B">
            <summary>
            Gets the B component.
            </summary>
            <value>The B component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.C">
            <summary>
            Gets the C component.
            </summary>
            <value>The C component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.D">
            <summary>
            Gets the D component.
            </summary>
            <value>The D component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Points">
            <summary>
            Gets the points of polygon.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Graphics3D">
            <summary>
            Gets or sets the graphics 3D.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.UIElement3D">
            <summary>
            Used to plot any UIElement in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElement3D.#ctor(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.UIElement3D"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElement3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElement3D.GetShift(System.Double@,System.Double@,System.Double,System.Double)">
            <summary>
            Updates the shift.
            </summary>
            <param name="x">The X Point</param>
            <param name="y">The Y Point</param>
            <param name="width">Updates The With</param>
            <param name="height">Updates The Height</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElement3D.LeftShift">
            <summary>
            Gets or sets the left shift indication.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElement3D.TopShift">
            <summary>
            Gets or sets the top shift indication.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolyLine3D">
            <summary>
            Used to draw line in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolyLine3D.#ctor(System.Windows.Shapes.Path,System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PolyLine3D"/> class.
            </summary>
            <param name="element">The Path Element.</param>
            <param name="vectors">The Vectors.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolyLine3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Line3D">
            <summary>
            Used to draw line in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Line3D.#ctor(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Line3D"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Line3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSegment3D">
            <summary>
            Class implementation for ScatterSegment3D.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.XProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.X"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.YProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Y"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ScatterSeries3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSegment3D"/> class.
            </summary>
            <param name="x1">The X1 Value</param>
            <param name="y1">The Y1 Value</param>
            <param name="startDepth">The Start Depth</param>
            <param name="endDepth">The End Depth</param>
            <param name="scatterSeries3D">The Scatter Series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="Values">The Column Segment Values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element">The Shape Element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the segment when <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.X"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Y"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidth"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeight"/> values changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.OnValueChanged">
            <summary>
            Updates the segment when <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.X"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Y"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidth"/>, <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeight"/> values changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidth">
            <summary>
            Gets or sets scatter segment’s width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeight">
            <summary>
            Gets or sets scatter segment’s height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.XData">
            <summary>
            Gets XData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.YData">
            <summary>
            Gets YData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ZData">
            <summary>
            Gets ZData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Plans">
            <summary>
            Gets or sets the plans
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.X">
            <summary>
            Gets or sets the x value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.Y">
            <summary>
            Gets or sets the Y value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D">
            <summary>
            Represents chart stacking column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D"/> class.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="startDepth">The start depth.</param>
            <param name="endDepth">The end depth.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolygonRecycler">
            <summary>
            Class implementation for PolygonRecycler.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolygonRecycler.DequeuePolygon(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.DependencyObject,System.Int32,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Method used to remove the polygon in Queue.
            </summary>
            <param name="points">The Points</param>
            <param name="tag">The Tag</param>
            <param name="index">The Index</param>
            <param name="stroke">The stroke</param>
            <param name="strokeThickness">The stroke Thickness</param>
            <param name="fill">The Fill</param>
            <returns>Returns the polygon.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolygonRecycler.Reset">
            <summary>
            Reset the pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Annotation">
            <summary>
            Provides a lightweight control for displaying overlay element in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
            <seealso cref="T:System.Windows.FrameworkElement"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.TextProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.Text"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.EnableClippingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContent"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDurationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDuration"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacementProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacement"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnitProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.XAxisNameProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxisName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.YAxisNameProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxisName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.X1Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.X1"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.Y1Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.Y1"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontFamilyProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontFamily"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontStretchProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStretch"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontWeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontWeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ForegroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalHorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalVerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVisibility"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Annotation"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.Clone">
            <summary>
            Returns the clone annotation
            </summary>
            <returns>Returns the cloned annotation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetRenderedAnnotation">
            <summary>
            Gets the rendered annotation.
            </summary>
            <returns> A UI Element</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.UpdateAnnotation">
            <summary>
            Updates the annotation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnTextAlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation on text alignment changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="args">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.ConvertData(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Converts the data to the required format.
            </summary>
            <param name="data">The data passed for conversion.</param>
            <param name="axis">The relevant axis for the conversion.</param>
            <returns>Returns the converted data.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.ConvertToObject(System.Double,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Converts to required value from the passing data.
            </summary>
            <param name="data">The data to be converted.</param>
            <param name="axis">The relevant axis for the conversion.</param>
            <returns>Returns the converted data.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnVisibilityChanged">
            <summary>
            Updates the annotation on visibility property changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.UpdatePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart when annotation property changed.
            </summary>
            <param name="args">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.CreateAnnotation">
            <summary>
            Creates the annotation.
            </summary>
            <returns>Returns the annotation <see cref="T:System.Windows.UIElement"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.SetAxisFromName">
            <summary>
            Sets the axis from the name.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnSelected(System.EventArgs)">
            <summary>
            Invoked when an unhandled Selected event reaches an element in its route that is derived from this class. Implement
            this method to add class handling for this event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnUnSelected(System.EventArgs)">
            <summary>
            Invoked when an unhandled UnSelected event reaches an element in its route that is derived from this class. Implement
            this method to add class handling for this event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.CanUpdateRange(System.Object,System.Object)">
            <summary>
            Checks for the update requirement.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>Returns the value indicating whether the range update required.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetElementPosition(System.Windows.Size,System.Windows.Point)">
            <summary>
            Gets the element position.
            </summary>
            <param name="desiredSize">The desired size to get alignment position.</param>
            <param name="originalPosition">The original position.</param>
            <returns>Returns the element position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetElementPosition(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Gets the element position.
            </summary>
            <param name="element">The annotation <see cref="T:System.Windows.FrameworkElement"/>.</param>
            <param name="originalPosition">The original position.</param>
            <returns>Returns the element position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.IntersectsWith(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Checks whether the given two <see cref="T:System.Windows.Rect"/> intersects.
            </summary>
            <param name="r1">The first <see cref="T:System.Windows.Rect"/></param>
            <param name="r2">The second <see cref="T:System.Windows.Rect"/></param>
            <returns>Returns a <see cref="T:System.Boolean"/> value indicating whether the two <see cref="T:System.Windows.Rect"/> are intersecting.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetClippingValues(System.Double,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            This method is used to modify the value for clipping out of axis
            </summary>
            <param name="value">The value to be checked in clipping range.</param>
            <param name="axis">The axis to get the visible range.</param>
            <returns>Returns the clipped values.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.SetData">
            <summary>
            Sets the required x and y values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.SetBindings">
            <summary>
            Sets the annotation bindings to the required elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.RotateElement(System.Double,System.Windows.FrameworkElement)">
            <summary>
            Rotates the element to the specified angle.
            </summary>
            <param name="angle">The angle specified for rotation.</param>
            <param name="item">The <see cref="T:System.Windows.FrameworkElement"/>.</param>
            <returns>Returns the transformed element.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetRotatePoint(System.Double,System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Gets the rotated points.
            </summary>
            <param name="angle">The specified angle.</param>
            <param name="item">The <see cref="T:System.Windows.FrameworkElement"/>.</param>
            <param name="originalPoint">The original point.</param>
            <returns>Returns the matrix transformed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.RotateElement(System.Double,System.Windows.FrameworkElement,System.Windows.Size)">
            <summary>
            Rotates the element to the specified angle.
            </summary>
            <param name="angle">The angle specified for rotation.</param>
            <param name="item">The <see cref="T:System.Windows.FrameworkElement"/>.</param>
            <param name="itemSize">The <see cref="T:System.Windows.FrameworkElement"/> size.</param>
            <returns>Returns the transformed element.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.EnsurePoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the ensure point.
            </summary>
            <param name="point1">The first point</param>
            <param name="point2">The second point</param>
            <returns>Returns the ensure point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.CloneAnnotation(Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Clones the annotation.
            </summary>
            <param name="annotation">The annotation cloned is updated.</param>
            <returns>Returns the cloned annotation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnAxisNameChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation when axis name changed.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="args">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnUpdatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the chart and annotation on property changed.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="args">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnVisibiltyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation on visibility changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnEnableEditingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the editing when <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing"/> property changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnEnableClippingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation when <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping"/> property changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnCoordinatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation positioning when <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit"/> property changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.ElementTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Element Transformation takes place.
            </summary>
            <param name="rect">The <see cref="T:System.Windows.Rect"/></param>
            <param name="matrix">The matrix passed for the transform.</param>
            <returns>Returns the transformed element.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnEditing(Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Updates the editing when <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing"/> property changed.
            </summary>
            <param name="annotation">The annotation to be edited.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.TextElement_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the text element when mouse left button is down.
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The mouse button event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.SetTextElementBinding(System.Windows.Controls.TextBox)">
            <summary>
            Sets the text element binding.
            </summary>
            <param name="textElement">The text element to be bind.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnTextEditingMode(System.Windows.Controls.ContentControl)">
            <summary>
            Replace the <see cref="T:System.Windows.Controls.TextBlock"/> to <see cref="T:System.Windows.Controls.TextBox"/> while editing text
            </summary>
            <param name="textElement">The text element.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseRightButtonDown">
            <summary>
            Occurs when the right mouse button is pressed while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseRightButtonUp">
            <summary>
            Occurs when the right mouse button is released while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseUp">
            <summary>
             Occurs when the mouse button is released while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseDown">
            <summary>
            Occurs when the mouse button is pressed while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseMove">
            <summary>
            Occurs when mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseLeftButtonDown">
            <summary>
             Occurs when the left mouse button is pressed while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseLeftButtonUp">
            <summary>
             Occurs when the left mouse button is pressed while the mouse pointer is over this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the bounds of this element.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.Selected">
            <summary>
            Occurs when <see cref="T:Syncfusion.UI.Xaml.Charts.Annotation"/> becomes selected.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.UnSelected">
            <summary>
            Occurs when <see cref="T:Syncfusion.UI.Xaml.Charts.Annotation"/> becomes unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Text">
            <summary>
            Gets or sets the description text for Annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing">
            <summary>
            Gets or sets a value indicating whether the text in <c>TextAnnotation</c> can be edited or not.
            </summary>
            <value>
                <c>true</c> enable the editing option in TextAnnotation.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplate">
            <summary>
            Gets or sets the custom template for <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.Text"/>.
            </summary>
            <value>
            This accepts a DataTemplate.
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
                <code language="XAML">
                    &lt;syncfusion:SfChart.Annotations&gt;
                        &lt;syncfusion:Annotation ContentTemplate="{StaticResource contentTemplate}"&gt;
                    &lt;/syncfusion:SfChart.Annotations&gt;
                </code>
                <code language="C#">
                    annotation.ContentTemplate = dataTemplate;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping">
            <summary>
            Gets or sets a value indicating whether annotation should clip while crossing with boundary.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether <c>ToolTip</c> can be displayed in Annotation.
            </summary>
            <value>
            The <c>true</c> enables the ToolTip for the annotation.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContent">
            <summary>
            Gets or sets the content to be displayed in annotation tooltip.
            </summary>
            <value>
            This accepts all arbitrary .net objects.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDuration">
            <summary>
            Gets or sets the elapse time for the ToolTip.
            </summary>
            <value>
            It accepts the <c>double</c> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplate">
            <summary>
            Gets or sets the custom template for the ToolTip.
            </summary>
            <value>
            This accepts the DataTemplate.
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
                <code language="XAML">
                    &lt;syncfusion:SfChart.Annotations&gt;
                        &lt;syncfusion:Annotation ShowToolTip="true" ToolTipTemplate="{StaticResource toolTipTemplate}"&gt;
                    &lt;/syncfusion:SfChart.Annotations&gt;
                </code>
                <code language="C#">
                    annotation.ShowToolTip = true; 
                    annotation.ToolTipTemplate = dataTemplate;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacement">
            <summary>
            Gets or sets the position of the ToolTip.
            </summary>
            <value>
                <code>ToolTipLabelPlacement.Left</code> will place the ToolTip left.
                <code>ToolTipLabelPlacement.Right</code> will place the ToolTip right.
                <code>ToolTipLabelPlacement.Top</code> will place the ToolTip top.
                <code>ToolTipLabelPlacement.Bottom</code> will place the ToolTip bottom.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit">
            <summary>
            Gets or sets the property which identifies whether the annotation positioned w.r.t pixel or axis coordinate. 
            </summary>
            <value>
                <code>CoordinateUnit.Pixel</code> - position the annotation based on screen coordinates.
                <code>CoordinateUnit.Axis</code> - position the annotation based on axis values.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxisName">
            <summary>
            Gets or sets the axis(horizontal) in which this annotation associated.
            </summary>
            <remarks>
            This property works only with <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit"/> as <c>CoordinateUnit.Axis</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.YAxisName">
            <summary>
            Gets or sets the axis(vertical) in which this annotation associated.
            </summary>
            <remarks>
            This property works only with <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit"/> as <c>CoordinateUnit.Axis</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.X1">
            <summary>
            Gets or sets the annotation X1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Y1">
            <summary>
            Gets or sets the annotation Y1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontSize">
            <summary>
            Gets or sets the font size of the annotation description.
            </summary>
            <value>
            It accepts the double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontFamily">
            <summary>
            Gets or sets the font family for the annotation description.
            </summary>
            <value>
            This accepts all the <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.FontFamily"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStretch">
            <summary>
            Gets or sets the font stretch for the annotation description.
            </summary>
            <value>
            This property of type <see cref="!:Windows.UI.Text.FontStretch"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStyle">
            <summary>
            Gets or sets the font style for the annotation description.
            </summary>
            <value>
            This property of type <see cref="!:Windows.UI.Text.FontStyle"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontWeight">
            <summary>
            Gets or sets the font weight for the annotation description.
            </summary>
            <value>
            This property of type <see cref="!:Windows.UI.Text.FontWeight"/> property.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Foreground">
            <summary>
            Gets or sets the foreground for the annotation description.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Chart">
            <summary>
            Gets or sets the chart for the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVisibility">
            <summary>
            Gets or sets the annotation visibility internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.RotatedRect">
            <summary>
            Gets or sets the rotated <see cref="T:System.Windows.Rect"/> of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.IsSelected">
            <summary>
            Gets or sets a value indicating whether the annotation is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.IsResizing">
            <summary>
            Gets or sets a value indicating whether the annotation is resizing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.IsVisbilityChanged">
            <summary>
            Gets or sets a value indicating whether the visibility is changed for the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxis">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxis"/> of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.YAxis">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.Charts.Annotation.YAxis"/> of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.x1">
            <summary>
            Gets or sets the x 1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.y1">
            <summary>
            Gets or sets the y 1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.IsUiCleared">
            <summary>
            Gets or sets a value indicating whether the UI is cleared.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.AnnotationElement">
            <summary>
            Gets or sets the annotation grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.TextElementCanvas">
            <summary>
            Gets or sets the text element canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.TextElement">
            <summary>
            Gets or sets the text element.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.RotatedTextRect">
            <summary>
            Gets or sets the rotated <see cref="T:System.Windows.Rect"/> of the annotations.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationDragDeltaEventArgs">
            <summary>
            Class implementation for Annotation DragDelta/ResizeDelta event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationDragDeltaEventArgs.NewValue">
            <summary>
            Gets or sets the new <see cref="T:Syncfusion.UI.Xaml.Charts.Position"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationDragDeltaEventArgs.OldValue">
            <summary>
            Gets or sets the old <see cref="T:Syncfusion.UI.Xaml.Charts.Position"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationDragDeltaEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationDragCompletedEventArgs">
            <summary>
            Class implementation for Annotation DragCompleted/ResizeCompleted event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationDragCompletedEventArgs.NewValue">
            <summary>
            Gets or sets the new <see cref="T:Syncfusion.UI.Xaml.Charts.Position"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Position">
            <summary>
            Class implementation for Annotation positioning points 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Position.X1">
            <summary>
            Gets or sets the x1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Position.X2">
            <summary>
            Gets or sets the x2 position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Position.Y1">
            <summary>
            Gets or sets the y1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Position.Y2">
            <summary>
            Gets or sets the y2 position.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationCollection">
             <summary>
             Represents the collection of annotation. 
             </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.Annotation"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationManager">
            <summary>
            Represents a dependency object for calculation.  
            </summary>
            <seealso cref="T:System.Windows.DependencyObject"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.AnnotationManager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.SetPosition(Syncfusion.UI.Xaml.Charts.Position,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Method used to set annotation position
            </summary>
            <param name="position">The Position</param>
            <param name="x1">The x 1 value.</param>
            <param name="x2">The x 2 value.</param>
            <param name="y1">The y 1 value.</param>
            <param name="y2">The y 2 value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragStarted">
            <summary>
            Method used to call DragStarted event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragDelta">
            <summary>
            Method used to call DragDelta event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragCompleted">
            <summary>
            Method used to call DragCompleted event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseSelectionChanged">
            <summary>
            Method used to call Selected/UnSelected event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.ShowToolTip(System.Windows.Point,System.Object)">
            <summary>
            Enables the tool tip in the visual.
            </summary>
            <param name="currentPoint">The current position.</param>
            <param name="source">The source object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.GetToolTipPosition(System.Windows.Point,Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Generate the position of the tooltip according the tooltip placement.
            </summary>
            <param name="currentPosition">The current position.</param>       
            <param name="annotation">The required annotation.</param>
            <returns>Returns the tooltip position.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationManager.SelectedAnnotation">
            <summary>
            Gets or sets the Selected Annotation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationResizer">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.AnnotationResizer"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.HorizontalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DraggingModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DraggingMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanDragProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanDrag"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanResizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanResize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.VerticalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.FillProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Fill"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Y2Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Y2"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.X2Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.X2"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashArray"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashCap"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashOffsetProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeEndLineCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeEndLineCap"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeLineJoinProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeLineJoin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeMiterLimitProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeMiterLimit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeStartLineCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeStartLineCap"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.UpdateAxisAnnotation(System.Windows.Point,System.Windows.Point)">
            <summary>
            Updates the axis annotation.
            </summary>
            <param name="point">The first point of annotation.</param>
            <param name="point2">The second point of annotation.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.UpdatePixelAnnotation(System.Windows.Point,System.Windows.Point)">
            <summary>
            Updates the pixel annotation.
            </summary>
            <param name="elementPoint1">The first point of annotation.</param>
            <param name="elementPoint2">The second point of annotation.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CheckResizerValues">
            <summary>
            Checks and updates the resizer values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.ClearAnnotationElements">
            <summary>
            Clears the annotation elements values.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragStarted">
            <summary>
            Occurs when annotation drag is started.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragDelta">
            <summary>
            Occurs when annotation dragging.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragCompleted">
            <summary>
            Occurs when annotation drag is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            The <see cref="T:System.Windows.HorizontalAlignment"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DraggingMode">
            <summary>
            Gets or sets the dragging direction for the annotation.
            </summary>
            <value>
                <c>AxisMode.Horizontal</c> 
                <c>AxisMode.Vertical</c> 
                <c>AxisMode.All</c> 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanDrag">
            <summary>
            Gets or sets a value indicating whether dragging is enabled for the annotation.
            </summary>
            <value>
                If <c>true</c>, we can drag the annotation.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanResize">
            <summary>
            Gets or sets a value indicating whether resizing is enabled for the annotation.
            </summary>
            <value>
                If <c>true</c>, we can resize the annotation.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical alignment of the text description in ShapeAnnotation.
            </summary>
            <value>
            The <see cref="T:System.Windows.VerticalAlignment"/> property.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Fill">
            <summary>
            Gets or sets the fill color of the ShapeAnnotation.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Y2">
            <summary>
            Gets or sets the Y2 value for the ShapeAnnotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.X2">
            <summary>
            Gets or sets the X2 value for the ShapeAnnotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Stroke">
            <summary>
            Gets or sets the stroke for the annotation.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the annotation stroke.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.DoubleCollection"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashCap">
            <summary>
            Gets or sets the stroke dash cap for the stroke.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.PenLineCap"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset for the annotation.
            </summary>
            <value>
            The double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeEndLineCap">
            <summary>
            Gets or sets the end line cap for the stroke.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.PenLineCap"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join for the stroke of the shape.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.PenLineJoin"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeMiterLimit">
            <summary>
            Gets or sets a limit on the ratio of the miter length to half the <see cref="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThickness"/> of the shape.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeStartLineCap">
            <summary>
            Gets or sets the start line cap for the stroke.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.PenLineCap"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.AngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.Angle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.ResizingModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.ResizingMode"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.Angle">
            <summary>
            Gets or sets the rotation angle for Annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.ResizingMode">
            <summary>
            Gets or sets the resizing direction for the annotation.
            </summary>
            <value>
                <c>AxisMode.Horizontal</c> 
                <c>AxisMode.Vertical</c> 
                <c>AxisMode.All</c> 
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationResizer.GetRenderedAnnotation">
            <summary>
            Gets the rendered <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> control.
            </summary>
            <returns>Returns the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> control.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationResizer.CreateAnnotation">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> control.
            </summary> 
            <returns>Returns the created <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> control.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationResizer.MapActualValueToPixels">
            <summary>
            Maps the value to pixels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationResizer.SetBindings">
            <summary>
            Binds the property between the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> and it's relevant annotation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisMarker.UpdateAnnotation">
            <summary>
            Updates the annotation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EllipseAnnotation">
            <summary>
            Provides a light weight UIElement which is overlay on chart. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.CreateAnnotation">
            <summary>
            Creates the <see cref="T:System.Windows.UIElement"/> for the annotation.
            </summary>
            <returns>Returns the created annotation element.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.CloneAnnotation(Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Clones the annotation.
            </summary>
            <param name="annotation">The annotation to be cloned.</param>
            <returns>Returns the cloned annotation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.OnSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation on size changed.
            </summary>
            <param name="d">The dependency object ellipse annotation.</param>
            <param name="e">The dependency property changed event arguments of the annotation.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.UpdateAnnotation(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the annotation.
            </summary>
            <param name="d">The ellipse annotation which has to be updated.</param>
            <param name="e">The ellipse annotation size changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.IsRenderSize">
            <summary>
            Checks whether to render the annotation with respect to size or co - ordinate units.
            </summary>
            <returns>Returns a value indicating whether to render the annotation with respect to size or co - ordinate units.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.Width">
            <summary>
            Gets or sets the width of the annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EllipseAnnotation.Height">
            <summary>
            Gets or sets the height of the annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HorizontalLineAnnotation">
            <summary>
            Provides a light weight UIElement that displays a horizontal line on chart. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineAnnotation">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.LineAnnotation"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineAnnotation.ShowLineProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.ShowLine"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineAnnotation.LineCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.LineCap"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.OnDragCompleted(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Updates the drag completed interactions.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">The drag completed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.CloneAnnotation(Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Clones the annotation.
            </summary>
            <param name="annotation">The annotation.</param>
            <returns>Returns the cloned annotation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.DrawLine(System.Windows.Point,System.Windows.Point,System.Windows.Shapes.Shape)">
            <summary>
            Draws the line.
            </summary>
            <param name="point">The first point.</param>
            <param name="point2">The second point.</param>
            <param name="shape">The shape to be used.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.SetTextElementPosition(System.Windows.Point,System.Windows.Point,System.Windows.Size,System.Windows.Point,System.Windows.Controls.ContentControl)">
            <summary>
            Sets the text element position.
            </summary>
            <param name="point">The first point.</param>
            <param name="point2">The second point.</param>
            <param name="desiredSize">The desired size.</param>
            <param name="positionedPoint">The position point.</param>
            <param name="textElement">The text element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.GetTextPosition(System.Windows.Size,System.Windows.Point,System.Windows.Size)">
            <summary>
            Gets the text position.
            </summary>
            <param name="desiredSize">The desired size.</param>
            <param name="originalPosition">The original position.</param>
            <param name="textSize">The text size.</param>
            <returns>Returns the text position after the alignment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.SetBindings">
            <summary>
            Sets the binding between the annotation and <see cref="T:System.Windows.UIElement"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.AddLine">
            <summary>
            Add the line into Canvas
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.RemoveLine">
            <summary>
            Remove the line from Canvas
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.GrabExtent">
            <summary>
            Gets or sets the grab extent for the dragging line annotation.
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.ShowLine">
            <summary>
            Gets or sets a value indicating whether to show the line or not.
            </summary>
            <value>
             if <c>true</c>, Line will be visible.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.LineCap">
            <summary>
            Gets or sets the line cap for the <c>LineAnnotation</c>.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.LineCap"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.HorizontalChange">
            <summary>
            Gets or sets the horizontal change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.VerticalChange">
            <summary>
            Gets or sets the vertical change.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.ShowAxisLabelProperty">
            <summary>
            The Dependencyproperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.ShowAxisLabel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.LabelPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.LabelPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelAlignmentProperty">
            <summary>
            The Dependencyproperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelAlignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragStarted">
            <summary>
            Occurs when annotation drag is started.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragDelta">
            <summary>
            Occurs while dragging the annotation.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragCompleted">
            <summary>
            Occurs when annotation drag is completed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.Selected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes selected.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.UnSelected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelTemplate">
            <summary>
            Gets or sets the custom template for the axis label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.ShowAxisLabel">
            <summary>
            Gets or sets a value indicating whether to enable or disable the annotation label displaying in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelAlignment">
            <summary>
            Gets or sets annotation axis label at start, end and center alignment.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.LabelAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.LabelPosition">
            <summary>
            Gets or sets the position for the annotation axis label, either inside or outside of the plot area.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.AxisElementPosition"/>
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLineAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLineAnnotation.UpdateHitArea">
            <summary>
            Upates the hit rect.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ImageAnnotation">
            <summary>
            Provides a light weight UIElement that displays image on chart. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SingleAnnotation"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.AngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Angle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Y2Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Y2"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.X2Property">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.X2"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.HorizontalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.VerticalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.ImageSourceProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.ImageSource"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ImageAnnotation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ImageAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Angle">
            <summary>
            Gets or sets the rotation angle for the <c>Annotation</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.ImageSource">
            <summary>
            Gets or sets the source for the image to be added as annotation.
            </summary>
            <value>
            This accepts <see cref="T:System.Windows.Media.ImageSource"/> as value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Y2">
            <summary>
            Gets or sets the Y2 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.X2">
            <summary>
            Gets or sets the X2 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            <see cref="T:System.Windows.HorizontalAlignment"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>
            <see cref="T:System.Windows.VerticalAlignment"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TextAnnotation.AngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TextAnnotation.Angle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TextAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TextAnnotation.GetRenderedAnnotation">
            <summary>
            Returns the annotation UI element
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TextAnnotation.Angle">
            <summary>
            Gets or sets the rotation angle for Annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.HorizontalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.VerticalTextAlignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.UpdateAnnotation">
            <summary>
            Updates the annotation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.UpdateHitArea">
            <summary>
            Upates the hit rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            The <see cref="T:System.Windows.HorizontalAlignment"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>
            The <see cref="T:System.Windows.VerticalAlignment"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior"/> displays tooltip for the data points nearer to mouse over position or at touch contact point inside a chart area when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowTooltip"/> property is <c>true</c>.
            </summary>
            <example>
            # [XAML](#tab/tabid-1)
            <code language="XAML">
            &lt;syncfusion:SfChart&gt;
               &lt;syncfusion:SfChart.Behaviors&gt;
                   &lt;syncfusion:ChartTooltipBehavior/&gt;
               &lt;/syncfusion:SfChart.Behaviors&gt;
            &lt;/syncfusion:SfChart&gt;
            </code>
            # [C#](#tab/tabid-2)
            <code language="C#">
            ChartTooltipBehavior tooltip = new ChartTooltipBehavior();
            chartArea.Behaviors.Add(tooltip);
            </code>
            </example>
            <remarks>
            <para> 
            The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior"/> is commonly used for all series to customize the tooltip. 
            You can use the attached <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltip"/> properties in a series if you need to customize the appearance of the tooltip based on a particular series. 
            Series attached properties is considered as high precedence.</para>
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartBehavior">
            <summary>
            ChartBehavior is an abstract base class for behaviors which can be added to <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> 
            </summary>
            <remarks>
            You can handle the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> events directly in Chart behavior, which will be helpful in designing the Chart application in MVVM pattern. 
            You can add a custom behavior to the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> by inheriting a class from the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartBehavior"/>.
            You can also add ui elements to the Chart by making use of the top layer canvas returned from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.AdorningCanvas"/> property,which can be used to place the ui
            elements at desired positions in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.  
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>
            <seealso cref="!:ChartTrackballBehavior"/>
            <seealso cref="!:ChartCrosshairBehavior"/>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>.
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:SfChart.Behaviors&gt;
                        &lt;syncfusion:ChartZoomPanBehavior/&gt;
                    &lt;/syncfusion:SfChart.Behaviors&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                ChartZoomPanBehavior zoomPanBehavior = new ChartZoomPanBehavior();
                chartArea.Behaviors.Add(zoomPanBehavior);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBehavior.chartAxis">
            <summary>
            Used to specify corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.#ctor">
            <summary>
            Called when instance created for ChartBehavior.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.Clone">
            <summary>
            Returns the clone behavior.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnLayoutUpdated">
            <summary>
            Called when layout updated.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.DetachElement(System.Windows.UIElement)">
            <summary>
            Method implementation for DetachElement.
            </summary>
            <param name="element">UIElement</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when size changed.
            </summary>
            <param name="e">SizeChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when drag action enter into the chart area.
            </summary>
            <param name="e">DragEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when drag action leave from the chart area.
            </summary>
            <param name="e">DragEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when drag action over in the chart area.
            </summary>
            <param name="e">DragEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when drop the cursor in the chart area.
            </summary>
            <param name="e">DragEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when got focus in UIElement.
            </summary>
            <param name="e">RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when lost the focus in the chart.
            </summary>
            <param name="e">RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when mouse wheel on the chart.
            </summary>
            <param name="e">MouseWheelEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse entered into the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leave from the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnTouchDown(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch down in the chart.
            </summary>
            <param name="e">Touch event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnTouchMove(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch move in the chart.
            </summary>
            <param name="e">Touch event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnTouchUp(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch up in chart.
            </summary>
            <param name="e">Touch event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when pointer key up in the chart.
            </summary>
            <param name="e">KeyEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when pointer key down in the chart area.
            </summary>
            <param name="e">KeyEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button clicked.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button released.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when manipulation started.
            </summary>
            <param name="e">ManipulationStartedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when manipulation completed.
            </summary>
            <param name="e">ManipulationCompletedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when manipulation delta is changed.
            </summary>
            <param name="e">ManipulationDeltaEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDoubleTapped(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Method implementation for OnDoubleTapped.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.AlignDefaultLabel(Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Double,System.Double,System.Windows.Controls.ContentControl)">
            <summary>
            Align the element inside the content control. 
            </summary>
            <param name="verticalAlignemnt">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="x">The X location</param>
            <param name="y">The Y location</param>
            <param name="control">Used to specify corresponding content control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.AttachElements">
            <summary>
            Method implementation for attach elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.GetYValuesBasedOnIndex(System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return collection of double values from the given ChartSeries.
            </summary>
            <param name="x">x-position</param>
            <param name="series">ChartSeriesBase</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.UpdateArea">
            <summary>
            Method implementation for UpdateArea in chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.AdorningCanvas">
            <summary>
            Gets the top layer Canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.BottomAdorningCanvas">
            <summary>
            Gets the bottom layer Canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.ChartArea">
            <summary>
            Gets the owner Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalAlignment"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalAlignment"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalAlignment"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalAlignment"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffsetProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffset"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffset"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffsetProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffset"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffset"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.InitialShowDelayProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.InitialShowDelay"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.InitialShowDelay"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.ShowDurationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.ShowDuration"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.ShowDuration"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.EnableAnimationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.EnableAnimation"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.EnableAnimation"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.PositionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Position"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Position"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.StyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Style"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Style"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.LabelStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.LabelStyle"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.LabelStyle"/> dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.MarginProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Margin"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Margin"/> dependency property.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.CloneBehavior(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior"/>.
            </summary>
            <param name="obj">object.</param>
             <returns>The cloned <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior"/>.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of tooltip label with respect to the cursor position.
            </summary>
            <value>
            <c>HorizontalAlignment</c>. The default value is <c>HorizontalAlignment.Center</c>.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" HorizontalAlignment="Right"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.HorizontalAlignment = HorizontalAlignment.Right;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of tooltip label with respect to the cursor position.
            </summary>
            <value>
            <c>VerticalAlignment</c>. The default value is <c>VerticalAlignment.Top</c>.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" VerticalAlignment="Bottom"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.VerticalAlignment = VerticalAlignment.Bottom;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffset">
            <summary>
            Gets or sets the value to position the tooltip at a distance from the cursor horizontally.
            </summary>
            <value>
            <c>double</c>. The default value is 0.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffset"/> property and the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffset"/> property values provide additional adjustment to position the tooltip. 
            </remarks>
            <example>
            # [XAML](#tab/tabid-1)
            <code language="XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" HorizontalOffset="10"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language="C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.HorizontalOffset = 10;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffset">
            <summary>
            Gets or sets the value to position the tooltip at a distance from the cursor vertically.
            </summary>
            <value>
            <c>double</c>. The default value is 0.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.HorizontalOffset"/> property and the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.VerticalOffset"/> property values provide additional adjustment to position the tooltip.
            </remarks>
            <example>
            # [XAML](#tab/tabid-1)
            <code language="XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
                <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" VerticalOffset="10"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language="C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.VerticalOffset = 10;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.InitialShowDelay">
            <summary>
            Gets or sets the delay in milliseconds to show the tooltip once user interact with series.
            </summary>
            <value>
            <c>integer</c>. The default value is 0 milliseconds.
            </value>
            <remarks>
            Used to specify the amount of time before the user has to wait when hover the mouse or touch on chart series in milliseconds before tooltip display.
            <para><b>Note:</b> Initial delay only works for the positive values.</para>
            </remarks>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" InitialShowDelay="1000"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.InitialShowDelay = 1000;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.ShowDuration">
            <summary>
            Gets or sets the amount of time that the tooltip remains visible in milliseconds.
            </summary>
            <value>
            <c>integer</c>. The default value is 1000 milliseconds.
            </value>
            <remarks>
            This property defines the time that a tooltip remains visible while the user pauses the mouse pointer over the chart series area that defines the tooltip.
            </remarks>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" ShowDuration="3000"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.ShowDuration = 3000;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.EnableAnimation">
            <summary>
            Gets or sets the value that indicates whether to enable the animation when showing tooltip.
            </summary>
            <value>
            <c>bool</c>. The default value is <c>true</c>.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
                <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" EnableAnimation="true"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.EnableAnimation = true;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Position">
            <summary>
            Gets or sets a value that indicates whether to position the tooltip at data point position or at cursor position.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.TooltipPosition"/>. The default value is <see cref="F:Syncfusion.UI.Xaml.Charts.TooltipPosition.Auto"/>.
            </value>
            <remarks>
            <para>When the <see cref="T:Syncfusion.UI.Xaml.Charts.TooltipPosition"/> is set as <see cref="F:Syncfusion.UI.Xaml.Charts.TooltipPosition.Auto"/> the tooltip will be displayed at the data point position while hover mouse inside any chart segment.
            If the <see cref="T:Syncfusion.UI.Xaml.Charts.TooltipPosition"/> is set as <see cref="F:Syncfusion.UI.Xaml.Charts.TooltipPosition.Pointer"/> then the tooltip will be displayed in conjunction with the mouse pointer itself while hover mouse inside any chart segment.</para>
            </remarks>
            <example>
            # [XAML](#tab/tabid-1)
            <code language="XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
                <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" Position="Pointer"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language="C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.Position = TooltipPosition.Pointer;
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Style">
            <summary>
            Gets or sets the style to customize the fill and stroke of tooltip.
            </summary>
            <value>
            The <c>Style</c> for tooltip.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <syncfusion:SfChart.Resources>
                <Style TargetType="Path" x:Key="style">
                   <Setter Property="Stroke" Value="Black"/>
                   <Setter Property="Fill" Value="Gray"/>
                </Style>
            </syncfusion:SfChart.Resources>
            <syncfusion:SfChart.Behaviors>
                <syncfusion:ChartTooltipBehavior Style = {StaticResource style}/>
            </syncfusion:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            SfChart chart = new SfChart();
            Style style = new Style(typeof(Path));
            style.Setters.Add(new Setter(Path.StrokeProperty, new SolidColorBrush(Colors.Black)));
            style.Setters.Add(new Setter(Path.FillProperty, new SolidColorBrush(Colors.Gray)));
            ChartTooltipBehavior tooltipBehavior = new ChartTooltipBehavior();
            tooltipBehavior.Style = style;
            chart.Behaviors.Add(tooltipBehavior);
            ]]>
            </code>
            </example>
            <remarks>
            To define a <c>Style</c> for tooltip, specify the style of TargetType as <c>Path</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.LabelStyle">
            <summary>
            Gets or sets the style to customize the tooltip label.
            </summary>
            <value>
            The <c>Style</c> for tooltip label.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <syncfusion:SfChart.Resources>
                <Style TargetType="TextBlock" x:Key="labelStyle">
                   <Setter Property="FontSize" Value="14"/>
                   <Setter Property="Foreground" Value="Red"/>
                </Style>
            </syncfusion:SfChart.Resources>
            <syncfusion:SfChart.Behaviors>
               <syncfusion:ChartTooltipBehavior LabelStyle = {StaticResource labelStyle}/>
            </syncfusion:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            SfChart chart = new SfChart();
            Style labelStyle = new Style(typeof(TextBlock));
            labelStyle.Setters.Add(new Setter(TextBlock.FontSizeProperty, 14d));
            labelStyle.Setters.Add(new Setter(TextBlock.ForegroundProperty, new SolidColorBrush(Colors.Red)));
            ChartTooltipBehavior tooltipBehavior = new ChartTooltipBehavior();
            tooltipBehavior.LabelStyle = labelStyle;
            chart.Behaviors.Add(tooltipBehavior);
            ]]>
            </code>
            </example>
            <remarks>
            To define a <c>Style</c> for tooltip label, specify the style of TargetType as <c>TextBlock</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior.Margin">
            <summary>
            Gets or sets the value that used to set margin for tooltip label.
            </summary>
            <value>
            <c>Thickness</c>. The default value of margin is 0.
            </value>
            <example>
            # [XAML](#tab/tabid-1)
            <code language = "XAML">
            <![CDATA[
            <chart:SfChart.Behaviors>
               <chart:ChartTooltipBehavior x:Name="chartTooltipBehavior" Margin="5,5,5,5"/>
            </chart:SfChart.Behaviors>
            ]]>
            </code>
            # [C#](#tab/tabid-2)
            <code language = "C#">
            <![CDATA[
            ChartTooltipBehavior chartTooltipBehavior = new ChartTooltipBehavior();
            chartTooltipBehavior.Margin = new Thickness(5);
            chart.Behaviors.Add(chartTooltipBehavior);
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D">
            <summary>
            Represents a control that display the label, ticks and lines for axis in 2D. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.AutoScrollingModeProperty">
             <summary>
            Using a DependencyProperty as the backing store for AutoScrollingMode.  This enables animation, styling, binding, etc... 
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.AutoScrollingDeltaProperty">
            <summary>
            Using a DependencyProperty as the backing store for AutoScrollingDelta.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.PolarAngleProperty">
            <summary>
            The Dependency property of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.PolarAngle"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderBrush"/> property 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ShowLabelBorderProperty">
            <summary>
            The Dependency property <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ShowLabelBorder"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderWidth"/> property 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.IncludeStripLineRangeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.IncludeStripLineRange"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.StripLinesProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.StripLines"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabelsProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabels"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabelsBorderTypeProperty">
            <summary>
            The Dependency Property for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabelsBorderType"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBarResizingProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBarResizing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBarProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.DeferredScrollingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.DeferredScrolling"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableTouchModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableTouchMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.#ctor">
            <summary>
            Called when instance created for ChartAxisBase2D
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.UpdateAutoScrollingDelta(System.Double)">
            <summary>
             Update Auto Scrolling Delta value  based on auto scrolling delta mode option.
            </summary>
            <param name="scrollingDelta">The scroll delta region to be captured.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.OnAxisBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Called when the axis bounds changed.
            </summary>
            <param name="args">Which indicates <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableZoomingToolBarState">
            <summary>
            This method is used enables or diasable zooming tool bar item based on zoom position and zoom factor
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelClicked">
            <summary>
            It invokes when axis label clicked. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.AutoScrollingMode">
            <summary>
            Gets or sets the mode to determine whether the axis should be auto scrolled at start or end position by using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode"/> enum type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.AutoScrollingDelta">
            <summary>
            Gets or sets the value that determines the range of value to be visible during auto scrolling. This is a bindable property.
            </summary>
            <value>This property takes the double value</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPosition">
            <summary>
            Gets or sets the value, between 0 to 1, that indicates the start position in the actual range of the axis.
            </summary>
            <remarks>This scrolls or pan the chart to particular range.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactor">
            <summary>
            Gets or sets the value, between 0 to 1, that indicates the zoom level of the axis.
            </summary>
            <value>Value must fall within 0 to 1.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.PolarAngle">
            <summary>
            Gets or sets the start angle Polar or radar series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderBrush">
            <summary>
            Gets or sets the LabelBorderBrush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ShowLabelBorder">
            <summary>
            Gets or sets a value indicating whether to show the border around axis label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabels">
            <summary>
            Gets or sets the multi level labels collection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.MultiLevelLabelsBorderType">
            <summary>
            Gets or sets the BorderType for Multi level labels
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.IncludeStripLineRange">
            <summary>
            Gets or sets a value indicating whether to enable the axis to include the annotation range, while calculating the axis range.
            </summary>
            <remarks>This feature is to avoid cropping or missing of annotation, which doesn't falls inside the axis range.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.StripLines">
            <summary>
            Gets or sets the striplines collection for the SfChart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBarResizing">
            <summary>
            Gets or sets a value indicating whether to enable the legacy style for the scroll bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBar">
            <summary>
            Gets or sets a value indicating whether to enable the scrollbar for the SfChart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.DeferredScrolling">
            <summary>
            Gets or sets a value indicating whether to enable scrollbar to suspend value updates for every thumb value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.LabelBorderWidth">
            <summary>
            Gets or sets the LabelBorderWidth
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableTouchMode">
            <summary>
            Gets or sets a value indicating whether to enable or disable touch mode for the scroll bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.AxisStyle">
            <summary>
            Gets or sets the style for axis it will get notify to update the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ActualZoomFactor">
            <summary>
            Gets or sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisLabelClickedEventArgs">
            <summary>
            Class implementation for axis label clicked event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelClickedEventArgs.AxisLabel">
            <summary>
            Gets the chart axis label for further customization.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak">
            <summary>
            Chart enables the user to break the scale of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> by adding scale breaks to it.
            </summary>
            <remarks>
            The scale break appearance can be customized.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.BreakPercentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.BreakPercent"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.Stroke"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.Clone">
            <summary>
            Clone the axis breaks
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.BreakSpacing">
            <summary>
            Gets or sets the scale break spacing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreak.BreakPercent">
            <summary>
            Gets or sets the percent where breaks will be positioned at the specified percent of the area.
            This will be considered when the enum BreakPosition is set to Percent mode.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.StartProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Start"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.EndProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.End"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.LevelProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Level"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.TextProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Text"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontSizeProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontSize"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.ForegroundProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Foreground"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontFamilyProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontFamily"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.LabelAlignmentProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.LabelAlignment"/> property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.#ctor">
            <summary>
            Intializes a new instance for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel"/> class
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Clone">
            <summary>
            To clone the ChartMultiAxisLabel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnStartPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Start"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnEndPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.End"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnLevelPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Level"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Text"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnFontSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontSize"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.OnLabelAlignmentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.LabelAlignment"/> property changed event call back.
            </summary>
            <param name="d">Dependency Object</param>
            <param name="e">Event Args</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Start">
            <summary>
            Gets or sets the start value for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.End">
            <summary>
            Gets or sets the end value for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Level">
            <summary>
            Gets or sets the label level
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Text">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontSize">
            <summary>
            Gets or sets the fontsize for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.Foreground">
            <summary>
            Gets or sets the brush for label's foreground
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.FontFamily">
            <summary>
            Gets or sets the font family for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel.LabelAlignment">
            <summary>
            Gets or sets alignment for label placement
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis">
            <summary>
            Represents a DateTime indexed axis. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.IntervalProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.IntervalTypeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.IntervalType"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Create VisibleLabels for DateTime axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GetLabelContent(System.Int32,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return object value from the given double value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.IntervalType">
            <summary>
            Gets or sets the type of interval to be displayed in axis.
            </summary>
            <remarks>
                This property hold the values ranges from Year, Months to Milliseconds.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.LabelPlacement)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="interval"></param>
            <param name="labelPlacement"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.GetLabelContent(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="axis"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.LabelPlacement)">
            <summary>
            Method implementation for Generate Visiblie labels for CategoryAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size,System.Object)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="availableSize"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">The axis.</param>
            <param name="intervalType">Type of the interval.</param>
            <param name="minimum"></param>
            <param name="maximum"></param>
            Method implementation for Create VisibleLabels for DateTime axis
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Generates the visible labels3D.
            </summary>
            <param name="axis">The axis.</param>
            <param name="intervalType">Type of the interval.</param>
            <param name="maximum"></param>
            <param name="minimum"></param>
            Method implementation for Create VisibleLabels for DateTime axis
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.GetTransitionState(System.Double@,System.DateTime,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Method to depict the distinct data in dateTime axis transition.
            </summary>
            <param name="distinctDate"></param>
            <param name="currentDate"></param>
            <param name="intervalType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Double)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="availableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.DateTimeRangePadding,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="interval"></param>
            <param name="rangePadding"></param>
            <param name="intervalType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="axis"></param>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">Used to specify the acutal axis.</param>
            <param name="maximum">Used to indicate axis maximum.</param>
            <param name="minimum">Used to indicate axis minimum.</param>
            <param name="actualInterval">Used to indicate actual interval.</param>
            <param name="logBase">Used to indicate <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBase"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis3D
            </summary>
            <param name="axis">Used to specify the acutal axis.</param>
            <param name="maximum">Used to indicate axis maximum.</param>
            <param name="minimum">Used to indicate axis minimum.</param>
            <param name="actualInterval">Used to indicate actual interval.</param>
            <param name="logBase">Used to indicate <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBase"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.AddSmallTicksPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="axis">The axis.</param>
            <param name="position">The position.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.OnMinMaxChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Double)">
            <summary>
            Called when [minimum maximum changed].
            </summary>
            <param name="axis">The axis.</param>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateActualRange(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Calculates actual range
            </summary>
            <param name="axis">The axis.</param>
            <param name="range">The range.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Object)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="avalableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
            <param name="maximum"></param>
            <param name="minimum"></param>
            <param name="actualInterval"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis3D
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
            <param name="minimum"></param>
            <param name="maximum"></param>
            <param name="actualInterval"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.OnMinMaxChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object)">
            <summary>
            Called when [minimum maximum changed].
            </summary>
            <param name="axis">The axis.</param>
            <param name="maximum">The maximum.</param>
            <param name="minimum">The minimum.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.NumericalPadding)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis">The axis.</param>
            <param name="range">The range.</param>
            <param name="interval">The interval.</param>
            <param name="rangePadding">The range padding.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Object)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="avalableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBaseHelper.AddSmallTicksPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double,System.Double,System.Int32)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="axis">The axis.</param>
            <param name="position">The position.</param>
            <param name="interval">The interval.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBaseHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">Used to specify the acutal axis.</param>
            <param name="maximum">Used to indicate axis maximum.</param>
            <param name="minimum">Used to indicate axis minimum.</param>
            <param name="actualInterval">Used to indicate actual interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">Used to specify the acutal axis.</param>
            <param name="maximum">Used to indicate axis maximum.</param>
            <param name="minimum">Used to indicate axis minimum.</param>
            <param name="actualInterval">Used to indicate actual interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="interval">The interval.</param>
            <param name="avalableSize">Size of the available.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSeries">
            <summary>
            BarSeries represents its datapoint using a set of horizontal rectangles.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:BarSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:BarSeries&gt;
            </code>
            <code language="C#">
                  BarSeries series1 = new BarSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>    
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase">
            <summary>
            XySegmentDraggingBase is abstract class which is used to allow, drag a segment in a chart series.
            </summary>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableSegmentDragging"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyDataSeries">
            <summary>
            Class implementation for XyDataseries 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CartesianSeries">
            <summary>
            Serves as a base class for all the Cartesian chart types used to visualize data points in Cartersian coordinate system.
            </summary>
            <example>
            <code language = "XAML" >
                  &lt;syncfusion:BarSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:BarSeries&gt;
            </code>
            <code language= "C#" >
                  BarSeries series1 = new BarSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentSeries">
            <summary>
            Represents a ChartSeries that displays data in a customizable chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries">
            <summary>
            Represents a base class for all series in chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GetDataPointIndex(System.Double,System.Double)">
            <summary>
            This method used to get the SfChart data index at an SfChart co-ordinates
            </summary>
            <param name="x">Used to specify X co-ordinates</param>
            <param name="y">Used to specify Y co-ordinates</param>
            <returns>Returns data index of type <c>int</c></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Method used to gets the byte value of given color.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
            This method used to get the chart data index at an SfChart co-ordinates
            </summary>
            <param name="point">Used to indicate the current x and y co-ordinates</param>
            <returns>Returns data index of type <c>int</c></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GeneratePixels">
            <summary>
            This method used to generate bitmap segment pixels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.OnBitmapSelection(System.Collections.Generic.List{System.Int32},System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Method is used to select/reset the bitmap segment.
            </summary>
            <param name="pixels"></param>
            <param name="brush"></param>
            <param name="isSelected"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of this series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.OnCreateAutomationPeer">
            <summary>
            Returns class-specific System.Windows.Automation.Peers.AutomationPeer implementations for the WPF infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.CreateSegment">
             <summary>
             Creates an instance of series segment.
             </summary>
             <example>
             This sample shows how to call the <see cref="M:Syncfusion.UI.Xaml.Charts.ChartSeries.CreateSegment"/> method to customize the line series segments.
             <code>
             public class LineSeriesExt : LineSeries
             {​ 
                 protected override ChartSegment CreateSegment()
                 {​
                     return new LineSegmentExt();
                 }​
             }​
            
             public class LineSegmentExt : LineSegment
             {​
                 public override UIElement CreateVisual(Size size)
                 {​
                     // Write your customization code here.
                 }​
            
                 public override void Update(IChartTransformer transformer)
                 {​
                     // Write your customization code here.
                 }​
             }
             </code>
             </example>
             <returns>
             Returns the instance of corresponding series segment.
             </returns>
             <remarks>
             This customization is not supported for fast type series and technical indicators.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThickness">
            <summary>
            Gets or sets the value that specifies the stroke thickness of chart series. This is a bindable property.
            </summary>
            <remarks>
            The default value is 2.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.Area">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.Stroke">
            <summary>
            Gets or sets a brush that specifies the stroke color for chart series to customize its appearance. This is a bindable property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <remarks>Use ChartSeries Color property to change the line color of StackingLineSeries and StackingLine100Series.</remarks> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfoProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfo"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for create Adornments.
            </summary>
            <param name="series">series</param>
            <param name="xVal">xvalue</param>
            <param name="yVal">yvalue</param>
            <param name="xPos">xposition</param>
            <param name="yPos">yposition</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddColumnAdornments(System.Double[])">
            <summary>
            Method implementation for add ColumnAdornments in Chart.
            </summary>
            <param name="values">values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddAdornmentAtXY(System.Double,System.Double,System.Int32)">
            <summary>
            Method implementation for add Adornments at XY.
            </summary>
            <param name="x">xvalue</param>
            <param name="y">yvalue</param>
            <param name="pointindex">index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddAreaAdornments(System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Method implementation for add AreaAdornments in Chart.
            </summary>
            <param name="values">values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.ClearUnUsedAdornments(System.Int32)">
            <summary>
            Method implementation for clear unused adornments.
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfo">
            <summary>
            <para>Gets or sets data labels for the series.</para> <para>This allows us to customize the appearance of a data point by displaying labels, shapes and connector lines.</para>
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/> value.
            </value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentLabelCreated">
            <summary>
            Occurs when the adornment labels is created. This event is used for internal purpose only.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISupportAxes2D">
            <summary>
            Interface implementation for support axis for 2D chart 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes2D.YAxis">
            <summary>
             Gets or sets YAxis property
             </summary>
             <value>It takes the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase"/> value.</value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes2D.XAxis">
            <summary>
            Gets or sets XAxis property
            </summary>
            <value>It takes the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D"/> value.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.TrendlinesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.Trendlines"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.IsTransposedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.IsTransposed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballInfoProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballInfo"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.#ctor">
            <summary>
            Called when instance created for CartesianSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.CreateTrendline">
            <summary>
            Create trend line for series
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.UpdateOnSeriesBoundChanged(System.Windows.Size)">
            <summary>
            Update series bound
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.CalculateSegments">
            <summary>
            Calculate Segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis created or changed.
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis created or changed.
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of this series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.GetDataPoints(System.Windows.Rect)">
            <summary>
            Method to get the visible range data points.
            </summary>
            <returns>The data points.</returns>
            <param name="rectangle">The Rectangle.</param>
            <remarks>
            This method will work only after render the series in visual.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.GetDataPoints(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method to get the data points from the given range.
            </summary>
            <param name="startX">start x</param>
            <param name="endX">end x</param>
            <param name="startY">start y</param>
            <param name="endY">end y</param>
            <returns>The data points</returns>
            <remarks>
            This method will work only after render the series in visual.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.Trendlines">
            <summary>
            Gets or sets the trendline collection for this series.
            </summary>
            <remarks>
            Trends consider only non empty sets of corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.CartesianSeries"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.XRange">
            <summary>
            Gets or sets the x axis range corresponding to this series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.YRange">
            <summary>
            Gets or sets the y axis range corresponding to this series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxis">
            <summary>
            Gets or sets the additional x axis for this series.
            </summary>
            <remarks>
            This property is used to add multiple axis in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </remarks>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ColumnSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010"&gt;
                         &lt;syncfusion:ColumnSeries.XAxis&gt;
                              &lt;syncfusion:NumericalAxis Header="Additional X Axis"/&gt;
                         &lt;/syncfusion:ColumnSeries.XAxis&gt;
                     &lt;/syncfusion:ColumnSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxis">
            <summary>
            Gets or sets the additional y axis for this series.
            </summary>
            <remarks>
            This property is used to add multiple axis in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </remarks>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ColumnSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010"&gt;
                         &lt;syncfusion:ColumnSeries.YAxis&gt;
                              &lt;syncfusion:NumericalAxis Header="Additional Y Axis"/&gt;
                         &lt;/syncfusion:ColumnSeries.YAxis&gt;
                     &lt;/syncfusion:ColumnSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.IsTransposed">
            <summary>
            Gets or sets a value indicating whether to exchange the orientation of the series.
            </summary>
            <value>
                <c>True</c> exchanges the horizontal axis to vertical and vice versa. 
                <c>False</c> is the default behavior.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballInfo">
            <summary>
            Gets or sets a value indicating whether to show/hide the series information.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.#ctor">
            <summary>
            Called when instance created for XyDataSeries 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GenerateColumnPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GenerateBarPixels">
            <summary>
            This method used to gets the selected data point segment pixel positions 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GetDataPoint(System.Int32)">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GeneratePixels">
            <summary>
            This method used to get the chart data at an index.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.XyDataSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath">
             <summary>
             Gets or sets the property name that associates the secondary axis with a property in the itemssource.
             </summary>
             <value>
             The string that represents the property name for secondary axis. The default value is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:ColumnSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 ColumnSeries series = new ColumnSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YValues">
            <summary>
            Gets or sets the y values collection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableDragTooltipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableDragTooltip"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragTooltipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragTooltipTemplate"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RoundToDecimalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RoundToDecimal"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SnapToPointProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SnapToPoint"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableSegmentDraggingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableSegmentDragging"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateSourceProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateSource"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragCancelKeyModifiersProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragCancelKeyModifiers"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateDragSpliter(System.Windows.FrameworkElement,Syncfusion.UI.Xaml.Charts.ChartSegment,System.String)">
            <summary>
            Updates the drag spliter.
            </summary>
            <param name="rect">Used to specifies corresponding element rect</param>
            <param name="indexSegment">Used to specifies corresponding segment</param>
            <param name="position">Used to indicate drag position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ActivateDragging(System.Windows.Point,System.Object)">
            <summary>
            Activates the dragging.
            </summary>
            <param name="mousePos">The mouse position.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c> [drag end event].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ResetDragSpliter">
            <summary>
            Resets the drag spliter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for ChartDragStart.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for ChartDragDelta.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for ChartDragEnd
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for ChartDragEnter.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnChartDragExited(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for ChartDragExit.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button down.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button up.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse entered.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leave.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragStart(Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs)">
            <summary>
            Raises the drag start.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragEnd(Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs)">
            <summary>
            Raises the drag end.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragDelta(Syncfusion.UI.Xaml.Charts.DragDelta)">
            <summary>
            Raises the drag delta.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragEnter(Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs)">
            <summary>
            Raises the drag enter.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaisePreviewEnd(Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs)">
            <summary>
            Raises the preview end.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateUnderLayingModel(System.String,System.Int32,System.Object)">
            <summary>
            Updates the under laying model.
            </summary>
            <param name="path">The path.</param>
            <param name="index">The index.</param>
            <param name="updatedData">The updated data.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SegmentEnter">
            <summary>
            Occurs when [segment enter].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragStart">
            <summary>
            Occurs when [drag start].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragDelta">
            <summary>
            Occurs when [drag delta].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragEnd">
            <summary>
            Occurs when [drag end].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.PreviewDragEnd">
            <summary>
            Occurs when [preview drag end].
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragTooltipStyle">
            <summary>
            Gets or sets dragging tooltip style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableDragTooltip">
            <summary>
            Gets or sets a value indicating whether dragging tooltip is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragTooltipTemplate">
            <summary>
            Gets or sets the custom template for dragging tooltip/&gt;.
            </summary>
            <value>
            This accepts a DataTemplate.
            </value>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RoundToDecimal">
            <summary>
            Gets or sets a property used to round the decimal value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SnapToPoint">
            <summary>
            Gets or sets snap point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EnableSegmentDragging">
            <summary>
            Gets or sets a value indicating whether segment dragging is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateSource">
            <summary>
            Gets or sets a value indicating whether to update the dragging values in source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragCancelKeyModifiers">
            <summary>
            Gets or sets a value indicating whether to cancel the dragging
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SegmentIndex">
            <summary>
            Gets or sets a segment index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragSpliter">
            <summary>
            Gets or sets a value for drag splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DraggedXValue">
            <summary>
            Gets or sets a value for dragged xvalue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DraggedValue">
            <summary>
            Gets or sets a value for dragged yvalue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.Tooltip">
            <summary>
            Gets or sets the dragging tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragInfo">
            <summary>
            Gets or sets the dragging info.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.EllipseAnimation">
            <summary>
            Gets or sets ellipse animation.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISegmentSelectable">
            <summary>
            Defines members and methods necessary to customize the display of selected segment in a <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISegmentSelectable.SegmentSelectionBrush">
            <summary>
            Gets or sets SegmentSelectionBrush property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISegmentSelectable.SelectedIndex">
            <summary>
            Gets or sets SelectionIndex property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSpacing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BarSeries.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BarSeries.CustomTemplate"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.#ctor">
            <summary>
            Called when instance created for BarSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CreateSegments">
            <summary>
            Creates the segments of BarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging series.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging end.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging entered.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CreateSegment(System.Double[],System.Object,System.Double,System.Double)">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.BarSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
            <param name="actualData">The actualData.</param>
            <param name="xValue">The xValue.</param>
            <param name="yValue">The yValue.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value> 
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" ScatterHeight="40" 
                                   YBindingPath="Year2010" ScatterWidth="40"&gt;
                        &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" 
                                   Stretch="Fill" Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                   Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior">
            <summary>
            ChartCrossHairBehavior enables viewing of informations related to Chart coordinates, at mouse over position or at touch contact point inside a Chart.
            </summary>
            <remarks>
            ChartCrossHairBehavior displays a vertical line, horizontal line and a popup like control displaying information about the data point
            at touch contact point or at mouse over position. You can also customize the look of cross hair and information displayed in a label.
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior"/>.
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:SfChart.Behaviors&gt;
                        &lt;syncfusion:ChartCrossHairBehavior/&gt;
                    &lt;/syncfusion:SfChart.Behaviors&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                ChartCrossHairBehavior crossHair = new ChartCrossHairBehavior();
                chartArea.Behaviors.Add(crossHair);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalAxisLabelAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalAxisLabelAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalAxisLabelAlignmentProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalAxisLabelAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.CurrentPoint">
            <summary>
            Used to specify the current location. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when size changed.
            </summary>
            <param name="e">SizeChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button was pressed in chart.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leave from the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnLayoutUpdated">
            <summary>
            Called when the layout updated from chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button was released.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AlignDefaultLabel(Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Double,System.Double,System.Windows.Controls.ContentControl)">
            <summary>
            Align the element inside the content control. 
            </summary>
            <param name="verticalAlignemnt">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="x">The X location</param>
            <param name="y">The Y location</param>
            <param name="control">Used to specify corresponding content control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.SetPosition(System.Windows.Point)">
            <summary>
            Method implementation for set positions for given point.
            </summary>
            <param name="point">Point</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.GenerateLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Method implementation to generate trackball label for axis.
            </summary>
            <param name="pointInfo">ChartPointInfo</param>
            <param name="axis">ChartAxis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddLabel(System.Object,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate,System.Double,System.Double)">
            <summary>
            Method implementation for adding labels in Crosshair.
            </summary>
            <param name="obj">ChartPointInfo</param>
            <param name="verticalAlignemnt">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="labelTemplate">DataTemplate</param>
            <param name="x">The X location</param>
            <param name="y">The Y location</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate)">
            <summary>
            Method implementation for adding label in crosshair.
            </summary>
            <param name="obj">ChartPointInfo</param>
            <param name="verticalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="template">DataTemplate</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddElement(System.Windows.UIElement)">
            <summary>
            Method implementation for add elements in UIElement.
            </summary>
            <param name="element">UIElement</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalAxisLabelAlignment">
            <summary>
            Gets or sets the alignment for the label appearing in vertical axis.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalAxisLabelAlignment">
            <summary>
            Gets or sets the alignment for the label appearing in horizontal axis.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.PointInfos">
            <summary>
            Gets the collection of ChartPointInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalLineStyle">
            <summary>
            Gets or sets the style for horizontal line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalLineStyle">
            <summary>
            Gets or sets the style for vertical line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.IsActivated">
            <summary>
            Gets or sets a value indicating whether the crosshair is activated or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior">
            <summary>
            ChartSelectionBehavior enables the selection of segments in a Chart.
            </summary>
            <remarks>
            The selected segment can be displayed with a different color specified using SegmentSelectionBrush property available in corresponding series.
            ChartSelectionBehavior is applicable only to certain series such as <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>,
            <see cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>,
            <see cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>.
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>.
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:SfChart.Behaviors&gt;
                        &lt;syncfusion:ChartSelectionBehavior/&gt;
                    &lt;/syncfusion:SfChart.Behaviors&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                ChartSelectionBehavior selectionBehavior = new ChartSelectionBehavior();
                chartArea.Behaviors.Add(selectionBehavior);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSeriesSelectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSeriesSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSegmentSelectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSegmentSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionCursorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionCursor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get selection brush for series selection.
            </summary>
            <param name="series">ChartSeriesBase</param>
            <returns>Returns brush for selected segment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button was released.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button is clicked.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leaved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnSelectionChanging(Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs)">
            <summary>
            Invoked whenever the SelectionChanging event have raised.
            </summary>
            <param name="eventArgs">type of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnSelectionChanged(Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs)">
            <summary>
            Invoked whenever the SelectionChanged event have raised.
            </summary>
            <param name="eventArgs">type of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.Deselect">
            <summary>
            Called for deselecting the selected segment or series in MouseMove selection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.ChangeSelectionCursor(System.Boolean)">
            <summary>
            Method used to change the cursor for series and segments and adornments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.IsDraggableSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get the bool value for series or segment has dragging base.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseMoveSelection(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Object)">
            <summary>
            Method used to set SelectedIndex while mouse move in segment/adornment.
            </summary>
            <param name="series"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseDownSelection(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Object)">
            <summary>
            Method used to set SelectedIndex while mouse down in segment/adornment.
            </summary>
            <param name="series"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnBitmapSeriesMouseMoveSelection(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Method used to select bitmap series in mouse move.
            </summary>
            <param name="element"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.GetBitmapSeriesCollection(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Method used to get the fast series in the mouse point.
            </summary>
            <param name="element"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnBitmapSeriesMouseDownSelection(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Method used to select bitmap series in mouse down.
            </summary>
            <param name="element"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionMode">
            <summary>
            Gets or sets the selection mode value, which indicates that this series is how to selectable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSeriesSelection">
            <summary>
            Gets or sets a value indicating whether the series selection is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.EnableSegmentSelection">
            <summary>
            Gets or sets a value indicating whether the segment (or) datapoint selection is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionStyle">
            <summary>
            Gets or sets the SelectionStyle value that indicated the selection type in SfChart.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.SelectionStyle"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.SelectionCursor">
            <summary>
            Gets or sets the mouse cursor for the series, which indicates that the series selection cursor type.
            </summary>
            <remarks>
            Default value is null
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs">
            <summary>
            Represents chart segment selection changed event arguments.
            </summary>
            <remarks>
            It contains information like selected segment and series.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSeries">
            <summary>
            Gets the series which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.PreviousSelectedSeries">
            <summary>
            Gets the series which had been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSeriesCollection">
            <summary>
            Gets the series collection which has been selected through rectangle selection or mouse interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSegment">
            <summary>
            Gets the segment which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSegments">
            <summary>
            Gets the segments  collection which has been selected through rectangle selection or mouse interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.PreviousSelectedSegments">
            <summary>
            Gets the segments  collection which has been selected through rectangle selection or mouse interaction previously.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.PreviousSelectedSegment">
            <summary>
            Gets the segment which had been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedIndex">
            <summary>
            Gets the current index of the segment which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.PreviousSelectedIndex">
            <summary>
            Gets the previous index of the segment which had been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.IsSelected">
            <summary>
            Gets a value indicating whether the segment or series is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.IsDataPointSelection">
            <summary>
            Gets a value indicating whether the selection is segment selection or series selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.NewPointInfo">
            <summary>
            Gets the selected segment item value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.OldPointInfo">
            <summary>
            Gets the previous selected segment item value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs">
            <summary>
            Represents chart segment selection changing event arguments.
            </summary>
            <remarks>
            It contains information like selected segment and series.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedSeries">
            <summary>
            Gets the series which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedSegment">
            <summary>
            Gets the segment which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedSegments">
            <summary>
            Gets or sets the segments collection which has been selected through rectangle selection or mouse interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedIndex">
            <summary>
            Gets the current index of the segment which has been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.PreviousSelectedIndex">
            <summary>
            Gets the previous index of the segment which had been selected through mouse interaction or selected index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to avoid selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.IsDataPointSelection">
            <summary>
            Gets a value indicating whether the selection is segment selection or series selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.IsSelected">
            <summary>
            Gets a value indicating whether the segment or series is selected.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior">
            <summary>
            ChartTrackBallBehavior enables tracking of data points nearer to mouse over position or at touch contact point in a Chart.
            </summary>
            <remarks>
            ChartTrackBallBehavior displays a vertical line,a tracker ball symbol and a popup like control displaying information about the data point, at mouse move positions/ at touch contact positions over a <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>.
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior"/>.
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:SfChart.Behaviors&gt;
                        &lt;syncfusion:ChartTrackBallBehavior/&gt;
                    &lt;/syncfusion:SfChart.Behaviors&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                ChartTrackBallBehavior trackball = new ChartTrackBallBehavior();
                chartArea.Behaviors.Add(trackball);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AxisLabelAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AxisLabelAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelDisplayModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelDisplayMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelBackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelBackground"/> property.
            </summary>
            <remarks>
            Background brush for grouped labels. 
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ShowLineProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ShowLine"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelVerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelVerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelHorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ChartTrackBallStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ChartTrackBallStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.UseSeriesPaletteProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.UseSeriesPalette"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnPointerPositionChanged">
            <summary>
            Called when pointer position changed in the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when size changed.
            </summary>
            <param name="e">SizeChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnLayoutUpdated">
            <summary>
            Called when layout updated in chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leaved from the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button was released.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AlignDefaultLabel(Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Double,System.Double,System.Windows.Controls.ContentControl)">
            <summary>
            Align the element inside the content control. 
            </summary>
            <param name="verticalAlignemnt">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="x">The X location</param>
            <param name="y">The Y location</param>
            <param name="control">Used to specify corresponding content control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnPointerPositionChanged(System.Windows.Point)">
            <summary>
            Called when pointer position changed.
            </summary>
            <param name="point">Point</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GenerateLabels">
            <summary>
            Method implementation to generate the labels for trackball. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddGroupLabels">
            <summary>
            Method used for adding grouped labels when using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelDisplayMode"/> was <see cref="F:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode.GroupAllPoints"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddLabel(System.Object,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate,System.Double,System.Double)">
            <summary>
            Method implementation for adding label in trackball.
            </summary>
            <param name="obj">ChartPointInfo</param>
            <param name="verticalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="labelTemplate">DataTemplate</param>
            <param name="x">The X location</param>
            <param name="y">The Y location</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GenerateTrackBalls">
            <summary>
            Method implementation for generate Trackballs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddTrackBall(Syncfusion.UI.Xaml.Charts.ChartPointInfo)">
            <summary>
            Method implementation for adding trackBall to corresponding chart point.
            </summary>
            <param name="pointInfo">ChartPointInfo</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GetYValuesBasedOnValue(System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return collection of double values from the given ChartSeries.
            </summary>
            <param name="x">x position</param>
            <param name="series">chart series</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ClearItems">
            <summary>
            Method implementation for clear items in ChartTrackballbehavior.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate)">
            <summary>
            Mathod implementation for adding labels in trackball.
            </summary>
            <param name="obj">ChartPointInfo</param>
            <param name="verticalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for vertical</param>
            <param name="horizontalAlignment">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> for horizontal</param>
            <param name="template">DataTemplate</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddElement(System.Windows.UIElement)">
            <summary>
            Method implementation for adding UIElement. 
            </summary>
            <param name="element">UIElement</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.CheckLabelCollision(System.Windows.Controls.ContentControl,System.Windows.Controls.ContentControl)">
            <summary>
            To determine whether two labels are collided or not.
            </summary>
            <param name="previousLabel"></param>
            <param name="currentLabel"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.CheckLabelCollisionRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            To determine whether two labels are collided or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GetRenderedRect(System.Windows.Controls.ContentControl)">
            <summary>
            To get the rendered rect of the label.
            </summary>
            <param name="control">Label's content control.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.SmartAlignLabels">
            <summary>
            To align the trackball labels smartly.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.HitTest(System.Double,System.Double)">
            <summary>
            Method to check whether the point is in trackball or not.
            </summary>
            <param name="pointX">The x point</param>
            <param name="pointY">The y point</param>
            <returns>Point is in trackball or not</returns>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.PositionChanging">
            <summary>
            Event correspond to trackball position changing. It invokes before position changing from current position to new mouse position.
            </summary>
            <remarks>
                <see cref="T:Syncfusion.UI.Xaml.Charts.PositionChangingEventArgs"/>
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.PositionChanged">
            <summary>
            Event correspond to trackball position changed. It invokes after position changed to new mouse pointer position.
            </summary>
            <remarks>
             <see cref="T:Syncfusion.UI.Xaml.Charts.PositionChangedEventArgs"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.PointInfos">
            <summary>
            Gets the collection of ChartPointInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AxisLabelAlignment">
            <summary>
            Gets or sets the alignment for the label appearing in axis.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LineStyle">
            <summary>
            Gets or sets the trackball line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelDisplayMode">
            <summary>
            Gets or sets the trackball display mode for label.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelBackground">
            <summary>
            Gets or sets the trackball label background brush for grouped labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ShowLine">
            <summary>
            Gets or sets a value indicating whether to show/hide line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelVerticalAlignment">
            <summary>
            Gets or sets vertical alignment for label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelHorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment for label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ChartTrackBallStyle">
            <summary>
            Gets or sets the style for ChartTrackBallControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.UseSeriesPalette">
            <summary>
            Gets or sets a value indicating whether to change the color for the labels according to the series color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.IsActivated">
            <summary>
            Gets or sets a value indicating whether the trackball is activated or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter">
            <summary>
            Sets the fill color for the track ball control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl">
            <summary>
            Defines the control template for the trackball.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.SeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Series"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartTrackBallControl
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Series">
            <summary>
            Gets or sets Series property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Stroke">
            <summary>
            Gets or sets stroke property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeThickness">
            <summary>
            Gets or sets StrokeThickness property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PositionChangingEventArgs">
            <summary>
            Defines the PositionChangingEventArgs
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PositionChangingEventArgs.PointInfos">
            <summary>
            Gets or sets the current PointInfos. 
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PositionChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to show the trackball on new mouse pointer position.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PositionChangedEventArgs">
            <summary>
            Defines the PositionChangedEventArgs.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PositionChangedEventArgs.PreviousPointInfos">
            <summary>
            Gets or sets the previous PointInfos. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PositionChangedEventArgs.CurrentPointInfos">
            <summary>
            Gets or sets the current PointInfos.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior">
            <summary>
            ChartZoomPanBehavior enables zooming and panning operations over a Chart.
            </summary>
            <remarks>
            Zooming and panning operations can be initiated and can be restored backed to
            the original position by performing zoom out operation or by enabling <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTap"/> property. 
            <para>Chart can also be zoomed, without adding ChartZoomPanBehavior, by
            specifying following properties <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactor"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPosition"/> for the ChartAxis. By specifying zooming mode
            using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode"/> property, zooming operation
            can be performed along horizontal or along vertical or along both directions in
            a Chart.</para>
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>.
            <code language="XAML">
                &lt;syncfusion:SfChart&gt;
                    &lt;syncfusion:SfChart.Behaviors&gt;
                        &lt;syncfusion:ChartZoomPanBehavior/&gt;
                    &lt;/syncfusion:SfChart.Behaviors&gt;
                &lt;/syncfusion:SfChart&gt;
            </code>
            <code language="C#">
                ChartZoomPanBehavior zoomPanBehavior = new ChartZoomPanBehavior();
                chartArea.Behaviors.Add(zoomPanBehavior);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItems"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableZoomingToolBarProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableZoomingToolBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemMarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemMargin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.HorizontalPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.HorizontalPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.VerticalPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.VerticalPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarOrientationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarOrientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarBackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarBackground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomRelativeToCursorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomRelativeToCursor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePinchZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePinchZooming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableDirectionalZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableDirectionalZooming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePanningProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePanning"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.MaximumZoomLevelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.MaximumZoomLevel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.FillProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Fill"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableSelectionZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableSelectionZooming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTap"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableMouseWheelZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableMouseWheelZooming"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Return bool value from the given ChartAxis.
            </summary>
            <param name="cumulativeScale">CumulativeScale value</param>
            <param name="origin">Origin value</param>
            <param name="axis">chart axis</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Zooms the specified cumulative scale.
            </summary>
            <param name="cumulativeScale">The cumulative scale.</param>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Reset">
            <summary>
            Resets the zoom factor and zoom position for all the axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomByRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.DateTime,System.DateTime)">
            <summary>
            Zooming applied in the chart axis based start and end datetime range.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="start">Start DateTime Range</param>
            <param name="end">End DateTime Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomByRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Zooming applied in the chart axis based start and end range.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="start">Start Range</param>
            <param name="end">End Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomToFactor(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Zooming applied in the chart axis upto zoom factor in the zoom position.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="zoomPosition">Zoom Position</param>
            <param name="zoomFactor">Zoom Factor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomIn">
            <summary>
            Used to zoom in the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomOut">
            <summary>
            Used to zoom out the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double)">
            <summary>
            Used to zoom in the chart for given ZoomFactor value.
            </summary>
            <param name="zoomFactor">ZoomFactor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Windows.Rect)">
            <summary>
            Used to zoom in the chart for given rectangle.
            </summary>
            <param name="zoomRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.DetachElements">
            <summary>
            Method implementation for detatch elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnLayoutUpdated">
            <summary>
            Called when layout updated.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button is clicked.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved in the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leaved from the chart.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button was released.
            </summary>
            <param name="e">MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when ManipulationStarted.
            </summary>
            <param name="e">ManipulationStartedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when ManipulationDelta is changed.
            </summary>
            <param name="e">ManipulationDeltaEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.AddZoomingToolBar">
            <summary>
            Added zooming tool bar when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableZoomingToolBar"/> was true.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RemoveZoomingToolBar">
            <summary>
            Remove zooming tool bar when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableZoomingToolBar"/> was changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.CalZoomFactors(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates ZoomFactor and ZoomPosition using the cumulative scale.
            </summary>
            <param name="cumulativeScale">Cumulative scale since the starting of the manipulation.</param>
            <param name="origin">center of manipulation.</param>
            <param name="currentZoomFactor">Current axis's ZoomFactor.</param>
            <param name="currentZoomPos">Current axis's ZoomPosition.</param>
            <param name="calcZoomPos">Calculated ZoomPosition.</param>
            <param name="calcZoomFactor">Calculated ZoomFactor.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseSelectionZoomDeltaEvent">
            <summary>
            Called when selection zooming occurs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaisePanChangingEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Called when panning takes place.
            </summary>
            <param name="axis"></param>
            <param name="preZoomPosition"></param>
            <param name="newZoomPosition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaisePanChangedEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Called when panning is completed.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseZoomChangedEvent(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zooming is completed.
            </summary>
            <param name="zoomFactor"></param>
            <param name="zoomPosition"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseZoomChangingEvent(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zooming takes place. 
            </summary>
            <param name="zoomPosition"></param>
            <param name="zoomFactor"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseResetZoomingEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zoom is reset.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItems">
            <summary>
            Gets or sets a value which is used to select the tool bar items respectively.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableZoomingToolBar">
            <summary>
            Gets or sets a value indicating whether to show/hide the zooming tool bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemHeight">
            <summary>
            Gets or sets the Height for the ZoomingToolBar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemWidth">
            <summary>
            Gets or sets the width for the ZoomingToolBar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarItemMargin">
            <summary>
            Gets or sets the Margin for the ZoomingToolBar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.HorizontalPosition">
            <summary>
            Gets or sets the horizontal position for the tool bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.VerticalPosition">
            <summary>
            Gets or sets the vertical position for the tool bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarOrientation">
            <summary>
            Gets or sets the tool bar orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ToolBarBackground">
            <summary>
            Gets or sets the tool bar background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomRelativeToCursor">
            <summary>
            Gets or sets a value indicating whether zoom relative to mouse pointer and this is applicable only for mouse wheel zooming.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePinchZooming">
            <summary>
            Gets or sets a value that indicates whether the finger gesture is enabled.
            </summary>
            <value>
            This property takes the boolean value, and its default value is true.
            </value>
            <remarks>
            If this property is true, zooming is performed based on pinch gesture of the user. If this property is false, zooming is performed based on the mouse wheel of the user.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode">
            <summary>
            Gets or sets the mode of zooming.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomMode"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableDirectionalZooming">
            <summary>
            Gets or sets the value that indicates whether directional zooming is enabled.
            </summary>
            <remarks>
            If this property is false, zooming is performed based on <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode"/> property. If this property is true, zooming is performed based on pinch direction of the user.
            This property having effect only with <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode"/> value as <c>XY</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePanning">
            <summary>
            Gets or sets a value indicating whether to enable/disable the panning. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeThickness">
            <summary>
            Gets or sets stroke thickness for selection rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.MaximumZoomLevel">
            <summary>
            Gets or sets maximum zoom level of chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Stroke">
            <summary>
            Gets or sets stroke for selection rectangle.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Fill">
            <summary>
            Gets or sets the background for selection rectangle.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableSelectionZooming">
            <summary>
            Gets or sets a value indicating whether to enable zooming chart using selection rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTap">
            <summary>
            Gets or sets a value indicating whether to reset the zooming when press the mouse left button twice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableMouseWheelZooming">
            <summary>
            Gets or sets a value indicating whether mouse wheel zooming is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomEventArgs">
            <summary>
            Class implementation for zooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.PreviousPosition">
            <summary>
            Gets or sets the previous zoom position of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.CurrentPosition">
            <summary>
            Gets or sets the current zoom position of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.OldRange">
            <summary>
            Gets or sets the old visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.PreviousFactor">
            <summary>
            Gets the previous zoom factor of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.CurrentFactor">
            <summary>
            Gets the current zoom factor of the axis. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.Axis">
            <summary>
            Gets or sets the the axis whose range is changed because of zooming.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs">
            <summary>
            Class implementation for ZoomChanging event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs">
            <summary>
            Class implementation for ZoomChanged event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs.NewRange">
            <summary>
            Gets the new visible range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingEventArgs">
            <summary>
            Class implementation for selection zooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SelectionZoomingEventArgs.ZoomRect">
            <summary>
            Gets or sets the bounds of the rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingStartEventArgs">
            <summary>
            Class implementation for SelectionZoomingStart event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs">
            <summary>
            Class implementation for SelectionZoomingDelta event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingEndEventArgs">
            <summary>
            Class implementation for SelectionZoomingEnd event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanningEventArgs">
            <summary>
            Class implementation for panning event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanningEventArgs.NewZoomPosition">
            <summary>
            Gets or sets the new zoom position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanningEventArgs.Axis">
            <summary>
            Gets or sets the the axis whose range is changed because of panning.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs">
            <summary>
            Class implementation for PanChanging event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs.OldZoomPosition">
            <summary>
            Gets the previous zoom position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanChangedEventArgs">
            <summary>
            Class implementation for PanChanged event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs">
            <summary>
            Class implementation for ResetZooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs.PreviousZoomRange">
            <summary>
            Gets the previous visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs.Axis">
            <summary>
            Gets the the axis whose range is changed because of reset the zoom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs.Cancel">
            <summary>
            Gets a value indicating whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CategoryAxis">
            <summary>
            Class implementation for CategoryAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis.LabelPlacementProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.LabelPlacement"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis.IsIndexedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.IsIndexed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis.AggregateFunctionsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.AggregateFunctions"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval property changed 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for generating visible labels for CategoryAxis. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its nullable.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.LabelPlacement">
            <summary>
            Gets or sets the axis label placement with respect to ticklines.
            </summary>
            <value>
                <c>LabelPlacement.BetweenTicks</c>, to place label between the ticks;
                <c>LabelPlacement.OnTicks</c>, to place label with tick as center. This is default value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.IsIndexed">
            <summary>
            Gets or sets a value indicating whether to group the Category axis label values and create the segment based on it.
            </summary>
            <value>
                <c>True</c>, to created the segment based on the index value. This is default value.;
                <c>False</c>, to created the segment based on the axis label values.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.AggregateFunctions">
            <summary>
            Gets or sets the aggregate for the grouped values.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis">
            <summary>
            Class implementation for DateTimeAxis
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.IncludeAnnotationRangeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.IncludeAnnotationRange"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTicksPerIntervalProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTicksPerInterval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLineSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLineSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLinesPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLinesPosition"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SamllTicksPoint
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="position"></param>
            <param name="interval"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.IncludeAnnotationRange">
            <summary>
            Gets or sets a value indicating whether to enable the axis to include the annotation range while calculating the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTicksPerInterval">
            <summary>
            Gets or sets the small tick lines interval.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLineSize">
            <summary>
            Gets or sets minor tick line size.
            </summary>
            <remarks>
            The default value is 5.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLinesPosition">
            <summary>
            Gets or sets small tick lines position, either inside or outside.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.Range">
            <summary>
            Returns axis actual range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.AutoScrollingDeltaTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for AutoScrollingDeltaType.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.EnableBusinessHoursProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.EnableBusinessHours"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OpenTimeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OpenTime"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CloseTimeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CloseTime"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.WorkingDaysProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.WorkingDays"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.RangePadding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.IntervalTypeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.IntervalType"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalcNonWorkingHours(System.DateTime,System.DateTime,System.String,System.Double)">
            <summary>
            Calculate the non working hours between two dates
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="workingDays"></param>
            <param name="nonWorkingHoursPerDay"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.GetLabelContent(System.Double)">
            <summary>
            Return object value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval.
            </summary>
            <returns>Axis interval based on available size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property Changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Create VisibleLabels for DateTime axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateWeekEndDayCount(System.String,System.DateTime,System.DateTime)">
            <summary>
            calculate the count of day which is occur with in start and end date
            </summary>
            <param name="dayName"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateNonWorkingDays(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Calculate the NonWorking days for the  range
            </summary>
            <param name="range"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.AutoScrollingDeltaType">
            <summary>
            Gets or sets the date time unit of the value specified in the <c>AutoScrollingDelta</c> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.EnableBusinessHours">
            <summary>
            Gets or sets a value indicating whether to enable only the business hours for the DateTime axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OpenTime">
            <summary>
            Gets or sets the business open time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CloseTime">
            <summary>
            Gets or sets the business closing time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.WorkingDays">
            <summary>
            Gets or sets the flagged enum to selected the list of working days in a business week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is nullable property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is nullable property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.RangePadding">
            <summary>
            Gets or sets the padding used to shift the DateTimeAxis range inside or outside.
            </summary>
            <value>
                <c>Additional</c>, to extend the range,
                <c>Round</c>, to round-off the range,
                <c>None</c>, do nothing,
                <c>Auto</c>, auto range based on type of series.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets the type of interval to be displayed in axis.
            </summary>
            <remarks>
                This property hold the values ranges from Year, Months to Milliseconds.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LogarithmicAxis">
            <summary>
            Class implementation for LogarithmicAxis
            </summary>
            
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.IntervalProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.MinimumProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.MaximumProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBaseProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBase"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.#ctor">
            <summary>
            Called when instance created for LogarithmicAxis 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetLabelContent(System.Double)">
            <summary>
            Return the object Value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="position"></param>
            <param name="logarithmicBase"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when maximum changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetYValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Get the Actual YValues from chart series.
            </summary>
            <param name="chartSeries"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetRange(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            Get the range if date values contain 0 or double.NaN
            </summary>
            <param name="values"></param>
            <param name="rangeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateBaseActualRange">
            <summary>
            Calculate base actual range.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its nullable.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is nullable property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is nullable property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBase">
            <summary>
            Gets or sets the base for the <c>LogarithmicAxis</c>.
            </summary>
            <value>
            <c>2</c> for binary logarithm,
            <c>10</c> for common logarithm.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NumericalAxis">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePadding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.StartRangeFromZeroProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.StartRangeFromZero"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.AxisScaleBreaksProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.AxisScaleBreaks"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.BreakPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.BreakPosition"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.NumericalAxis"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.ValueToPolarCoefficient(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.PolarCoefficientToValue(System.Double)">
            <summary>
            Converts the PolarCoefficient to the required chart axis value.
            </summary>
            <param name="value">The polar coefficient.</param>
            <returns>The chart co-ordinate value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            called when Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called Maximum property changed
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its nullable.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum">
            <summary>
            Gets or sets the minimum value for the axis range. This is nullable property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is nullable property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePadding">
            <summary>
            Gets or sets the padding used to shift the numeric range inside or outside.
            </summary>
            <value>
                <c>Additional</c>, to extend the range,
                <c>Round</c>, to round-off the range,
                <c>None</c>, do nothing,
                <c>Auto</c>, auto range based on type of series.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.StartRangeFromZero">
            <summary>
            Gets or sets a value indicating whether to start range from zero when range calculated automatically.
            </summary>
            <value>
                <c>True</c> will reset the range starting from zero.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.AxisScaleBreaks">
            <summary>
            Gets or sets the scale break collection for the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.BreakPosition">
            <summary>
            Gets or sets the property used to position the breaks.
            </summary>
            <value>          
                <c>DataCount</c>, Break will be placed based on the data count,
                <c>Percent</c>, Break will be placed based on the given BreakPercent, 
                <c>Scale</c>, Break will be placed based on the delta of the range         
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis">
            <summary>
            Class implementation for TimeSpanAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.GetLabelContent(System.Double)">
            <summary>
            Return Object from the given double value 
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed 
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Method implementation for Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Interval">
            <summary>
            Gets or sets a value that determines the interval between labels. Its nullable.
            If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Minimum">
            <summary>
            Gets or sets the minimum value for the timespan axis range. This is nullable property.
            </summary>
            <remarks>
                If we didn't set the minimum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Maximum">
            <summary>
            Gets or sets the maximum value for the axis range. This is nullable property. 
            </summary>
            <remarks>
                If we didn't set the maximum value, it will be calculate from the underlying collection.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase">
            <summary>
            Represents a base class for all the triangular and circular series. This class has options to customize the appearance of triangular and circular series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAllProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAll"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeOnMouseClickProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeOnMouseClick"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.#ctor">
            <summary>
            Called when instance created for AccumulationSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.GetDataPoint(System.Int32)">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.GeneratePoints">
            <summary>
            Method used to generate points for accumulation series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when the chart mouse up.
            </summary>
            <param name="source">source</param>
            <param name="position">position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when the chart mouse down.
            </summary>
            <param name="source">source</param>
            <param name="position">position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex.
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPath">
             <summary>
             Gets or sets the property name that associates the secondary axis with a property in the itemssource.
             </summary>
             <value>
             The string that represents the property name for secondary axis. The default value is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                      <chart:SfChart.DataContext>
                        <local:ViewModel/>
                      </chart:SfChart.DataContext>
            
                       <chart:PieSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 ViewModel viewmodel = new ViewModel();
                 
                 PieSeries series = new PieSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndex">
            <summary>
            Gets or sets the index of data point (or segment) of chart series to be exploded.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAll">
            <summary>
            Gets or sets a value indicating whether to explode all the pie slices (segments).
            </summary>
            <value>
                <c>True</c>, will explode all the segments.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeOnMouseClick">
            <summary>
            Gets or sets a value indicating whether segment slices will explode on click or tap.
            </summary>
            <value>
            if <c>true</c>, the segment will explode on click or tap.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedSegment">
            <summary>
            Returns the corresponding series selected segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YValues">
            <summary>
            Gets or sets the Y values collection binded with this series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentLabelCreatedEventArgs">
            <summary>
            This class serves as an event data for the <see cref="E:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentLabelCreated"/> event. The event data holds the information when the adornment label is created. 
            </summary>
            <remarks>
            This class is used for internal purpose only.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AdornmentLabelCreatedEventArgs.AdornmentLabel">
            <summary>
            Gets or sets the chart adornment label.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries">
            <summary>
            BoxAndWhiskerSeries plots a combination of rectangle and lines to show the distribution of data set.
            </summary>
            <example>
            <code language = "XAML" >
                  &lt;syncfusion:BoxAndWhiskerSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:BoxAndWhiskerSeries&gt;
            </code>
            <code language= "C#" >
                  BoxAndWhiskerSeries series1 = new BoxAndWhiskerSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.OutlierTemplateProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.OutlierTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ShowOutlierProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ShowOutlier"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.CreateSegments">
            <summary>
            Creates the segments of Box and Whisker Series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.GeneratePoints">
            <summary>
            Method used to generate points for BoxAndWhisker series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">new value</param>
            <param name="newValue">old value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ClearUnUsedSegments(System.Int32)">
            <summary>
            Method used to clear the unused adornments.
            </summary>
            <param name="startIndex">index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.BoxPlotMode">
            <summary>
            Gets or sets the plotting mode for drawing the series. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.OutlierTemplate">
            <summary>
            Gets or sets the template for outliers.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ShowMedian">
            <summary>
            Gets or sets a value indicating whether to enable the median symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior for the selected segment.
            </summary> 
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ShowOutlier">
            <summary>
            Gets or sets the value that indicates whether to show or hide the outlier symbol that is displayed outside the whiskers of the box plot.
            </summary>
            <value>
            The default value is True.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.ShowMedian"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.WhiskerWidth">
            <summary>
            Gets or sets the whisker width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSeries.YCollection">
            <summary>
            Gets or sets the y values collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo">
            <summary>
            Define the members that used in SfChart data.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Index">
            <summary>
            Define the index of the data point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.CreateVisual(System.Windows.Size)">
            <summary>
            Method implementation for CreateVisual method.
            </summary>
            <param name="size">Size</param>
            <returns>UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.GetRenderedVisual">
            <summary>
            Method implementation for GetRenderedVisual method.
            </summary>
            <returns>UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Method implementation for Update method.
            </summary>
            <param name="transformer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.OnSizeChanged(System.Windows.Size)">
            <summary>
            Method implementation for OnSizeChanged method.
            </summary>
            <param name="size">Size</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.XData">
            <summary>
            Gets or sets the x-axis data of the series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.YData">
            <summary>
            Gets or sets the y-axis data of the XY data series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.High">
            <summary>
            Gets or sets the high value of the range/financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Low">
            <summary>
            Gets or sets the low value of the range/financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Open">
            <summary>
            Gets or sets the Open value of the financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Close">
            <summary>
            Gets or sets the close value of the financial series data point.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesBase">
            <summary>
            Represents a base class for pie and doughnut series. This type of chart is divided into slices to illustrate numerical proportions.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EnableSmartLabelsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EnableSmartLabels"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ShowMarkerAtLineEndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ShowMarkerAtLineEnd"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorTypeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorType"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorLinePositionProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorLinePosition"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPosition"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.StartAngleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.StartAngle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EndAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EndAngle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ExplodeRadiusProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ExplodeRadius"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupToProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupTo"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of this series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.DegreeToRadianConverter(System.Double)">
            <summary>
            Returns the radian value.
            </summary>
            <param name="degree">Degree</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EnableSmartLabels">
            <summary>
            Gets or sets a value indicating whether to enable the smart adornment labels, which will place the around series without overlapping.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ShowMarkerAtLineEnd">
            <summary>
            Gets or sets a value indicating whether the marker placed in start position or at line end position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorType">
            <summary>
            Gets or sets the type of connector line to be drawn.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ConnectorMode"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorLinePosition">
            <summary>
            Gets or sets a value indicating whether to render the straight connector line in auto available space.
            </summary>
            <remarks>
            Provides better alignment to the straight connector lines with outside extended label position for minimum number of data points.
            </remarks>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ConnectorLinePosition"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPosition">
            <summary>
            Gets or sets the adornment label position inside, outside or outside extend.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.StartAngle">
            <summary>
            Gets or sets a value that specifies the start angle for the circular series. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EndAngle">
            <summary>
            Gets or sets a value that specifies the end angle for the circular series. This is a bindable property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ExplodeRadius">
            <summary>
            Gets or sets the radial distance for the exploded segment from center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupMode">
            <summary>
            Gets or sets the group mode, which indicates the series segments grouping. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.GroupTo">
            <summary>
            Gets or sets the double value, which indicates series segments grouping. This is a bindable property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries">
            <summary>
            DoughnutSeries displays data as a proportion of the whole. DoughnutSeries are most commonly used to make comparisons among a set of given data.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:DoughnutSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:DoughnutSeries&gt;
            </code>
            <code language="C#">
                  DoughnutSeries series1 = new DoughnutSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackBorderWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for TrackBorderWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackBorderColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for brushTrackBorderColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.IsStackedDoughnutProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsStackedDoughnut.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.MaximumValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximumValue.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for RimColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CapStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for CapStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SegmentSpacingProperty">
            <summary>
            Using a DependencyProperty as the backing store for GapRatio.This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutCoefficientProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutCoefficient"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutSizeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutSize"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutHoleSizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DoughnutHoleSize.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CenterViewProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CenterView"/> property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.#ctor">
            <summary>
            Called when instance created for DoughnutSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.GetDoughnutHoleSize(System.Windows.DependencyObject)">
            <summary>
            Returns the doughnut hole size.
            </summary>
            <param name="obj">object</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetDoughnutHoleSize(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the doughnut hole size.
            </summary>
            <param name="obj">object</param>
            <param name="value">value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateSegments">
            <summary>
            Creates the doughnut segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.Animate">
            <summary>
            Virtual Method for Animate
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.AddCenterView(System.Windows.Controls.ContentControl)">
            <summary>
            Adding the center view at series panel
            </summary>
            <param name="centerView"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CenterViewSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Positioning the center view while updating center view size dynamically.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.PositioningCenterView">
            <summary>
            Positioning the center view based on the doughnut center.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.GetDoughnutSeriesCount">
            <summary>
            Gets the doughnut series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTransformer value from the given size.
            </summary>
            <param name="size">Size</param>
            <param name="create">bool</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for create Adornments.
            </summary>
            <param name="series"></param>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex.
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackBorderWidth">
            <summary>
            Gets or sets a value that specifies the track area border width for stacked doughnut. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackBorderColor">
            <summary>
            Gets or sets the brush that specifies the track area border color for stacked doughnut. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.IsStackedDoughnut">
            <summary>
            Gets or sets a value indicating whether to draw stacked doughnut segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.MaximumValue">
            <summary>
            Gets or sets the maximum value for the doughnut segment when stacked doughnut is used.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.TrackColor">
            <summary>
            Gets or sets the brush that specifies the track area segment color for stacked doughnut. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CapStyle">
            <summary>
            Gets or sets the capstyle that specifies the start and end points of doughtnut segment. This is a bindable property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SegmentSpacing">
            <summary>
            Gets or sets a value that specifies the gap ratio for the doughnut segments. This is a bindable property.
            </summary>
            <value>
            The double value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutCoefficient">
            <summary>
            Gets or sets a value that specifies the inner circular radius of the DoughnutSeries. This is a bindable property.
            </summary>
            <value>
            The double value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutSize">
            <summary>
            Gets or sets the size of the <c>DoughnutSeries</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CenterView">
            <summary>
            Gets or sets the view to be added to the center of the <c>DoughnutSeries</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.InnerRadius">
            <summary>
            Gets the inner radius of <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ErrorBarSeries">
            <summary>
            Represents a control that represents a error bar type series. 
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:BarSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:BarSeries&gt;
            </code>
            <code language="C#">
                  BarSeries series1 = new BarSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.XyDataSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorPathProperty">
            <summary>
              The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorPath"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorPath"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalLineStyle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalLineStyle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalCapLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalCapLineStyle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalCapLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalCapLineStyle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorValue"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.ModeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Mode"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.TypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Type"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.#ctor">
            <summary>
            Called when instance created for ErrorBarSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.CreateSegments">
            <summary>
            Creates the segments of ErrorBarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GeneratePoints">
            <summary>
            Method used to generate data points for ErroBarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Method called when x-axis changed.
            </summary>
            <param name="oldAxis">old axis</param>
            <param name="newAxis">new axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ErrorBarSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetPercentageErrorBarValue(System.Double,System.Double)">
            <summary>
            Get Percentage ErrorBar Value
            </summary>
            <param name="value"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.ErrorBarSeries_ActualRangeChanged(System.Object,Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs)">
            <summary>
            Actual Range Event hooked here for the suppose of DateTimeAxis with Auto type errorbar calculation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetSdErrorValue(System.Collections.Generic.IList{System.Double})">
            <summary>
            Calculate StandardDeviation and StandardError value
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetPlusValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Calculate the Plus value of line
            </summary>
            <param name="value"></param>
            <param name="errorvalue"></param>
            <param name="axischeck"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetMinusValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Calculate the Minus Value of line
            </summary>
            <param name="value"></param>
            <param name="errorvalue"></param>
            <param name="axischeck"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorPath">
            <summary>
            Gets or sets the property path to be bind with horizontal error value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorPath">
            <summary>
            Gets or sets the property path to be bind with vertical error value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalLineStyle">
            <summary>
            Gets or sets the style for the horizontal line in error bar.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.LineStyle"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalLineStyle">
            <summary>
            Gets or sets the style for the vertical line in error bar.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.LineStyle"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalCapLineStyle">
            <summary>
            Gets or sets the end cap style for the horizontal error line.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.CapLineStyle"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalCapLineStyle">
            <summary>
            Gets or sets the end cap style for the vertical error line.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.CapLineStyle"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorValue">
            <summary>
            Gets or sets the error or varying value along x value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorValue">
            <summary>
            Gets or sets the error or varying value along y value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Mode">
            <summary>
            Gets or sets a value indicating whether to draw error bar in horizontal or vertical or both directions.
            </summary>
            <value>
                <see cref="T:Syncfusion.UI.Xaml.Charts.ErrorBarMode"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Type">
            <summary>
            Gets or sets the standard types of error bar to be drawn.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ErrorBarType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalCustomValues">
            <summary>
            Gets or sets the horizontal custom values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalCustomValues">
            <summary>
            Gets or sets the vertical custom values.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries">
             <summary>
             Represents a special kind of bar series which uses writeablebitmap for rendering chart points. FastBarBitmapSeries allows to render a collection with large number of data points.
             </summary>
             <remarks>
             FastBarBitmapSeries renders large quantity of data in fraction of milliseconds using writeablebitmap. 
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:FastBarBitmapSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 FastBarBitmapSeries series = new FastBarBitmapSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSpacingProperty">
            <summary>
            Identifies the SegmentSpacing dependency property.
            </summary>        
            <value>
            The identifier for SegmentSpacing dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
             Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Segment spacing value.</param>
             <param name="Right">Segment right value.</param>
             <param name="Left">Segment left value.</param>
             <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
            Default value is 0 and its value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.IsBitmapSeries">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.IsSideBySide">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries">
            <summary>
            FastCandleBitmapSeries is another version of CandleSeries which uses different technology for rendering line in order to boost performance.
            </summary>
            <remarks>
            It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:FastCandleBitmapSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Open="Open" Close="Close" Low="Low"&gt;
                  &lt;/syncfusion:FastCandleBitmapSeries&gt;
            </code>
            <code language="C#">
                  FastCandleBitmapSeries series1 = new FastCandleBitmapSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High="High";
                  series1.Low="Low";
                  series1.Open="Open";
                  series1.Close="Close";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase">
            <summary>
            Serve as base class for Candle, HiLoOpenClose series and its an abstract class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.HighProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.High"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.LowProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Low"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OpenProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Open"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloseProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Close"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BearFillColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BearFillColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BullFillColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BullFillColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ComparisonModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ComparisonMode"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the chart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GetDataPoint(System.Int32)">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GeneratePoints">
            <summary>
            Method used to generate points for financial series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed. 
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path chnaged.
            </summary>
            <param name="args">args</param>
            <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OpenValues"/>
            <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.HighValues"/>
            <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.LowValues"/>
            <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloseValues"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.High">
            <summary>
            Gets or sets the property path bind with high value of financial series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Low">
            <summary>
            Gets or sets the property path bind with low value of financial series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Close">
            <summary>
            Gets or sets the property path bind with close value of financial series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BearFillColor">
            <summary>
            Gets or sets the interior of the segment that represents the bear value. This is a bindable property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BullFillColor">
            <summary>
            Gets or sets the interior of the segment that represents the bull value. This is a bindable property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ComparisonMode">
            <summary>
            Gets or sets the property path bind with which price need to consider for fluctuation detection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Open">
            <summary>
            Gets or sets the property path bind with open value of financial series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OpenValues">
            <summary>
            Gets or sets OpenValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.HighValues">
            <summary>
            Gets or sets HighValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.LowValues">
            <summary>
            Gets or sets LowValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloseValues">
            <summary>
            Gets or sets CloseValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Segment">
            <summary>
            Gets or sets Segments property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.#ctor">
            <summary>
            Called when instance created for FastCandleBitmapSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastCandleBitmapSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.GeneratePixels">
            <summary>
            This method used to get the chart data at an index.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.IsBitmapSeries">
            <summary>
            This indicates whether its a bitmap series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries">
             <summary>
             Represents a special kind of column series which uses writeablebitmap for rendering chart points. FastColumnBitmapSeries allows to render a collection with large number of data points.
             </summary>
             <remarks>
             FastColumnBitmapSeries renders large quantity of data in fraction of milliseconds using writeablebitmap. 
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:FastColumnBitmapSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 FastColumnBitmapSeries series = new FastColumnBitmapSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSpacingProperty">
            <summary>
            Identifies the SegmentSpacing dependency property.
            </summary>        
            <value>
            The identifier for SegmentSpacing dependency property.
            </value> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moves on chart area.
            </summary>
            <param name="e">Event args that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/> property changed.
            </summary>
            <param name="oldValue">ItemsSource old value.</param>
            <param name="newValue">ItemsSource new value</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
             Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Segment spacing value.</param>
             <param name="Right">Segment right value.</param>
             <param name="Left">Segment left value.</param>
             <returns>Returns the calculated segment space.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
            Default value is 0 and its value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.IsSideBySide">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.IsBitmapSeries">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries">
            <summary>
            FastHiLoOpenCloseBitmapSeries is another version of HiLoOpenCloseSeries which uses different technology for rendering line in order to boost performance.
            </summary>
            <remarks>
            It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:FastHiLoOpenCloseBitmapSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Open="Open" Close="Close" Low="Low"&gt;
                  &lt;/syncfusion:FastHiLoOpenCloseBitmapSeries&gt;
            </code>
            <code language="C#">
                  FastHiLoOpenCloseBitmapSeries series1 = new FastHiLoOpenCloseBitmapSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High="High";
                  series1.Low="Low";
                  series1.Open="Open";
                  series1.Close="Close";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSpacingProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastHiLoOpenCloseBitmapSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.GeneratePixels">
            <summary>
            This method used to get the chart data at an index.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moving on chart area.
            </summary>
            <param name="e">args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.IsBitmapSeries">
            <summary>
            This indicates whether its a bitmap series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries">
            <summary>
            FastHiLoSeries is another version of HiLoSeries which uses different technology for rendering line in order to boost performance.
            </summary>
            <remarks>
            It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:FastHiLoBitmapSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Low="Low"&gt;
                  &lt;/syncfusion:FastHiLoBitmapSeries&gt;
            </code>
            <code language="C#">
                  FastHiLoBitmapSeries series1 = new FastHiLoBitmapSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High="High";
                  series1.Low="Low";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries"/>   
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeSeriesBase">
            <summary>
            Class implementation for RangeSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.HighProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.High"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.LowProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.Low"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.#ctor">
            <summary>
            Called when instance created for RangeSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.GetDataPoint(System.Int32)">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.GeneratePoints">
            <summary>
            Method used generate adornment for range series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed. 
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.RangeSeriesBase"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.High">
            <summary>
            Gets or sets the property path to be bound with high value of HiLo series to render it. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.Low">
            <summary>
            Gets or sets the property path to be bind with low value of HiLo series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.HighValues">
            <summary>
            Gets or sets HighValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.LowValues">
            <summary>
            Gets or sets LowValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.Segment">
            <summary>
            Gets or sets Segment property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastHiLoSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.GeneratePixels">
            <summary>
            This method used to gets the segment pixel positions at data point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the chart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer moving on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.IsBitmapSeries">
            <summary>
            This indicates whether its a bitmap series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries">
            <summary>
            FastRangeAreaBitmapSeries is another version of RangeAreaSeries which uses different technology for rendering line in order to boost performance.
            </summary>
            <remarks>
            It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:FastRangeAreaBitmapSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Low="Low"&gt;
                  &lt;/syncfusion:FastRangeAreaBitmapSeries&gt;
            </code>
            <code language="C#">
                  FastRangeAreaBitmapSeries series1 = new FastRangeAreaBitmapSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.Low = "Low";
                  series1.High="High";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.EnableAntiAliasingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.EnableAntiAliasing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.HighValueInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.HighValueInterior"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.LowValueInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.LowValueInterior"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos">The mouse position.</param>
            <returns>Returns the data point nearest to the mouse position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
            This method used to get the chart data index at an <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> co-ordinates
            </summary>
            <param name="point">The point to be passed to get the data point index.</param>
            <returns>Returns the data point index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.OnResetSegment(System.Int32)">
            <summary>
            Updates the segment when reset.
            </summary>
            <param name="index">The index on reset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">The new index passed.</param>
            <param name="oldIndex">The old index passed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">The old value passed for the items source.</param>
            <param name="newValue">The new value passed for the items source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.OnSeriesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the series when the series property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.OnSelectedIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the selection index.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.AddSegment(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},System.Boolean,System.Double,System.Double,System.Object)">
            <summary>
            Adds the created segment to the segment collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.UpdateEmptyPointSegments">
            <summary>
            Updates the stroke rendering for empty points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.EnableAntiAliasing">
            <summary>
            Gets or sets a value indicating whether to enable the anti aliasing for the bitmap series, to draw smooth edges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.HighValueInterior">
            <summary>
            Gets or sets the interior brush for the high value segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.LowValueInterior">
            <summary>
            Gets or sets the interior brush for the low value segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.IsMultipleYPathRequired">
            <summary>
            Used to indicate whether multipleYValues is needed,will be set internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.IsBitmapSeries">
            <summary>
            This indicates whether its a bitmap series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries.IsAreaTypeSeries">
            <summary>
            This property used to confirm whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its area type series, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries">
             <summary>
             Represents a special kind of scatter series which uses writeablebitmap for rendering chart points. FastScatterBitmapSeries allows to render a collection with large number of data points.
             </summary>
             <remarks>
             FastScatterBitmapSeries renders large quantity of data in fraction of milliseconds using writeablebitmap. 
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:FastScatterBitmapSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 FastScatterBitmapSeries series = new FastScatterBitmapSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.XyDataSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.ISegmentSelectable"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterWidthProperty">
            <summary>
            Identifies the ScatterWidth dependency property.
            </summary>        
            <value>
            The identifier for ScatterWidth dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterHeightProperty">
            <summary>
            Identifies the ScatterHeight dependency property.
            </summary>        
            <value>
            The identifier for ScatterHeight dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ShapeTypeProperty">
            <summary>
            Identifies the ShapeType dependency property.
            </summary>        
            <value>
            The identifier for ShapeType dependency property.
            </value> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.GeneratePixels">
            <summary>
            This method used to get the chart data at an index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Invoked when VisibleRange property changed.
            </summary>
            <param name="e"><see cref="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterWidth">
            <summary>
            Gets or sets a value that specifies the width of the FastScatterBitmap segment.
            </summary>
            <value>
            The default value is 3.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterHeight">
            <summary>
            Gets or sets a value that specifies the height of the FastScatterBitmap segment.
            </summary>
            <value>
            The default value is 3.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ShapeType">
            <summary>
            Gets or sets different types of shapes in a fast scatter bitmap series.
            </summary>
            <value>This property takes fast scatter shape value, and its default shape type is ellipse.
            </value>
            <remarks>
            Fast scatter bitmap series does not support Custom, HorizontalLine and VerticalLine shapes.
            By using the above shapes for fast scatter bitmap series, you can render only the default type, which is ellipse. 
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.IsBitmapSeries">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries">
            <summary>
             Represents the fast stacking column elements that use a WriteableBitmap to define their appearance.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:FastStackingColumnBitmapSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:FastStackingColumnBitmapSeries&gt;
            </code>
            <code language="C#">
                  FastStackingColumnBitmapSeries series1 = new FastStackingColumnBitmapSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingSeriesBase"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ISegmentSpacing"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ISegmentSelectable"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingSeriesBase">
            <summary>
            Represents a base class for all stacked chart series in chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GroupingLabelProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GroupingLabel"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GetCumulativeStackValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">ChartSeries instance</param>
            <returns>returns StackedYValues</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GetDistinctXValues">
            <summary>
            Returns the distinct values of the series XValues.
            </summary>
            <returns>returns distinct XValues</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue">stackedyvalue</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GeneratePixels">
            <summary>
            This method used to get the segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Invoked when ItemsSource property changed.
            </summary>
            <param name="oldValue">Old itemssource collection.</param>
            <param name="newValue">New itemssource collection.</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GenerateStackingColumnPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GenerateStackingBarPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GetStackedYValue(System.Int32)">
            <summary>
            Return stacked double value from the given index.
            </summary>
            <param name="index">Used to specify the index of yvalues.</param>
            <returns>Returns the stacked yvalue.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GroupingLabel">
            <summary>
            Gets or sets the label to group and stack the similar stacked series types. This is a bindable property. 
            </summary>
            <example>
            <code language = "XAML" >
                  &lt;syncfusion:StackingColumnSeries GroupingLabel="Group1" ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingColumnSeries&gt;
               </code>
               <code language= "C#" >
                  StackingColumnSeries series1 = new StackingColumnSeries();
                  series1.GroupingLabel="Group1";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.YRangeStartValues">
            <summary>
            Gets or sets the start y values collection to render the stacked series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.YRangeEndValues">
            <summary>
            Gets or sets the end y values collection to render the stacked series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastStackingColumnBitmapSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">new value</param>
            <param name="newValue">old value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.IsBitmapSeries">
            <summary>
            This indicates whether its a bitmap series or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.EnableAntiAliasingProperty">
            <summary>
            Identifies the EnableAntiAliasing dependency property.
            </summary>        
            <value>
            The identifier for EnableAntiAliasing dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.CreateSegment(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/> into the Segments collection.
            </summary>
            <param name="xValues">The xValues.</param>
            <param name="yValues">The yValues.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Invoked when VisibleRange property changed.
            </summary>
            <param name="e"><see cref="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.EnableAntiAliasing">
            <summary>
            Gets or sets a value that indicates whether to enable anti-aliasing for <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries"/>, to draw smooth edges.
            </summary>
            <value>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.IsBitmapSeries">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.IsLinear">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FunnelSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/>  
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase">
            <summary>
            Represents a base class for funnel and pyramid series. This type of chart is triangle with lines dividing it into sections to illustrate numerical proportions..
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.GapRatioProperty">
            <summary>
            Identifies the <c>GapRatio</c> dependency property.
            </summary>
            <value>
            The identifier for <c>GapRatio</c> dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.ExplodeOffsetProperty">
            <summary>
            Identifies the <c>ExplodeOffset</c> dependency property.
            </summary>
            <value>
            The identifier for <c>ExplodeOffset</c> dependency property.
            </value>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.GapRatio">
             <summary>
             Gets or sets the ratio of distance between the funnel or pyramid segment blocks.
             </summary>
             <value>Default value is 0 and its value ranges from 0 to 1.</value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                      <chart:SfChart.DataContext>
                        <local:ViewModel/>
                      </chart:SfChart.DataContext>
                      
                      <chart:FunnelSeries
                           GapRatio="0.5"
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 ViewModel viewmodel = new ViewModel();
                 
                 FunnelSeries series = new FunnelSeries();
                 series.GapRatio = 0.5;
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <remarks>Its used to provide the spacing between the segments.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.ExplodeOffset">
            <summary>
            Gets or sets the distance where the segment is exploded from its origination positions when <c>ExplodeAll</c> is true or <c>ExplodeIndex</c> value is given.
            </summary>
            <value>Default value is 40.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSeries.FunnelModeProperty">
            <summary>
            Identifies the <c>FunnelMode</c> dependency property.
            </summary>        
            <value>
            The identifier for <c>FunnelMode</c> dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSeries.MinWidthProperty">
            <summary>
            Identifies the <c>MinWidth</c> dependency property.
            </summary>        
            <value>
            The identifier for <c>MinWidth</c> dependency property.
            </value> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateSegments">
            <summary>
            Creates the segments of FunnelSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the adornment of FunnelSeries.
            </summary>
            <param name="series">Series instance.</param>
            <param name="xVal">Used to specify the xvalue.</param>
            <param name="yVal">Used to specify the yvalue.</param>
            <param name="height">Used to specify the height.</param>
            <param name="currY">Used to specify the yposition.</param>
            <returns>returns <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornment"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex.
            </summary>
            <param name="i">Exploded segment index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CalculateValueIsHeightSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            To calculate the segments if the pyramid mode is ValueIsHeight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CalculateValueIsWidthSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            To calculate the segments if the pyramid mode is valueisWidth.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSeries.FunnelMode">
            <summary>
            Gets or sets a value indicating whether the y value should interpret the height or width of the funnel block.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartFunnelMode"/> enumeration values. The default value is <see cref="F:Syncfusion.UI.Xaml.Charts.ChartFunnelMode.ValueIsHeight"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSeries.MinWidth">
            <summary>
            Gets or sets the minimum width for the funnel block.
            </summary>
            <value>Default value is 40.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase">
            <summary>
            Represents a base class for polar, radar series in chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YBindingPathProperty">
            <summary>
            Identifies the YBindingPath dependency property.
            </summary>
            <value>
            The identifier for YBindingPath dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.IsClosedProperty">
            <summary>
            Identifies the IsClosed dependency property.
            </summary>
            <value>
            The identifier for IsClosed dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.DrawTypeProperty">
            <summary>
            Identifies the <c>DrawType</c> dependency property.
            </summary>
            <value>
            The identifier for <c>DrawType</c> dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
            <value>
            The identifier for XAxis dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
            <value>
            The identifier for YAxis dependency property.
            </value>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
            <value>
            The identifier for StrokeDashArray dependency property.
            </value>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.#ctor">
            <summary>
            Initializes a new instance of the PolarRadarSeriesBase class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point.</param>
            <param name="stackedYValue">The stacked y value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.GeneratePoints">
            <summary>
            Method used to generate the data points for Polar and Radar series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Invoked when YAxis property changed.
            </summary>
            <param name="oldAxis">Old chartaxis value.</param>
            <param name="newAxis">New chartaxis value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Invoked when XAxis property changed.
            </summary>
            <param name="oldAxis">Old chartaxis value.</param>
            <param name="newAxis">New chartaxis value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when XBindingPath or YBindingPath properties changed.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data</param>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <see cref="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.timer_Tick(System.Object,System.Object)">
            <summary>
            Timer Tick Handler for closing the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YBindingPath">
             <summary>
             Gets or sets the property name that associates the secondary axis with a property in the itemssource.
             </summary>
             <value>
             The string that represents the property name for secondary axis. The default value is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:PolarSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 PolarSeries series = new PolarSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.IsClosed">
            <summary>
            Gets or sets a value that indicates whether area path should be closed or opened for Polar/Radar series.
            </summary>
            <value>
             If its <c>true</c>, Area stroke will be closed; otherwise stroke will be applied on top of the series only.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.DrawType">
            <summary>
            Gets or sets the type of series to be drawn for Radar or Polar series.
            </summary>
            <value>One of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType"/> enumeration values. The default value is <see cref="F:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType.Area"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XRange">
            <summary>
            Gets the series x-axis start and end range values. 
            </summary>
            <value>A <c>DoubleRange</c> specifies the start and end range of x-axis.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YRange">
            <summary>
            Gets the series y-axis start and end range values.
            </summary>
            <value>A <c>DoubleRange</c> specifies the start and end range of y-axis.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XAxis">
            <summary>
            Gets or sets the multiple axis is not applicable for Radar/Polar series.
            </summary>
            <value>It takes the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D"/> value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YAxis">
            <summary>
            Gets or sets the multiple axis is not applicable for Radar/Polar series.
            </summary>
            <value>It takes the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase"/> value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.StrokeDashArray">
             <summary>
             Gets or sets the stroke dash array for line to customize the appearance of <see cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/> and <see cref="T:Syncfusion.UI.Xaml.Charts.RadarSeries"/>.
             </summary>
             <value>
             It takes <see cref="T:System.Windows.Media.DoubleCollection"/> value and default value is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:PolarSeries
                           StrokeDashArray="5,3"
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 PolarSeries series = new PolarSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
                 
                 DoubleCollection doubleCollection = new DoubleCollection();
                 doubleCollection.Add(5);
                 doubleCollection.Add(3);
                 series.StrokeDashArray = doubleCollection;
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualXAxis">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualYAxis">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YValues">
            <summary>
            Gets or sets YValues to render the series.
            </summary>
            <value>It takes the collection of double values.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.Segment">
            <summary>
            Gets or sets the chart segment.
            </summary>
            <value>It takes the chart segment value.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PyramidSeries">
             <summary>
             Represents a series which displays data in the form of a triangle with lines dividing it into sections and each section has a different width. Depending on the Y coordinates, this width indicates a level of hierarchy among other categories.
             </summary>
             <remarks>
             It is a single series, representing data as portions of 100% and does not use any axes. 
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
                 
                      <chart:SfChart.DataContext>
                        <local:ViewModel/>
                      </chart:SfChart.DataContext>
            
                      <chart:PyramidSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 ViewModel viewmodel = new ViewModel();
                 
                 PyramidSeries series = new PyramidSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PyramidSeries.PyramidModeProperty">
            <summary>
            Identifies the <c>PyramidMode</c> dependency property.
            </summary>
            <value>
            The identifier for <c>PyramidMode</c> dependency property.
            </value> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.GetSurfaceHeight(System.Double,System.Double)">
            <summary>
            To get the SurfaceHeight for PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateSegments">
            <summary>
            Creates the segment of PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the adornment of PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex.
            </summary>
            <param name="i">Exploded segment index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CalculateLinearSegments(System.Double,System.Double,System.Int32,System.Collections.Generic.List{System.Double})">
            <summary>
            To calculate the segments if the pyramid mode is linear
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CalculateSurfaceSegments(System.Double,System.Int32,System.Double,System.Collections.Generic.List{System.Double})">
            <summary>
            To calculate the segments if the pyramid mode is surface
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSeries.PyramidMode">
            <summary>
            Gets or sets a value indicating whether the y value should interpret the length or surface of the pyramid block.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartPyramidMode"/> enumeration values. The default value is <see cref="F:Syncfusion.UI.Xaml.Charts.ChartPyramidMode.Linear"/>
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase">
            <summary>
            Serves as base class for range series segment dragging.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableDragTooltipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableDragTooltip"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragTooltipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragTooltipTemplate"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RoundToDecimalProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RoundToDecimal"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SnapToPointProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SnapToPoint"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableSegmentDraggingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableSegmentDragging"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateSourceProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateSource"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragCancelKeyModifiersProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragCancelKeyModifiers"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.GetSnapToPoint(System.Double)">
            <summary>
            Gets the snap to point.
            </summary>
            <param name="actualValue">The actual value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateDragSpliterHigh(System.Windows.Shapes.Rectangle)">
            <summary>
            Updates the drag spliter high.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateDragSpliterLow(System.Windows.Shapes.Rectangle)">
            <summary>
            Updates the drag spliter low.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for DragStart.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for DragDelta.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for DragEnd.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for DragEnter.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnChartDragExited(System.Windows.Point,System.Object)">
            <summary>
            Method implementation for DragExit.
            </summary>
            <param name="mousePos">point</param>
            <param name="originalSource">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse moved.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button down.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button up.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse entered.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leave.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateUnderLayingModel(System.String,System.Int32,System.Object)">
            <summary>
            Updates the under laying model.
            </summary>
            <param name="path">The path.</param>
            <param name="index">The index.</param>
            <param name="updatedData">The updated data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RaisePreviewEnd(Syncfusion.UI.Xaml.Charts.RangeDragEventArgs)">
            <summary>
            Method used to raise PreviewDragEnd event.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RaiseDragStart(Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs)">
            <summary>
            Method used to raise DragStart event.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RaiseDragEnd(Syncfusion.UI.Xaml.Charts.RangeDragEndEventArgs)">
            <summary>
            Method used to raise DragEnd event.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RaiseDragDelta(Syncfusion.UI.Xaml.Charts.RangeDragEventArgs)">
            <summary>
            Method used to raise DragDelta event.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RaiseDragEnter(Syncfusion.UI.Xaml.Charts.RangeSegmentEnterEventArgs)">
            <summary>
            Method used to raise SegmentEnter event.
            </summary>
            <param name="args">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.ResetSegmentDragTooltipInfo">
            <summary>
            Resets the segment drag tooltip information.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SegmentEnter">
            <summary>
            Occurs when [segment enter].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragStart">
            <summary>
            Occurs when [drag start].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragDelta">
            <summary>
            Occurs when [drag delta].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragEnd">
            <summary>
            Occurs when [drag end].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.PreviewDragEnd">
            <summary>
            Occurs when [preview drag end]..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableDragTooltip">
            <summary>
            Gets or sets a value indicating whether to enable the ToolTip while dragging segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragTooltipTemplate">
            <summary>
            Gets or sets the custom template for the dragging tooltip.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.RoundToDecimal">
            <summary>
            Gets or sets the round off decimal places for the ToolTip value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SnapToPoint">
            <summary>
            Gets or sets the segment dropping mechanism as per requirement.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.SnapToPoint"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.EnableSegmentDragging">
            <summary>
            Gets or sets a value indicating whether to enable the segment dragging for this series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateSource">
            <summary>
            Gets or sets a value indicating whether to update the underlying source value while dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragCancelKeyModifiers">
            <summary>
            Gets or sets the key modifier to cancel the dragging.
            </summary>
            <value>
            <see cref="T:System.Windows.Input.ModifierKeys"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SegmentIndex">
            <summary>
            Gets or sets the segment index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragSpliterHigh">
            <summary>
            Gets or sets a value for drag spliter high value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragSpliterLow">
            <summary>
            Gets or sets a value for drag spliter low value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DraggedValue">
            <summary>
            Gets or sets a dragged value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeDragEndEventArgs.BaseHighValue">
            <summary>
            Gets or sets the current High value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeDragEndEventArgs.BaseLowValue">
            <summary>
            Gets or sets the current Low value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeDragEndEventArgs.NewHighValue">
            <summary>
            Gets or sets the new High value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeDragEndEventArgs.NewLowValue">
            <summary>
            Gets or sets the new High value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeDragEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to disable/revert the dragging before completing the dragging.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries">
            <summary>
            SplineRangeAreaSeries connects it data points using a smooth curve with the areas between the high value and low value are filled in.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:SplineRangeAreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Low="Low"&gt;
                  &lt;/syncfusion:SplineRangeAreaSeries&gt;
            </code>
            <code language="C#">
                  SplineRangeAreaSeries series1 = new SplineRangeAreaSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High = "High";
                  series1.Low = "Low";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries">
            <summary>
            RangeAreaSeries displays data points as a set of continuous lines with the areas between the high value and low value are filled in.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:RangeAreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Low="Low"&gt;
                  &lt;/syncfusion:RangeAreaSeries&gt;
            </code>
            <code language="C#">
                  RangeAreaSeries series1 = new RangeAreaSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High = "High";
                  series1.Low = "Low";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.HighValueInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.HighValueInterior"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.LowValueInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.LowValueInterior"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndex"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.CreateSegments">
            <summary>
            Creates the segments of RangeAreaSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Used to update the series tooltip when pointer moved on series.
            </summary>
            <param name="e">PointerRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.GetCrossPoint(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Gets the cross point.
            </summary>
            <param name="p11">The P11 value.</param>
            <param name="p12">The P12 value.</param>
            <param name="p21">The P21 value.</param>
            <param name="p22">The P22 value.</param>
            <returns>The CrossPoint</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.HighValueInterior">
            <summary>
            Gets or sets the interior brush that specifies the color for the high value segment. This is a bindable property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.LowValueInterior">
            <summary>
            Gets or sets the interior brush that specifies the color for the low value segment. This is a bindable property.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.IsAreaTypeSeries">
            <summary>
            This property used to confirm whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.SplineTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplineType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.CreateSegments">
            <summary>
            Creates the segments of SplineRangeAreaSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.CreateSegment(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint})">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment"/> into the Segments collection.
            </summary>
            <param name="AreaPoints">The AreaPoints.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double[]@)">
            <summary>
            Method implementation for NaturalSpline
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="ys2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.GetBezierControlPoints(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartPoint@,Syncfusion.UI.Xaml.Charts.ChartPoint@)">
            <summary>
            Method implementation for GetBezierControlPoints
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries.SplineType">
            <summary>
            Gets or sets SplineType enum value which indicates the spline series type. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingArea100Series">
            <summary>
            StackingArea100Series resembles <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>, but the cumulative portion of each stacked element always totals to 100%.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingArea100Series ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingArea100Series&gt;
               </code>
               <code language="C#">
                  StackingArea100Series series1 = new StackingArea100Series();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries">
            <summary>
             StackingAreaSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>.
             Each series is stacked vertically one above the other.
             </summary>
             <example>
             <code language="XAML">
                   &lt;syncfusion:StackingAreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                   &lt;/syncfusion:StackingAreaSeries&gt;
                </code>
                <code language="C#">
                   StackingAreaSeries series1 = new StackingAreaSeries();
                   series1.ItemsSource = viewmodel.Data;
                   series1.XBindingPath = "Year";
                   series1.YBindingPath = "Value";
                   chart.Series.Add(series1);
                </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.IsClosedProperty">
            <summary>
            Identifies the IsClosed dependency property.
            </summary>
            <value>
            The identifier for IsClosed dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
            <value>
            The identifier for SelectedIndex dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Identifies the SegmentSelectionBrush dependency property.
            </summary>
            <value>
            The identifier for SegmentSelectionBrush dependency property.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">Used to specify the new selected index.</param>
            <param name="oldIndex">Used to specify the old selected index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Invoked when ItemsSource property changed.
            </summary>
            <param name="oldValue">Old itemssource collection.</param>
            <param name="newValue">New itemssource collection.</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Used to update the series tooltip when pointer moved on series.
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.IsClosed">
            <summary>
            Gets or sets a value that indicates whether area path should be closed or opened for <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>.
            </summary>
            <value>
             If its <c>true</c>, Area stroke will be closed; otherwise stroke will be applied on top of the series only. Default value is true.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the first segment in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
            <value>
            The index of first segment in the current selection. The default value is negative one (-1).
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.IsAreaTypeSeries">
            <summary>
            This property used to confirm whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedSegments">
            <summary>
            Gets the list of selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingArea100Series.CreateSegments">
            <summary>
            Creates the segments of <see cref="!:Stacking100AreaSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingArea100Series.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingArea100Series"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBar100Series">
            <summary>
            StackingBar100Series resembles <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>, but the cumulative portion of each stacked element always totals to 100%.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingBar100Series ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingBar100Series&gt;
               </code>
               <code language="C#">
                  StackingBar100Series series1 = new StackingBar100Series();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries">
            <summary>
             StackingBarSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>.
             Each series is stacked horizontally side by side to each other.
             </summary>
             <example>
             <code language="XAML">
                   &lt;syncfusion:StackingBarSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                   &lt;/syncfusion:StackingBarSeries&gt;
                </code>
                <code language="C#">
                   StackingBarSeries series1 = new StackingBarSeries();
                   series1.ItemsSource = viewmodel.Data;
                   series1.XBindingPath = "Year";
                   series1.YBindingPath = "Value";
                   chart.Series.Add(series1);
                </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSelectionBrushProperty">
            <summary>
            Identifies the SegmentSelectionBrush dependency property.
            </summary>
            <value>
            The identifier for SegmentSelectionBrush dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSpacingProperty">
            <summary>
            Identifies the SegmentSpacing dependency property.
            </summary>
            <value>
            The identifier for SegmentSpacing dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
            <value>
            The identifier for SelectedIndex dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CustomTemplateProperty">
            <summary>
            Identifies the CustomTemplate dependency property.
            </summary>
            <value>
            The identifier for CustomTemplate dependency property.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.#ctor">
            <summary>
            Initializes a new instance of the StackingBarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Segment spacing</param>
             <param name="Right">Segment right value</param>
             <param name="Left">Segment left value</param>
             <returns>Returns the segment spacing value.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
            The value ranges from 0 to 1 and its default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the first segment in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
            <value>
            The index of first segment in the current selection. The default value is negative one (-1).
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CustomTemplate">
             <summary>
             Gets or sets the DataTemplate used to customize the shape appearence. 
             </summary>
             <value>
             The template that specifies shape inside canvas. The default is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:StackedBarSeries ItemsSource="{Binding Data}" XBindingPath="XValue" YBindingPath="YValue">
                                <chart:StackedBarSeries.CustomTemplate>
                                    <DataTemplate>
                                        <Canvas>
                                            <Rectangle Fill="{Binding Interior}" Width="{Binding Width}" Height="{Binding Height}"  
                                            Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}" Stroke="{Binding Stroke}"/>
                                        </Canvas>
                                    </DataTemplate>
                                </chart:StackedBarSeries.CustomTemplate>
                       </chart:StackedBarSeries>
                                
                 </chart:SfChart>
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series.CreateSegments">
            <summary>
            Creates the segments of <see cref="!:Stacking100BarSeries"/>.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBar100Series"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumn100Series">
            <summary>
            StackingColumn100Series resembles <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>, but the cumulative portion of each stacked element always totals to 100%.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingColumn100Series ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingColumn100Series&gt;
               </code>
               <code language="C#">
                  StackingColumn100Series series1 = new StackingColumn100Series();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries">
            <summary>
            StackingColumnSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>.
            Each series is stacked vertically one above the other.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingColumnSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingColumnSeries&gt;
               </code>
               <code language="C#">
                  StackingColumnSeries series1 = new StackingColumnSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSelectionBrushProperty">
            <summary>
            Identifies the SegmentSelectionBrush dependency property.
            </summary>
            <value>
            The identifier for SegmentSelectionBrush dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSpacingProperty">
            <summary>
            Identifies the SegmentSpacing dependency property.
            </summary>
            <value>
            The identifier for SegmentSpacing dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
            <value>
            The identifier for SelectedIndex dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CustomTemplateProperty">
            <summary>
            Identifies the CustomTemplate dependency property.
            </summary>
            <value>
            The identifier for CustomTemplate dependency property.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.Syncfusion#UI#Xaml#Charts#ISegmentSpacing#CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Segment spacing</param>
             <param name="Right">Segment right value</param>
             <param name="Left">Segment left value</param>
             <returns>Returns the segment spacing value.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
            The value ranges from 0 to 1 and its default value is 0.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the first segment in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
            <value>
            The index of first segment in the current selection. The default value is negative one (-1).
            </value> 
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CustomTemplate">
             <summary>
             Gets or sets the DataTemplate used to customize the shape appearence. 
             </summary>
             <value>
             The template that specifies shape inside canvas. The default is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:StackedColumnSeries ItemsSource="{Binding Data}" XBindingPath="XValue" YBindingPath="YValue">
                                <chart:StackedColumnSeries.CustomTemplate>
                                    <DataTemplate>
                                        <Canvas>
                                            <Rectangle Fill="{Binding Interior}" Width="{Binding Width}" Height="{Binding Height}"  
                                            Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}" Stroke="{Binding Stroke}"/>
                                        </Canvas>
                                    </DataTemplate>
                                </chart:StackedColumnSeries.CustomTemplate>
                       </chart:StackedColumnSeries>
                                
                 </chart:SfChart>
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series.CreateSegments">
            <summary>
            Creates the segments of <see cref="!:Stacking100ColumnSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumn100Series"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingLine100Series">
            <summary>
            StackingLine100Series resembles <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLineSeries"/>, but the cumulative portion of each stacked element always totals to 100%.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingLine100Series ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingLine100Series&gt;
               </code>
               <code language="C#">
                  StackingLine100Series series1 = new StackingLine100Series();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingLineSeries">
            <summary>
            StackingLineSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>.
            Each series is stacked horizontal one above the other.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StackingLineSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StackingLineSeries&gt;
               </code>
               <code language="C#">
                  StackingLineSeries series1 = new StackingLineSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingLineSeries.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
            <value>
            The identifier for SelectedIndex dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingLineSeries.SegmentSelectionBrushProperty">
            <summary>
            Identifies the SegmentSelectionBrush dependency property.
            </summary>
            <value>
            The identifier for SegmentSelectionBrush dependency property.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingLineSeries.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
            <value>
            The identifier for StrokeDashArray dependency property.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLineSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos">Point</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLineSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLineSeries.CreateSegment(System.Double[],System.Object)">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
            <param name="actualData">The actualData.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingLineSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the first segment in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
            <value>
            The index of first segment in the current selection. The default value is negative one (-1).
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.StackingLineSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingLineSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingLineSeries.StrokeDashArray">
             <summary>
             Gets or sets the stroke dash array for line to customize the appearance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLineSeries"/>.
             </summary>
             <value>
             It takes <see cref="T:System.Windows.Media.DoubleCollection"/> value and the default value is null.
             </value>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:StackedLineSeries
                           StrokeDashArray="5,3"
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                       <chart:StackedLineSeries
                           StrokeDashArray="5,3"
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue1"/>
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 StackedLineSeries series = new StackedLineSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
                 
                 StackedLineSeries series1 = new StackedLineSeries();
                 series1.ItemsSource = viewmodel.Data;
                 series1.XBindingPath = "XValue";
                 series1.YBindingPath = "YValue1";
                 chart.Series.Add(series1);
                 
                 DoubleCollection doubleCollection = new DoubleCollection();
                 doubleCollection.Add(5);
                 doubleCollection.Add(3);
                 series.StrokeDashArray = doubleCollection;
                 series1.StrokeDashArray = doubleCollection;
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingLineSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLine100Series.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLine100Series"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingLine100Series.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StackingLine100Series"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingValues">
            <summary>
            Class implementation for StackingValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingValues.StartValues">
            <summary>
            Gets or sets StartValues of the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingValues.EndValues">
            <summary>
            Gets or sets EndValues of the series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepAreaSeries">
            <summary>
            StepAreaSeries connects its data points,using a continuous line with its underlying areas being filled in.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StepAreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StepAreaSeries&gt;
            </code>
            <code language="C#">
                  StepAreaSeries series1 = new StepAreaSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>  
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepAreaSeries.IsClosedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.IsClosed"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndex"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SegmentSelectionBrush"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.CreateSegments">
            <summary>
            Creates the segments of StepAreaSeries.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StepAreaSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moving on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.IsClosed">
            <summary>
            Gets or sets a value indicating whether area path should be closed or opened.
            </summary>
            <value>
             If its <c>true</c>, Area stroke will be closed; otherwise stroke will be applied on top of the series only.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.IsAreaTypeSeries">
            <summary>
             Gets the value which confirms whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepLineSeries">
            <summary>
            StepLineSeries displays its data points using line segments.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:StepLineSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:StepLineSeries&gt;
            </code>
            <code language="C#">
                  StepLineSeries series1 = new StepLineSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StepAreaSeries"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.CustomTemplate"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndex"/> property.       .
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SegmentSelectionBrush"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.CreateSegments">
            <summary>
            Creates the segments of StepLineSeries.
            </summary>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moving on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.StepLineSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.StepLineSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.ClearUnUsedStepLineSegment(System.Int32)">
            <summary>
            Removes the unused segments
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" ScatterHeight="40" 
                                    YBindingPath="Year2010" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" Stretch="Fill"
                                            Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                            Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WaterfallSeries">
            <summary>
            WaterfallSeries displays its positive and negative data points using a set of bars.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:WaterfallSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:WaterfallSeries&gt;
            </code>
            <code language="C#">
                  WaterfallSeries series1 = new WaterfallSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StepLineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.AllowAutoSumProperty">
            <summary>
            Using a DependencyProperty as the backing store for AllowAutoSum.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.ShowConnectorProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowConnector.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SummaryBindingPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for SummaryBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.ConnectorLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for ConnectorLineStyle.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.NegativeSegmentBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for NegativeSegmentBrush.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SummarySegmentBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SummarySegmentBrush.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.CreateSegments">
            <summary>
            Creates the segments of WaterfallSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.OnSegmentCreated(Syncfusion.UI.Xaml.Charts.WaterfallSegmentCreatedEventArgs)">
            <summary>
            Occurs when segment created for waterfall series. 
            </summary>
            <param name="args">WaterfallSegmentCreatedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SetIndividualPoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for set points to given index.
            </summary>
            <param name="index">index</param>
            <param name="obj">object</param>
            <param name="replace">bool</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.WaterfallSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSeries.OnUpdateSegmentandAdornmentInterior(Syncfusion.UI.Xaml.Charts.WaterfallSeries)">
            <summary>
            Method used to update the segment and adornment interior color. 
            </summary>
            <param name="series"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentCreated">
            <summary>
            Event raised while the segment have created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.AllowAutoSum">
            <summary>
            Gets or sets a value indicating whether to auto sum. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.ShowConnector">
            <summary>
            Gets or sets a value indicating whether the segments connector line is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SummaryBindingPath">
            <summary>
            Gets or sets string that indicates sum segment of series. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.ConnectorLineStyle">
            <summary>
            Gets or sets the style value that indicates the segments connector line visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.NegativeSegmentBrush">
            <summary>
            Gets or sets the brush value that indicates the interior color of negative segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SummarySegmentBrush">
            <summary>
            Gets or sets the brush value that indicates the consolidated segment's interior.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.SummaryValues">
            <summary>
            Gets or sets the y values collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WaterfallSegmentCreatedEventArgs">
            <summary>
            Handler implementation for waterfall Segment created event. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegmentCreatedEventArgs.IsSummary">
            <summary>
            Sets the bool value, which used to identify the corresponding segment is sum segment or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegmentCreatedEventArgs.Segment">
            <summary>
            Gets the corresponding created segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegmentCreatedEventArgs.Index">
            <summary>
            Gets the corresponding created segment's index. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DragDelta">
            <summary>
            Represents EventArgs that a cancel option for abort the operation. 
            </summary>
            <seealso cref="T:System.EventArgs"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DragDelta.Delta">
            <summary>
            Gets or sets double value to delta. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DragDelta.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs">
            <summary>
            Represents a events args that contain event data, and provides a value to use for events that do not include event data.
            </summary> 
            <seealso cref="T:System.EventArgs"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs.EmptyPoint">
            <summary>
            Gets or sets a value indicating whether empty point. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs.BaseXValue">
            <summary>
            Gets or sets x value. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs">
            <summary>
            Represents a events args that contain event data, and provides a value to use for events that do not include event data.
            </summary>
            <seealso cref="T:System.EventArgs"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs.BaseYValue">
            <summary>
            Gets or sets y value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs.NewYValue">
            <summary>
            Gets or sets new value. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragSegmentInfo">
            <summary>
            Represents a ChartDragPoint that includes a current and existing value. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo">
            <summary>
            Represents a data point that used to display the drag data point to user. 
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.FontFamily">
            <summary>
            Gets or sets the font family for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.FontSize">
            <summary>
            Gets or sets the font size for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.FontStyle">
            <summary>
            Gets or sets the font style for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.Foreground">
            <summary>
            Gets or sets the Brush for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.Brush">
            <summary>
            Gets or sets brush. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.Segment">
            <summary>
            Gets or sets chart segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.Delta">
            <summary>
            Gets or sets the double value to delta. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.IsNegative">
            <summary>
            Gets or sets a value indicating whether to Enable or disable IsNegative. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.ScreenCoordinates">
            <summary>
            Gets or sets the points to screen co-ordinates. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.PrefixLabelTemplate">
            <summary>
            Gets or sets the template for prefix label. 
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.PostfixLabelTemplate">
            <summary>
            Gets or sets the template for postfix label. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.PrefixLabelTemplateX">
            <summary>
            Gets or sets the template for prefix x label. 
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.PostfixLabelTemplateX">
            <summary>
            Gets or sets the template for postfix x label. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragSegmentInfo.NewValue">
            <summary>
            Gets or sets new value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragSegmentInfo.NewXValue">
            <summary>
            Gets or sets new x value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragSegmentInfo.BaseValue">
            <summary>
            Gets or sets base value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDragEventArgs.BaseYValue">
            <summary>
            Gets or sets base y value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDragEventArgs.NewYValue">
            <summary>
            Gets or sets new y value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentDragEventArgs.Segment">
            <summary>
            Gets or sets chart segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs.BaseYValue">
            <summary>
            Gets or sets base y value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs.NewYValue">
            <summary>
            Gets or sets new y value. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartXyDragStartEventArgs">
            <summary>
            Defines the ChartXyDragStart event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartXyDragStartEventArgs.BaseYValue">
            <summary>
            Gets or sets base y value. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyDeltaDragEventArgs">
            <summary>
            Defines the XyDeltaDrag event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDeltaDragEventArgs.BaseXValue">
            <summary>
            Gets or sets base x value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDeltaDragEventArgs.NewXValue">
            <summary>
            Gets or sets new x value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDeltaDragEventArgs.DeltaX">
            <summary>
            Gets or sets x value to delta. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartXyDragEndEventArgs">
            <summary>
            Defines the ChartXyDragEnd event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartXyDragEndEventArgs.BaseXValue">
            <summary>
            Gets or sets base x value. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartXyDragEndEventArgs.NewXValue">
            <summary>
            Gets or sets new x value. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle">
            <summary>
            Represents the class for configuring dragging tooltip Style.
            </summary>    
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle.FontFamily">
            <summary>
            Gets or sets the font family for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle.FontSize">
            <summary>
            Gets or sets the font size for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle.FontStyle">
            <summary>
            Gets or sets the font style for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle.Foreground">
            <summary>
            Gets or sets the Brush for dragging tooltip text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragTooltipStyle.Background">
            <summary>
            Gets or sets the background Brush for dragging tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase">
            <summary>
            XySeriesDraggingBase is abstract class which is used to allow, drag a chart series in chart area.
            </summary>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.EnableSeriesDragging"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.EnableSeriesDraggingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.EnableSeriesDragging"/> property.       .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse move.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button down.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when mouse left button up.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse enter.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse leave.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging series.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging entered.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.OnChartDragExited(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging exit.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.UpdateUnderLayingModel(System.String,System.Collections.Generic.IList{System.Double})">
            <summary>
            Method used to update the underlying model.
            </summary>
            <param name="path">path</param>
            <param name="updatedDatas">updated datas</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySeriesDraggingBase.EnableSeriesDragging">
            <summary>
            Gets or sets a value indicating whether to enable the series dragging. We can drag the series, if its <c>true</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySeriesDragEventArgs.BaseXValue">
            <summary>
            Gets or sets base y value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDragSeriesInfo">
            <summary>
            Represents a ChartDragPoint that includes a offsety value. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDragSeriesInfo.OffsetY">
            <summary>
            Gets or sets value of y offset
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs.XValue">
            <summary>
            Gets or sets x value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs.YValue">
            <summary>
            Gets or sets y value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs.CanDrag">
            <summary>
            Gets or sets a value indicating whether to Enable or disable dragging
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs.SegmentIndex">
            <summary>
            Gets or sets the segment index
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ArrowLine">
            <summary>
            Provides arrow line rendering support, which includes a positioning attributes. 
            </summary>
            <seealso cref="T:System.Windows.DependencyObject"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.X1Property">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X1"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.Y1Property">
            <summary>
               The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y1"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.X2Property">
            <summary>
               The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X2"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.Y2Property">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y2"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ArrowLine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.GetGeometry">
            <summary>
            Draw a arrow line.
            </summary>
            <returns>Return the <see cref="F:Syncfusion.UI.Xaml.Charts.ArrowLine.pathGeometry"/> of arrow line.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.MultiplyMatrixVector(System.Windows.Point,System.Windows.Media.Matrix)">
            <summary>
            Vector and matrix multiplication
            </summary>
            <param name="point">The Point</param>
            <param name="mat">The Matrix</param>
            <returns>Returns the multiplied result.</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.MultiplyMatrixes(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Matrixes multiplication
            </summary>
            <param name="mat1">The First Matrix</param>
            <param name="mat2">The Second Matrix</param>
            <returns>Returns the multiplied result matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.FindNormalization(System.Windows.Point,System.Double)">
            <summary>
            Vector Normalization.
            </summary>
            <param name="vectPoint">The vector Point</param>
            <param name="len">The Length</param>
            <returns>Returns the normalized point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ArrowLine.CalculateArrow(System.Windows.Media.PathFigure,System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the arrow points.
            </summary>
            <param name="pathfigure">The Path Figure</param>
            <param name="point1">The First Point</param>
            <param name="point2">The Second Point</param>
            <returns>Returns the <see cref="T:System.Windows.Media.PathFigure"/> for the arrow.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X1">
            <summary>
            Gets or sets the x-coordinate of the ArrowLine start point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y1">
            <summary>
            Gets or sets the y-coordinate of the ArrowLine start point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X2">
            <summary>
            Gets or sets the x-coordinate of the ArrowLine end point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y2">
            <summary>
            Gets or sets the y-coordinate of the ArrowLine end point.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartToolBar">
            <summary>
            ChartToolBar class implementation that represents a ItemsControl. 
            </summary>
            <seealso cref="T:System.Windows.Controls.ItemsControl"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBar">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.ChangeBackground">
            <summary>
            Changes the background color.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.ChangedOrientation">
            <summary>
            Change the ItemsPanel orientation 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.SetItemSource">
            <summary>
            Set Items for ToolBar.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the chart tool bar on mouse left button down.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.ZoomingToolBar_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBar"/> when loaded.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.ZoomBehavior">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartToolBarItem">
            <summary>
            ChartToolBarItem class implementation. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem"/> class implementation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.IconBackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.IconBackground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.EnableColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.EnableColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.DisableColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.DisableColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconMarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconMargin"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.OnPropertyChanged(System.String)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem"/> when it's property changes.
            </summary>
            <param name="propertyName">The Property Name</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.OnCreateAutomationPeer">
            <summary>
            Returns class-specific System.Windows.Automation.Peers.AutomationPeer implementations for the WPF infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates interactive behaviors when mouse moved.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates interactive behaviors when mouse leaves.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.OnSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem"/> when the size changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.BindingToolbarItems(Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior)">
            <summary>
            Binds the tool bar item.
            </summary>
            <param name="dataSource">The Required Source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ScheduleUpdate">
            <summary>
            Schedule the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem"/> update.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.UpdateToolBarPosition">
            <summary>
            Updates the toolbar position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.IconBackground">
            <summary>
            Gets or sets the icon background 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.EnableColor">
            <summary>
            Gets or sets the toolbar color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.DisableColor">
            <summary>
            Gets or sets the toolbar disable color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconHeight">
            <summary>
            Gets or sets the Height for the ZoomingToolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconWidth">
            <summary>
             Gets or sets the Width for the ZoomingToolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.ToolBarIconMargin">
            <summary>
             Gets or sets the Margin for the ZoomingToolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomingToolBarItem.Source">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomIn">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomIn"/> class Implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomIn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomIn"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomIn.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomIn"/> icon.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomOut">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomOut"/> class Implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomOut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomOut"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomOut.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomOut"/> icon.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomReset">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomReset"/> class Implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomReset.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomReset"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomReset.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomReset"/> icon.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomPan">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomPan"/> class Implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomPan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomPan"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomPan.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ZoomPan"/> icon.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoom">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.Charts.SelectionZoom"/> class Implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SelectionZoom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SelectionZoom"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SelectionZoom.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SelectionZoom"/> icon.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelBarStyle">
            <summary>
            Represents a dependency object that defines the style for axis label. 
            </summary>
            <seealso cref="T:System.Windows.DependencyObject"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelBarStyle.LabelHorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.LabelHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelBarStyle.BackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelBarStyle.PositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.Position"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBarStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LabelBarStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBarStyle.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the label bar style on it's property change.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.LabelHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment of the labels inside the label bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.Background">
            <summary>
            Gets or sets the Background the label bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelBrush">
            <summary>
            Gets or sets the color of the labels inside the selected region.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelStyle">
            <summary>
            Gets or sets the style for labels in the selected region.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.Position">
            <summary>
            Gets or sets the position which is used to place the upper and lower labels inside or outside of the label bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.DateTimeRangeNavigator">
            <summary>
            Gets or sets the date time range navigator.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelStyle">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.LabelStyle"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelStyle.FontFamilyProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelStyle.FontFamily"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelStyle.ForegroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelStyle.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelStyle.FontSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LabelStyle.FontSize"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LabelStyle"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelStyle.FontFamily">
            <summary>
            Gets or sets the font family for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelStyle.Foreground">
            <summary>
            Gets or sets the foreground color for label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelStyle.FontSize">
            <summary>
            Gets or sets the font size
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.RowProperty">
            <summary>
            The DependencyProperty for <see cref="!:Row"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.GetRow(System.Windows.UIElement)">
            <summary>
            Get the row 
            </summary>
            <param name="obj">UI Element</param>
            <returns>Return the row index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.SetRow(System.Windows.UIElement,System.Int32)">
            <summary>
            Set the row
            </summary>
            <param name="obj">UI Element</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of the panel.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the measure size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the children of the panel.
            </summary>
            <param name="finalSize">The Final Size</param>
            <returns>Returns the arrange size.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorPanel.RowDefinitions">
            <summary>
            Gets or sets the range navigator rows
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinitions">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinitions"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinitions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinitions"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.HeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Height"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.UnitProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Unit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderThicknessProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderStrokeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderStroke"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Measure(System.Windows.Size,System.Int32,System.Double)">
            <summary>
            Measures the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition"/>
            </summary>
            <param name="size">The Size</param>
            <param name="rowIndex">The Row Index</param>
            <param name="rowHeight">The Row Height</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Arrange(System.Windows.Size,System.Double)">
            <summary>
            Arranges the <see cref="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition"/>
            </summary>
            <param name="availableSize">The Available Size</param>
            <param name="top">The Top</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.RowTop">
            <summary>
            Gets the row top value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Height">
            <summary>
            Gets or sets height of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Unit">
            <summary>
            Gets or sets unit of the value specified in Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderThickness">
            <summary>
            Gets or sets thickness of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderStroke">
            <summary>
            Gets or sets border stroke.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Element">
            <summary>
            Gets or sets the <see cref="T:System.Windows.UIElement"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OrientationProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.MaximumProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ViewSizePortProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ViewSizePort"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallChangeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallChange"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeChangeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeChange"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ScaleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Scale"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeStartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeStart"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeEndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeEnd"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ScrollButtonVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ScrollButtonVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.EnableTouchModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.EnableTouchMode"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnApplyTemplate">
            <summary>
            Applied the required templates for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Applies the required orientation template on orientation changed.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnRangeValueChanged">
            <summary>
            Updates the <see cref="F:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ResizableBarSize"/> on range value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the control.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the measure size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the elements in the control.
            </summary>
            <param name="finalSize">The Final Size</param>
            <returns>Returns the arrange size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnThumbDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the scroll bar when the thumb is dragged.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnFarHandDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the scroll bar on far hand dragged.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnNearHandDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the scroll bar on near hand dragged.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnValueChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on it's value change.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on orientation changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnRangeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on orientation changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnIncreaseDecreaseVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on scroll button visibility changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ApplyOrientationTemplate">
            <summary>
            Applies the orientation templates.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnSmallIncreaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on small increase click.
            </summary>
            <param name="sender">The Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnSmallDecreaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on small decrease click.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnLargeDecreaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on large decrease click.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.OnLargeIncreaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> on large increase click.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.CalculateSize">
            <summary>
            Calculates the thumbs sizes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ThumbMinMax">
            <summary>
            Calculates the thumbs minimum and maximum sizes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.CalculateChange(System.Double,System.Double)">
            <summary>
            Calculates the ranges when thumbs are dragged.
            </summary>
            <param name="startChange">The Start Range</param>
            <param name="endChange">The End Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeMinMax">
            <summary>
            Calculates the minimum and the maximum range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SetLargeThumbSize">
            <summary>
            Calculates the large thumb size.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.CalculateRangeDifference">
            <summary>
            Calculates the range difference.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.IncreaseDecreaseOperation(System.Double,System.Double)">
            <summary>
            Calculates the range when <see cref="T:Syncfusion.UI.Xaml.Charts.ResizableScrollBar"/> is clicked at a range.
            </summary>
            <param name="startChange">The Start Change</param>
            <param name="endChange">The End Change</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.CalculateOperations">
            <summary>
            Calculates the thumb size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Orientation">
            <summary>
            Gets or sets the Orientation for the Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Maximum">
            <summary>
            Gets or sets Maximum Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Minimum">
            <summary>
            Gets or sets Minimum Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ViewSizePort">
            <summary>
            Gets or sets ViewSizePort Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallChange">
            <summary>
            Gets or sets SmallChange Value for Scroll Bar Thumb Change When the Small Increase and Decrease Button is Clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeChange">
            <summary>
            Gets or sets LargeChange Value for Scroll Bar Thumb Change When the Large Increase and Decrease Button is Clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Scale">
            <summary>
            Gets or sets a value that determines how far the scroll content is scaled. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeStart">
            <summary>
            Gets or sets RangeStart Value for Scroll Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeEnd">
            <summary>
            Gets or sets RangeEnd Value for Scroll Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ScrollButtonVisibility">
            <summary>
            Gets or sets the visibility of scroll buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.EnableTouchMode">
            <summary>
            Gets or sets a value indicating whether to EnableTouchMode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ResizableThumbSize">
            <summary>
            Gets the resizable thumb size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.AvailabeSize">
            <summary>
            Gets the available size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.TrackSize">
            <summary>
            Gets the track size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.IsValueChangedTrigger">
            <summary>
            Gets or sets a value indicating whether the value changed is triggered.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.NearHand">
            <summary>
            Gets or sets the near hand.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.FarHand">
            <summary>
            Gets or sets the far hand.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.MiddleThumb">
            <summary>
            Gets or sets the middle thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallDecrease">
            <summary>
            Gets or sets the small decrease.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeDecrease">
            <summary>
            Gets or sets the large decrease.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeIncrease">
            <summary>
            Gets or sets the large increase.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallIncrease">
            <summary>
            Gets or sets the small increase.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorSelector">
            <summary>
            Override the ResizableScrollBar for Range navigator thumb selector
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeNavigatorSelector.OverlayBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorSelector.OverlayBrush"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorSelector.OverlayBrush">
            <summary>
            Gets or sets the overlay brush color
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Resizer">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ChangeView">
            <summary>
            Changes the view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.MapActualValueToPixels">
            <summary>
            Maps the actual value to pixels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.OnApplyTemplate">
            <summary>
            Applies the templates for resizer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.OnDragCompleted(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.Resizer"/> on drag completed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.CheckCoordinateValue">
            <summary>
            Checks the co-ordinate value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.Move(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Updates the resizer bounds on resizing.
            </summary>
            <param name="horizontalChange">The Horizontal Changed Value</param>
            <param name="verticalChange">The Vertical Changed Value.</param>
            <param name="isLeft">Is Left Change</param>
            <param name="isTop">Is Top Change</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeTopRight_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the top resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.MapPixelToActualValue">
            <summary>
            Maps the co-ordinates values to points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeTopMiddle_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the top middle resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeTopLeft_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the top left resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeMiddleRight_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the middle right resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeMiddleLeft_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the middle left resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeBottomRight_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the bottom right resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeBottomMiddle_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the bottom middle resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Resizer.ResizeBottomLeft_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Drag delta operations for the bottom left resizing.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Drag Delta Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.AnnotationResizer">
            <summary>
            Gets or sets the annotation resizer.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.XAxis">
            <summary>
            Gets the annotation resizer x axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.YAxis">
            <summary>
            Gets the annotation resizer y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.ActualX1">
            <summary>
            Gets or sets the actual x1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.ActualX2">
            <summary>
            Gets or sets the actual x2 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.ActualY1">
            <summary>
            Gets or sets the actual y1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resizer.ActualY2">
            <summary>
            Gets or sets the actual y2 value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomFactorProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomFactor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeStartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeStart"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeEndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeEnd"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ContentProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Content"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OverlayBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OverlayBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ScrollbarVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ScrollbarVisibility"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Serialize(System.String)">
            <summary>
            Serialize the navigator with the given file name.
            </summary>
            <param name="fileName">The File Name</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Serialize(System.IO.Stream)">
            <summary>
            Serialize the navigator with the given file stream.
            </summary>
            <param name="stream">The Stream</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Serialize">
            <summary>
            Serialize the navigator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize the navigator with the given stream.
            </summary>
            <param name="stream">The Stream</param>
            <returns>Returns the root object</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Deserialize(System.String)">
            <summary>
            Deserialize the navigator with the given file name.
            </summary>
            <param name="fileName">The File Name.</param>
            <returns>Returns the root object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Deserialize">
            <summary>
            Deserialize the navigator.
            </summary>
            <returns>Returns the root object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnZoomFactorChanged(System.Double,System.Double)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on zoom factor changed.
            </summary>
            <param name="newValue">The New Value</param>
            <param name="oldValue">The Old Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnZoomPositionChanged(System.Double)">
            <summary>
            Updates the range navigator on zoom position changed.
            </summary>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnViewRangeEndChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on view range end changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnViewRangeStartChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on view range start changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.CalculateSelectedData">
            <summary>
            Calculates the range for the selected data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnApplyTemplate">
            <summary>
            Applies the templates for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnValueChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on it's value change.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnScrollbarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on scroll bar value changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnTimeLineValueChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on time line value changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnTimeLineSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on time line size changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnZoomFactorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on zoom factor changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnZoomPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on zoom position changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnViewRangeStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on view range start changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnViewRangeEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on view range end changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.SfRangeNavigator_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on size changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OnSfRangeNavigatorLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> on loaded.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ClipNavigator">
            <summary>
            Clips the <see cref="T:Syncfusion.UI.Xaml.Charts.SfRangeNavigator"/> with the given range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomFactor">
            <summary>
            Gets or sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomPosition">
            <summary>
            Gets or sets zoom position. Value must fall within 0 to 1. It determines starting value of visible range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeStart">
            <summary>
            Gets or sets Navigator's Start Thumb value, Value can be DateTime if Minimum and Maximum are set as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeEnd">
            <summary>
            Gets or sets Navigator's End Thumb value, Value can be DateTime if Minimum and Maximum are set as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Content">
            <summary>
            Gets or sets the content that needs to be hosted inside the Navigator, the content can be any UI element.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.OverlayBrush">
            <summary>
            Gets or sets the overlay brush color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ScrollbarVisibility">
            <summary>
            Gets or sets the visibility of the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.XRange">
            <summary>
            Gets or sets the x range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Navigator">
            <summary>
            Gets or sets the navigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Scrollbar">
            <summary>
            Gets or sets the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.DataStart">
            <summary>
            Gets or sets the data start.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.DataEnd">
            <summary>
            Gets or sets the data end.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Selected">
            <summary>
            Gets or sets the selected items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.XValues">
            <summary>
            Gets or sets the x values.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftThumbStyleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftThumbStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightThumbStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightThumbStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarTickLineStyleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.EnableDeferredUpdateProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.EnableDeferredUpdate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.DeferredUpdateDelayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.DeferredUpdateDelay"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.IntervalsProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Intervals"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.MinimumProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ItemsSourceProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowToolTipProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowToolTip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftToolTipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftToolTipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightToolTipTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightToolTipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ToolTipLabelFormatProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ToolTipLabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.XBindingPathProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.XBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLevelBarStyleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLevelBarStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLevelBarStyleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLevelBarStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLabelStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowGridLinesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowGridLines"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RangePadding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="!:UpperLabelBarVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SelectedDataProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SelectedData"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Scheduleupdate">
            <summary>
            Schedule the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> update.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Update">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetThumbStyle">
            <summary>
            Sets the thumb style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GeneratePoints">
            <summary>
            Generates the data points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.CalculateSelectedData">
            <summary>
            Gets the selected data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetLabelPosition">
            <summary>
            Sets the label position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnViewRangeStartChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on view range start changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnViewRangeEndChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on view range end changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnZoomFactorChanged(System.Double,System.Double)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on zoom factor changed.
            </summary>
            <param name="newValue">The New Value</param>
            <param name="oldValue">The Old Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnZoomPositionChanged(System.Double)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on zoom position changed.
            </summary>
            <param name="newValue">The New Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnDataSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on data source changed.
            </summary>
            <param name="args">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> mouse move operations.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnScrollbarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on scroll bar value changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnTimeLineValueChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the tooltip on time line value changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnTimeLineSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> interval on time line changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnValueChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on it's value change.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnLeftToolTipTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the tooltip when the left tooltip template changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnThumbLineStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the thumb style when it is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnGridLineStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the gridlines when it's style changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnTickLineStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the tick lines when it's style changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnEnableDeferredUpdatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> when the deferred update property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnDeferredUpdateDurationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on deferred update duration changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> when the interval property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnMinimumMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the range when the maximum or the minimum value changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Argument</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnItemSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on items source changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnShowToolTipChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the tooltip visibility.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnRightToolTipTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the right tooltip when it's template changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnToolTipFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the tooltip when it's format changed
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnXBindingPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Generates the points when the x binding path changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="args">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnLabelStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the label when it's style is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnShowGridlinesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the gridlines when <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowGridLines"/> property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnLowerBarVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the lower label bar visibility when <see cref="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarVisibility"/> property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnHigherBarVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the upper label bar visibility when <see cref="!:UpperLabelBarVisibility"/> property is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GetWeekNumber(System.DateTime)">
            <summary>
            Gets the week number.
            </summary>
            <param name="datePassed">The Date</param>
            <returns>Returns the week number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetMinuteInterval(System.Int32,System.String)">
            <summary>
            Sets the minute interval
            </summary>
            <param name="minuteinterval">The Minute Interval</param>
            <param name="dockposition">The Dock Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetLabelStyle(System.Windows.Controls.Panel,System.Int32,Syncfusion.UI.Xaml.Charts.LabelBarStyle)">
            <summary>
            Method called to style for the labels.
            </summary>
            <param name="labelBarPanel">The Label Bar Panel</param>
            <param name="index">The Index</param>
            <param name="labelBarStyle">The Label Bar Style</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetSecondInterval">
            <summary>
            Sets the second interval.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ThumbStyleChanged(Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the thumb style when it is changed.
            </summary>
            <param name="navigator">The Range Navigator</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnMinimumMaximumChanged">
            <summary>
            Updates the range when the maximum or the minimum value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetDefaultRange">
            <summary>
            Method called to reset default range when items source is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnSfRangeNavigatorCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on collection changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Refresh">
            <summary>
            Refreshes the points and the layout.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LabelStyleChanged">
            <summary>
            Updates the label when it's style is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpdateHigherBarVisibility">
            <summary>
            Updating the upper label bar visibility.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpdateLowerBarVisibility">
            <summary>
            Updating the lower label bar visibility..
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnIntervalsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> when the interval collection changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LabelFormatters_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the label format when the label formatter collection changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnSfDateTimeRangeNavigatorSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> on it's size changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnSfDateTimeRangeNavigatorLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> when it is loaded.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.CalculateRange">
            <summary>
            Calculates the range for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpdateTooltipVisibility">
            <summary>
            Updates the tooltip visibility.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SfDateTimeRangeNavigator_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the mouse left button down interactions for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SfDateTimeRangeNavigator_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the mouse left button up interactions for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GetVisualChildren">
            <summary>
            Gets the visual children
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.AddDaysValues(System.DateTime)">
            <summary>
            Adds the day values.
            </summary>
            <param name="currentDate">The Current Date</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GeneratePropertyPoints">
            <summary>
            Generates the property points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpdateTooltip">
            <summary>
            Updates the tooltip for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ChangeViewRange">
            <summary>
            Changes view range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetSelectedDataStyle">
            <summary>
            Method called to set the style for upper and lower labels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelBar_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the mouse left button down interaction of the lower label bar.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LabelSelection(System.Double,System.Double)">
            <summary>
            Selects the label.
            </summary>
            <param name="startleft">The Start Left Range</param>
            <param name="endright">The End Right Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpperLabelBar_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the mouse left button down interaction of the lower label bar.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelBar_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse leave interaction of the lower label bar.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelBar_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse move interaction of the lower label bar.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpperLabelBar_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse leave interactions of the upper label bar.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.UpperLabelBar_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse move interaction of the upper label bar.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.InsertLabels(System.String)">
            <summary>
            Inserts the labels at the specified dock position.
            </summary>
            <param name="dockposition">The Dock Position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetHourInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the hour interval.
            </summary>
            <param name="hourinterval">The Hour Interval</param>
            <param name="dockposition">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetDayInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the day interval.
            </summary>
            <param name="dayinterval">The Day Interval</param>
            <param name="dockposition">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.AddLabels(System.String,System.String,System.String)">
            <summary>
            Method to check whether to add the format to labels.
            </summary>
            <param name="format">The Format</param>
            <param name="dockposition">The Dock Position.</param>
            <param name="interval">The Interval</param>
            <returns>Returns a value indicating whether the total text block width is less than the track size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetWeekInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the week interval.
            </summary>
            <param name="weekinterval">The Week Interval</param>
            <param name="dockposition">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetMonthInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the month interval
            </summary>
            <param name="monthinterval">The Month Interval</param>
            <param name="dockposition">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ClearLabels(System.String)">
            <summary>
            Clears the labels according to the dock position.
            </summary>
            <param name="dockposition">The Dock Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetQuarterInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the quarter interval.
            </summary>
            <param name="quarterinterval">The Quarter Interval.</param>
            <param name="dockpostion">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SetYearInterval(System.Int32,System.String,System.Collections.ObjectModel.ObservableCollection{System.String})">
            <summary>
            Sets the year interval
            </summary>
            <param name="yearInterval">The Year Interval</param>
            <param name="dockposition">The Dock Position</param>
            <param name="formatter">The Formatter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GenerateLabelContainers(System.String)">
            <summary>
            Generates the label containers.
            </summary>
            <param name="postion">The Position</param>
            <returns>Returns a value indicating whether the total text block width is less than the track size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnInternalValueChanged">
            <summary>
            Method to calculate the selected data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ResetTimer">
            <summary>
            Method called to reset the timer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.OnTimeout(System.Object,System.Object)">
            <summary>
            Method called on every tick of timer.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.GenerateDataTablePoints">
            <summary>
            Generates the data table points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ClearLabels">
            <summary>
            Clears the navigator labels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ClearNavigatorLabels">
            <summary>
            Clears the navigator labels.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarLabelsCreated">
            <summary>
            Occurs when the lower bar labels are created.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarLabelsCreated">
            <summary>
            Occurs when the upper bar labels are created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftThumbStyle">
            <summary>
            Gets or sets the thumb style for left thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightThumbStyle">
            <summary>
            Gets or sets the right thumb style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarTickLineStyle">
            <summary>
            Gets or sets the style for tick lines inside the upper bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarGridLineStyle">
            <summary>
            Gets or sets the style for upper bar gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarTickLineStyle">
            <summary>
            Gets or sets the style for tick lines in lower bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarGridLineStyle">
            <summary>
            Gets or sets the style for lower bar gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.EnableDeferredUpdate">
            <summary>
            Gets or sets a value indicating whether to defer the ValueChanged notification. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.DeferredUpdateDelay">
            <summary>
            Gets or sets double interval value to reset the timer when EnableDeferredUpdate is true
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Intervals">
            <summary>
            Gets or sets intervals collection to render labels of <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Minimum">
            <summary>
            Gets or sets the Minimum Starting Range of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Maximum">
            <summary>
            Gets or sets the Maximum Ending Range of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ItemsSource">
            <summary>
            Gets or sets an object source used to render range.
            </summary>
            <value>The DataSource value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SelectedData">
            <summary>
            Gets an IEnumerable source for the particular selected region
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether to show ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerBarVisibility">
            <summary>
            Gets or sets a value for indicating whether the visibility of the lower label bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherBarVisibility">
            <summary>
            Gets or sets a value for indicating whether the visibility of the upper label bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftToolTipTemplate">
            <summary>
            Gets or sets template for the left side ToolTip.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightToolTipTemplate">
            <summary>
            Gets or sets template for the right side ToolTip.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ToolTipLabelFormat">
            <summary>
            Gets or sets label format for ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.XBindingPath">
            <summary>
            Gets or sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLevelBarStyle">
            <summary>
            Gets or sets the styles for the lower label bar of <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLevelBarStyle">
            <summary>
            Gets or sets the styles for the higher label bar of <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLabelStyle">
            <summary>
            Gets or sets the higher label style.
            </summary>
            <value>
            The higher label style.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelStyle">
            <summary>
            Gets or sets the lower label style.
            </summary>
            <value>
            The lower label style.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether to show grid lines inside the content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RangePadding">
            <summary>
            Gets or sets <see cref="T:Syncfusion.UI.Xaml.Charts.NavigatorRangePadding"/> to shift the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/> axis range inside or outside.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ThumbStyle">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ThumbStyle"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ThumbStyle.LineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ThumbStyle.LineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ThumbStyle.SymbolTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ThumbStyle.SymbolTemplate"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ThumbStyle.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the thumb style on it's property change.
            </summary>
            <param name="d">The Dependency Property</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThumbStyle.LineStyle">
            <summary>
            Gets or sets the style for the thumb line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThumbStyle.SymbolTemplate">
            <summary>
            Gets or sets the data template for the symbol.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThumbStyle.Navigator">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ResizeCanvas">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ResizeCanvas"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizeCanvas.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the resize canvas elements.
            </summary>
            <param name="constraint">The Size Constraint</param>
            <returns>Returns the size to arrange the children.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ResizeCanvas.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the resize canvas elements.
            </summary>
            <param name="arrangeSize">The Arrange Size</param>
            <returns>Returns the arranged size.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Intervals">
            <summary>
            Represents a collection of Interval. 
            </summary>
            <seealso cref="!:System.Collections.ObjectModel.ObservableCollection&lt;Syncfusion.UI.Xaml.Charts.Interval&gt;"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Intervals.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Intervals"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Interval">
            <summary>
            Represents a dependency object that contains the types of interval for axis. 
            </summary>
            <seealso cref="T:System.Windows.DependencyObject"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Interval.IntervalTypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Interval.IntervalType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Interval.LabelFormattersProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.Interval.LabelFormatters"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Interval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Interval"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Interval.IntervalType">
            <summary>
            Gets or sets interval type in which the navigator values should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Interval.LabelFormatters">
            <summary>
            Gets or sets string collection to set the label format for the navigator labels.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LowerBarLabelsCreatedEventArgs">
            <summary>
            Lower bar labels created event arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LowerBarLabelsCreatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.LowerBarLabelsCreatedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LowerBarLabelsCreatedEventArgs.LowerBarLabels">
            <summary>
            Gets or sets the lower bar labels.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HigherBarLabelsCreatedEventArgs">
            <summary>
            Higher bar labels created event arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HigherBarLabelsCreatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.HigherBarLabelsCreatedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HigherBarLabelsCreatedEventArgs.HigherBarLabels">
            <summary>
            Gets and sets the higher bar labels.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeNavigatorLabel">
            <summary>
            Serves as the label type for MinorScale and MajorScale labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorLabel.Content">
            <summary>
            Gets and sets the labels content.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomFactorProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomFactor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.UpdateResizable(System.Boolean)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/>.
            </summary>
            <param name="isVisible"><see cref="T:System.Boolean"/> value to indicate the visibility</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnApplyTemplate">
            <summary>
            Applies the template for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnValueChanged">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on value change.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnFarHandDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on far hand dragged.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnNearHandDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on near hand dragged.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnThumbDragged(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on thumb dragged.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnZoomFactorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on zoom factor changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnZoomPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on zoom position changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.DragCompleted(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Middles the thumb drag completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.AttachTouchModeEvents">
            <summary>
            Attaches the touch mode events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.DetachTouchModeEvents">
            <summary>
            Detaches the touch mode events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnAxisUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on axis unloaded.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnAxisLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> on axis loaded. 
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Updates the mouse down interactive features of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/>.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnAxisMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the interactive features of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> when mouse leaves the axis.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnAxisMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the interactive features of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/> when mouse enters the axis.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.CheckRegion(System.Windows.Point)">
            <summary>
            Checks whether the point is inside the axis.
            </summary>
            <param name="position">The Position</param>
            <returns>Returns the indication whether the pointer is inside the axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.SetZoomingChanges(System.Double,System.Double)">
            <summary>
            Zoom factor and zoom position is set.
            </summary>
            <param name="newZoomPosition">The New Zoom Position</param>
            <param name="newZoomFactor">The New Zoom Factor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaiseZoomChangingEvent(System.Double,System.Double)">
            <summary>
            Raised when zooming occurs.
            </summary>
            <param name="newPosition">The New Position</param>
            <param name="newFactor">The New Factor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaiseZoomChangedEvent(System.Double,System.Double)">
            <summary>
            Raised when zooming is done.
            </summary>
            <param name="prevPosition">The Previous Position</param>
            <param name="prevFactor">The Previous Factor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaisePanChangedevent(System.Double)">
            <summary>
            Raised when panning is changed.
            </summary>
            <param name="zoomPosition">The Zoom Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ChangeZoomPosition(System.Double)">
            <summary>
            Update the range according to the zoom position.
            </summary>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaisePanChangingEvent(System.Double,System.Double)">
            <summary>
            Raised when panning occurs.
            </summary>
            <param name="prevPosition">The Previous Position</param>
            <param name="newPosition">The New Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ChangeZoomFactor(System.Double)">
            <summary>
            Update the range according to the zoom factor.
            </summary>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.BindProperties">
            <summary>
            Binds the resizable bar with the axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.Translate(System.Windows.Controls.ContentControl,System.Double)">
            <summary>
            Translate the thumb label templates.
            </summary>
            <param name="contentControl">The Thumb Label</param>
            <param name="rangeValue">The Range Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ResetTimer">
            <summary>
            Resets the timer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.OnTimeout(System.Object,System.Object)">
            <summary>
            Time outs the timer operations.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.Axis">
            <summary>
            Gets or sets the axis of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChartResizableBar"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomPosition">
            <summary>
            Gets or sets zoom position. Value must fall within 0 to 1. It determines starting value of visible range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelTemplate">
            <summary>
            Gets or sets Template For Visible Range Label View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelVisibility">
            <summary>
            Gets or sets the visibility of Range Label View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomFactor">
            <summary>
            Gets or sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ThemeDictionaries">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ThemeDictionaries"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThemeDictionaries.LightThemeDictionary">
            <summary>
            Gets or sets the light theme for phone
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThemeDictionaries.DarkThemeDictionary">
            <summary>
            Gets or sets the dark theme for phone
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ThemeDictionaries.IsDarkTheme">
            <summary>
            Gets a value indicating whether is dark theme applied.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Watermark">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.Watermark"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle"/> class to customize the axis GridLines, TickLines and LabelStyle for specific region.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.StartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.Start"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.EndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.End"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorGridLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorGridLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.LabelStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.LabelStyle"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.Start">
            <summary>
            Gets or sets the start range for customizing the axis style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.End">
            <summary>
            Gets or sets the end range for customizing the axis style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.LabelStyle">
            <summary>
            Gets or sets options for customizing the axis labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorGridLineStyle">
            <summary>
             Gets or sets options for customizing the major gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorGridLineStyle">
            <summary>
             Gets or sets options for customizing the minor gridline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MajorTickLineStyle">
            <summary>
            Gets or sets options for customizing the major tick lines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyle.MinorTickLineStyle">
            <summary>
            Gets or sets options for customizing the minor tick lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.SetData(System.Double[])">
            <summary>
            Sets the value for box and whisker segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Creates the visaul for box and whisker segment. 
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.GetRenderedVisual">
            <summary>
            Gets the rendered visaul for box and whisker segment. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the box and whisker segment based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Bindings to properties in ColumnSegement.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.ActualStroke">
            <summary>
            Gets the actual stroke for box and whisker segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.Minimum">
            <summary>
            Gets or sets minimum value for segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.Maximum">
            <summary>
            Gets or sets maximum value for segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.Median">
            <summary>
            Gets or sets median value for segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.LowerQuartile">
            <summary>
            Gets or sets lower quartile value for segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.UppperQuartile">
            <summary>
            Gets or sets upper quartile value for segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BoxAndWhiskerSegment.WhiskerWidth">
            <summary>
            Gets or sets the whisker edge width.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment">
            <summary>
            Class implementation for DoughnutSegment
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackBorderWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for TrackBorderWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackBorderColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for brushTrackBorderColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualStartAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualStartAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualEndAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualEndAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsExplodedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsExploded"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.DoughnutSeries)">
            <summary>
            Called when instance created for DoughnutSegment
            </summary>
            <param name="startAngle"></param>
            <param name="endAngle"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsPointInDoughnutSegment(System.Double,System.Double)">
            <summary>
            Method used to check the given co-ordinates lies in doughnut segment or not
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackBorderWidth">
            <summary>
            Gets or sets the track area border width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackBorderColor">
            <summary>
            Gets or sets the track area border color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackOpacity">
            <summary>
            Gets or sets the opacity for the track area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.TrackColor">
            <summary>
            Gets or sets the track area color. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualStartAngle">
            <summary>
            Gets or sets the start angle of this segment slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.ActualEndAngle">
            <summary>
            Gets or sets the end angle of this segment slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsExploded">
            <summary>
            Gets or sets a value indicating whether this segment can be exploded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.StartAngle">
            <summary>
            Gets the start angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.EndAngle">
            <summary>
            Gets the end angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.AngleOfSlice">
            <summary>
            Gets the actual angle the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/> slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.YData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ErrorBarSegment">
            <summary>
            Represents a ChartSegment which displays the error bar type series. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="hlpoint"></param>
            <param name="hrpoint"></param>
            <param name="vtpoint"></param>
            <param name="vbpoint"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UI Element
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment">
            <summary>
            Represents a chart segment which renders collection of points using writeablebitmap.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment"/>.
            </summary>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment"/>.
            </summary>
            <param name="x1Values">specifies the x1 values.</param>
            <param name="y1Values">specifies the y1 values.</param>
            <param name="x2Values">specifies the x2 values.</param>
            <param name="y2Values">specifies the y2 values.</param>
            <param name="series">instance of the series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment">
            <summary>
            Represents chart fast candle bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WinRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>    
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="openValue"></param>
            <param name="closeValue"></param>
            <param name="highValue"></param>
            <param name="lowValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.GetSegmentBrush(System.Int32)">
            <summary>
            Gets the segment color based on data point
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment">
            <summary>
            Represents a chart segment which renders collection of points using writeablebitmap.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment"/>.
            </summary>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment"/> with following arguments.
            </summary>
            <param name="x1Values">Used to specify the segment x1 values</param>
            <param name="y1Values">Used to specify the segment y1 values</param>
            <param name="x2Values">Used to specify the segment x2 values</param>
            <param name="y2Values">Used to specify the segment y2 values</param>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries"/> instance</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment">
            <summary>
            Represents chart fast hilo open close bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor(Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoOpenCloseSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoOpenCloseSegment with following arguments
            </summary>
            <param name="xValues"></param>
            <param name="highValues"></param>
            <param name="lowValues"></param>
            <param name="openValues"></param>
            <param name="closeValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
            <param name="yOpenValues"></param>
            <param name="yCloseValues"></param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.GetSegmentBrush(System.Int32)">
            <summary>
            Gets the segment color based on data point
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoSegment">
            <summary>
            Represents chart fast hilo bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastHiLoSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoSegment
            </summary>
            <param name="xValues"></param>
            <param name="hiValues"></param>
            <param name="loValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="hiVals"></param>
            <param name="lowVals"></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment">
            <summary>
            Represents chart range area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.#ctor(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},System.Boolean,Syncfusion.UI.Xaml.Charts.FastRangeAreaBitmapSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment"/> class.
            </summary>
            <param name="areaValues">The range area plot values.</param>
            <param name="isHighLow">Indicates a whether the high value is greater than low value.</param>
            <param name="series">The series of the segment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>returns the created <see cref="T:System.Windows.UIElement"/> </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.SetData(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="areaValues">The range area plot values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.GetSegmentColor">
            <summary>
            Gets the segment color in accordance with priorities.
            </summary>
            <returns>Returns the prioritized segment color.</returns>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.CalculatePoints(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Calculates the transform points.
            </summary>
            <param name="cartesianTransformer">The transformer to get the required points from chart values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.UpdateVisual(System.Int32,System.Int32,System.Windows.Media.Color,System.Int32,System.Int32)">
            <summary>
            Updates the visual when series is placed in non transposed condition.
            </summary>
            <param name="width">The Width</param>
            <param name="height">The Height</param>
            <param name="color">The Color</param>
            <param name="leftThickness">The Left Thickness</param>
            <param name="rightThickness">The Right Thickness</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.High">
            <summary>
            Gets or sets the high(top) value bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastRangeAreaSegment.Low">
            <summary>
            Gets or sets the low(bottom) value bind with this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment">
            <summary>
            Represents a chart segment which renders collection of points using writeablebitmap.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries"/> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment"/>.
            </summary>
            <param name="xVals">Specifies the xvalues.</param>
            <param name="yVals">Specifies the yvalues.</param>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStackingColumnSegment">
            <summary>
             Represents a control that use a WriteableBitmap to define their appearance.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastStackingColumnSegment with following arguments
            </summary>
            <param name="x1Values"></param>
            <param name="y1Values"></param>
            <param name="x2Values"></param>
            <param name="y2Values"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment">
            <summary>
            Represents a chart segment which renders collection of points using writeablebitmap.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries"/>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/>.
            </summary>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/>.
            </summary>
            <param name="xVals">Specifies the xvalues.</param>
            <param name="yVals">Specifies the yvalues.</param>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FunnelSegment">
            <summary>
            Represents a chart segment which renders collection of points using funnel shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSegment.height">
            WP-1076[Data marker label position support for funnel series]
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.FunnelSeries,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>.
            </summary>
            <param name="y">Used to specify the segment y position.</param>
            <param name="height">Height of the funnel.</param>
            <param name="funnelSeries">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/> instance.</param>
            <param name="isExploded">Used to specify the segment IsExploded or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.FunnelSeries,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>.
            </summary>
            <param name="y">Used to specify the segment y position.</param>
            <param name="height">Height of the funnel.</param>
            <param name="funnelSeries">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/> instance.</param>
            <param name="isExploded">Used to specify the segment IsExploded or not.</param>
            <param name="widthTop">&gt;Used to specify the segment width top.</param>
            <param name="widthBottom">&gt;Used to specify the segment width bottom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.SetData(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.GetRenderedVisual">
            <inheritdoc/>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSegment.IsExploded">
            <summary>
            Gets or sets a value indicating whether this segment is exploded in the user interface (UI).
            </summary>
            <value><c>true</c> if the segment is exploded; otherwise, <c>false</c>. The default value is <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSegment.XData">
            <summary>
            Gets or sets the data point value, which is used to bind with x value for this segment.
            </summary>
            <value>A data point value, which is used to bind with x value of the segment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSegment.YData">
            <summary>
            Gets or sets the data point value, which is used to bind with y value for this segment.
            </summary>
            <value>A data point value, which is used to bind with y value of the segment.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PyramidSegment">
            <summary>
            Represents a chart segment which renders collection of points using pyramid shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>  
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PyramidSegment.height">
            WP-1076[Data marker label position support for pyramid series]
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.PyramidSeries,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>.
            </summary>
            <param name="y">Used to specify y value.</param>
            <param name="height">Used to specify pyamid height value.</param>
            <param name="explodedOffset">Used to specify ExplodedeOffset value.</param>
            <param name="series">Used to specify <see cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/> instance.</param>
            <param name="isExploded">Used to specify the segment is exploded or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.SetData(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.GetRenderedVisual">
            <inheritdoc/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>     
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSegment.XData">
            <summary>
            Gets or sets the data point value, which is used to bind with x value for this segment.
            </summary>
            <value>A data point value, which is used to bind with x value of the segment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSegment.YData">
            <summary>
            Gets or sets the data point value, which is used to bind with y value for this segment.
            </summary>
            <value>A data point value, which is used to bind with y value of the segment.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeColumnSegment">
            <summary>
            Represents chart range column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>  
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSegment">
            <summary>
            Represents chart column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>    
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Top">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Bottom">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectSegment">
            <summary>
            RectSegment property declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.control">
            <summary>
            Set corresponding content control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ColumnSeries)">
            <summary>
            Defines the Column Rectangle
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for ColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Bindings to properties in ColumnSegment.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.Width">
            <summary>
            Gets or sets the Width of the <c>ColumnSegment</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.Height">
            <summary>
            Gets or sets the Height of the <c>ColumnSegment</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectX">
            <summary>
            Gets or sets the X position of the segment rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectY">
            <summary>
            Gets or sets the Y position of the segment RectY.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.RangeColumnSeries,System.Object)">
            <summary>
            Called when instance created for RangeColumnSegment
            </summary>
            <param name="x1">Used to specify segment x1</param>
            <param name="y1">Used to specify segment y1</param>
            <param name="x2">Used to specify segment x2</param>
            <param name="y2">Used to specify segment y2</param>
            <param name="series">Used to specify corresponding series</param>
            <param name="item">Used to specify corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSegment.High">
            <summary>
            Gets or sets the high(top) value bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSegment.Low">
            <summary>
            Gets or sets the low(bottom) value bind with this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAreaSegment">
            <summary>
            Represents chart range area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSegment._high">
            <summary>
            Gets or sets the high(top) value bind with this segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSegment._low">
            <summary>
            Gets or sets the low(bottom) value bind with this segment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},System.Boolean,Syncfusion.UI.Xaml.Charts.RangeAreaSeries)">
            <summary>
            Called when instance created for rangeAreaSegments
            </summary>
            <param name="AreaPoints"></param>
            <param name="isHighLow"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.#ctor(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},System.Boolean,Syncfusion.UI.Xaml.Charts.RangeAreaSeries)">
            <summary>
            Called when instance created for rangeAreaSegments
            </summary>
            <param name="AreaPoints"></param>
            <param name="isHighLow"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.ActualInterior">
            <summary>
            Gets or sets the actual color used to paint the interior of the segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.HighValueInterior">
            <summary>
            Gets or sets the high value interior brush of this segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.LowValueInterior">
            <summary>
            Gets or sets the low value interior brush of this segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries)">
            <summary>
            Called when instance created for SplineRangeAreaSegments
            </summary>
            <param name="AreaPoints"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.#ctor(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},Syncfusion.UI.Xaml.Charts.SplineRangeAreaSeries)">
            <summary>
            Called when instance created for SplineRangeAreaSegments.
            </summary>
            <param name="AreaPoints"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineRangeAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment">
            <summary>
            Represents a chart segment which renders collection of points using bar shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>   
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSegment">
            <summary>
            Represents chart bar segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Top">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Bottom">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.barSegment">
            <summary>
            barSegment variable declaration
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.SegmentCanvas">
            <summary>
            Variable declaration for SegmentCanvas
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.segmentSize">
            <summary>
            Variable declaration for segment width and height
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.BarSeries)">
            <summary>
            Defines a Column Rect and Range
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for BarSegment with following Parameters
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.Width">
            <summary>
            Gets or sets the width of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.Height">
            <summary>
            Gets or sets the height of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.RectX">
            <summary>
            Gets or sets the x position of the segment rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.RectY">
            <summary>
            Gets or sets the y position of the segment rect.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.StackingBarSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment"/>.
            </summary>
            <param name="x1">Used to specify the segment x1 value.</param>
            <param name="y1">Used to specify the segment y1 value.</param>
            <param name="x2">Used to specify the segment x2 value.</param>
            <param name="y2">Used to specify the segment y2 value.</param>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/> instance.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepAreaSegment">
            <summary>
            Class implementation for StepAreaSegment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.#ctor">
            <summary>
            Called when instance created for StepAreaSegment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},Syncfusion.UI.Xaml.Charts.StepAreaSeries)">
            <summary>
            Called when instance created for StepAreaSegment
            </summary>
            <param name="pointsCollection"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.#ctor(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},Syncfusion.UI.Xaml.Charts.StepAreaSeries)">
            <summary>
            Called when instance created for StepAreaSegment
            </summary>
            <param name="pointsCollection"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="StepAreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.SetData(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint})">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overriden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.AddStroke(System.Windows.Point)">
            <summary>
            Called to add the stroke for step area series.
            </summary>
            <param name="startPoint"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSegment.XData">
            <summary>
            Gets or sets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSegment.YData">
            <summary>
            Gets or sets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepLineSegment">
            <summary>
            Represents chart StepLine segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StepLineSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.StepLineSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,Syncfusion.UI.Xaml.Charts.StepLineSeries)">
            <summary>
            Called when instance created for SteplineSegment
            </summary>
            <param name="point1"></param>
            <param name="stepPoint"></param>
            <param name="point2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.StepLineSeries)">
            <summary>
            Called when instance created for SteplineSegment.
            </summary>
            <param name="point1"></param>
            <param name="stepPoint"></param>
            <param name="point2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="linePoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.SetData(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint})">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overriden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X1">
            <summary>
            Gets or sets x1 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X2">
            <summary>
            Gets or sets the x2 point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y1">
            <summary>
            Gets or sets the y1 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y2">
            <summary>
            Gets or sets the y2 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X3">
            <summary>
            Gets or sets the step x point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y3">
            <summary>
            Gets or sets the step y point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X1Value">
            <summary>
            Gets or sets the X value of point1 in a step line segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y1Value">
            <summary>
            Gets or sets the Y value of point1 in a step line segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X2Value">
            <summary>
            Gets or sets the X value of point2 in a step line segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y2Value">
            <summary>
            Gets or sets the Y value of point2 in a step line segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X1Data">
            <summary>
            Gets or sets the ending y value, bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.XData">
            <summary>
            Gets or sets the starting x value, bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y1Data">
            <summary>
            Gets or sets the ending y value, bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.YData">
            <summary>
            Gets or sets the starting y value, bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Points">
            <summary>
            Gets or sets the point collection corresponds to this segment.
            </summary>
            <remarks>
            Each <c>StepLineSegment</c> consists of 3 points(start point, end point and intermediate step point).
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TrendlineSegment">
            <summary>
            Class for <c>TrendlineSegment</c>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineSegment">
            <summary>
            Represents chart Spline segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,Syncfusion.UI.Xaml.Charts.SplineSeries)">
            <summary>
            Called when instance created for SplineSegment.
            </summary>
            <param name="point1">Specifies start point.</param>
            <param name="point2">Specifies start control point.</param>
            <param name="point3">Specifies end control point.</param>
            <param name="point4">Specifies end point.</param>
            <param name="series">Specifies corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.SplineSeries)">
            <summary>
            Called when instance created for SplineSegment
            </summary>
            <param name="point1">Specifies start point</param>
            <param name="point2">Specifies start control point</param>
            <param name="point3">Specifies end control point</param>
            <param name="point4">Specifies end point</param>
            <param name="series">Specifies corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for SplineSegment.
            </summary>
            <remarks>
            Marked as obsolete. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for SplineSegment.
            </summary>
            <param name="point1">Specifies start point</param>
            <param name="point2">Specifies start control point</param>
            <param name="point3">Specifies end control point</param>
            <param name="point4">Specifies end point</param>
            <param name="series">Specifies corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.SetData(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overriden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.GetRange(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns Y range for corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSegment"/> 
            </summary>
            <param name="y1"></param>
            <param name="y2"></param>
            <param name="y3"></param>
            <param name="y4"></param>
            <returns><see cref="T:Syncfusion.UI.Xaml.Charts.DoubleRange"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.X1">
            <summary>
            Gets or sets the x1 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.X2">
            <summary>
            Gets or sets the x2 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Y1">
            <summary>
            Gets or sets the y1 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Y2">
            <summary>
            Gets or sets the y2 point of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.P1">
            <summary>
            Gets or sets the start point of the bezier segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Q1">
            <summary>
            Gets or sets the first control point for the bezier segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Q2">
            <summary>
            Gets or sets the second control point for the bezier segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.P2">
            <summary>
            Gets or sets the end point for the bezier segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.X1Data">
            <summary>
            Gets or sets x1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.XData">
            <summary>
            Gets or sets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.YData">
            <summary>
            Gets or sets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Y1Data">
            <summary>
            Gets or sets the y1 value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Data">
            <summary>
            Gets or sets the segment geometry for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WaterfallSegment">
            <summary>
            Represents chart column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Top">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Bottom">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.WaterfallSegment.WaterfallRectSegment">
            <summary>
            RectSegment property declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.WaterfallSeries)">
            <summary>
            Defines the Column Rectangle
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for ColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Bindings to properties in ColumnSegement.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.UpdateConnectorLine">
            <summary>
            Method used to update the connector line position. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.GetCurrentSegmentXValue">
            <summary>
            Returns current segment rendering x value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.GetCurrentSegmentYValue">
            <summary>
            Returns current segment rendering y value. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WaterfallSegment.CalculateSegmentRect(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Method used to calculate the segment's rendering rect.
            </summary>
            <param name="transformer"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Width">
            <summary>
            Gets or sets the Width of the <c>ColumnSegment</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Height">
            <summary>
            Gets or sets the Height of the <c>ColumnSegment</c>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.RectX">
            <summary>
            Gets or sets the X position of the segment rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.RectY">
            <summary>
            Gets or sets the Y position of the segment RectY.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.WaterfallSum">
            <summary>
            Gets or sets the summary value till to this segment except this segment. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WaterfallSegment.Sum">
            <summary>
            Gets or sets the summary value till to this segment. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/> class.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.DetachElements">
            <summary>
            To clear the children of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.Measure(System.Windows.Size)">
            <summary>
            To measure the size of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the desired size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.UpdateElements">
            <summary>
            To update the children of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.Arrange(System.Windows.Size)">
            <summary>
            To arrange the children in <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/> based on its final size
            </summary>
            <param name="finalSize">The Final Size</param>
            <returns>Returns the arranged size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.ArrangeVerticalLables(System.Windows.Size)">
            <summary>
            To arrange the text blocks and border of vertical axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateActualLeft">
            <summary>
            To calculate the left values for text block and border of vertical axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
            <returns>Returns the calculated actual left value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateActualTop">
            <summary>
            To calculate the top value for text block and border of horizontal axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
            <returns>Returns the Calculated actual top value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.ResetLabelValues">
            <summary>
            To reset the current values of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetValues(Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabel)">
            <summary>
            To calculate the current label's start and end position
            </summary>
            <param name="label">The Label</param>
            <returns>Returns a value indicating whether the range permissible.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalLabelRectangle(System.Int32)">
            <summary>
            To set the thickness for rectangle border style of vertical axis
            </summary>
            <param name="row">The Row</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalBorderWithoutTopAndBottom">
            <summary>
            To set the thickness for WithoutTopAndBottom border style of vertical axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetBorderPosition">
            <summary>
            To set current border position
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalBorder(System.Windows.Controls.Border)">
            <summary>
            To set horizontal multi -level labels border
            </summary>
            <param name="border">The Border</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalBorder(System.Windows.Controls.Border)">
            <summary>
            To set vertical multi-level labels border
            </summary>
            <param name="border">The Border</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalLabelAlignment(System.Windows.Controls.TextBlock)">
            <summary>
            To place the vertical axis's label
            </summary>
            <param name="txtBlock">The Text Block</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateTextBlockPosition(System.Windows.Controls.TextBlock)">
            <summary>
            To align the vertical axis's label
            </summary>
            <param name="txtBlock">The TextBlock To Calculate Position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateMidValue(System.Double)">
            <summary>
            Calculates the corresponding  screen point of vertical axis value.
            </summary>
            <param name="midValue">The Mid Value</param>
            <returns>Returns the middle screen point value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.ArrangeHorizontalLabels(System.Windows.Size)">
            <summary>
            To set the text blocks and borders of horizontal axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CheckLabelRange">
            <summary>
            Removes the panel's children when label's start and end are equal
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetBorderStyle(System.Int32,System.Boolean)">
            <summary>
            Sets the border style.
            </summary>
            <param name="row">The Row</param>
            <param name="isHorizontalAxis">Indicates Horizontal Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalLabelRectangle(System.Int32)">
            <summary>
            To set the thickness for rectangle border style
            of horizontal axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
            <param name="row">The Row</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalBorderWithoutTopandBottom">
            <summary>
            To set the thickness for Without Top and Bottom border style
            of vertical axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalBrace">
            <summary>
            To draw the brace border style of horizontal axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalBracePoints(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            To set the points for polyline
            </summary>
            <param name="x1">The x 1 Value</param>
            <param name="x2">The x 2 Value</param>
            <param name="x3">The x 3 Value</param>
            <param name="y1">The y 1 Value</param>
            <param name="y2">The y 2 Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalBrace">
            <summary>
            To draw the brace border style of vertical axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetVerticalBracePoints(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            To set the polyline points for vertical label's brace
            </summary>
            <param name="x1">The x 1 Value</param>
            <param name="x2">The x 2 Value</param>
            <param name="y1">The y 1 Value</param>
            <param name="y2">The y 2 Value</param>
            <param name="y3">The y 3 Value</param>
            <param name="y4">The y 4 Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetTextBlockPosition">
            <summary>
            To position the text blocks of horizontal axis's <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetHorizontalLabelAlignment(System.Windows.Controls.TextBlock)">
            <summary>
            To Align the text of horizontal axis's label based on label alignment
            </summary>
            <param name="txtBlock">The TextBlock</param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetTextBlockPosition(System.Windows.Controls.TextBlock)">
            <summary>
            To set horizontal multi-level axis labels text block position
            </summary>
            <param name="txtBlock">The Label <see cref="T:System.Windows.Controls.TextBlock"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculatePosition(System.Object)">
            <summary>
            Calculates the double value corresponding object.
            </summary>
            <param name="data">The Object Data</param>
            <returns>Returns the double value corresponding object</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.IsOpposed">
            <summary>
            Checks the opposed position based on axis and it's label position.
            </summary>
            <returns>Returns the <see cref="T:System.Boolean"/> value based on axis and its label position</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateDesiredSize(System.Windows.Size)">
            <summary>
            To calculate the desired size of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/> based on its children's available size
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the desired size of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.CalculateActualPlotOffset">
            <summary>
            To calculate the actual plot offset of axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.GenerateContainer(System.Int32)">
            <summary>
            Generates the children of <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>
            </summary>
            <param name="labelsCount">The Labels Count</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.SetLabelProperty">
            <summary>
            To set the properties of current label to generated <see cref="T:System.Windows.Controls.TextBlock"/> and <see cref="T:System.Windows.Controls.Border"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.Panel">
            <summary>
            Gets the corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MultiLevelLabelsPanel.Axis">
            <summary>
            Gets or sets the corresponding chart axis
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel">
            <summary>
            Represents a canvas panel that update the children while changing trend line collection. 
            </summary>
            <seealso cref="T:System.Windows.Controls.Canvas"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel.Update(System.Windows.Size)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel"/>.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel.OnSegmentsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel"/> when segment collection changed.
            </summary>
            <param name="sender">The Sender</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTooltip">
            <summary>
            Represents a content control that display a information about focused element. 
            </summary>
            <seealso cref="T:System.Windows.Controls.ContentControl"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.ShowDurationProperty">
            <summary>
             The DependencyProperty for ShowDuration property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.InitialShowDelayProperty">
            <summary>
             The DependencyProperty for InitialShowDelay property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.HorizontalOffsetProperty">
            <summary>
             The DependencyProperty for HorizontalOffset property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.VerticalOffsetProperty">
            <summary>
             The DependencyProperty for VerticalOffset property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.HorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="T:System.Windows.HorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.VerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="T:System.Windows.VerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.EnableAnimationProperty">
            <summary>
            The DependencyProperty for EnableAnimation property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.TooltipMarginProperty">
            <summary>
            The DependencyProperty for TooltipMargin property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.TopOffsetProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltip.TopOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTooltip.LeftOffsetProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartTooltip.LeftOffset"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltip"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetEnableAnimation(System.Windows.UIElement)">
            <summary>
            Gets whether animation  is enabled for tooltip or not.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns a value indicating whether the animation is enabled.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetEnableAnimation(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value to enable/disable the tooltip animation.
            </summary>
            <param name="obj">The Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalAlignment(System.Windows.UIElement)">
            <summary>
            Gets the horizontal alignment for the tooltip.
            </summary>        /// 
            <param name="obj">The Object</param>
            <returns>Returns the horizontal alignment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalAlignment(System.Windows.UIElement,System.Windows.HorizontalAlignment)">
            <summary>
            Sets the horizontal alignment to the tooltip.
            </summary>
            <param name="obj">The Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalAlignment(System.Windows.UIElement)">
            <summary>
            Gets the vertical alignment for the tooltip.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the vertical alignment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalAlignment(System.Windows.UIElement,System.Windows.VerticalAlignment)">
            <summary>
            Sets the vertical alignment to the tooltip.
            </summary>
            <param name="obj">The Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetTooltipMargin(System.Windows.UIElement)">
            <summary>
            Gets the margin of the tooltip.
            </summary>
            <param name="obj">The Object</param>
            <returns>Returns the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTooltip"/> margin.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetTooltipMargin(System.Windows.UIElement,System.Windows.Thickness)">
            <summary>
            Sets the margin to the tooltip.
            </summary>
            <param name="obj">The Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetShowDuration(System.Windows.DependencyObject)">
            <summary>
            Gets the duration of the tooltip text in seconds.
            </summary>
            <param name="obj">The Dependency Object</param>
            <returns>Returns the show duration.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the duration to the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetInitialShowDelay(System.Windows.DependencyObject)">
            <summary>
            Gets the initial delay value to show the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <returns>Returns the show delay.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the initial delay value to show the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalOffset(System.Windows.DependencyObject)">
            <summary>
            Gets the horizontal offset value to position the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <returns>Returns the horizontal offset.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the horizontal offset value to position the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalOffset(System.Windows.DependencyObject)">
            <summary>
            Gets the vertical offset value to position the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <returns>Returns the vertical offset.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the vertical offset value to position the tooltip.
            </summary>
            <param name="obj">The Dependency Object</param>
            <param name="value">The Value</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltip.LeftOffset">
            <summary>
            Gets or sets the left offset.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTooltip.TopOffset">
            <summary>
            Gets or sets the top offset.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnBase">
            <summary>
            Represents a control that indicates a base of column sparkline. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SparklineBase"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SparklineBase">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SparklineBase"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.EnableAnimationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EnableAnimation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.InteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.RangeBandBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.RangeBandBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeEndProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeEnd"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeStartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeStart"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.MinimumYValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MinimumYValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.MaximumYValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MaximumYValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.ItemsSourceProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.YBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.YBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointValue"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SparklineBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.TransformToVisible(System.Double,System.Double)">
            <summary>
            Creates the screen point from data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>Returns the corresponding screen co-ordinate.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Reset">
            <summary>
            Resets the sparkline values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Serialize(System.String)">
            <summary>
            Method used to generate a serialize file in default location with customized name.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Serialize(System.IO.Stream)">
            <summary>
            Method used to generate a serialize file in specified location.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Serialize">
            <summary>
            Method used to serialize the file in default location.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Deserialize(System.IO.Stream)">
            <summary>
            Method used to deserialize the serialized file in specified location.
            </summary>
            <param name="stream">The stream to be deserialized</param>
            <returns>Returns the root object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Deserialize(System.String)">
            <summary>
            Method used to deserialize a file
            </summary>
            <param name="storageFile">The file to be deserialized.</param>
            <returns>Returns the root object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.Deserialize">
            <summary>
            Method used to deserialize the file in default location
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.UpdateArea">
            <summary>
            To update the sparkline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.ValidateEmptyPoints(System.Collections.Generic.List{System.Double})">
            <summary>
            Validates the empty points.
            </summary>
            <param name="yValues">The y values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.FindEmptyPoints">
            <summary>
            Finds the empty point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.ClearUnUsedSegments(System.Int32)">
            <summary>
            Clears the unused segments.
            </summary>
            <param name="dataCount">The data count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.SetBinding(System.Windows.Shapes.Shape)">
            <summary>
            To set the visual binding for the element
            </summary>
            <param name="element">The <see cref="T:System.Windows.Shapes.Shape"/> element to be bind.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.FindPoints(System.Double,System.Double)">
            <summary>
            Finds the screen co-ordinates corresponding to the given values.
            </summary>
            <param name="xVal">The x value</param>
            <param name="yVal">The y value</param>
            <returns>Returns the updated <see cref="T:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.StyleBinding(System.Windows.FrameworkElement,System.Windows.Style,System.String)">
            <summary>
            Binds the style of the sparkline with the corresponding <see cref="T:System.Windows.UIElement"/>.
            </summary>
            <param name="element">The <see cref="T:System.Windows.UIElement"/> to be bind.</param>
            <param name="inputStyle">The input style.</param>
            <param name="propertyPath">The property path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.AnimateSegments(System.Windows.Controls.UIElementCollection)">
            <summary>
            Animates the segments.
            </summary>
            <param name="elements">The <see cref="T:System.Windows.Controls.UIElementCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.GeneratePoints(System.String)">
            <summary>
            Generate the points from the items source.
            </summary>
            <param name="xPath">The x path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.UpdateMinMaxValues">
            <summary>
            Updates the minimum and maximum value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.SetIndividualPoints(System.Int32,System.Object,System.Boolean,System.String)">
            <summary>
            set the individual points to the existing collection
            </summary>
            <param name="index">The individual point index.</param>
            <param name="obj">The object.</param>
            <param name="replace">The replace indication <see cref="T:System.Boolean"/></param>
            <param name="xPath">The x path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.RenderSegments">
            <summary>
            To render the visual segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnApplyTemplate">
            <summary>
            Method gets called when the default template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements and determines a size for the sparkline.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>Returns the size that the element determines it needs during layout, based on its calculation of child element sizes.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse moved interactions for the sparkline.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnYRangeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline when y range changed.
            </summary>
            <param name="d">The dependency object</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnHighlightValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline when highlight value changed.
            </summary>
            <param name="d">The dependency object</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnEnableAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline animation when the animation is enabled.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnEmptyPointValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline when empty point value changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property change event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline on items source changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnYBingingPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline on y binding path changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnXBindingPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline on x binding path changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnEnableAnimationChanged">
            <summary>
            Updates the sparkline animation when the animation is enabled.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnItemsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline on items source changed.
            </summary>
            <param name="e">The dependency property changed event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.OnDataCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the sparkline on data collection changed.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="e">The notify collection changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.UpdateRangeBand">
            <summary>
            Updates the range band.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.BindRangeBandBrush(System.Windows.Shapes.Shape)">
            <summary>
            Binds the range band brush with the corresponding shape.
            </summary>
            <param name="rangeBand">The range band shape.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SparklineBase.OnSparklineMouseMove">
            <summary>
            Raised when the sparkline mouse gets moved.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EnableAnimation">
            <summary>
            Gets or sets a value indicating whether to animate the sparkline on loading and whenever ItemsSource change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Interior">
            <summary>
            Gets or sets the brush to paint the interior of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.RangeBandBrush">
            <summary>
            Gets or sets the range band brush.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeEnd">
            <summary>
            Gets or sets the maximum range band value in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeStart">
            <summary>
            Gets or sets the minimum range band value in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MinimumYValue">
            <summary>
            Gets or sets the minimum value for Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MaximumYValue">
            <summary>
            Gets or sets the maximum value for Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeThickness">
            <summary>
            Gets or sets stroke thickness for segments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Stroke">
            <summary>
            Gets or sets the brush to paint outline of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.ItemsSource">
            <summary>
            Gets or sets an IEnumerable source used to generate sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.YBindingPath">
            <summary>
            Gets or sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointValue">
            <summary>
            Gets or sets a value that determines how to calculate value for empty point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.RootPanel">
            <summary>
            Gets or sets the root panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.UtilityPresenter">
            <summary>
            Gets or sets the utility presenter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.IsIndexed">
            <summary>
            Gets or sets a value indicating whether sparkline is indexed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.SegmentPresenter">
            <summary>
            Gets or sets the segment presenter
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointIndexes">
            <summary>
            Gets or sets the empty point indexes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.DataCount">
            <summary>
            Gets or sets the data count.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnBase.HighlightSegmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnBase.HighlightSegment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.SetBinding(System.Windows.Shapes.Shape)">
            <summary>
            Sets the binding for the shape element with sparkline.
            </summary>
            <param name="element">The Shape Element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse move interactive behaviors for the marker.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse leave operations for the sparkline
            </summary>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.AnimateSegments(System.Windows.Controls.UIElementCollection)">
            <summary>
            Animates the segments.
            </summary>
            <param name="elements">The UI Element Collection</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.RenderSegments">
            <summary>
            Renders the segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.BindFillProperty(System.Windows.Shapes.Shape,System.String)">
            <summary>
            Binds the fill property of the shape element with the column sparkline.
            </summary>
            <param name="element">The Shape Element</param>
            <param name="propertyPath">The Property Path</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.ApplySelectionColor(System.Windows.Shapes.Shape)">
            <summary>
            Applies the selector color.
            </summary>
            <param name="segment">The Shape Segment</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnBase.ResetColor(System.Windows.Shapes.Shape)">
            <summary>
            Resets the segment color.
            </summary>
            <param name="segment">The Shape Segment</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnBase.HighlightSegment">
            <summary>
            Gets or sets a value indicating whether to highlight segment on mouse move.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MarkerBase">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.MarkerBase"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerTemplateSelectorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerTemplateSelector"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.XBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.XBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisOriginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisOrigin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.TrackBallStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.TrackBallStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.LineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.LineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBallProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBall"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibility"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.MarkerBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.Reset">
            <summary>
            Reset the marker.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.AddMarker(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add the marker.
            </summary>
            <param name="screenPointX">The screen x position.</param>
            <param name="screenPointY">The screen y position.</param>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.ClearUnUsedMarkers(System.Int32)">
            <summary>
            Clear unused markers.
            </summary>
            <param name="dataCount">The Data Count</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.SetBinding(System.Windows.Shapes.Shape)">
            <summary>
            Binds the shape element with marker properties.
            </summary>
            <param name="element">The Element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.SetIndividualPoints(System.Int32,System.Object,System.Boolean,System.String)">
            <summary>
            Sets the individual points.
            </summary>
            <param name="index">The Index</param>
            <param name="obj">The Object</param>
            <param name="replace">The Replace Require Check</param>
            <param name="xPath">The X Path</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.GeneratePoints(System.String)">
            <summary>
            Generates the data points for the marker base.
            </summary>
            <param name="xPath">The X Path</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.RemoveAxis">
            <summary>
            Removes the axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.UpdateHorizontalAxis">
            <summary>
            Updates the horizontal axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.AnimateSegments(System.Windows.Controls.UIElementCollection)">
            <summary>
            Animates the segments.
            </summary>
            <param name="elements">The UI Element Collection</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.RenderSegments">
            <summary>
            Renders the segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.AddMarker(System.Windows.Point,System.Double,System.Double,System.Int32)">
            <summary>
            Adds marker to the sparkline.
            </summary>
            <param name="pointToScreen">The Screen Point</param>
            <param name="x">The X Value</param>
            <param name="y">The Y Value</param>
            <param name="index">The Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnApplyTemplate">
            <summary>
            Applies the required template to the marker base.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Updates the mouse move interactive behaviors for the marker.
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnShowAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxis"/> property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnAxisOriginChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis on origin property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnShowTrackBallChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the trackball when <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBall"/> property changed.
            </summary>
            <param name="d">The dependency Object</param>
            <param name="e">The dependency property changed event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnMarkerVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the marker visibility on <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibility"/> changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.PlaceMarker(System.Windows.FrameworkElement,System.Windows.Point)">
            <summary>
            Places the marker at the given value.
            </summary>
            <param name="marker">The Marker</param>
            <param name="screenPoint">The Screen Point</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.UpdateMarker(System.Double,System.Double,System.Double,System.Double,System.Windows.FrameworkElement)">
            <summary>
            Updates the marker.
            </summary>
            <param name="screenPointX">The Screen Point X</param>
            <param name="screenPointY">The Scree Point Y</param>
            <param name="x">The X Value</param>
            <param name="y">The Y Value</param>
            <param name="element">The Marker Element To Be Positioned.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.CreateTrackBall">
            <summary>
            Creates the trackball.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.OnMarkerVisibilityChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the marker on visibility changed.
            </summary>
            <param name="e">The Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerBase.ResetTrackBallCanvas">
            <summary>
            Resets the trackball canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.XBindingPath">
            <summary>
            Gets or sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisStyle">
            <summary>
            Gets or sets the axis line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxis">
            <summary>
            Gets or sets a value indicating whether to show/hide axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisOrigin">
            <summary>
            Gets or sets axis origin
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.TrackBallStyle">
            <summary>
            Gets or sets the track ball style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.LineStyle">
            <summary>
            Gets or sets line style for track ball.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBall">
            <summary>
            Gets or sets a value indicating whether to show track ball.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibility">
            <summary>
            Gets or sets the marker visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerTemplateSelector">
            <summary>
            Gets or sets marker template selector to customize the each markers
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerPresenter">
            <summary>
            Gets or sets the marker presenter.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfAreaSparkline">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SfAreaSparkline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfAreaSparkline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfAreaSparkline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfAreaSparkline.SetBinding(System.Windows.Shapes.Shape)">
            <summary>
            Binds the shape element with sparkline properties.
            </summary>
            <param name="element">The Element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfAreaSparkline.RenderSegments">
            <summary>
            Renders the segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfAreaSparkline.AddSegment(System.Windows.Media.PathFigure,System.Windows.Media.PathGeometry,System.Windows.Shapes.Path@,System.Windows.Point)">
            <summary>
            Adds the segment's path data.
            </summary>
            <param name="figure">The path figure.</param>
            <param name="segmentGeometry">The segment geometry</param>
            <param name="segmantPath">The segment path</param>
            <param name="screenPoint">The screen point</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.XBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.XBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOriginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOrigin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SegmentTemplateSelectorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SegmentTemplateSelector"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.GeneratePoints(System.String)">
            <summary>
            Generates the data points.
            </summary>
            <param name="xPath">The X Path</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SetIndividualPoints(System.Int32,System.Object,System.Boolean,System.String)">
            <summary>
            Sets the individual data points.
            </summary>
            <param name="index">The Index</param>
            <param name="obj">The Object</param>
            <param name="replace">Replace Indication</param>
            <param name="xPath">The X Path</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.RemoveAxis">
            <summary>
            Removes the axis for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.UpdateHorizontalAxis">
            <summary>
            Updates the horizontal axis for the <see cref="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.UpdateMinMaxValues">
            <summary>
            Updates the minimum and maximum values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.RenderSegments">
            <summary>
            Renders the <see cref="T:Syncfusion.UI.Xaml.Charts.SfColumnSparkline"/> segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.OnShowAxisChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis visibility on <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxis"/> property changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.OnAxisOriginChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the axis when <see cref="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOrigin"/> is changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.XBindingPath">
            <summary>
            Gets or sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisStyle">
            <summary>
            Gets or sets the axis line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxis">
            <summary>
            Gets or sets a value indicating whether to show axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOrigin">
            <summary>
            Gets or sets axis origin
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SegmentTemplateSelector">
            <summary>
            Gets or sets the segment template selector to customize the each segments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfLineSparkline">
            <summary>
            Class which represents the line sparkline.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfLineSparkline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfLineSparkline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfLineSparkline.RenderSegments">
            <summary>
            Renders the segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NegativePointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NegativePointBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NeutralBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NeutralBrush"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.UpdateMinMaxValues">
            <summary>
            Updates the minimum and maximum values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.RenderSegments">
            <summary>
            Renders the segments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NegativePointBrush">
            <summary>
            Gets or sets the brush to paint the interior of the negative segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NeutralBrush">
            <summary>
            Gets or sets the brush to paint the interior of the neutral segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveHandler">
            <summary>
            Raised when the sparkline mouse gets moved.
            </summary>
            <param name="sender">The spark line.</param>
            <param name="e">The sparkline mouse move event arguments.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveEventArgs">
            <summary>
            Class which represents the spark line mouse move event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveEventArgs.Value">
            <summary>
            Gets or sets the point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveEventArgs.Coordinate">
            <summary>
            Gets or sets the co-ordinate points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveEventArgs.OriginalSource">
            <summary>
            Gets or sets the elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineMouseMoveEventArgs.RootPanel">
            <summary>
            Gets or sets the panel
            .
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointValues">
            <summary>
            Represents the enum for the <see cref="T:Syncfusion.UI.Xaml.Charts.EmptyPointValue"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValues.Zero">
            <summary>
            Data point plotted at zero position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValues.Average">
            <summary>
            Data point plotted at average of the point before and after.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValues.None">
            <summary>
            Data point not plotted.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TemplateSelector">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.TemplateSelector"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TemplateSelector.#ctor">
            <summary>
            Initializes a new instance of the<see cref="T:Syncfusion.UI.Xaml.Charts.TemplateSelector"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TemplateSelector.SetData(Syncfusion.UI.Xaml.Charts.SparklineBase,System.Int32)">
            <summary>
            Sets the required data to the template selector.
            </summary>
            <param name="sparkline">The Sparkline.</param>
            <param name="count">The Count</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TemplateSelector.SelectTemplate(System.Double,System.Double)">
            <summary>
            Selects the required template.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value</param>
            <returns>Returns the selected template.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MaximumY">
            <summary>
            Gets the maximum Y axis value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumY">
            <summary>
            Gets the minimum Y axis value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.Sparkline">
            <summary>
            Gets the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.DataCount">
            <summary>
            Gets the data count.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumX">
            <summary>
            Gets the minimum X axis value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.FirstPointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.FirstPointBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LastPointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LastPointBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.NegativePointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.NegativePointBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.HighPointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.HighPointBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LowPointBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LowPointBrush"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.BindVisual(System.Double,System.Double,System.Windows.Shapes.Shape)">
            <summary>
            Binds the template selector property with the corresponding <see cref="T:System.Windows.UIElement"/>.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <param name="marker">The marker shape to be set with binding.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.BindFillProperty(System.String,System.Windows.Shapes.Shape,System.Windows.Data.Binding@)">
            <summary>
            Binds the fill property of the template selector with the marker shape.
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="marker">The marker shape to be bind.</param>
            <param name="binding">The binding provider.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.OnMarkerTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the marker on marker template changed.
            </summary>
            <param name="d">The dependency object</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.FirstPointBrush">
            <summary>
            Gets or sets the brush to paint the first point of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LastPointBrush">
            <summary>
            Gets or sets the brush to paint the last point of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.NegativePointBrush">
            <summary>
            Gets or sets the brush to paint the negative points of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.HighPointBrush">
            <summary>
            Gets or sets the brush to paint the high points of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LowPointBrush">
            <summary>
            Gets or sets the brush to paint the low point(s) of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerWidth"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.BindVisual(System.Double,System.Double,System.Windows.Shapes.Shape)">
            <summary>
            Binds the template properties with the visual.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value</param>
            <param name="marker">The marker value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.SelectTemplate(System.Double,System.Double)">
            <summary>
            Selects the template.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>Returns the selected template.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.OnMarkerPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the sparkline when marker property changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.OnMarkerTemplateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Clears the marker presenter on marker template changed. 
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The dependency property changed event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.ClearMarkerPresenter">
            <summary>
            Clears the marker presenter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.BindVisualSize(System.Windows.Shapes.Shape)">
            <summary>
            Binds the visual size of the <see cref="T:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector"/> with the marker <see cref="T:System.Windows.Shapes.Shape"/>.
            </summary>
            <param name="elelment">The Shape element to set the binding.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerBrush">
            <summary>
            Gets or sets the brush to paint the markers of the sparkline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerTemplate">
            <summary>
            Gets or sets the marker template.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerHeight">
            <summary>
            Gets or sets height of the marker.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerWidth">
            <summary>
            Gets or sets width of the marker.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo">
            <summary>
            Class which represents spark line points info.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo.Coordinate">
            <summary>
            Gets or sets the co-ordinates points. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklinePointsInfo.Value">
            <summary>
            Gets or sets the points. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.IsTrendlineVisibleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.IsTrendlineVisible"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.VisibilityOnLegendProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.VisibilityOnLegend"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIconTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIconProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIcon"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.LabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Label"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.TypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Type"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeDashArray"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.ForwardForecastProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.ForwardForecast"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.BackwardForecastProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.BackwardForecast"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrendlineBase.PolynomialOrderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.PolynomialOrder"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GenerateNonEmptyXandYValues">
            <summary>
            Generates the continuous list without empty points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateLegendIconTemplate(System.Boolean)">
            <summary>
            Update Legend Ion Template method
            </summary>
            <param name="iconChanged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateElements">
            <summary>
            Update Trendline elements method
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.Clone">
            <summary>
            Clone the trendline
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdatePolynomialTrendSource">
            <summary>
            Update Polynomial trend source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GaussJordanEliminiation(System.Double[0:,0:],System.Double[])">
            <summary>
            Calculate Gauss Jordan Eliminiation value
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculatePolynomialTrendLine">
            <summary>
            Calculate Polynomial Trendline with order
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CreatePolynomialSegments">
            <summary>
            Create the polynomial segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateLogarithmicTrendSource">
            <summary>
            Update Logarithmic Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateLogarithmicTrendline">
            <summary>
            Caluculate Logarithmic Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateExponentialTrendSource">
            <summary>
            Update Exponential Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateExponentialTrendline">
            <summary>
            Calculate Exponential Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdatePowerTrendSource">
            <summary>
            Update Power TrendSource
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculatePowerTrendline">
            <summary>
            Calculate Power Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateTrendSource">
            <summary>
            Update Linear Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateLinearTrendline">
            <summary>
            Calculate Linear Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateSumXAndYValue">
            <summary>
            Calculate Sum of x and y values
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateTrendXSegment(System.Int32)">
            <summary>
            Calculate Trend Segment X values
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetLinearYValue(System.Double)">
            <summary>
            Get Linear Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetLogarithmicYValue(System.Double)">
            <summary>
            Get Logarithmic Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetExponentialYValue(System.Double)">
            <summary>
            Get Exponential Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetPowerYValue(System.Double)">
            <summary>
            Get Power Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetPolynomialYValue(System.Double[],System.Double)">
            <summary>
            Get polynomial y value
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CreateSpline">
            <summary>
            Create Spline Segment of Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double[]@)">
            <summary>
            Coefficient Of Natural Spline Segment
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="ys2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetBezierControlPoints(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartPoint@,Syncfusion.UI.Xaml.Charts.ChartPoint@)">
            <summary>
            Returns the controlPoints of the curve
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Slope">
            <summary>
            Gets or sets the slope.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Intercept">
            <summary>
            Gets or sets the intercept.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.PolynomialSlopes">
            <summary>
            Gets or sets the polynomial slopes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.IsTrendlineVisible">
            <summary>
            Gets or sets a value indicating whether the <c>Trendline</c> is visible.
            </summary>
            <value>
                if its <c>true</c>, trendline will be visible.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.VisibilityOnLegend">
            <summary>
            Gets or sets a value that determines whether to create a legend item for this trendline. 
            </summary>
            <remarks>
            By default, legend will be visible for this trendline.
            </remarks>
            <value>
            <see cref="T:System.Windows.Visibility"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIconTemplate">
            <summary>
            Gets or sets the custom template for the legend icons.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIcon">
            <summary>
            Gets or sets the type of icon to be displayed in legend item.
            </summary>
            <remarks>
            By default, the icon shape will represent the series type.
            </remarks>
            <value>
            The value can be Circle, Rectangle, etc. See <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLegendIcon"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Label">
            <summary>
            Gets or sets the label that will be displayed in the associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Type">
            <summary>
            Gets or sets the type of the trendline.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.TrendlineType"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Stroke">
            <summary>
            Gets or sets the brush to paint the stroke of the trendline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeThickness">
            <summary>
            Gets or sets the thickness for the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeDashArray">
            <summary>
            Gets or sets a collection of Double values that indicates the pattern of
            dashes and gaps that is used to outline shapes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.ForwardForecast">
            <summary>
            Gets or sets the range of trend to be estimated from the future.
            </summary>
            <remarks>
            
            </remarks>
            <value>
            The double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.BackwardForecast">
            <summary>
            Gets or sets the range of trend to be estimated from the past.
            </summary>
            <remarks>
            
            </remarks>
            <value>
            The double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.PolynomialOrder">
            <summary>
            Gets or sets the Polynomial Order for the polynomial trendline, 
            it calculate the order based equation..
            </summary>
            <value>
                It accepts integer value ranging from 2 to 6.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Trendline">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.Trendline"/> class is used to render the trendlines for <see cref="T:Syncfusion.UI.Xaml.Charts.CartesianSeries"/> to show the direction of price.
            </summary>
            <remarks>
            Trendline is applicable for only non-empty sets of corresponding <see cref="T:Syncfusion.UI.Xaml.Charts.CartesianSeries"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCloning">
            <summary>
            Represents a ChartCloning class implentation. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CapLineStyle">
            <summary>
            Represents a dependency object that display a cap style in error bar. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineStyle"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineStyle">
            <summary>
            Represents the line style customization used for chart elements. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineStyle.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.LineStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineStyle.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for LineStyle
            </summary>
            <param name="series">Used to specify corresponding series</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashCap"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeEndLineCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeEndLineCap"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeLineJoinProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeLineJoin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeMiterLimitProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeMiterLimit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashOffsetProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashArray"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.Stroke">
            <summary>
            Gets or sets a stroke brush for the line
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeThickness">
            <summary>
            Gets or sets a stroke thickness for the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashCap">
            <summary>
            Gets or sets a stroke dash cap for the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeEndLineCap">
            <summary>
            Gets or sets a stroke end cap for the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeLineJoin">
            <summary>
            Gets or sets the line join for the stroke of the line.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.PenLineJoin"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeMiterLimit">
            <summary>
            Gets or sets a limit on the ratio of the miter length to half the <see cref="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeThickness"/> of the shape.
            A Double that represents the distance within the dash pattern where a dash begins.
            </summary>
            <value>
            <see cref="T:System.Double"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset for the line.
            </summary>
            <value>
            The double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineStyle.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the line.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.DoubleCollection"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CapLineStyle.VisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CapLineStyle.Visibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CapLineStyle.LineWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CapLineStyle.LineWidth"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CapLineStyle.Visibility">
            <summary>
            Gets or sets the visiblity for the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CapLineStyle.LineWidth">
            <summary>
            Gets or sets a width for the line
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IRangeAxis`1">
            <summary>
            Inteface implementation for IRangeAxis
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis`1.Minimum">
            <summary>
            Gets or sets Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis`1.Maximum">
            <summary>
            Gets or sets Maximum property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartAxis">
            <summary>
            Interface implementation for IChartAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartAxis.VisibleLabels">
            <summary>
            Gets or sets VisibleLabels property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartSeries">
            <summary>
            Interface implementation for IChartSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartSeries.ItemsSource">
            <summary>
            Gets or sets ItemsSource property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Printing.#ctor(Syncfusion.UI.Xaml.Charts.ChartBase)">
            <summary>
            Print the chart.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Printing.Chart">
            <summary>
            Gets or sets the chart
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor">
            <summary>
            Represents the class that manages the localization for SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.Resources">
            <summary>
            Holds the resource manager of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetControlAssembly">
            <summary>
            Gets the assembly of the project.
            </summary>
            <returns>Returns assembly of the project.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetControlAssemblyDefaultNamespace">
            <summary>
            Gets the default namespace of the referred project.
            </summary>
            <returns>Default namespace of the control assembly.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetDefaultResourceManager">
            <summary>
            Gets the default resource manager of the project.
            </summary>
            <returns>Default resource manager.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetLocalizedResourceManager(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the localized ResourceManager of specific assembly and namespace.
            </summary>
            <param name="lookupassembly">The assembly from where need to look up the resource.</param>
            <param name="nameSpace">The namespace of the control.</param>
            <returns>Returns the resource manager.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetString(System.String,System.Object[])">
            <summary>
            Gets the localized text.
            </summary>
            <param name="name">String that has to be localized.</param>
            <param name="args">Control object.</param>
            <returns>The localized string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetString(System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="culture">Current UI culture.</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceAccessor.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Sets the resource manager based on the assembly and namespace.
            It can be used to get the values from the application resource files when the assembly name and the namespace of the control or application is different.
            </summary>
            <param name="lookupassembly">The control assembly.</param>
            <param name="nameSpace">The namespace of the control.</param>
            <example>
            <code>
            //Localization WPF is the project namespace and GetType().Assembly returns the assembly of that project.
            ChartLocalizationResourceAccessor.Instance.SetResources(GetType().Assembly, "LocalizationWPF");
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceExtension">
            <summary>
            A markup extension that returns the localized string based on culture for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceExtension.ResourceName"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLocalizationResourceExtension.ResourceName">
            <summary>
            Gets or sets the resource name to get the localized string.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Advanced">
            <summary>
              Looks up a localized string similar to Advanced.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.AxisIncompatibleExceptionMessage">
            <summary>
              Looks up a localized string similar to axis is not compatible with the axis of.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.BlackAndWhiteMode">
            <summary>
              Looks up a localized string similar to Black and White Mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.BoxSelectionZoom">
            <summary>
              Looks up a localized string similar to BoxSelection Zoom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.ChartPrintDialog">
            <summary>
              Looks up a localized string similar to Chart Print Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.ColorMode">
            <summary>
              Looks up a localized string similar to Color Mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Decrease">
            <summary>
              Looks up a localized string similar to Decrease.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.High">
            <summary>
              Looks up a localized string similar to High.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Histogram">
            <summary>
              Looks up a localized string similar to Histogram.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Increase">
            <summary>
              Looks up a localized string similar to Increase.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Low">
            <summary>
              Looks up a localized string similar to Low.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.LowerLine">
            <summary>
              Looks up a localized string similar to Lower Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.MACD">
            <summary>
              Looks up a localized string similar to MACD.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Maximum">
            <summary>
              Looks up a localized string similar to Maximum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Median">
            <summary>
              Looks up a localized string similar to Median.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Minimum">
            <summary>
              Looks up a localized string similar to Minimum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Open">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Pan">
            <summary>
              Looks up a localized string similar to Pan.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.PeriodLine">
            <summary>
              Looks up a localized string similar to Period Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Print">
            <summary>
              Looks up a localized string similar to Print.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.PrintingExceptionMessage">
            <summary>
              Looks up a localized string similar to Element must be rendered, and must have a parent in order to print..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.PrintingMessage">
            <summary>
              Looks up a localized string similar to is printing..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.PrintMode">
            <summary>
              Looks up a localized string similar to Print Mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.PrintStretch">
            <summary>
              Looks up a localized string similar to Print Stretch.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Q">
            <summary>
              Looks up a localized string similar to Q.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Q1">
            <summary>
              Looks up a localized string similar to Q1.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Q3">
            <summary>
              Looks up a localized string similar to Q3.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Quarter">
            <summary>
              Looks up a localized string similar to Quarter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.SignalLine">
            <summary>
              Looks up a localized string similar to Signal Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Size">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Total">
            <summary>
              Looks up a localized string similar to Total.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.UpperLine">
            <summary>
              Looks up a localized string similar to Upper Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.W">
            <summary>
              Looks up a localized string similar to W.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.Week">
            <summary>
              Looks up a localized string similar to Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.YValue">
            <summary>
              Looks up a localized string similar to YValue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.ZoomIn">
            <summary>
              Looks up a localized string similar to Zoom In.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Resources.Syncfusion_SfChart_WPF.ZoomOut">
            <summary>
              Looks up a localized string similar to Zoom Out.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SR">
            <summary>
             SR provides localized access to string resources from the Syncfusion.SfChart.WPF.resx file.
            </summary>
            <exclude />
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SR">SR</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.BeginWrite(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            The DependencyProperty for <see cref="!:PixelsArray"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Clears the BitmapContext, filling the underlying bitmap with zeros
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Slope(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Slope Calculation Method
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Intersect(System.Double,System.Double,System.Double)">
            <summary>
            Intersect Calculation Method(c = y- mx)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="slope"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses. 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses.
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses.
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.GetEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than GetEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.GetRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than GetRectangle().
            </summary>
            <param name="bmp"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="pixels"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ClassReferenceAttribute.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            Assemblies the resolver.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns>Assembly object.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper">
            <summary>
            Maintains the string constant to access the localized text in xaml file and code behind.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.ZoomOut">
            <summary>
            Gets the culture based value to represent tooltip for zoom out option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.ZoomIn">
            <summary>
            Gets the culture based value to represent tooltip for zoom in option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Reset">
            <summary>
            Gets the culture based value to represent tooltip for reset option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Pan">
            <summary>
            Gets the culture based value to represent tooltip for panning option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.BoxSelectionZoom">
            <summary>
             Gets the culture based value to represent tooltip for rect zooming option
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Week">
            <summary>
             Gets the culture based value to represent week. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.W">
            <summary>
            Gets the culture based value to represent W.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Quarter">
            <summary>
            Gets the culture based value to represent quarter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Q">
            <summary>
            Gets the culture based value to represent Q.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.ColorMode">
            <summary>
            Gets the culture based value to represent color mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.BlackAndWhiteMode">
            <summary>
            Gets the culture based value to represent black and white mode option in print dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.PrintStretch">
            <summary>
            Gets the culture based value to represent print stretch option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.PrintMode">
            <summary>
            Gets the culture based value to represent print mode option.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Advanced">
            <summary>
            Gets the culture based value to represent advanced propery in print dialog. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Print">
            <summary>
            Gets the culture based value to represent print. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Cancel">
            <summary>
            Gets the culture based value to represent cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.ChartPrintDialog">
            <summary>
            Gets the culture based value to represent chart print dialog. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.High">
            <summary>
            Gets the culture based value to represent  tooltip's high.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Low">
            <summary>
            Gets the culture based value to represent tooltip's low.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Open">
            <summary>
            Gets the culture based value to represent tooltip's open. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Close">
            <summary>
            Gets the culture based value to represent tooltip's close.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Maximum">
            <summary>
            Gets the culture based value to represent tooltip's maximum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Minimum">
            <summary>
            Gets the culture based value to represent tooltip's minimum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Q1">
            <summary>
            Gets the culture based value to represent tooltip's Q1.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Q3">
            <summary>
            Gets the culture based value to represent tooltip's Q3.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Median">
            <summary>
            Gets the culture based value to represent tooltip's median.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Size">
            <summary>
            Gets the culture based value to represent tooltip's size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.YValue">
            <summary>
             Gets the culture based value to represent tooltip's Yvalue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Increase">
            <summary>
            Gets the culture based value to represent legend Increase.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Decrease">
            <summary>
             Gets the culture based value to represent legend decrease.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Total">
            <summary>
            Gets the culture based value to represent legend total.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.PrintingExceptionMessage">
            <summary>
            Gets the culture based value to represent printing exception.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.AxisIncompatibleExceptionMessage">
            <summary>
            Gets the culture based value to represent incompatible exeception.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.PrintingMessage">
            <summary>
            Gets the culture based value to represent print message.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.SignalLine">
            <summary>
            Gets the culture based value to represent indicator signal line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.UpperLine">
            <summary>
            Gets the culture based value to represent indicator upper line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.LowerLine">
            <summary>
            Gets the culture based value to represent indicator lower line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.PeriodLine">
            <summary>
            Gets the culture based value to represent indicator period line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.Histogram">
            <summary>
            Gets the culture based value to represent indicator histogram.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResourceWrapper.MACD">
            <summary>
            Gets the culture based value to represent indicator MACD.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorBar">
            <summary>
            Represents a items control that display the control with color elements.  
            </summary>
            <seealso cref="T:System.Windows.Controls.ItemsControl"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartColorBar"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorBar.ShowLabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorBar.ShowLabel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorBar.DockPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorBar.DockPosition"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.ColorBar_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoke when color bar loaded
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.ChangeOrientation">
            <summary>
            Chage orientation for color bar items 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.UpdateColorBarItemsSource">
            <summary>
            Update color bar items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColorBar.ShowLabel">
            <summary>
            Gets or sets whether range label shown in color bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColorBar.DockPosition">
            <summary>
            Gets or sets the position of the color bar.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColorBarItem">
            <summary>
            Represents a dependency object that indicates the color bar. 
            </summary>
            <seealso cref="T:System.Windows.DependencyObject"/>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.OrientationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.BackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.LabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Label"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColorBarItem.ShowLabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.ShowLabel"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Orientation">
            <summary>
            Gets or sets orientation for color bar item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Background">
            <summary>
            Gets or sets background for color bar icon.
            </summary>
            /// <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Label">
            <summary>
            Gets or sets Label for color bar icon.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconHeight">
            <summary>
            Gets or sets height for color bar icon 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconWidth">
            <summary>
            Gets or sets width for color bar icon 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.ShowLabel">
            <summary>
            Gets or sets a value that indicates whether to show or hide the label.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ColorBarItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MeshGenerator">
            <summary>
            Class which represents the mesh generator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneXYZ(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for axis X,Y,Z plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneZ(System.Double,System.Double)">
            <summary>
            Draw mesh for axis Z plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneY(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for axis Y plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.BuildWall(System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for Wall
            </summary>
            <param name="sideA"></param>
            <param name="sideB"></param>
            <param name="sideC"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.AddTexturedQuad(System.Windows.Media.Media3D.MeshGeometry3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
            <summary>
            add position and triangle index for wall 
            </summary>
            <param name="geomerty"></param>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="p4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetNormalize(System.Windows.Media.Media3D.Point3D,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
             <summary>
            Normalize the points to 3D world 
             </summary>
             <param name="pt"></param>
             <param name="xmin"></param>
             <param name="xmax"></param>
             <param name="ymin"></param>
             <param name="ymax"></param>
             <param name="zmin"></param>
             <param name="zmax"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.DrawMaterial(System.Collections.Generic.List{System.Windows.Media.Brush},System.Boolean)">
            <summary>
            Draw material for surface chart
            </summary>
            <param name="brushes"></param>
            <param name="isGradient"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.MakeWireframe(System.Windows.Media.Media3D.MeshGeometry3D,System.Double)">
            <summary>
            Create wireframe mesh
            </summary>
            <param name="mesh"></param>
            <param name="thickness"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetMin(System.String,System.Windows.Media.Media3D.Point3D[0:,0:])">
            <summary>
            Get Minimum valuue for given pointer array
            </summary>
            <param name="value"></param>
            <param name="point3Ds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetMax(System.String,System.Windows.Media.Media3D.Point3D[0:,0:])">
            <summary>
            Get the maximum value of given pointer array
            </summary>
            <param name="value"></param>
            <param name="point3Ds"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfSurfaceChart">
            <summary>
            Class which represents the surface chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceBase">
            <summary>
            Class which represents the surface base.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.EnableRotationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.EnableRotation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowLeftWallProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowLeftWall"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBottomWallProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBottomWall"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBackWallProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBackWall"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.LeftWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.LeftWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.BottomWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BottomWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.BackWallBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BackWallBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.WallThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.WallThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.ColorModelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ColorModel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.PaletteProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Palette"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.RotateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Rotate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.TiltProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Tilt"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.HeaderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Header"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.Serialize">
            <summary>
            Method used to serialize the surface chart and store in XML file.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.Serialize(System.String)">
            <summary>
            Method used to serialize the surface chart and store the XML file in the given file path location.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.Deserialize">
            <summary>
            Method used deserialize and load the surface chart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.Deserialize(System.String)">
            <summary>
            Method used to load the serialized XML from the given file path and load the surface chart.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.UpdateArea">
            <summary>
            Update the surface area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.EnableRotation">
            <summary>
            Gets or sets value whether rotate the surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowLeftWall">
            <summary>
            Gets or sets value whether show the left wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBottomWall">
            <summary>
            Gets or sets value whether show the bottom wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBackWall">
            <summary>
            Gets or sets value whether show the back wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.LeftWallBrush">
            <summary>
            Gets or sets brush for left wall 
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BottomWallBrush">
            <summary>
            Gets or sets brush for bottom wall
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BackWallBrush">
            <summary>
            Gets or sets brush for Back wall
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.WallThickness">
            <summary>
            Gets or sets thickness for surface walls
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ColorModel">
            <summary>
            Gets or sets color model for surface
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Palette">
            <summary>
            Gets or sets Palette for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Rotate">
            <summary>
            Gets or sets rotate angle value for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Tilt">
            <summary>
            Gets or sets tilt angle value for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Header">
            <summary>
            Gets or sets title for Surface chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SfSurfaceChart"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ItemsSourceProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ItemsSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColorBarProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColorBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ApplyGradientBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ApplyGradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZBindingPath"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.RowSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.RowSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColumnSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColumnSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.LegendLabelFormatProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.LegendLabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.TypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Type"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CameraProjectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CameraProjection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZoomLevelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZoomLevel"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ShowContourLineProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ShowContourLine"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.EnableZoomingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.EnableZooming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.BrushCountProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.BrushCount"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateArea">
            <summary>
            Update the surface chart area
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CalculateViewSize">
            <summary>
            Calculate the mesh rendered size 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateViewMatrix">
            <summary>
            Calculate the matrix3d for rendered size
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.InitializeDefaultAxes">
            <summary>
            Initialize default axis 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateData">
            <summary>
            Update surface chart data points
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.GetPoints">
            <summary>
            Get Point array from items source
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateRange">
            <summary>
            Update surface chart axis range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateColorBar">
            <summary>
            update colors and its items source 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateAxis(System.Windows.Size)">
            <summary>
            Update surface axis layout
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawWall">
            <summary>
            Draw surface chart walls
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.SetLight">
            <summary>
            Set Light for surface chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxisElements">
            <summary>
            Draw Axis and its elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxis(Syncfusion.UI.Xaml.Charts.SurfaceAxis)">
            <summary>
            Draw axis 
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateGridLines">
            <summary>
            Update Axis gridlines
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawGridlines(Syncfusion.UI.Xaml.Charts.SurfaceAxis)">
            <summary>
            Draw gridlines as a mesh
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxisGridlines(Syncfusion.UI.Xaml.Charts.SurfaceAxis,System.Double,System.Double,System.Windows.Media.Media3D.MeshGeometry3D)">
            <summary>
            Draw grilines based on axis
            </summary>
            <param name="axis"></param>
            <param name="value"></param>
            <param name="offset"></param>
            <param name="gridframe"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateSurface">
            <summary>
            Draw surface types
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateViewport">
            <summary>
            Update viewport child
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateColorBarArrangeRect">
            <summary>
            Arrange color bar 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateCamera">
            <summary>
            Create projection camera types
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.PositionCamera(System.Windows.Media.Media3D.ProjectionCamera)">
            <summary>
            Positioning the camera based on Rotate and Tilt value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Capture mouse position and change mouse cursor
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Calculate the Rotate and Tilt value from mouse position
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
             Reset mouse position and cursor
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Calculate zoom leve based on mouse wheel zooom
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Reset zoom level value
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.GetDataType(Syncfusion.UI.Xaml.Charts.IPropertyAccessor,System.Collections.IEnumerable)">
            <summary>
            Get data type for given itemsource 
            </summary>
            <param name="propertyAccessor"></param>
            <param name="itemsSource"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Dispose">
            <summary>
            Method used to dispose unmanaged elements in SfSurfaceChart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Data">
            <summary>
            Passing surface data through Data property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ItemsSource">
            <summary>
            Gets or sets items source for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XAxis">
            <summary>
            Gets or sets Primary Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YAxis">
            <summary>
            Gets or sets Secondary Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZAxis">
            <summary>
            Gets or sets Depth Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColorBar">
            <summary>
            Gets or sets color bar for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ApplyGradientBrush">
            <summary>
            Gets or sets linear gradient brush for given palette 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XBindingPath">
            <summary>
            Gets or sets the property path to retrieve x data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YBindingPath">
            <summary>
            Gets or sets the property path to retrieve y data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZBindingPath">
            <summary>
            Gets or sets the property path to retrieve z data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.RowSize">
            <summary>
            Gets or sets Row size for items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColumnSize">
            <summary>
            Gets or sets column size for items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.LegendLabelFormat">
            <summary>
            Gets or sets label format for the legends label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStroke">
            <summary>
            Gets or sets stroke for wireframe line 
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStrokeThickness">
            <summary>
            Gets or sets stroke thickness for wireframe line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Type">
            <summary>
            Gets or sets type for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CameraProjection">
            <summary>
            Gets or sets Camera for Surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZoomLevel">
            <summary>
            Gets or sets zoom view level for 3D viewport
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ShowContourLine">
            <summary>
            Gets or sets a value indicating whether the contour line for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.EnableZooming">
            <summary>
            Gets or sets a value indicating whether surface chart is zooming
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.BrushCount">
            <summary>
            Gets or sets a value indicating the count for applying brushes in surface chart
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DataPointCollection">
            <summary>
            Represents a DataPointCollection class implementation. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DataPointCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DataPointCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DataPointCollection.AddPoints(System.Double,System.Double,System.Double)">
            <summary>
            Method used to add point value to the data point collection.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <param name="z">The z value.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DataPointCollection.XValues">
            <summary>
            Gets or sets the x value of the data point collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DataPointCollection.YValues">
            <summary>
            Gets or sets the y value of the data point collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DataPointCollection.ZValues">
            <summary>
            Gets or sets the z value of the data point calculation.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceAxis">
            <summary>
            Class which represent the surface axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SurfaceAxis"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Header"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelFormatProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.SmallTicksPerIntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.SmallTicksPerInterval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinimumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Minimum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MaximumProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Maximum"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.AxisLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.AxisLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.OrientationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.TickLineSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.TickLineSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MajorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MajorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinorTickLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinorTickLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.IntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Interval"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ShowGridLinesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ShowGridLines"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineStrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineStroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.EdgeLabelsDrawingModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.EdgeLabelsDrawingMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.RangePaddingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.RangePadding"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculate interval for surface axis
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.NumericalPadding)">
            <summary>
            Apply range padding 
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculate the nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GetActualDesiredIntervalsCount(System.Windows.Size)">
            <summary>
            Returns the maximum desired intervals count.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Header">
            <summary>
            Gets or sets header for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderTemplate">
            <summary>
            Gets or sets header template for surface axis
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelFormat">
            <summary>
            Gets or sets axis label format for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelTemplate">
            <summary>
            Gets or sets axis label template for surface axis
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.SmallTicksPerInterval">
            <summary>
            Gets or sets small tics per interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Minimum">
            <summary>
            Gets or sets Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Maximum">
            <summary>
            Gets or sets Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.VisibleLabels">
            <summary>
            Get visible labels for surface axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.AxisLineStyle">
            <summary>
            Gets or sets style for axis line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.TickLineSize">
            <summary>
            Gets or sets size for tick line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MajorTickLineStyle">
            <summary>
            Gets or sets major tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinorTickLineStyle">
            <summary>
            Gets or sets minor tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Interval">
            <summary>
            Gets or sets interval for suface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ShowGridLines">
            <summary>
            Gets or sets whether showing gridlines for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineStroke">
            <summary>
            Gets or sets brush for gridline
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineThickness">
            <summary>
            Gets or sets thickness for gridline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.EdgeLabelsDrawingMode">
            <summary>
            Get or sets the label drawing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.RangePadding">
            <summary>
            This property used to shift the SurfaceAxis range inside or outside.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisCollection">
            <summary>
            Represents a collection of control that display axis elements. 
            </summary>
            <seealso cref="!:System.Collections.ObjectModel.ObservableCollection&lt;Syncfusion.UI.Xaml.Charts.SurfaceAxis&gt;"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel">
            <summary>
            Class which represents the surface axis element panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ILayoutCalculator">
            <summary>
            This interfaces defines the members and methods to create and arrange the child elements in a panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Measure(System.Windows.Size)">
            <summary>
            Method to measure the panel.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Arrange(System.Windows.Size)">
            <summary>
            Method to arrage the elements in panel
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.UpdateElements">
            <summary>
            Method to update the elements (Children ) in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.DetachElements">
            <summary>
            Method to detachs elements from the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Children">
            <summary>
            Gets Children property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.DesiredSize">
            <summary>
            Gets desiredSize property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartesianAxisElementsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Top" -->
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel">
            <summary>
            Class which represents the surface axis label panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartessianAxisLabelsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Panel">
            <summary>
            Gets the labels panel value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Axis">
            <summary>
            Gets or sets the chart axis of the panel./>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Top" -->
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout">
            <summary>
            Class which represents the surface axis label layout.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.CreateAxisLayout(Syncfusion.UI.Xaml.Charts.SurfaceAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Method used to create the axis layout.
            </summary>
            <param name="chartAxis"></param>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange.
            </summary>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.ComputedSizes">
            <summary>
            Holds the width and height of the element after rotating.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.DesiredSizes">
            <summary>
            Holds the width and height of the element without rotating.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout">
            <summary>
            Class which represents the surface horizontal label layout.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout.#ctor(Syncfusion.UI.Xaml.Charts.SurfaceAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout"/> class.
            </summary>
            <param name="axis">The surface axis value.</param>
            <param name="elements">The ui element value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout">
            <summary>
            Class which represents the surface vertical label layout.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout.#ctor(Syncfusion.UI.Xaml.Charts.SurfaceAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout"/> class.
            </summary>
            <param name="axis">The surface axis label value.</param>
            <param name="elements">The ui element value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceAxisPanel">
            <summary>
            Class which represents the surface axis panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisPanel.#ctor">
            <summary>
            called when instance created for ChartCarttesianAxisPanel
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WallThickness">
            <summary>
            Class which represents the wall thickness.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.WallThickness"/> class.
            </summary>
            <param name="uniformValue">The uniform value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.WallThickness"/> class.
            </summary>
            <param name="left">The left value.</param>
            <param name="bottom">The bottom value.</param>
            <param name="back">The back value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.GetHashCode">
            <summary>
            Override GetHashCode to return the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.Equals(System.Object)">
            <summary>
            Override Equals to return bool value comparing to wall thickness object.
            </summary>
            <param name="obj">The object.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.Equals(Syncfusion.UI.Xaml.Charts.WallThickness)">
            <summary>
            Override Equals to return bool value comparing to wall thickness position.
            </summary>
            <param name="wallThickness">The wall thickness.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.op_Equality(Syncfusion.UI.Xaml.Charts.WallThickness,Syncfusion.UI.Xaml.Charts.WallThickness)">
            <summary>
            Override Operator == to return bool value comparing to two points.
            </summary>
            <param name="point1">The wall thickness point one value.</param>
            <param name="point2">The wall thickness point two value.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThickness.op_Inequality(Syncfusion.UI.Xaml.Charts.WallThickness,Syncfusion.UI.Xaml.Charts.WallThickness)">
            <summary>
            Override Operator != to return bool value comparing to two points.
            </summary>
            <param name="point1">The wall thickness point one value.</param>
            <param name="point2">The wall thickness point two value.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WallThickness.Left">
            <summary>
            Gets or sets the left.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WallThickness.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.WallThickness.Back">
            <summary>
            Gets or sets the back.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WallThicknessConverter">
            <summary>
            Class which represents the  wall thickness converter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Override CanConvertFrom to return true for String-to-Complex conversions. 
            </summary>
            <param name="context">The context value.</param>
            <param name="sourceType">The source type.</param>
            <returns>The string to complex.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Override CanConvertTo to return true for Complex-to-String conversions.        
            </summary>
            <param name="context">The context value.</param>
            <param name="destinationType">The destination type.</param>
            <returns>The complex to string value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Override ConvertFrom to convert from a string to an instance of WallThickness.
            </summary>
            <param name="context">The context value.</param>
            <param name="culture">The culture value.</param>
            <param name="source">The source value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WallThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Override ConvertTo to convert from a null to an destination type.
            </summary>
            <param name="context">The context value.</param>
            <param name="culture">The culture value.</param>
            <param name="value">The value.</param>
            <param name="destinationType">The destination type.</param>
            <returns>The argument null exception.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog">
            <summary>
            ChartPrintDialog
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_elementToPrint">
            <summary>
            Initializes m_elementToPrint
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_nativePrintDialog">
            <summary>
            Initializes m_nativePrintDialog
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_visualBrush">
            <summary>
            Initializes m_visualBrush
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ChartHeight">
            <summary>
            Initializes ChartHeight
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ChartWidth">
            <summary>
            Initializes ChartWidth
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretchProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretch"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintModeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintMode"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.BorderStyleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.BorderStyle"/> dependency property.
            </summary>
            <value>
            The identifier for the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.BorderStyle"/> dependency property.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.DashedBorderStyleProperty" -->
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ShowPrintDialog(System.Windows.FrameworkElement)">
            <summary>
            Shows the print dialog.
            </summary>
            <param name="element">The element.</param>
            <returns>Returns ShowDialog</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ShowPrintDialog(System.Windows.FrameworkElement,System.Windows.Rect,System.Double,System.Double)">
            <summary>
            Shows the print dialog.
            </summary>
            <param name="element">The element.</param>
            <param name="printArea">The print area.</param>
            <returns>Returns ShowDialog</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.StartPrint">
            <summary>
            Starts the print.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [print click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnCancelClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [cancel click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnColorClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [color click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnBlackAndWhiteClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [black and white click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnAdvancedClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [advanced click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.GetPrintSize(System.Windows.Media.Stretch,System.Windows.Size,System.Windows.Size)">
            <summary>
            Gets the size by specified stretch.
            </summary>
            <param name="stretch">The stretch.</param>
            <param name="viewport">The viewport.</param>
            <param name="original">The original.</param>
            <returns>The PRint size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintStretchChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPrintStretchChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPrintModeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.SetViewport(System.Windows.Media.VisualBrush,System.Windows.Size)">
            <summary>
            Sets the viewport.
            </summary>
            <param name="brush">The brush.</param>
            <param name="size">The size value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintStretchChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises PrintStretchChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises PrintModeChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintMode">
            <summary>
            Gets or sets the print mode.
            </summary>
            <value>The print stretch.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretch">
            <summary>
            Gets or sets the print stretch.
            </summary>
            <value>The print stretch.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.BorderStyle">
            <summary>
            Gets or sets the border style to customize the chart print dialog window.
            </summary>
            <value>
            The <c>BorderStyle</c> for print dialog window.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.DashedBorderStyle">
            <summary>
            Gets or sets the dahsed border style to customize the chart print dialog window.
            </summary>
            <value>
            The <c>DashedBorderStyle</c> for print dialog window.
            </value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretchChanged">
            <summary>
            Event that is raised when PrintStretch property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintModeChanged">
            <summary>
            Event that is raised when PrintMode property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSkinManagerExtension.GetBaseThemeName(System.Windows.DependencyObject)">
            <summary>
            Identifies and returns the basethemename applied to the object using SfSkinManager.
            </summary>
            <param name="obj">UI Element</param>
            <returns>SfSkinManager base theme name of type <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSkinManagerExtension.SetTheme(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the themename to child from source UI element.
            </summary>
            <param name="sourceobject">Source UI Element</param>
            <param name="childobject">Child UI Element (Target element)</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSkinManagerExtension.SetSizeMode(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the SizeMode value to child from source UI element.
            </summary>
            <param name="sourceobject">Source UI Element</param>
            <param name="childobject">Child UI Element</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfChart">
            <summary>
            Represents the Chart control which is used to visualize the data graphically.
            </summary>
            <remarks>
            The Chart is often used to make it easier to
            understand large amount of data and the relationship between different parts
            of the data. Chart can usually be read more quickly than the raw data that they
            come from. <para> Certain <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/> are more useful for
            presenting a given data set than others. For example, data that presents
            percentages in different groups (such as "satisfied, not satisfied, unsure") are
            often displayed in a <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/> chart, but are more easily
            understood when presented in a horizontal <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/> chart.
            On the other hand, data that represents numbers that change over a period of
            time (such as "annual revenue from 2011 to 2012") might be best shown as a <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/> chart. </para>
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.WatermarkProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.Watermark"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBackground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.SeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.Series"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AnnotationsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.Annotations"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicatorsProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicators"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.Dispose">
            <summary>
            Performs application-defined tasks accociated with freeing, releasing, or resetting unmanaged resource in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.Dispose(System.Boolean)">
            <summary>
            Disposing chart objects.
            </summary>
            <param name="disposing">Used to indicate perform dispose or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to highlight selected index series.
            </summary>
            <param name="newIndex">Used to indicate current selected index.</param>
            <param name="oldIndex">Used to indicate previous selected index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToPointRelativeToAnnotation(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Method used to gets the byte value of given color.
            </summary>
            <param name="color">The color value which is used to byte value.</param>
            <returns>The byte value of given color.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnRowColumnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Notifies the row and column collection changed in Chart.
            </summary>
            <param name="e">NotifyCollectionChanged event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToLogPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to Log point.
            </summary>
            <param name="axis">The Logarithmic axis.</param>
            <param name="value">The value.</param>
            <returns>The double value to point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnAnnotationsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This method is called while the annotation adding dynamically.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.UpdateBitmapSeries(Syncfusion.UI.Xaml.Charts.ChartSeries,System.Boolean)">
            <summary>
            Method used to update selection in bitmap series.
            </summary>
            <param name="bitmapSeries">Used to specify bitmap series to update.</param>
            <param name="isReset">Used to indicate corresponding need to reset or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.InitializeDefaultAxes">
            <summary>
            Set default axes for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ConvertBitmapPixels">
            <summary>
            Method is used to convert list collection in to hashset.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.SetPrimaryAxis(Syncfusion.UI.Xaml.Charts.ChartValueType)">
            <summary>
            Method used to set PrimaryAxis for SfChart.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSeriesBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesBoundsChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnZoomChanged(Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs)">
            <summary>
            Occurs when zooming position changed in chart.
            </summary>
            <param name="args">ZoomChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnZoomChanging(Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs)">
            <summary>
            Occurs when zooming takes place in chart.
            </summary>
            <param name="args">ZoomChangingEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingStart(Syncfusion.UI.Xaml.Charts.SelectionZoomingStartEventArgs)">
            <summary>
            Occurs at the start of selection zooming.
            </summary>
            <param name="args">SelectionZoomingStartEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingEnd(Syncfusion.UI.Xaml.Charts.SelectionZoomingEndEventArgs)">
            <summary>
            Occurs at the end of selection zooming.
            </summary>
            <param name="args">SelectionZoomingEndEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingDelta(Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs)">
            <summary>
            Occurs while selection zooming in chart.
            </summary>
            <param name="args">SelectionZoomingDeltaEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnPanChanged(Syncfusion.UI.Xaml.Charts.PanChangedEventArgs)">
            <summary>
            Occurs when panning position changed in chart.
            </summary>
            <param name="args">PanChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnPanChanging(Syncfusion.UI.Xaml.Charts.PanChangingEventArgs)">
            <summary>
            Occurs when panning takes place in chart.
            </summary>
            <param name="args">PanChangingEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnResetZoom(Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs)">
            <summary>
            Occurs when zoom is reset.
            </summary>
            <param name="args">ResetZoomEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.AddZoomToolBar(Syncfusion.UI.Xaml.Charts.ZoomingToolBar,Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior)">
            <summary>
            Used to add the zooming toolbar in canvas.
            </summary>
            <param name="chartZoomingToolBar">ZoomingToolBar value.</param>
            <param name="zoomBehavior">ChartZoomPanBehavior instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnCreateAutomationPeer">
            <summary>
            Returns class-specific System.Windows.Automation.Peers.AutomationPeer implementations for the WPF infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize">The size value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            called when lost focus from the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
            <param name="e">RoutedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when got focus in the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
            <param name="e">RoutedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseWheel"/> event occurs to provide handling for the event in a derived class without attaching a delegate. 
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnTouchDown(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch down on the chart.
            </summary>
            <param name="e">TouchEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnTouchMove(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch move on the chart.
            </summary>
            <param name="e">TouchEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnTouchUp(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch up on the chart.
            </summary>
            <param name="e">TouchEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.KeyUp"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted"/> event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted"/>  event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta"/> event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when drop the pointer in the chart.
            </summary>
            <param name="e">DragEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when drag over the chart.
            </summary>
            <param name="e">DragEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when drag leave from the chart.
            </summary>
            <param name="e">DragEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when drag enter into the chart.
            </summary>
            <param name="e">DragEventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.RemoveBorderLines">
            <summary>
            Method to remove the border lines in row and column definition.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.UpdateBitmapToolTip">
            <summary>
            This method is to update bitmap series tooltip.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ZoomChanged">
            <summary>
            Occurs when chart zooming value is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ZoomChanging">
            <summary>
            Occurs when zooming takes place in chart.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingStart">
            <summary>
            Occurs at the start of selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingDelta">
            <summary>
            Occurs during selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingEnd">
            <summary>
            Occurs at the end of selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.PanChanged">
            <summary>
            Occurs when panning position of chart is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.PanChanging">
            <summary>
            Occurs when panning takes place in chart.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ResetZooming">
            <summary>
            Occurs when the zoom is reset.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxis">
            <summary>
            Gets or sets primary axis for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxis">
            <summary>
            Gets or sets the secondary axis for <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Watermark">
            <summary>
            Gets or sets the chart watermark.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrush">
            <summary>
            Gets or sets the color to paint the outline of chart area.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThickness">
            <summary>
            Gets or sets the outline thickness of chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBackground">
            <summary>
            Gets or sets the background color of the plotting area.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Behaviors">
            <summary>
            Gets or sets the collection of chart behaviors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Series">
            <summary>
            Gets or sets a collection of series to be added to the chart. To render a series, create an instance of required series class, and add it to the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicators">
            <summary>
            Gets or sets a collection of technical indicators to the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Annotations">
            <summary>
            Gets or sets a collection of annotations to the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.RowBorderLines">
            <summary>
            Property to get the list of lines added for a row definition.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.ColumnBorderLines">
            <summary>
            Property to get the list of lines added for a column definition.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs.NewBounds">
            <summary>
            Gets or sets the updated bounds of the rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs.OldBounds">
            <summary>
            Gets or sets the previous bounds of the rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PrintingEventArgs.ShowPrintDialog">
            <summary>
            Gets or sets a value indicating whether to show the print dialog or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PrintingEventArgs.CancelPrinting">
            <summary>
            Gets or sets a value indicating whether to cancel the printing or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PrintingEventArgs.PrintDialog">
            <summary>
            Gets or sets a value for print dialog.
            </summary>
            <see cref="T:System.Windows.Window"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PrintingEventArgs.PrintVisual">
            <summary>
            Gets or sets a value for print visual.
            </summary>
            <see cref="T:System.Windows.Media.Visual"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NamespaceDoc">
            <summary>
            Defines the namespace to intialize the SfChart, SfDateTimeRangeNavigator and SfSurfaceChart control.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabel">
            <summary>
            Represents an axis label element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor(System.Double,System.Object,System.Double)">
            <summary>
            Called when instance created for ChartAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
            <param name="actualValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor(System.Double,System.Object)">
            <summary>
            Called when instance created for ChartAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.LabelContent">
            <summary>
            Gets or sets content of Axis Label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PrefixLabelTemplate">
            <summary>
            Gets or sets PrefixLabelTemplate of Axis Label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PostfixLabelTemplate">
            <summary>
            Gets or sets PostfixLabelTemplate of Axis Label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.Position">
            <summary>
            Gets or sets position of Axis Label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.ActualValue">
            <summary>
            Gets or sets actual value used for XForms.UWP
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.LabelStyle">
            <summary>
            Gets or sets LabelStyle for individual Axis Used for xForms.uwp
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.LabelContentChanged">
             <summary>
            Used for xForms.UWP to return true if label content is changed
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.ChartAxis">
            <summary>
            Gets or sets ChartAxis Property used for xForms.uwp
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.AxisLabelAlignment">
            <summary>
            Gets or sets Alignment property for individual axis label.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel">
            <summary>
            Represents an date time axis label element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel.#ctor(System.Double,System.Object,System.Double)">
            <summary>
            Called when instance created for DateTimeAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
            <param name="actualValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel.#ctor(System.Double,System.Object)">
            <summary>
            Called when instance created for DateTimeAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel.IntervalType">
            <summary>
            Gets or sets the date time interval type.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxisLabel.IsTransition">
            <summary>
            Gets whether Transition is allowed or not
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs.NewBounds">
            <summary>
            Gets or sets the updated bounds of the rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs.OldBounds">
            <summary>
            Gets or sets the previous bounds of the rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs.NewRange">
            <summary>
            Gets or sets the updated range of the chart axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs.OldRange">
            <summary>
            Gets or sets the previous range of the chart axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs">
            <summary>
            Class implementation for Label created event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs.AxisLabel">
            <summary>
            Gets or sets the chart axis label for further customization.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs">
            <summary>
            Represents chart axis actual range changed event arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.#ctor(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs"/> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.IsScrolling">
            <summary>
            Gets or sets a value indicating whether to enable scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualMinimum">
            <summary>
            Gets or sets object that represents definite minimum value of axis range.
            </summary>
            <value>
            The actual minimum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualMaximum">
            <summary>
            Gets or sets object that represents definite maximum value of axis range.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.VisibleMinimum">
            <summary>
            Gets or sets object that represents observable minimum value of axis range.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.VisibleMaximum">
            <summary>
            Gets or sets object that represents observable maximum value of axis range.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualInterval">
            <summary>
            Gets or sets object that represents definite interval value of axis range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegend">
             <summary>
             Represents legend for a <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
             </summary>
             <remarks>
             Chart legend will be added as chart's child. Each item in legend contain key information about the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>. Legend has all abilities such as docking, enabling or
             disabling desired series in a <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </remarks>
             <example>
             <code language="XAML">
                 &lt;syncfusion:SfChart&gt;
                       &lt;syncfusion:SfChart.Legend&gt;
                             &lt;syncfusion:ChartLegend/&gt;
                       &lt;/syncfusion:SfChart.Legend&gt;
                       &lt;syncfusion:Series/&gt;
                 &lt;/syncfusion:SfChart &gt;
             </code>
             <code language="C#">
                 ChartLegend chartLegend = new ChartLegend();
                 ChartArea.Legend = chartLegend;
             </code>
             </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.DockPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.DockPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetXProperty">
            <summary>
            Identifies the OffsetX dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetX"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetYProperty">
            <summary>
            Identifies the OffsetY dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetY"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.SeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Series"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Header"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OrientationProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibilityProperty">
            <summary>
            Identifies the CheckBoxVisibility dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.ToggleSeriesVisibilityProperty">
            <summary>
            Identifies the ToggleSeriesVisibility dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.ToggleSeriesVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibilityProperty">
            <summary>
            Identifies the IconVisibility dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidthProperty">
            <summary>
            Identifies the IconWidth dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeightProperty">
            <summary>
            Identifies the IconHeight dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMarginProperty">
            <summary>
            Identifies the ItemMargin dependency property.
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.Clone">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/> class.
            </summary>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.OnCreateAutomationPeer">
            <summary>
            Returns class-specific System.Windows.Automation.Peers.AutomationPeer implementations for the WPF infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse moved on the <see cref="T:Syncfusion.UI.Xaml.Charts.LegendItem"/>. 
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the mouse button pressed on the <see cref="T:Syncfusion.UI.Xaml.Charts.LegendItem"/>.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse leaved from the chart legend.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Orientation">
            <summary>
            Gets or sets the orientation of chart legend.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartOrientation"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.DockPosition">
            <summary>
            Gets or sets the position of the ChartLegend.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartDock"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition">
            <summary>
            Gets or sets the legend position in the chart.
            </summary>
            <remarks>
            This is works for 2D charts alone.
            </remarks>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin">
            <summary>
            Gets or sets the margin for legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Header">
            <summary>
            Gets or sets the header for the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate">
            <summary>
            Gets or sets the legend header template.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius">
            <summary>
            Gets or sets the CornerRadius of legend's border.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility">
             <summary>
             Gets or sets a value that determines whether to show/hide CheckBox in legend item.
            </summary>
            <value>
            <see cref="T:System.Windows.Visibility"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.ToggleSeriesVisibility">
             <summary>
             Gets or sets a value indicating whether ToggleSeriesVisibility is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility">
            <summary>
            Gets or sets the visibility of the legend icon.
            </summary>
            <value>
            <see cref="T:System.Windows.Visibility"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth">
            <summary>
            Gets or sets width of the legend icon.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight">
            <summary>
            Gets or sets height of the legend icon. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetX">
            <summary>
            Gets or sets the value used to move the ChartLegend on x-coordinate.
            </summary>
            <remarks>
            This property is working for dock position as Floating only.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Series">
            <summary>
            Gets or sets the series value to get data point based legend items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetY">
            <summary>
            Gets or sets the value used to move the ChartLegend on y-coordinate.
            </summary>
            <remarks>
            This property is working for dock position as Floating only.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendItem">
            <summary>
            Represents the class implementation for LegendItem.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.LabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.Label"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.LegendIconTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.LegendIconTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.Stroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.StrokeThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.StrokeThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.InteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.CheckBoxVisibilityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.CheckBoxVisibility"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.ItemMarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.ItemMargin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IsSeriesVisibleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.IsSeriesVisible"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.VisibilityOnLegendProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.VisibilityOnLegend"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.OpacityProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LegendItem.Opacity"/> property.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.LegendItem.PropertyChanged">
            <summary>
            Occurs when a property value changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Label">
            <summary>
            Gets or sets the value for the legend item label text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.LegendIconTemplate">
            <summary>
            Gets or sets the data template for the legend icon.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Stroke">
            <summary>
            Gets or sets stroke for the legend item.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.StrokeThickness">
            <summary>
            Gets or sets stroke thickness for legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Interior">
            <summary>
            Gets or sets interior for legend item.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconVisibility">
            <summary>
            Gets or sets icon visibility of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.CheckBoxVisibility">
            <summary>
            Gets or sets checkbox visibility of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconWidth">
            <summary>
            Gets or sets width of the legend item icon.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconHeight">
            <summary>
            Gets or sets height of the legend item icon.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.ItemMargin">
            <summary>
            Gets or sets margin of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IsSeriesVisible">
            <summary>
            Gets or sets a value indicating whether is series visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.VisibilityOnLegend">
            <summary>
            Gets or sets value whether legend is visible or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Opacity">
            <summary>
            Gets or sets Opacity of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Segment">
            <summary>
            Gets or sets Segment of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Item">
            <summary>
            Gets or sets Item of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Trendline">
            <summary>
            Gets or sets the Trendline of the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Series">
            <summary>
            Gets or sets the Series of the legend item.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSeries">
            <summary>
            AreaSeries connects its data points,using a continuous line with its underlying areas being filled in.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:AreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:AreaSeries&gt;
            </code>
            <code language="C#">
                  AreaSeries series1 = new AreaSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AreaSeries.IsClosedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AreaSeries.IsClosed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AreaSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.CreateSegments">
            <summary>
            Creates the segments of AreaSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.CreateSegment(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment"/> into the Segments collection.
            </summary>
            <param name="xValues">The xValues.</param>
            <param name="yValues">The yValues.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Used to update the series tooltip when pointer moved on series.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.IsClosed">
            <summary>
            Gets or sets a value that indicates whether area path should be closed or opened. This is a bindable property.
            </summary>
            <value>
             If its <c>true</c>, Area stroke will be closed; otherwise stroke will be applied on top of the series only.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <value>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.IsAreaTypeSeries">
            <summary>
            Gets the value which confirms whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BubbleSeries">
            <summary>
            Bubble series displays a set of circular symbols of varying size. It is represented by closely packed circles, whose areas are proportional to the quantities.
            </summary>
            <remarks>
            BubbleSeries requires an additional data binding parameter <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.Size"/> in addition to X,Y parameters.
            The size of each bubble depends on the size value given in the data point.<see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadius"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadius"/> properties can be used to 
            control the minimum and maximum radius of the symbols.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:BubbleSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value" Size="Size"&gt;
                  &lt;/syncfusion:BubbleSeries&gt;
            </code>
            <code language="C#">
                  BubbleSeries series1 = new BubbleSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  series1.Size="Size";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.ShowZeroBubblesProperty">
            <summary>
            The DependencyProperty of <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.ShowZeroBubbles"/> property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadiusProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadius"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadiusProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadius"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.SizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.Size"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.CustomTemplate"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.#ctor">
            <summary>
            Called when instance created for BubbleSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.CreateSegments">
            <summary>
            Creates the Segments of BubbleSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.GeneratePoints">
            <summary>
            Method used to generate points for bubble series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.EllipseContainsPoint(System.Windows.Shapes.Ellipse,System.Windows.Point)">
            <summary>
            This method used to check the position within the ellipse
            </summary>
            <param name="Ellipse"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.ShowZeroBubbles">
            <summary>
            Gets or sets a value that indicates whether to show the bubble segment when apply size value to 0. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <example>
                <code>
                series.SegmentSelectionBrush = new SolidColorBrush(Colors.Red);
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadius">
            <summary>
            Gets or sets the maximum size for each bubble.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadius">
            <summary>
            Gets or sets a value that specifies the maximum size for each bubble segment. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.Size">
            <summary>
            Gets or sets the property binding path that specifies the bubble series size. This is a bindable property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010" 
                                   ScatterHeight="40" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" 
                                             Stretch="Fill" Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                             Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CandleSeries">
            <summary>
            CandleSeries is used primarily to analyze price movements of a stcock market over a period of time.
            </summary>
            <remarks>
            Each data point contains four values namely open, high, low, close. Typically, the high and low values are connected using a vertical straight line, 
            whereas the region between open and close values are connected using a vertical column segment.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:CandleSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Open="Open" Close="Close" Low="Low"&gt;
                  &lt;/syncfusion:CandleSeries&gt;
            </code>
            <code language="C#">
                  CandleSeries series1 = new CandleSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High="High";
                  series1.Low="Low";
                  series1.Open="Open";
                  series1.Close="Close";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/>    
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSpacing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CandleSeries.SelectedIndexProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.CreateSegments">
            <summary>
            Creates the segments of CandleSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.PointIsOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Method is used to check the point in on line
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSeries">
            <summary>
            ColumnSeries displays its data points using a set of vertical bars. Its height is proportional to the data points being plotted.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:ColumnSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:ColumnSeries&gt;
            </code>
            <code language="C#">
                  ColumnSeries series1 = new ColumnSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplate"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CreateSegments">
            <summary>
            Creates the segments of ColumnSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging series.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging end.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging entered.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CreateSegment(System.Double[],System.Double,System.Double,System.Object)">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
            <param name="xValue">The xValue.</param>
            <param name="yValue">The yValue.</param>
            <param name="actualData">The actualData.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected and its default value is -1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code>
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010" 
                                   ScatterHeight="40" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" 
                                    Stretch="Fill" Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                    Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.EnableAntiAliasingProperty">
            <summary>
            Identifies the EnableAntiAliasing dependency property.
            </summary>        
            <value>
            The identifier for EnableAntiAliasing dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>        
            <value>
            The identifier for StrokeDashArray dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to trigger SelectionChanged event to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Invoked when VisibleRange property changed.
            </summary>
            <param name="e"><see cref="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/> property changed.
            </summary>
            <param name="oldValue">ItemsSource old value.</param>
            <param name="newValue">ItemsSource new value</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moving on chart area.
            </summary>
            <param name="e">Event args that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.PointInsidePolygon(System.Windows.Shapes.Polygon,System.Double,System.Double)">
            <summary>
            Method used to check the point within the polygon or not.
            </summary>
            <param name="polygon"></param>
            <param name="pointX"></param>
            <param name="pointY"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.GetPolygonPoints(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method used to get polygon points.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="leftThickness"></param>
            <param name="rightThickness"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.EnableAntiAliasing">
            <summary>
            Gets or sets a value that indicates whether to enable anti-aliasing for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>, to draw smooth edges.
            </summary>
            <value>
            Default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the line stroke.
            </summary>
            <value>
            It takes the <see cref="T:System.Windows.Media.DoubleCollection"/> value. The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.IsBitmapSeries">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.IsLinear">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
            <seealso cref="F:Syncfusion.UI.Xaml.Charts.SelectionStyle.Multiple"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineSeries">
             <summary>
             Represents a special kind of line series which uses poly lines for rendering chart points. FastLineSeries allows to render a collection with large number of data points.
             </summary>
             <remarks>
             FastLineSeries renders large quantity of data in fraction of milliseconds using poly lines. FastLineBitmapSeries also can be used for better performance which uses WriteableBitmap to render the series.
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:FastLineSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 FastLineSeries series = new FastLineSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.CustomTemplateProperty">
            <summary>
            Identifies the CustomTemplate dependency property.
            </summary>
            <value>
            The identifier for CustomTemplate dependency property.
            </value> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashArray"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashOffsetProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashOffset"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashCapProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashCap"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeLineJoinProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeLineJoin"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.CreateSegments">
            <summary>
            Used to create the segment of <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.CreateEmptyPointSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}@)">
            <summary>
            MEthod used to create empty point segments.
            </summary>
            <param name="YValues">Yvalues</param>
            <param name="yValList">YValues list</param>
            <param name="xValList">XValues list</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to trigger SelectionChanged event to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when pointer or mouse move on chart area.
            </summary>
            <param name="e">Events args thats contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/> property changed.
            </summary>
            <param name="oldValue">ItemsSource old value.</param>
            <param name="newValue">ItemsSource new value</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath"/>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Invoked when VisibleRange property changed.
            </summary>
            <param name="e"><see cref="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrush"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior (brush) for the selected segment(s).
            </summary>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndex"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array forline to customize the appearance of FastLineSeries. This is a bindable property.
            </summary>
            <value>
            It takes the <see cref="T:System.Windows.Media.DoubleCollection"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset for line to customize the appearance of FastLineSeries. This is a bindable property.
            </summary>
            <value>
            Its takes the double value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashCap">
            <summary>
            Gets or sets the stroke dash cap for the stroke.
            </summary>
            <value>
            It takes the <see cref="T:System.Windows.Media.PenLineCap"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeLineJoin">
            <summary>
            Gets or sets the line join for the stroke of the line.
            </summary>
            <value>
            It takes the <see cref="T:System.Windows.Media.PenLineJoin"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.CustomTemplate">
             <summary>
             Gets or sets the DataTemplate used to customize the poly line appearence. 
             </summary>
             <value>
             The template that specifies poly line inside canvas. The default is null.
             </value>
             <remarks>
             This data template should be loaded with poly line inside canvas where poly line appearence properties like stroke dasharray, stroke dashoffset, stroke dashcap, stroke linejoin can be customized.
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
                       <chart:SfChart.Resources>
                         <DataTemplate x:Key="seriesTemplate">
                             <Canvas>
                                 <Polyline Points="{Binding Points}" StrokeDashArray="3,3" StrokeThickness="3" Stroke="Yellow"/>
                             </Canvas>
                         </DataTemplate>
                       </chart:SfChart.Resources>
                      
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:FastLineSeries
                           CustomTemplate="{StaticResource seriesTemplate}"
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 FastLineSeries series = new FastLineSeries();
                 series.CustomTemplate = chart.Resources["seriesTemplate"] as DataTemplate;
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             ***
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.IsLinear">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries">
            <summary>
            HiLoOpenCloseSeries is used primarily to analyze price movements of a stock market over a period of time.
            </summary>
            <remarks>
            Each data point contains two values namely high, low. Typically, the high and low values are connected using a vertical straight line.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:HiLoOpenCloseSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Open="Open" Close="Close" Low="Low"&gt;
                  &lt;/syncfusion:HiLoOpenCloseSeries&gt;
            </code>
            <code language="C#">
                  HiLoOpenCloseSeries series1 = new HiLoOpenCloseSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High="High";
                  series1.Low="Low";
                  series1.Open="Open";
                  series1.Close="Close";
                  chart.Series.Add(series1);
               </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSpacingProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSpacing"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.CreateSegments">
            <summary>
            Creates the segments of HiLoOpenCloseSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.IsPointOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Method used to check the given checkPoint within the startPoint and endPoint
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <param name="isOpenCloseLine"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
                The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <example>
                <code>
                series.SegmentSelectionBrush = new SolidColorBrush(Colors.Red);
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.IsMultipleYPathRequired">
            <summary>
            Indicates that this series requires multiple y values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SegmentSelectionBrush"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SelectedIndex"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.CreateSegments">
            <summary>
            Creates the segments of HiLoSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.IsPointOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Method used to check the given checkPoint within the startPoint and endPoint
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <example>
                <code>
                series.SegmentSelectionBrush = new SolidColorBrush(Colors.Red);
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.IsMultipleYPathRequired">
            <summary>
            Indicates that this series requires multiple y values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HistogramSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.C_distributionPointsCount">
            <summary>
            Initializes c_distributionPointsCount
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPathProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPath"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramIntervalProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramInterval"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.CurveLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.CurveLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurveProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurve"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.XAxisProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.XAxis"/> property.  
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.YAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YAxis"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.c_sqrtDoublePI">
            <summary>
            Initializes c_sqrtDoublePI
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.#ctor">
            <summary>
            Called when instance created for HistogramSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.CreateSegments">
            <summary>
            Creates the segments of HistogramSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.GeneratePoints">
            <summary>
            Method used to generate points for histogram series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis property changed. 
            </summary>
            <param name="oldAxis">old axis</param>
            <param name="newAxis">new axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis value changed.
            </summary>
            <param name="oldAxis">old axis</param>
            <param name="newAxis">new axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args</param>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPath"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.HistogramSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.GetHistogramMeanAndDeviation(System.Collections.Generic.List{System.Windows.Point},System.Double@,System.Double@)">
            <summary>
            Gets the histogram mean and deviation.
            </summary>
            <param name="points">The cpwi A.</param>
            <param name="mean">The mean value.</param>
            <param name="standartDeviation">The standart deviation.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.NormalDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Normal Distribution function.
            </summary>
            <param name="x">The x value.</param>
            <param name="m">The m value.</param>
            <param name="sigma">The sigma value.</param>
            <returns>The Normal Distribution</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPath">
            <summary>
            Gets or sets the property path bind with y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramInterval">
            <summary>
            Gets or sets a value that specifies the interval to combine in histogram axis. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.CurveLineStyle">
            <summary>
            Gets or set the line style of <see cref="T:Syncfusion.UI.Xaml.Charts.HistogramSeries"/> normal distribution curve.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:SfChart.Resources&gt;
                        &lt;Style TargetType = "Polyline" x:Key="curveLineStyle"&gt;
                        &lt; Setter Property = "Stroke" Value="YellowGreen"/&gt;
                        &lt; Setter Property = "StrokeThickness" Value="3"/&gt;
                        &lt; Setter Property = "StrokeDashArray" Value="1,2" /&gt;
                        &lt;/Style&gt;
                  &lt;/syncfusion:SfChart.Resources&gt;
                  &lt;syncfusion:HistogramSeries HistogramInterval="10" ItemsSource="{Binding Data}" CurveLineStyle = {StaticResource curveLineStyle}
                                                 XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:HistogramSeries&gt;
            </code>
            <code language="C#">
                  SfChart chart = new SfChart();
                  Style style = new Style(typeof(Polyline));
                  style.Setters.Add(new Setter(Polyline.StrokeProperty, Brushes.Green));
                  style.Setters.Add(new Setter(Polyline.StrokeThicknessProperty, 5.0));
                  DoubleCollection doubleCollection = new DoubleCollection();
                  doubleCollection.Add(2);
                  doubleCollection.Add(3);
                  style.Setters.Add(new Setter(Polyline.StrokeDashArrayProperty, doubleCollection));
                  HistogramSeries series1 = new HistogramSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.HistogramInterval = "10";
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  series1.CurveLineStyle = style;
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurve"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurve">
            <summary>
            Gets or sets a value indicating whether to enable the distribution curve in the histogram series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.XAxis">
            <summary>
            Gets or sets the x axis for the Histogram series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YAxis">
            <summary>
            Gets or sets the y axis for the Histogram series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.XRange">
            <summary>
            Gets or sets the x axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YRange">
            <summary>
            Gets or sets the y axis range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSeries">
            <summary>
            Line chart displays series as a set of points connected using a straight line to represent large amounts of data observed over a continuous period of time.
            </summary>
            <remarks>
            LineChart appearance can be customized by using <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplate"/> property.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:LineSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:LineSeries&gt;
            </code>
            <code language="C#">
                  LineSeries series1 = new LineSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplate"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndex"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.StrokeDashArrayProperty">
            <summary>
            The Dependency property for<see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.StrokeDashArray"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.CreateSegments">
            <summary>
            Creates the segments of LineSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging ended.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.CreateSegment(System.Double[],System.Object)">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
            <param name="actualData">The actualData.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010" 
                                   ScatterHeight="40" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" Stretch="Fill"
                                       Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                       Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for line to customize the appearance of LineSeries. This is a bindable property.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.DoubleCollection"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSeries">
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficientProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficient"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.#ctor">
            <summary>
            Called when instance created for PieSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateSegments">
            <summary>
            Creates the segments of PieSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.GetPieSeriesCount">
            <summary>
            Gets the pie series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size.
            </summary>
            <param name="size">size</param>
            <param name="create">bool</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments.
            </summary>
            <param name="series">series</param>
            <param name="xVal">xvalue</param>
            <param name="yVal">yvalue</param>
            <param name="angle">angle</param>
            <param name="radius">radius</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex.
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficient">
            <summary>
            Gets or sets a value that specifies the ratio of pie size with respect to chart area. This is a bindable property.
            </summary>
            <value>
            The value ranges from 0 to 1.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolarSeries">
             <summary>
             Represents a series which visualizes data in terms of values and angles. It provides options for visual comparison between several quantitative or qualitative aspects of a situation. 
             </summary>
             <remarks>
             Polar charts are most commonly used to plot polar data, where each data point is determined by an angle and a distance.
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
              
                      <chart:SfChart.DataContext>
                        <local:ViewModel/>
                      </chart:SfChart.DataContext>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:PolarSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 ViewModel viewmodel = new ViewModel();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 PolarSeries series = new PolarSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.RadarSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateSegments">
            <summary>
            Creates the segments of PolarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RadarSeries">
             <summary>
             Represents a series which visualizes data in terms of values and angles. It provides options for visual comparison between several quantitative or qualitative aspects of a situation.
             </summary>
             <remarks>
             Unlike the <see cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/>, RadarSeries does not display data in terms of polar coordinates.
             RadarSeries is useful for comparisons between multiple series of category data.
             </remarks>
             <example>
             # [MainWindow.xaml](#tab/tabid-1)
             <code><![CDATA[
                 <chart:SfChart>
                 
                      <chart:SfChart.DataContext>
                        <local:ViewModel/>
                      </chart:SfChart.DataContext>
            
                       <chart:SfChart.PrimaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.PrimaryAxis>
            
                       <chart:SfChart.SecondaryAxis>
                           <chart:NumericalAxis/>
                       </chart:SfChart.SecondaryAxis>
            
                       <chart:RadarSeries
                           ItemsSource="{Binding Data}"
                           XBindingPath="XValue"
                           YBindingPath="YValue"/>
                                
                 </chart:SfChart>
             ]]></code>
             # [MainWindow.cs](#tab/tabid-2)
             <code><![CDATA[
                 SfChart chart = new SfChart();
                 
                 ViewModel viewmodel = new ViewModel();
                 
                 NumericalAxis primaryAxis = new NumericalAxis();
                 NumericalAxis secondaryAxis = new NumericalAxis();
                 
                 chart.PrimaryAxis = primaryAxis;
                 chart.SecondaryAxis = secondaryAxis;
                 
                 RadarSeries series = new RadarSeries();
                 series.ItemsSource = viewmodel.Data;
                 series.XBindingPath = "XValue";
                 series.YBindingPath = "YValue";
                 chart.Series.Add(series);
             ]]></code>
             # [ViewModel.cs](#tab/tabid-3)
             <code><![CDATA[
             public ObservableCollection<Model> Data { get; set; }
             
             public ViewModel()
             {
                Data = new ObservableCollection<Model>();
                Data.Add(new Model() { XValue = 10, YValue = 100 });
                Data.Add(new Model() { XValue = 20, YValue = 150 });
                Data.Add(new Model() { XValue = 30, YValue = 110 });
                Data.Add(new Model() { XValue = 40, YValue = 230 });
             }
             ]]></code>
             ***
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateSegments">
            <summary>
            Creates the Segments of RadarSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/> into the Segments collection.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.RadarSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries">
            <summary>
            RangeColumnSeries displays data points as a set of vertical bars of varying heights,starting at different points within a area of<see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:RangeColumnSeries ItemsSource="{Binding Data}" XBindingPath="Year" High="High" Low="Low"&gt;
                  &lt;/syncfusion:RangeColumnSeries&gt;
            </code>
            <code language="C#">
                  RangeColumnSeries series1 = new RangeColumnSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.High = "High";
                  series1.Low = "Low";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CustomTemplate"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSpacingProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSpacing"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SelectedIndex"/> property.       
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CreateSegments">
            <summary>
            Creates the segments of RangeColumn Series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging ended.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging entered.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging series.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CalculateSegmentSpacing(System.Double,System.Double,System.Double)">
            <summary>
            Method used to calculate the segment spacing.
            </summary>
             <param name="spacing">Spacing</param>
             <param name="Right">Right</param>
             <param name="Left">Left</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSpacing">
            <summary>
            Gets or sets the spacing between the segments across the series in cluster mode.
            </summary>
            <value>
            The value ranges from 0 to 1.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.IsMultipleYPathRequired">
            <summary>
            Indicates that this series requires multiple y values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSeries">
            <summary>
            ScatterSeries displays data points as set of circular symbols. 
            Values are being represented by the position of the symbols on the chart.    
            </summary>
            <remarks>
            ScatterSeries are typically used to compare aggregated data across categories.
            </remarks>
            <example>
            <code language="XAML">
                  &lt;syncfusion:ScatterSeries ScatterHeight = "10" ScatterWidth = "10" ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:ScatterSeries&gt;
            </code>
            <code language="C#">
                  ScatterSeries series1 = new ScatterSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.ScatterHeight = 10;
                  series1.ScatterWidth = 10;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.DragDirectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.DragDirection"/> property.       
            </summary>
            Using a DependencyProperty as the backing store for DragDirection.  This enables animation, styling, binding, etc...
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.SegmentSelectionBrushProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterWidth"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterHeight"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SelectedIndex"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.CustomTemplate"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.CreateSegments">
            <summary>
            Creates the segments of ScatterSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnTouchDown(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called when touch down on series.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnChartDragEntered(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging entered.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnChartDragDelta(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging series.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging end.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.OnChartDragExited(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging exit.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.EllipseContainsPoint(System.Windows.Shapes.Ellipse,System.Windows.Point)">
            <summary>
            This method used to check the position within the ellipse
            </summary>
            <param name="Ellipse"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.DragDirection">
            <summary>
            Gets or sets the dragging direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterWidth">
            <summary>
            Gets or sets a value that specifies the width of the chart scatter segment. This is a bindable property.
            </summary>
            <remarks>
            The default value is 20.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterHeight">
            <summary>
            Gets or sets a value that specifies the height of the chart scatter segment. This is a bindable property.
            </summary>
            <remarks>
            The default value is 20.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" YBindingPath="Year2010" 
                                    ScatterHeight="40" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" Stretch="Fill"
                                            Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                            Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries">
            <summary>
            SplineAreaSeries connects it data points using a smooth line segment with the areas below are filled in.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:SplineAreaSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:SplineAreaSeries&gt;
            </code>
            <code language="C#">
                  SplineAreaSeries series1 = new SplineAreaSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.IsClosedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.IsClosed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SplineTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplineType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndex"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SegmentSelectionBrush"/> property.       
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.CreateSegments">
            <summary>
            Creates the segments of SplineAreaSeries.
            </summary>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse moving on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetCardinalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method used to calculate cardinal spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetMonotonicSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method used to calculate monotonic spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double[]@)">
            <summary>
            Method used to calculate the natural spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
            <param name="ys2">ys2</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetBezierControlPoints(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartPoint@,Syncfusion.UI.Xaml.Charts.ChartPoint@)">
            <summary>
            Method used to calculate the bezier values.
            </summary>
            <param name="point1">chart point</param>
            <param name="point2">chart point</param>
            <param name="ys1">ys1</param>
            <param name="ys2">ys2</param>
            <param name="controlPoint1">chart point</param>
            <param name="controlPoint2">chart point</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.IsClosed">
            <summary>
            Gets or sets a value indicating whether area path should be closed or opened.
            </summary>
            <value>
             If its <c>true</c>, Area stroke will be closed; otherwise stroke will be applied on top of the series only.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SplineType">
            <summary>
            Gets or sets SplineType enum value which indicates the spline series type.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SplineType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.IsLinear">
            <summary>
            Gets the value which confirms whether this series in linearity.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.IsAreaTypeSeries">
            <summary>
            This property used to confirm whether it is area typed series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineSeries">
            <summary>
            SplineSeries is similar to that of <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/> except that the points here are connected using smooth Bezier curves.
            </summary>
            <example>
            <code language="XAML">
                  &lt;syncfusion:SplineSeries ItemsSource="{Binding Data}" XBindingPath="Year" YBindingPath="Value"&gt;
                  &lt;/syncfusion:SplineSeries&gt;
            </code>
            <code language="C#">
                  SplineSeries series1 = new SplineSeries();
                  series1.ItemsSource = viewmodel.Data;
                  series1.XBindingPath = "Year";
                  series1.YBindingPath = "Value";
                  chart.Series.Add(series1);
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.CustomTemplateProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineSeries.CustomTemplate"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndexProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndex"/> property.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.SegmentSelectionBrushProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SegmentSelectionBrush"/> property.       
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.SplineTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplineType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.StrokeDashArrayProperty">
            <summary>
            The Dependency property for<see cref="P:Syncfusion.UI.Xaml.Charts.SplineSeries.StrokeDashArray"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.CreateSegments">
            <summary>
            Creates the segments of SplineSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment.
            </summary>
            <param name="newIndex">new index</param>
            <param name="oldIndex">old index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when pointer or mouse move on chart area.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/> series.
            </summary>
            <param name="obj">object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c>, DragEndEvent will raise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.OnChartDragStart(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging started.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.OnChartDragEnd(System.Windows.Point,System.Object)">
            <summary>
            Called when dragging end.
            </summary>
            <param name="mousePos">mouse position</param>
            <param name="originalSource">original source</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetCardinalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method used to calculate cardinal spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetMonotonicSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method used to calculate monotonic spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double[]@)">
            <summary>
            Method used to calculate the natural spline values.
            </summary>
            <param name="xValues">xvalues</param>
            <param name="yValues">yvalues</param>
            <param name="ys2">ys2</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetBezierControlPoints(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartPoint@,Syncfusion.UI.Xaml.Charts.ChartPoint@)">
            <summary>
            Method used to calculate the bezier values.
            </summary>
            <param name="point1">chart point</param>
            <param name="point2">chart point</param>
            <param name="ys1">ys1</param>
            <param name="ys2">ys2</param>
            <param name="controlPoint1">chart point</param>
            <param name="controlPoint2">chart point</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.CustomTemplate">
            <summary>
            Gets or sets the custom template for this series.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>.
            </example>
            <example>
                <code language="XAML">
                    &lt;syncfusion:ScatterSeries ItemsSource="{Binding Demands}" XBindingPath="Demand" 
                                    ScatterHeight="40" YBindingPath="Year2010" ScatterWidth="40"&gt;
                       &lt;syncfusion:ScatterSeries.CustomTemplate&gt;
                            &lt;DataTemplate&gt;
                                &lt;Canvas&gt;
                                   &lt;Path Data="M20.125,32l0.5,12.375L10.3125,12.375L10.3125,0.5L29.9375,0.5L29.9375,12.375L39.75,12.375Z" Stretch="Fill"
                                            Fill="{Binding Interior}" Height="{Binding ScatterHeight}" Width="{Binding ScatterWidth}" 
                                            Canvas.Left="{Binding RectX}" Canvas.Top="{Binding RectY}"/&gt;
                                &lt;/Canvas&gt;
                            &lt;/DataTemplate&gt;
                        &lt;/syncfusion:ScatterSeries.CustomTemplate&gt;
                    &lt;/syncfusion:ScatterSeries&gt;
                </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndex">
            <summary>
            Gets or sets the index of the selected segment.
            </summary>
            <value>
            <c>Int</c> value represents the index of the data point(or segment) to be selected. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SegmentSelectionBrush">
            <summary>
            Gets or sets the interior(brush) for the selected segment(s).
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SplineType">
            <summary>
            Gets or sets SplineType enum value which indicates the spline series type. 
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SplineType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the spline series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.IsLinear">
            <summary>
            The property confirms the linearity of this series.
            </summary>
            <remarks>
             Returns <c>true</c> if its linear, otherwise it returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedSegments">
            <summary>
            Gets the selected segments in this series, when we enable the multiple selection.
            </summary>
            <returns>
            It returns the list of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection">
            <summary>
            A collection class which holds ChartBehaviors.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.#ctor(Syncfusion.UI.Xaml.Charts.SfChart)">
            <summary>
            Called when instance created for ChartBehaviourCollection
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.#ctor">
            <summary>
            Called when instance created for ChartBehaviorsCollection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.InsertItem(System.Int32,Syncfusion.UI.Xaml.Charts.ChartBehavior)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.ClearItems">
            <summary>
            Clears the behavior collection in the items.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection.InsertItem(System.Int32,Syncfusion.UI.Xaml.Charts.ChartAxisLabel)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.
            </param><param name="item">The object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection.ClearItems">
            <summary>
            ChartAxisLabelsCollection Clear Items
            </summary>    
            <seealso>
                <cref>ChartAxisLabelsCollection</cref>
            </seealso>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegendCollection">
            <summary>
            A collection class which holds chart legend
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisScaleBreaks">
            <summary>
            A collection class which holds ChartAxisScaleBreak
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartStripLines">
            <summary>
            A collection class which holds ChartStripLine
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartMultiLevelLabels">
            <summary>
            A collection class which holds ChartMultiLevelLabels
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisCollection">
            <summary>
            A collection class which holds ChartAxis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisCollection.InsertItem(System.Int32,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisCollection.Item(System.String)">
            <summary>
            return ChartAxis value from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrendLineCollection">
            <summary>
            A collection class which holds ChartTrendLine.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendLineCollection.#ctor">
            <summary>
            Called when instance created for ChartTrendLineCollection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrendLineCollection.Item(System.String)">
            <summary>
            return ChartTrendLine from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesCollection">
            <summary>
            A collection class which holds ChartSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection">
            <summary>
            A collection class which holds ChartSeries 2D.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries3DCollection">
            <summary>
            A collection class which holds ChartSeries 3D.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3DCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRowDefinitions">
            <summary>
            A collection class which holds ChartRowDefinitions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions">
            <summary>
            A collection class which holds ChartColumnDefinitions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisRangeStyleCollection">
            <summary>
            A collection class that holds ChartAxisRangeStyle.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter">
            <summary>
            Converts Visibility to Boolean value and vice-versa.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter">
            <summary>
            Converts Boolean value to Visibility value and vice-versa.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter">
            <summary>
            Converts the angle value by series IsTransposed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ConnectorRotationAngleConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.InteriorConverter">
            <summary>
            Resolves the color of the series or segment dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter">
            <summary>
            Resolves the SegmentSelectionBrush of the series dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter">
            <summary>
            Resolves the SeriesSelectionBrush of the series dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter">
            <summary>
            Returns the brush to be used based on the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter">
            <summary>
            Returns the rotate angle.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendMarginConverter">
            <summary>
            set the margin for windows phone legend icon
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LegendMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LegendMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies back to the target data before passing it to the source object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelContentPathConverter">
            <summary>
            Modifies the chart adornment label based on content path. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelContentPathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelContentPathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter">
            <summary>
            Represents a converter that returns the brush to axis label. 
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.IsAdornmentSelected(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Method used to get the given adornment is selected or not
            </summary>
            <param name="adornment"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelBorderBrushConverter">
            <summary>
            Sets the chart adornment border brush. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBorderBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBorderBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BindingConvertor">
            <summary>
            Represents a expression converter that returns the binding based on value. 
            </summary>
            <seealso cref="T:System.Windows.ExpressionConverter"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastReflectionCaches">
            <summary>
            Contains members to hold PropertyInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase">
            <summary>
            ChartAdornmentInfoBase represents the class used for configuring chart adornments for chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelRotationAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelRotationAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.MarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Margin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ForegroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UseSeriesPaletteProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UseSeriesPalette"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HighlightOnSelectionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HighlightOnSelection"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLineProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLine"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Symbol"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInteriorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInterior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStroke"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamilyProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamily"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPositionProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPosition"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContent"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormatProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormat"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarkerProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarker"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabelProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabel"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Clone">
            <summary>
            Returns the clone adornment info. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetBezierApproximation(System.Collections.Generic.IList{System.Windows.Point},System.Int32)">
            <summary>
            Gets the bezier approximation.
            </summary>
            <param name="controlPoints">The control points.</param>
            <param name="outputSegmentCount">The output segment count.</param>
            <returns>The list of points.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AlignElement(System.Windows.FrameworkElement,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Double,System.Double)">
            <summary>
            Aligns the element.
            </summary>
            <param name="control">The control.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.CalculateVisibleAdornments">
            <summary>
            Find the Adornments which are positioned with in Visible Range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UpdateConnectingLines">
            <summary>
            Updates the adornment connecting lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UpdateElements">
            <summary>
            Adornment element's properties have updated.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UpdateSpiderLabels(System.Double,System.Double,System.Windows.Size,System.Double)">
            <summary>
            Updates the spider labels.
            </summary>
            <param name="pieLeft">The pie left.</param>
            <param name="pieRight">The pie right.</param>
            <param name="finalSize">The size.</param>
            <param name="radius">Used to specify the pie radius.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AlignStraightConnectorLineLabel(System.Windows.FrameworkElement,System.Windows.Point,Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition,Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer,System.Double,System.Double,System.Boolean,Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition)">
            <summary>
            Align label position for straight connector line for circular series.
            </summary>
            <param name="label"></param>
            <param name="center"></param>
            <param name="adornmentsPosition"></param>
            <param name="adornmentSymbol"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="enableSmartLabel"></param>
            <param name="labelPosition">Specifies the <see cref="T:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.DrawConnectorLine(System.Int32,System.Collections.Generic.List{System.Windows.Point},Syncfusion.UI.Xaml.Charts.ConnectorMode,System.Boolean,System.Double)">
            <summary>
            Draws the connecotr line.
            </summary>
            <param name="connectorIndex">Index of the connector.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="connectorLineMode">The connector line mode.</param>
            <param name="depth">Used to indicate the actual depth.</param>
            <param name="is3DChart">Used to indicate 3D chart or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.PanelChanged(System.Windows.Controls.Panel)">
            <summary>
            Panels the changed.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetAdornmentPositions(System.Double,System.Collections.Generic.IList{System.Windows.Rect},System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAdornment,System.Int32,System.Double,System.Double,System.Windows.FrameworkElement,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double@,System.Double@,System.Double,System.Boolean)">
            <summary>
            Gets the adornment positions.
            </summary>
            <param name="pieRadius">The pie radius.</param>
            <param name="bounds">The bounds.</param>
            <param name="finalSize">The final size.</param>
            <param name="adornment">The adornment.</param>
            <param name="labelIndex">Index of the label.</param>
            <param name="pieLeft">The pie left.</param>
            <param name="pieRight">The pie right.</param>
            <param name="label">The label.</param>
            <param name="series">The series.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="angle">Used to specify the angle for adornment label.</param>
            <param name="isPie">Used to indicate, whether series is pie or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetActualLabelPosition(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Gets the actual label position when the chart is inversed or y values less than 0.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.DrawLineSegment(System.Collections.Generic.List{System.Windows.Point},System.Windows.Shapes.Path)">
            <summary>
            Draws the line segment.
            </summary>
            <param name="points">The points.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetChartAlignment(System.Windows.VerticalAlignment)">
            <summary>
            Get equivalent <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment"/>.
            </summary>
            <param name="alignment">which get type of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment"/>.</param>
            <returns>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetChartAlignment(System.Windows.HorizontalAlignment)">
            <summary>
            Get equivalent <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/> from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment"/>.
            </summary>
            <param name="alignment">which get type of <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment"/>.</param>
            <returns>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAlignment"/>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetBezierPoint(System.Double,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Gets the bezier point.
            </summary>
            <param name="t">The t.</param>
            <param name="controlPoints">The control points.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnSymbolTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the adornment symbol symbol type is changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnFontStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the font style properties.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnLabelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the labels and position.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnStylingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the styling properties.
            </summary>
            <param name="d">The dependency object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnLabelsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the label.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the label color properties.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnDefaultAdornmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates all the adornment properties.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SmartLabelsForOutside(System.Collections.Generic.IList{System.Windows.Rect},System.Collections.Generic.IList{System.Windows.Point},System.Windows.Rect,System.Windows.FrameworkElement,System.Windows.Point,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Smarts the labels for outside.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="currRect">The curr rect.</param>
            <param name="label">The label.</param>
            <param name="center">The center.</param>
            <param name="labelRadiusFromOrigin">The label radius from origin.</param>
            <param name="connectorHeight">Height of the connector.</param>
            <param name="explodedRadius">The exploded radius.</param>
            <param name="pieAdornment">The pie adornment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SmartLabelsForInside(Syncfusion.UI.Xaml.Charts.ChartAdornment,System.Collections.Generic.IList{System.Windows.Rect},System.Windows.FrameworkElement,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Windows.Point},System.Windows.Point,System.Windows.Rect)">
            <summary>
            Smarts the labels for inside.
            </summary>
            <param name="adornment">The adornment.</param>
            <param name="bounds">The bounds.</param>
            <param name="label">The label.</param>
            <param name="connectorHeight">Height of the connector.</param>
            <param name="labelRadiusFromOrigin">The label radius from origin.</param>
            <param name="pieRadius">The pie radius.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="center">The center.</param>
            <param name="currRect">The curr rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnFontStylePropertyChanged">
            <summary>
            Updates the font style properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnColorPropertyChanged">
            <summary>
            Updates the label color properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.OnDefaultAdornmentChanged">
            <summary>
            Updates all the adornment properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle to the adornment label content.
            </summary>
            <remarks>
            The default value is 0 and the label will be rotated with center as origin.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Background">
            <summary>
            Gets or sets the background brush for the adornment label.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderThickness">
            <summary>
            Gets or sets the outer border thickness of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderBrush">
            <summary>
            Gets or sets the brush that draws the outer border stroke brush. 
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Margin">
            <summary>
            Gets or sets the outer margin of a label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyle">
            <summary>
            Gets or sets the top-level font style for the label.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyle"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontSize">
            <summary>
            Gets or sets the font size for the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Foreground">
            <summary>
            Gets or sets foreground brush to apply to the label content.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UseSeriesPalette">
            <summary>
            Gets or sets a value indicating whether the adornment should reflect the series interior.
            </summary>
            <value>
            if its <c>true</c>, the segment color will be applied for the respective adornments. 
            By default, its <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelPosition">
            <summary>
            Gets or sets the label position for the adornment.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition"/>
            </value>
            <remarks>
            By defining its value as <c>AdornmentsLabelPosition.Auto</c>, the adornment label will position smartly based 
            on type of the series.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HighlightOnSelection">
            <summary>
            Gets or sets a value indicating whether to enable the selection for the adornments.
            </summary>
            <value>
            if its <c>true</c>, we can selected the data point by selecting adornments.
            </value>
            <remarks>
            This feature will be useful for the continuous series like FastLine, Area, etc.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment for the label.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for the label.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeight">
            <summary>
            Gets or sets the connector line height of the adornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngle">
            <summary>
            Gets or sets the rotation angle for the connector line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyle">
            <summary>
            Gets or sets the connector line style.
            </summary>
            <remarks>
            <see cref="T:System.Windows.Style"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLine">
            <summary>
            Gets or sets a value indicating whether to show or hide the connector line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplate">
            <summary>
            Gets or sets the custom template for the adornment label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Symbol">
            <summary>
            Gets or sets the type of symbol to be displayed as adornment.
            </summary>
            <remarks>
            By default, symbol will not be displayed. We need to define the required shape.
            </remarks>
            <value>
            The value can be Circle, Rectangle, etc. See <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSymbol"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidth">
            <summary>
            Gets or sets the width of the adornment symbol.
            </summary>
            <remarks>
            The default value is 12.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeight">
            <summary>
            Gets or sets the height of the adornment symbol.
            </summary>
            <remarks>
            The default value is 12.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplate">
            <summary>
            Gets or sets the custom template for the adornment symbol.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInterior">
            <summary>
            Gets or sets the background of the adornment symbol.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStroke">
            <summary>
            Gets or sets the stroke of the adornment symbol.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamily">
            <summary>
            Gets or sets the adornment label font family.
            </summary>
            <remarks>
            Identifies font family that should be used to display adornment's text.
            </remarks>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamily"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Series">
            <summary>
            Gets the associated series of this adornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPosition">
            <summary>
            Gets or sets the position of the adornments.
            </summary>
            <value>
            <c>AdornmentsPosition.Top</c> 
            <c>AdornmentsPosition.Bottom</c>
            <c>AdornmentsPosition.TopAndBottom</c>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContent">
            <summary>
            Gets or sets the actual label content to be displayed as adornment.
            </summary>
            <remarks>
            This property is used to define the value to be displayed in adornment label 
            like x value or any other value from underlying model object.
            </remarks>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.LabelContent"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormat">
            <summary>
            Gets or sets the string formatting for the adornment labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarker">
            <summary>
            Gets or sets a value indicating whether to show or hide the marker symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabel">
            <summary>
            Gets or sets a value indicating whether to show or hide the adornment label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GrandTotal">
            <summary>
            Gets the sum value of all data.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.IsMarkerRequired">
            <summary>
            Gets a value indicating whether to generate the adornment containers.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.IsTextRequired">
            <summary>
            Gets a value indicating whether the adornment label is rendered with textblock.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo">
            <summary>
            Represents the class used for configuring chart adornments for 2D chart.
            </summary>
            <remarks>
            Chart adornments are used to show additional information about the data point.
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>.
            <code language="XAML">
                    &lt;syncfusion:PieSeries&gt;
                        &lt;syncfusion:PieSeries.AdornmentInfo&gt;
                            &lt;syncfusion:ChartAdornmentInfo/&gt;
                        &lt;/syncfusion:PieSeries.AdornmentInfo&gt;
                    &lt;syncfusion:PieSeries&gt;
            </code>
            <code language="C#">
                    ChartAdornmentInfo chartAdornmentInfo = new ChartAdornmentInfo();
                    pieSeries.AdornmentInfo = chartAdornmentInfo;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo.DrawLineSegment(System.Collections.Generic.List{System.Windows.Point},System.Windows.Shapes.Path)">
            <summary>
             Draws the line segment for adornment connector line. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo.AlignStraightConnectorLineLabel(System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer,System.Double@,System.Double@,System.Windows.FrameworkElement)">
            <summary>
            Define auto position for the straight line.
            </summary>
            <param name="center"></param>
            <param name="adornmentSymbol"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="label"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo3D">
            <summary>
            Represents the class used for configuring chart adornments for 3D chart.
            </summary>
            <remarks>
            Chart adornments are used to show additional information about the data point.
            </remarks>
            <example>
            This example, we are using <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries3D"/>.
            <code language="XAML">
                    &lt;syncfusion:PieSeries3D&gt;
                        &lt;syncfusion:PieSeries3D.AdornmentInfo&gt;
                            &lt;syncfusion:ChartAdornmentInfo3D&gt;
                        &lt;/syncfusion:PieSeries3D.AdornmentInfo&gt;
                    &lt;syncfusion:PieSeries3D&gt;
            </code>
            <code language="C#">
                    ChartAdornmentInfo3D chartAdornmentInfo = new ChartAdornmentInfo();
                    pieSeries3D.AdornmentInfo = chartAdornmentInfo;
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo3D.DrawLineSegment(System.Collections.Generic.List{System.Windows.Point},System.Windows.Shapes.Path)">
            <summary>
            Draws the line segment for adornment connectorline. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorModel">
             <summary>
            ChartColorModel contains a number of predefined color palette and have custom brushes collection to populate a custom palette.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.#ctor">
            <summary>
            Called when instance created for ChartColorModel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.#ctor(Syncfusion.UI.Xaml.Charts.ChartColorPalette)">
            <summary>
            Called when instance created for ChartColorModel with single arguments
            </summary>
            <param name="palette"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBrushes(Syncfusion.UI.Xaml.Charts.ChartColorPalette)">
            <summary>
            Returns the collection of brushes for specified pallete
            </summary>
            <param name="palette">ChartColorPalette</param>
            <returns>List of brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetMetroBrushes">
            <summary>
            Returns the brushes used for metro palette.
            </summary>
            <returns> Metro Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetAutumnBrushes">
            <summary>
            Returns the brushes used for AutumnBrights palette.
            </summary>
            <returns>AutumnBrights Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetFloraHuesBrushes">
            <summary>
            Returns the brushes used for FloraHues palette.
            </summary>
            <returns>FloraHues Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetPineappleBrushes">
            <summary>
            Returns the brushes used for Pineapple palette.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetTomotoSpectramBrushes">
            <summary>
            Returns the brushes used for TomatoSpectrum palette.
            </summary>
            <returns>TomatoSpectrum Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetTomatoSpectrumBrushes">
            <summary>
            Returns the brushes used for TomatoSpectrum palette.
            </summary>
            <returns>TomatoSpectrum Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetRedChromeBrushes">
            <summary>
            Returns the brushes used for RedChrome palette.
            </summary>
            <returns>RedChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetPurpleChromeBrushes">
            <summary>
            Returns the brushes used for PurpleChrome palette.
            </summary>
            <returns>PurpleChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBlueChromeBrushes">
            <summary>
            Returns the brushes used for BlueChrome palette.
            </summary>
            <returns>BlueChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetGreenChromeBrushes">
            <summary>
            Returns the brushes used for GreenChrome palette.
            </summary>
            <returns>GreenChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetEliteBrushes">
            <summary>
            Returns the brushes used for Elite palette.
            </summary>
            <returns>Elite Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetSandyBeachBrushes">
            <summary>
            Returns the brushes used for SandyBeach palette.
            </summary>
            <returns>SandyBeach Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetLightCandyBrushes">
            <summary>
            Returns the brushes used for LightCandy palette.
            </summary>
            <returns>LightCandy Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBrush(System.Int32)">
            <summary>
            Returns the brush at the specified index for current palette
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
            <param name="colorIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes">
            <summary>
            Gets or sets the custom brushes to be used to paint the interiors of each segment or series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition">
            <summary>
            Represents a column definition.
            </summary>
            <remarks>
            The width of the row can be defined either in terms of fixed pixels units mode or in auto adjust mode, by using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit"/> property.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.WidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Width"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.UnitProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStroke"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.#ctor">
            <summary>
            Called when instance created for ChartColumnDefinition
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Clone">
            <summary>
            Clone the column
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Width">
            <summary>
            Gets or sets the width of this column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit">
            <summary>
            Gets or sets unit of the value to be specified for row width.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartUnitType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThickness">
            <summary>
            Gets or sets the thickness of the column border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStroke">
            <summary>
            Gets or sets the border stroke.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPointInfo">
             <summary>
            ChartPointInfo contains information about the displaying series data points.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPointInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when property changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPointInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.SeriesValues">
            <summary>
            Gets or sets the  SeriesValues.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Series">
            <summary>
            Gets or sets the associated series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Axis">
            <summary>
            Gets or sets the associated axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Item">
            <summary>
            Gets or sets the items of this data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Interior">
            <summary>
            Gets or sets the interior color of this data point.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Foreground">
            <summary>
            Gets or sets the foreground color of this data point.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.BorderBrush">
            <summary>
            Gets or sets the border color of this data point.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.ValueX">
            <summary>
            Gets or sets the x value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.ValueY">
            <summary>
            Gets or sets the y value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.High">
            <summary>
            Gets or sets the high value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Low">
            <summary>
            Gets or sets the low value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Open">
            <summary>
            Gets or sets the open value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Close">
            <summary>
            Gets or sets the close value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Median">
            <summary>
            Gets or sets the median value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.UpperLine">
            <summary>
            Gets or sets the y value of the indicator segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.LowerLine">
            <summary>
            Gets or sets the y value of the indicator segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.SignalLine">
            <summary>
            Gets or sets the y value of the signal line in the indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.BaseX">
            <summary>
            Gets or sets the x initial coordinate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.BaseY">
            <summary>
            Gets or sets the y initial coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.X">
            <summary>
            Gets or sets the x coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Y">
            <summary>
            Gets or sets the y coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.PolygonPoints">
            <summary>
            Gets or sets the point collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRowDefinition">
            <summary>
            Represents a row definition.
            </summary>
            <remarks>
            The height of the row can be defined either in terms of fixed pixels units mode or auto adjust mode, by using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit"/> property.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.HeightProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Height"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.UnitProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThicknessProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStrokeProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStroke"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.#ctor">
            <summary>
            Called when instance created for ChartRowdefinitions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Clone">
            <summary>
            Clone the Row
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.RowTop">
            <summary>
            Gets or sets RowTap property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Height">
            <summary>
            Gets or sets height of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit">
            <summary>
            Gets or sets unit of the value to be specified for row height.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.ChartUnitType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThickness">
            <summary>
            Gets or sets the thickness of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStroke">
            <summary>
            Gets or sets the brush for the border of the row.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartStripLine">
            <summary>
            Chart enables the user to highlight a specific region of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> by adding strip lines to it.
            </summary>
            <remarks>
            The strip lines length and width can be customized,a text label can be specified and also the look and feel can be customized too.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderBrushProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderThicknessProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.StartProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Start"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentStartValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentStartValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentEndValueProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentEndValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentAxisNameProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentAxisName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmentedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmented"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatEveryProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatEvery"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatUntilProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatUntil"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Label"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.WidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Width"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelAngleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsPixelWidthProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsPixelWidth"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelHorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelVerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelVerticalAlignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartStripLine.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartStripLine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartStripLine.Clone">
            <summary>
            Clone the strip line
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartStripLine.OnStartPropertChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when StartX property changes
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartStripLine.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Start">
            <summary>
            Gets or sets the start range for the Stripline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Background">
            <summary>
            Gets or sets the fill color for this Stripline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderBrush">
            <summary>
            Gets or sets the border brush of the Stripline.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentStartValue">
            <summary>
            Gets or sets the start value for the Stripline, when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmented"/> is set as <c>true</c>..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentEndValue">
            <summary>
            Gets or sets the end value for the Stripline, when <see cref="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmented"/> is set as <c>true</c>..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentAxisName">
            <summary>
             Gets or sets the name of the axis associated with the segmented Stripline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmented">
            <summary>
            Gets or sets a value indicating whether to enable the segmented stripline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatEvery">
            <summary>
            Gets or sets the stripline interval.
            </summary>
            <remarks>
            This property used to draw multiple striplines repeatedly.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatUntil">
            <summary>
            Gets or sets the end value, till that striplines will be drawn.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Label">
            <summary>
            Gets or sets the label to be displayed inside the Stripline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelTemplate">
            <summary>
            Gets or sets the custom template for the Stripline label.
            </summary>
            <value>
            <see cref="T:System.Windows.DataTemplate"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Width">
            <summary>
            Gets or sets the width of the Stripline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelAngle">
            <summary>
            Gets or sets rotation angle for the Stripline angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsPixelWidth">
            <summary>
            Gets or sets a value indicating whether the value specified in Width property should be measured in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelHorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of stripline label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelVerticalAlignment">
            <summary>
            Gets or sets vertical alignment of the Stripline label.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSegment">
            <summary>
            Represents chart area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Object)">
            <summary>
            Called when instance created for AreaSegments
            </summary>
            <param name="xValues">Used to specify the segment x-values</param>
            <param name="yValues">Used to specify the segment y-values</param>
            <param name="series">Used to specify the corresponding series</param>
            <param name="item">Used to specify the corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Called when instance created for AreaSegments 
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="XValues"></param>
            <param name="YValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.AddStroke(System.Windows.Point)">
            <summary>
            Called to add the stroke for area series.
            </summary>
            <param name="startPoint"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSegment.XData">
            <summary>
            Gets or sets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSegment.YData">
            <summary>
            Gets or sets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BubbleSegment">
            <summary>
            Represents chart bubble segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.BubbleSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.BubbleSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.BubbleSegment"/>.
            </summary>
            <param name="xPos"></param>
            <param name="yPos"></param>
            <param name="size"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Binding to visual elements. 
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.Size">
            <summary>
            Gets or sets the size of the bubble segment.
            </summary>
            <remarks>
            It will not render the segment as in given size, its based on the other segments(as proportionate).
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.SegmentRadius">
            <summary>
            Gets or sets the segment radius in units of pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.RectX">
            <summary>
            Gets or sets the x position of the segment rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.RectY">
            <summary>
            Gets or sets the y position of the segment rect.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CandleSegment">
            <summary>
            Represents chart candle segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,Syncfusion.UI.Xaml.Charts.CandleSeries,System.Object)">
            <summary>
            Called when Instance created for CandleSegment
            </summary>
            <param name="cdpBottomLeft"></param>
            <param name="cdpRightTop"></param>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="isbull"></param>
            <param name="series"></param>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="BottomLeft"></param>
            <param name="RightTop"></param>
            <param name="hipoint"></param>
            <param name="loPoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to CandleSegment properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.ActualInterior">
            <summary>
            Gets the actual color used to paint the interior of the segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.BearFillColor">
            <summary>
            Gets or sets the interior of the segment represents bear value.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.BullFillColor">
            <summary>
            Gets or sets the interior of the segment represents bull value.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.High">
            <summary>
            Gets or sets the high value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.Low">
            <summary>
            Gets or sets the low value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.Open">
            <summary>
            Gets or sets the open value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.Close">
            <summary>
            Gets or sets the close value of this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornment">
            <summary>
            Represents chart adornment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.BackgroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderBrushProperty">
             <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderBrush"/> property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderThicknessProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderThickness"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.MarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Margin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamilyProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamily"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontSizeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.ForegroundProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorRotationAngleProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorRotationAngle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorHeightProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorHeight"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.GetTextContent">
            <summary>
            Updated the text for the adornment label TextBlock.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Series">
            <summary>
            Gets or sets series property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Background">
            <summary>
            Gets or sets the background brush to apply to the label content.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderThickness">
            <summary>
            Gets or sets the outer border thickness of the adornment label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderBrush">
            <summary>
            Gets or sets the brush that draws the outer border color. 
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Margin">
            <summary>
            Gets or sets the outer margin of a label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamily">
            <summary>
            Gets or sets the font family for the adornment label.
            </summary>
            <remarks>
            Identifies font family that should be used to display adornment's text.
            </remarks>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamily"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyle">
            <summary>
            Gets or sets the font style for the adornment.
            </summary>
            <value>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyle"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontSize">
            <summary>
            Gets or sets the font size for the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Foreground">
            <summary>
            Gets or sets the foreground brush to be applied for the label content.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorRotationAngle">
            <summary>
            Gets or sets the rotation angle for the connectors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorHeight">
            <summary>
            Gets or sets the height of the connector line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ActualContent">
            <summary>
            Gets the actual content displayed visually. Actual content is resolved based on <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContent"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.XData">
            <summary>
            Gets or sets the x-value to be bind in ChartAdornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.YData">
            <summary>
            Gets or sets the y-value to be bind in ChartAdornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.X">
            <summary>
            Gets or sets the x screen coordinate relative to series
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Y">
            <summary>
            Gets or sets the y screen coordinate relative to series
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ContrastForeground">
            <summary>
            Gets or sets contrast foreground or theme base foreground.
            XAMARIN-38561 foreground not updated while using datamarker created event. provide majority for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Foreground"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Foreground"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornment3D">
            <summary>
            Represents a ChartAdornment that used to render 3D element in chart.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="startDepth"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPieAdornment">
            <summary>
            Represents chart adornment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for ChartPieAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Angle">
            <summary>
            Gets or sets Angle property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Radius">
            <summary>
            Gets or sets Radius property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularAdornment">
            <summary>
            Class implementation for triangularAdornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for TriangularAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="currY"></param>
            <param name="height"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D">
            <summary>
            Represents a ChartAdornment that used to render visual in 3D chart.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornment3D"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeries3D)">
            <summary>
            Called when instance created for ChartPieAdornment
            </summary>
            <param name="startDepth"></param>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Angle">
            <summary>
            Gets or sets Angle property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Radius">
            <summary>
            Gets or sets Radius property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointSegment">
            <summary>
            Represents chart empty point segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints"/>   
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSegment">
            <summary>
            Represents chart scatter segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment.EllipseSegment">
            <summary>
            EllipseSegment property declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ScatterSeries)">
            <summary>
            Called when instance created for Scattersegment
            </summary>
            <param name="xpos"></param>
            <param name="ypos"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.ScatterWidth">
            <summary>
            Gets or sets the width of the scatter segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.ScatterHeight">
            <summary>
            Gets or sets the height of the scatter segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.RectX">
            <summary>
            Gets or sets the X position of the segment rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.RectY">
            <summary>
            Gets or sets the Y position of the segment rect.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Called when instance created for EmptyPointSegment with following arguments
            </summary>
            <param name="xData"></param>
            <param name="yData"></param>
            <param name="series"></param>
            <param name="isEmptyPointInterior"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.EmptyPointSymbolHeight">
            <summary>
            Gets or sets empty point symbol height.
            </summary>    
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.EmptyPointSymbolWidth">
            <summary>
            Gets or sets empty point symbol width.
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.X">
            <summary>
            Gets or sets the x coordinate of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.Y">
            <summary>
            Gets or sets the y coordinate of this segment.
            </summary>       
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment">
            <summary>
            Represents a chart segment which renders collection of points using writeablebitmap.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>.
            </summary>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/> with following arguments.
            </summary>
            <param name="xVals">Used to specify the segment x values</param>
            <param name="yVals">Used to specify the segment y values</param>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>    
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.TransformToScreenCo">
            <summary>
            Transforms for non logarithmic axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineSegment">
            <summary>
            Represents a chart segment which renders collection of points using poly line.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSegment.xValues">
            <summary>
            Segment xvalues.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSegment.yValues">
            <summary>
            Segment yvalues.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineSegment"/>.
            </summary>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.FastLineSegment"/>.
            </summary>
            <param name="xVals">Specifies the xvalues.</param>
            <param name="yVals">Specifies the yvalues.</param>
            <param name="series">Specifies the instance of series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.TransformToScreenCo">
            <summary>
            Transforms for non logarithmic axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.RenderingMode">
            <summary>
            Gets or sets rendering mode for fastline segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.Points">
            <summary>
            Gets or sets collection of points to render.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.xChartVals">
            <summary>
            Gets or sets xChartVals property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.yChartVals">
            <summary>
            Gets or sets yChartVals property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment">
            <summary>
            Represents chart HiLoOpenClose segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries,System.Object)">
            <summary>
            Called when instance created for HiLoOpenCloseSegment
            </summary>
            <param name="hghpoint"></param>
            <param name="lowpoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isbull"></param>
            <param name="series"></param>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isbull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.ActualInterior">
            <summary>
            Gets the actual color used to paint the interior of the segment.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.BearFillColor">
            <summary>
            Gets or sets the interior of the segment represents bear value.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.BullFillColor">
            <summary>
            Gets or sets the interior of the segment represents bull value.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.High">
            <summary>
            Gets or sets the high value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.Low">
            <summary>
            Gets or sets the low value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.Open">
            <summary>
            Gets or sets the open value of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.Close">
            <summary>
            Gets or sets the close value of this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoSegment">
            <summary>
            Represents chart HiLo segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.HiLoSeries,System.Object)">
            <summary>
            Called when instance created for HiLoSegment
            </summary>
            <param name="xVal">Used to specify segment x-value</param>
            <param name="hghValue">Used to specify segment higher bounds</param>
            <param name="lwValue">Used to specify segment lower bounds</param>
            <param name="series">Used to specify corresponding series</param>
            <param name="item">Used to specify corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSegment.High">
            <summary>
            Gets or sets the high(top) value bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSegment.Low">
            <summary>
            Gets or sets the low(top) value bind with this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSegment.XValue">
            <summary>
            Gets or sets the x value of the segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramSegment">
            <summary>
            Represents chart Histogram segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HistogramSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.HistogramSeries)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment">
            <summary>
            Class implementation for HistogramDistributionSegment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.#ctor(System.Windows.Media.PointCollection,Syncfusion.UI.Xaml.Charts.HistogramSeries)">
            <summary>
            Called when instance created for HistogramDistributionSegment
            </summary>
            <param name="distributionPoints"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSegment">
            <summary>
            Represents chart line segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Object)">
            <summary>
            Called when instance created for LineSegment with following arguments
            </summary>
            <param name="x1">Used to specify segment x1</param>
            <param name="y1">Used to specify segment y1</param>
            <param name="x2">Used to specify segment x2</param>
            <param name="y2">Used to specify segment y2</param>
            <param name="lineSeries">Used to specify corresponding series</param>
            <param name="item">Used to specify corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.#ctor(System.Double,System.Double,System.Double,System.Double,System.Object)">
            <summary>
            Called when instance created for LineSegment 
            </summary>
            <param name="x1">Used to specify segment x1</param>
            <param name="y1">Used to specify segment y1</param>
            <param name="X2">Used to specify segment x2</param>
            <param name="Y2">Used to specify segment y2</param>
            <param name="item">Used to specify corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            The element to be bind. Method implementation for set bindings.
            </summary>
            <param name="element">The Element To Be Bind</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X1Value">
            <summary>
            Gets or sets the start point x value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y1Value">
            <summary>
            Gets or sets the start point y value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X2Value">
            <summary>
            Gets or sets the end point x value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y2Value">
            <summary>
            Gets or sets the end point y value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X1">
            <summary>
            Gets or sets the end point(y) of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X2">
            <summary>
            Gets or sets the end point(x) of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y1">
            <summary>
            Gets or sets the start point(y) of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y2">
            <summary>
            Gets or sets the end point(y) of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X1Data">
            <summary>
            Gets or sets the end data point x value, for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.XData">
            <summary>
            Gets or sets the start data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.YData">
            <summary>
            Gets or sets the start data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y1Data">
            <summary>
            Gets or sets the end data point y value, for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSegment">
            <summary>
            Represents chart pie segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment.IsExplodedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment.IsExploded"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment.ActualStartAngleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment.ActualStartAngle"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment.ActualEndAngleProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.PieSegment.ActualEndAngle"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.PieSeries,System.Object)">
            <summary>
            Called when instance created for PieSegment
            </summary>
            <param name="arcStartAngle">Used to specify segment start angle</param>
            <param name="arcEndAngle">Used to specify segment end angle</param>
            <param name="series">Used to specify corresponding series</param>
            <param name="item">Used to specify corresponding item model</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.#ctor(System.Double,System.Double,System.Boolean,Syncfusion.UI.Xaml.Charts.PieSeries,System.Object)">
            <summary>
            Called when instance created for PieSegment with four arguments
            </summary>
            <param name="arcStartAngle">Used to specify segment start angle</param>
            <param name="arcEndAngle">Used to specify segment end angle</param>
            <param name="series">Used to specify corresponding series</param>
            <param name="item">Used to specify corresponding item model</param>
            <param name="isEmptyInterior">Used to indicate whether the segment having interior for empty value or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.IsPointInPieSegment(System.Double,System.Double)">
            <summary>
            Method used to check the given co-ordinates lies in pie segment or not
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.IsExploded">
            <summary>
            Gets or sets a value indicating whether this segment can be exploded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.StartAngle">
            <summary>
            Gets the start angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.ActualStartAngle">
            <summary>
            Gets or sets the start angle of this pie slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.ActualEndAngle">
            <summary>
            Gets or sets the end angle of this pie slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.EndAngle">
            <summary>
            Gets the end angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.AngleOfSlice">
            <summary>
            Gets the actual angle the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/> slice.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.XData">
            <summary>
            Gets the data point value, bind with x for this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.YData">
            <summary>
            Gets the data point value, bind with y for this segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment">
            <summary>
            Represents chart SplineArea segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.SplineAreaSeries)">
            <summary>
            Constructor for <c>SplineAreaSegment</c>.
            </summary>
            <param name="Points"></param>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.#ctor(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.SplineAreaSeries)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method implementation for SetData
            </summary>
            <param name="points"></param>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.SetData(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.ChartPoint},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not intended to be called explicitly outside the Chart but it can be overriden by any derived class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set Binding to ChartSegments properties.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.AddStroke(System.Windows.Point)">
            <summary>
            Called to add the stroke for spline area series.
            </summary>
            <param name="startPoint"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment">
            <summary>
            Represents a chart segment which renders collection of points using area shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},Syncfusion.UI.Xaml.Charts.StackingAreaSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment"/>.
            </summary>
            <param name="xValues">Used to specify the segment xvalues</param>
            <param name="yValues">Used to specify the segment yvalues</param>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment"/>.
            </summary>
            <param name="xValues">Used to specify the segment xvalues</param>
            <param name="yValues">Used to specify the segment yvalues</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.CreateVisual(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.GetRenderedVisual">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="xValues">Used to specify the segment x values.</param>
            <param name="yValues">Used to specify the segment y values.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.OnSizeChanged(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.AddStroke(System.Windows.Point)">
            <summary>
            Called to add the stroke for stacking area series.
            </summary>
            <param name="startPoint"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.XData">
            <summary>
            Gets or sets the data point value, which is used to bind with x value for this segment.
            </summary>
            <value>A data point value, which is used to bind with x value of the segment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.YData">
            <summary>
            Gets or sets the data point value, which is used to bind with y value for this segment.
            </summary>
            <value>A data point value, which is used to bind with y value of the segment.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment">
            <summary>
            Represents a chart segment which renders collection of points using column shape.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.StackingColumnSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment"/>.
            </summary>
            <param name="x1">Used to specify the segment x1 value.</param>
            <param name="y1">Used to specify the segment y1 value.</param>
            <param name="x2">Used to specify the segment x2 value.</param>
            <param name="y2">Used to specify the segment y2 value.</param>
            <param name="series">Used to specify the <see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer">
            <summary>
            Represents the panel which contains all the ChartAdornment elements.
            </summary>
            <remarks>
            The elements inside the panel comprises of adornment labels, marker symbols and connector lines to connect the labels.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelVerticalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelVerticalAlignment"/> property.  
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelHorizontalAlignmentProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelHorizontalAlignment"/> property.  
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SymbolProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.Symbol"/> property.  
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.m_symbolPresenter">
            <summary>
            Initializes m_symbolPresenter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.#ctor(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer"/> class.
            </summary>
            <param name="adornment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.UpdateContainers(System.Boolean)">
            <summary>
            Updates the adornment containers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.OnAdornmentsInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the adornment symbol on <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/> changed.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SetContentBinding(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Sets the binding between the adornment symbol and <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/>
            </summary>
            <param name="adornment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.CreateAdormentBinding(System.String,System.Object)">
            <summary>
            Helper method to create the binding between symbol and <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/>.
            </summary>
            <param name="path">The Binding Path</param>
            <param name="source">The Binding Source</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SetSymbol(System.String)">
            <summary>
            Updates the symbol.
            </summary>
            <param name="symbol">The Symbol String</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelVerticalAlignment">
            <summary>
            Gets or sets the label vertical alignment.
            </summary>
            <value>The label vertical alignment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelHorizontalAlignment">
            <summary>
            Gets or sets the label horizontal alignment.
            </summary>
            <value>The label horizontal alignment.</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.Symbol">
            <summary>
            Gets or sets the chart symbol
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SymbolOffset">
            <summary>
            Gets the symbol offset.
            </summary>
            <value>The symbol offset.</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.Adornment">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.PredefinedSymbol">
            <summary>
            Gets or sets the pre-defined adornment symbol.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SymbolControl">
            <summary>
            A control that represents symbol in chart adornments
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SymbolControl.StrokeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SymbolControl.Stroke"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SymbolControl.Stroke">
            <summary>
            Gets or sets the stroke
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.VisibleSeriesProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.VisibleSeries"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.SeriesProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.Series"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.UpdateAdornmentSelection(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Method is used to highlight the adornment.
            </summary>
            <param name="selectedAdornmentIndexes">The Adornment Index</param>
            <param name="isDataPointSelection">Used to indicate whether the corresponding data point selected or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.ResetAdornmentSelection(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method is used to reset the adornment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.Update(System.Windows.Size)">
            <summary>
            Updates the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter"/>.
            </summary>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.Arrange(System.Windows.Size)">
            <summary>
            Arranges the adornment elements.
            </summary>
            <param name="finalSize">The Final Size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.OnVisibleSeriesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the visibility of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter"/>.
            </summary>
            <param name="d">The Dependency Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.VisibleSeries">
            <summary>
            Gets or sets the VisibleSeries. This is a dependency property.
            </summary>
            <value>The VisibleSeries.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.Series">
            <summary>
            Gets or sets the Series collection in Chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.AxisLayout">
            <summary>
            Gets or sets AxisLayout property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel">
            <summary>
            Represents ChartCartesianAxisElementsPanel.
            </summary>
            <remarks>
            The elements inside the panel comprises of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> axis line, major ticklines and minor ticklines.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel"/> class.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the size available for arranging the elements.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize">The Final Size</param>
            <returns>Returns the arranged size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.UpdateTicks">
            <summary>
            Updates the tick lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.SetAxisLineBinding">
            <summary>
            Binds the axis line style with the <see cref="T:System.Windows.Shapes.Line"/> <see cref="T:System.Windows.Shapes.Shape"/> .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.UpdateTicks(System.Int32,Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.String)">
            <summary>
            Updates the tick lines.
            </summary>
            <param name="linescount">The Tick Lines Count</param>
            <param name="lineRecycler">The Tick Lines Recycler</param>
            <param name="lineStylePath">The Tick Lines Style</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.RenderAxisLine(System.Windows.Size)">
            <summary>
            Renders the axis line.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.RenderTicks(System.Windows.Size,Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.Windows.Controls.Orientation,System.Double,Syncfusion.UI.Xaml.Charts.AxisElementPosition,System.Double[])">
            <summary>
            Renders the tick lines.
            </summary>
            <param name="finalSize">The Final Size</param>
            <param name="linesRecycler">The Line Recycler</param>
            <param name="orientation">The Orientation</param>
            <param name="tickSize">The Tick Size</param>
            <param name="tickPosition">The Tick Postion</param>
            <param name="Values">The Values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.CalculatePosition(Syncfusion.UI.Xaml.Charts.AxisElementPosition,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Calcuates the tick position.
            </summary>
            <param name="ticksPosition">The Tick Position</param>
            <param name="tickSize">The Tick Size</param>
            <param name="x1">The x 1 value</param>
            <param name="y1">The y 1 value</param>
            <param name="x2">The x 2 value</param>
            <param name="y2">The y 2 value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.RenderTicks3D(Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.Windows.Controls.Orientation,System.Double,Syncfusion.UI.Xaml.Charts.AxisElementPosition,System.Collections.Generic.IList{System.Double})">
            <summary>
            Renders the 3D tick lines.
            </summary>
            <param name="linesRecycler">The Line Recycler</param>
            <param name="orientation">The Orientation</param>
            <param name="tickSize">The Tick Size</param>
            <param name="tickPosition">The Tick Position</param>
            <param name="values">The Values</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.CalculatePosition3D(Syncfusion.UI.Xaml.Charts.AxisElementPosition,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double)">
            <summary>
            Calculates the 3D position for the ticklines.
            </summary>
            <param name="ticksPosition">The Tick Position</param>
            <param name="tickSize">The Tick Size</param>
            <param name="x1">The X 1 Value</param>
            <param name="y1">The Y 1 Value</param>
            <param name="x2">The X 2 Value</param>
            <param name="y2">The Y 2 Value</param>
            <param name="actualRotationAngle">The Actual Rotation Angle</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.DesiredSize">
            <summary>
            Gets the desired size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.MainAxisLine">
            <summary>
            Gets or sets the main axis line.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel">
            <summary>
            Represents layout panel for chart axis labels.
            </summary>
            <remarks>
            The elements inside the panel comprises of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> labels.You can customize the label elements appearance using  
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>.
            </summary>
            <param name="panel">The Panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Axis">
            <summary>
            Gets or sets the chart axis of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.children">
            <summary>
            Gets or sets the direct children of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.LabelLayout">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.AxisLabelLayout"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisLabelLayout">
            <summary>
            Represents a base of chart axis label layout. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.BorderPadding">
            <summary>
            Specifies padding for label border.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.AngleForAutoRotate">
            <summary>
            Specifies auto rotation angle for label.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Margin">
            <summary>
            Specifies label margin.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.#ctor(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/> class.
            </summary>
            <param name="axis">The Axis</param>
            <param name="elements">The Elements</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.CreateAxisLayout(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Method used to create the axis layout.
            </summary>
            <param name="chartAxis">The Chart Axis</param>
            <param name="elements">The Elements</param>
            <returns>Returns the created layout.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the size required for arranging the elements.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.CheckCartesianSeries">
            <summary>
            Checks for the side by side series.
            </summary>
            <returns>Returns true when any of registered series is side by side series</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.CheckLabelPlacement(System.Boolean)">
            <summary>
            Checks the label placement
            </summary>
            <param name="isSidebySideSeries">Is Side By Side</param>
            <returns>Returns true when the label placement is between ticks</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.IntersectsWith(System.Windows.Rect,System.Windows.Rect,System.Int32,System.Int32)">
            <summary>
            Checks for the intersection of the rectangles.
            </summary>
            <param name="r1">The First Rectangle</param>
            <param name="r2">The Second Rectangle</param>
            <param name="prevIndex">The Previous Index</param>
            <param name="currentIndex">The Current Index</param>
            <returns>Returns a value indicating whether the rectanges are intersected.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.InsertToRowOrColumn(System.Int32,System.Int32,System.Windows.Rect)">
            <summary>
            Insert the <see cref="T:System.Windows.Rect"/> at the given row column index.
            </summary>
            <param name="rowOrColIndex">The Row Column Index</param>
            <param name="itemIndex">The Item Index</param>
            <param name="rect">The Rect</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.CalcBounds(System.Double)">
            <summary>
            Calulates the bounds
            </summary>
            <param name="size">The Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.IsOpposed(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Boolean)">
            <summary>
            Checks the actual opposed position of the labels.
            </summary>
            <param name="axis">The Axis</param>
            <param name="isAxisOpposed">The Axis Opposed Indication</param>
            <returns>Returns the actual opposed position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.LayoutElements">
            <summary>
            Layuouts the axis labels.
            </summary>
            <returns>Returns desired height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.CalculateActualPlotOffset(System.Windows.Size)">
            <summary>
            Calculates the actual plotoffset.
            </summary>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.DoLinesIntersect(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Checks whether two line segments are intersecting
            </summary>
            <param name="point11">The Point 11</param>
            <param name="point12">The Point 12</param>
            <param name="point21">The Point 21</param>
            <param name="point22">The Point 22</param>
            <returns>Returns a value indicating whether the lines are intersecting.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.GetRotatedSize(System.Double,System.Windows.Size)">
            <summary>
            Calculates the rotated size.
            </summary>
            <param name="angle">The Angle</param>
            <param name="size">The Size</param>
            <returns>Returns the rotated size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.GetRotatedPoints(System.Double,System.Windows.Rect,System.Double,System.Double)">
            <summary>
            Returns the points after translating the rect about (0,0) and then translating it by some x and y.
            </summary>
            <param name="angle">Angle to rotate</param>
            <param name="rect">Rect</param>
            <param name="translateX">Offset x to be translated after rotating</param>
            <param name="translateY">Offset y to be translated after rotating</param>
            <returns>Returns the rotated points.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.IntersectsWith(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Checks whether two polygons intersects.
            </summary>
            <param name="shape1Points">Polygon</param>
            <param name="shape2Points">Polygon</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.GetRotatedPoints(System.Windows.Rect,System.Int32,System.Double)">
            <summary>
            Returns the points after rotating a rectangle.
            </summary>
            <param name="rect">The Rectangle</param>
            <param name="index">The Index</param>
            <param name="angle">Used to indicate label rotation angle</param>
            <returns>Returns the rotated points.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.AxisLabelsVisibilityBinding">
            <summary>
            Binds the visiblilty of the axis labels with <see cref="T:System.Windows.Controls.TextBlock"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Left">
            <summary>
            Gets or sets the left of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Top">
            <summary>
            Gets or sets the top of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Borders">
            <summary>
            Gets or sets the borders of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.RectssByRowsAndCols">
            <summary>
            Gets or sets the rects of rows and columns of labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.ComputedSizes">
            <summary>
            Gets or sets the width and height of the element after rotating.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.DesiredSizes">
            <summary>
            Gets or sets the width and height of the element without rotating.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Axis">
            <summary>
            Gets or sets the axis of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.Children">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel"/> children.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout">
            <summary>
            Represents a axis layout in chart control that indicates the layout orientation as horizontal. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AxisLabelLayout"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.#ctor(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout"/> class.
            </summary>
            <param name="axis">The Axis</param>
            <param name="elements">The Elements</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Measures the labels in the <see cref="T:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout"/>.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the size required to arrange the elements</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Arranges the labels in the <see cref="T:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout"/>
            </summary>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.CalculateActualPlotOffset(System.Windows.Size)">
            <summary>
            Calculates the actual plot offset.
            </summary>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.LayoutElements">
            <summary>
            Layouts the elements
            </summary>
            <returns>Returns the desired height.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.CalcBounds(System.Double)">
            <summary>
            Calculates the bounds.
            </summary>
            <param name="availableWidth">The Available Width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.PositionLabelsBack(System.Boolean,Syncfusion.UI.Xaml.Charts.UIElementLeftShift@,Syncfusion.UI.Xaml.Charts.UIElementTopShift@,System.Double)">
            <summary>
            Positions the labels back.
            </summary>
            <param name="isOpposed">Is Oppoosed Indication</param>
            <param name="leftElementShift">The Left Element Shift.</param>
            <param name="topElementShift">The Top Element Shift</param>
            <param name="actualTiltAngle">The Actual Tilt Angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.PositionLabelsRight(Syncfusion.UI.Xaml.Charts.UIElementLeftShift@,Syncfusion.UI.Xaml.Charts.UIElementTopShift@,System.Double)">
            <summary>
            Positions the label right.
            </summary>
            <param name="leftElementShift">The Left Element Shift</param>
            <param name="topElementShift">The Top Element Shift</param>
            <param name="actualTiltAngle">The Actaul Tilt Angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.PositionLabelsLeft(Syncfusion.UI.Xaml.Charts.UIElementLeftShift@,Syncfusion.UI.Xaml.Charts.UIElementTopShift@,System.Double)">
            <summary>
            Positions the label left.
            </summary>
            <param name="leftElementShift">The Left Element Shift</param>
            <param name="topElementShift">The Top Element Shift</param>
            <param name="actualTiltAngle">The Actual Tilt Angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.PositionLabelsFront(System.Boolean,Syncfusion.UI.Xaml.Charts.UIElementLeftShift@,Syncfusion.UI.Xaml.Charts.UIElementTopShift@,System.Double)">
            <summary>
            Positions the label front.
            </summary>
            <param name="isOpposed">Is Opposed Indication</param>
            <param name="leftElementShift">The Left Element Shift </param>
            <param name="topElementShift">The Top Element Shift</param>
            <param name="actualTiltAngle">The Actual Tilt Angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.CalculatePoint(System.Double)">
            <summary>
            Calcuales the point.
            </summary>
            <param name="value">The Value</param>
            <returns>Returns the calculated point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.SetBorderPosition(System.Collections.Generic.Dictionary{System.Int32,System.Windows.Rect},System.Int32,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double)">
            <summary>
            To place the label border when the label placement is OnTicks
            </summary>
            <param name="dictionary">The Dictionary</param>
            <param name="row">The Row</param>
            <param name="axis">The Axis</param>
            <param name="tickSize">The Tick Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.SetBorderThickness(System.Collections.Generic.Dictionary{System.Int32,System.Windows.Rect},Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            To set the label border thickness.
            </summary>
            <param name="dictionary">The Dictionary</param>
            <param name="axis">The Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.SetBorderTop(System.Int32,System.Double,System.Double)">
            <summary>
            To position the label border on its top value
            </summary>
            <param name="row">The Row</param>
            <param name="top">The Top</param>
            <param name="tickSize">The Tick Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.GetLeftandShift(Syncfusion.UI.Xaml.Charts.UIElementLeftShift@,Syncfusion.UI.Xaml.Charts.UIElementTopShift@,System.Boolean,System.Double,System.Double)">
            <summary>
            Shifts the labels according to the shifts.
            </summary>
            <param name="leftElementShift">The Left Element Shift</param>
            <param name="topElementShift">The Top Element Shift</param>
            <param name="isOpposed">The Opposed Check</param>
            <param name="actualRotationAngle">The Actual Rotation Angle</param>
            <param name="actualTiltAngle">The Actual Tilt Angle</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.#ctor(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Collections.Generic.List{System.Windows.UIElement})">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout"/>.
            </summary>
            <param name="axis">Used to indicates corresponding axis.</param>
            <param name="elements">Uesd to indicates elements to be layout.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the desired height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange.
            </summary>
            <param name="finalSize">The Final Size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.LayoutElements">
            <summary>
            Returns desired width
            </summary>
            <returns>Returns the total width of the rows and columns collection</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.CalcBounds(System.Double)">
            <summary>
            Calculates the bounds.
            </summary>
            <param name="availableHeight">The Available Height</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.CalculateActualPlotOffset(System.Windows.Size)">
            <summary>
            Calculates the actual plot offset.
            </summary>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.SetBorderThickness(System.Collections.Generic.Dictionary{System.Int32,System.Windows.Rect},Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            To set the border thicknesss for axis label border
            </summary>
            <param name="dictionary">The Dictionary</param>
            <param name="axis">The Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.CalculatePoint(System.Double)">
            <summary>
            Calculates the corresponding screen co-ordinate value.
            </summary>
            <param name="value">The Value</param>
            <returns>Returns corresponding screen co-ordinate value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.SetBorderPosition(System.Collections.Generic.Dictionary{System.Int32,System.Windows.Rect},System.Int32,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double)">
            <summary>
            To place the label when the LabelPlacement property is OnTicks
            </summary>
            <param name="dictionary">The Dictionary</param>
            <param name="row">The Row</param>
            <param name="axis">The Axis</param>
            <param name="tickSize">The Tick Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.SetBorderLeft(System.Int32,System.Double,System.Double)">
            <summary>
            To position the border on its left value
            </summary>
            <param name="row">The Row</param>
            <param name="left">The Left</param>
            <param name="tickSize">The Tick Size</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel">
            <summary>
            Represents ChartCartesianAxisLayoutPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel"/> class.
            </summary>
            <param name="panel">The Panel</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>Returns the desired size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.DetachElements">
            <summary>
            Seek the elements from the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Arrange(System.Windows.Size)">
            <summary>
            Layouts the axis.
            </summary>
            <param name="finalSize">The final size used to arrange axes.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.UpdateElements">
            <summary>
            Adds the elements inside the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.UpdateLegendsArrangeRect">
            <summary>
            Updates the legend arrange rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.IsDeclaredSeriesManhattan(Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection,Syncfusion.UI.Xaml.Charts.ChartAxisBase3D)">
            <summary>
            Check whether the declared series is manhattan.
            </summary>
            <param name="visibleSeries">The Visible Series</param>
            <param name="axis3D">The 3D Axis</param>
            <returns>Returns a value indicating whether the declared series is manhattan.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.PreventAxisAddition(Syncfusion.UI.Xaml.Charts.ChartAxisBase3D)">
            <summary>
            Prevents the axis addition.
            </summary>
            <param name="axis3D">The 3D Axis</param>
            <returns>Returns a value indicating wehter axis to be added in the axis collection.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.AxisSpanCalculation">
            <summary>
            Spanning Calculation for each axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.MeasureAxis(System.Windows.Size,System.Windows.Rect)">
            <summary>
            Measures the axis and it's elements
            </summary>
            <param name="availableSize">The Available Size</param>
            <param name="seriesClipRect">The Series Clip Rectangle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.CalcRowSize(System.Windows.Rect)">
            <summary>
            Calculates the row size.
            </summary>
            <param name="rect">The Rectangle.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.CalcColumnSize(System.Windows.Rect)">
            <summary>
            Calculates the column size.
            </summary>
            <param name="rect">The Rectangle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.UpdateArrangeRect(System.Windows.Size)">
            <summary>
            Arranges the elements in the panel.
            </summary>
            <param name="availableSize">Final size of the panel.</param>
            <returns>Returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.ArrangeAxes">
            <summary>
            Arranges the axes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Area">
            <summary>
            Gets or sets the chart area where the panel is bounded.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Left">
            <summary>
            Gets or sets the left value for <see cref="T:Syncfusion.UI.Xaml.Charts.ILayoutCalculator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Top">
            <summary>
            Gets or sets the right value for <see cref="T:Syncfusion.UI.Xaml.Charts.ILayoutCalculator"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/> class.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.ComputeSize(System.Windows.Size)">
            <summary>
            Computes the size of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/>.
            </summary>
            <param name="availableSize">The Available Size</param>
            <returns>Returns the computed size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.ArrangeElements(System.Windows.Size)">
            <summary>
            Arranges the elements of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/>
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.ArrangeCartesianElements(System.Windows.Size)">
            <summary>
            Arranges the cartesian elements.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.SetLabelsPanelBounds(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.ILayoutCalculator)">
            <summary>
            Sets the labels panel bounds.
            </summary>
            <param name="element"></param>
            <param name="labelsPanel"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.Axis">
            <summary>
            Gets or sets the chart axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.LayoutCalc">
            <summary>
            Gets or sets the calculated layout.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D"/> class.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.ComputeSize(System.Windows.Size)">
            <summary>
            Computes the size of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/>.
            </summary>
            <param name="availableSize">The Availabel Size</param>
            <returns>Returns the computed size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.ArrangeElements(System.Windows.Size)">
            <summary>
            Arranges the elements of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel"/>
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.ArrangeCartesianElements(System.Windows.Size)">
            <summary>
            Arranges the cartesian elements.
            </summary>
            <param name="finalSize">The Final Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.GetHeaderVectoColl(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Calculates the header vector collection.
            </summary>
            <param name="left">The Left Position</param>
            <param name="top">The Top position</param>
            <param name="depth">The Depth Position</param>
            <param name="isFront">IsFront Check</param>
            <returns>Returns the header vector collection</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.HeaderContent">
            <summary>
            Gets or sets the header content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.LayoutCalc">
            <summary>
            Gets or sets the calculated layout.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel"/> class.
            </summary>
            <param name="panel">The Panel</param>
            <exception cref="T:System.ArgumentNullException"><see cref="T:System.ArgumentNullException"/> may be thrown</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Draws the Gridlines at definite intervals in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
            </summary>
            <param name="axis">Relevant ChartAxis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines3D(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Draws the Gridlines at definite intervals in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
            </summary>
            <param name="axis">Relevant ChartAxis</param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel.
            </summary>
            <param name="availableSize">Available size of the panel.</param>
            <returns>Returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Arrange(System.Windows.Size)">
            <summary>
            Arrranges the elements inside a panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>Returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Arrange3D(System.Windows.Size)">
            <summary>
            Arrranges the elements inside a panel.
            </summary>
            <param name="finalSize">Final size of the panel.</param>
            <returns>Returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateElements">
            <summary>
            Adds the elements in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateGridLines(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds the Gridlines for the axis.
            </summary>
            <param name="axis">The Axis</param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateStripLines">
            <summary>
            Updates the strip lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateGridlines(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Updates the gridlines.
            </summary>
            <param name="axis">The Relevant Axis</param>
            <param name="linesRecycler">The Line Recycler</param>
            <param name="requiredLinescount">The Required Lines Count</param>
            <param name="isMajor">Check For Marjor Axis</param>
            <param name="checkOrginFlag">Check For Origin Flag</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.CreateBinding(System.String,System.Object)">
            <summary>
            Creates the binding provider with the specifed path and source.
            </summary>
            <param name="path">The Path</param>
            <param name="source">The Source</param>
            <returns>Returns the binding provider.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.Double,System.Double,System.Double,System.Double,System.Double[],System.Boolean,System.Int32)">
            <summary>
            Draws the gridlines with the specified values.
            </summary>
            <param name="axis">The Axis</param>
            <param name="lines">The Lines</param>
            <param name="left">The Left</param>
            <param name="top">The Top</param>
            <param name="width">The Width</param>
            <param name="height">The Height</param>
            <param name="values">The Values</param>
            <param name="drawOrigin">Check For Draw Origin</param>
            <param name="index">The Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines3D(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.UIElementsRecycler{System.Windows.Shapes.Line},System.Double,System.Double,System.Double,System.Double,System.Double[],System.Int32)">
            <summary>
            Draws the gridlines with the specified values.
            </summary>
            <param name="axis">The Axis</param>
            <param name="lines">The Lines</param>
            <param name="left">The Left</param>
            <param name="top">The Top</param>
            <param name="width">The Width</param>
            <param name="height">The Height</param>
            <param name="values">The Values</param>
            <param name="index">The Index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.RenderStripLine(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartStripLine,System.Int32)">
            <summary>
            Renders the stripline.
            </summary>
            <param name="stripRect">The Strip <see cref="T:System.Windows.Rect"/></param>
            <param name="stripLine">The Strip Line</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateHorizontalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Int32@)">
            <summary>
            Updates the horizontal stripline.
            </summary>
            <param name="axis">The Relevant Axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateVerticalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Int32@)">
            <summary>
            Updates the vertical stripline.
            </summary>
            <param name="axis">The Axis</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Area">
            <summary>
            Gets or sets the chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel"/> class.
            </summary>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel"/> class.
            </summary>
            <param name="panel">The Required Panel</param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.RenderElements">
            <summary>
            Method implementation for Render labels and Ticks
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in a panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns Size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements in a panel.
            </summary>
            <param name="finalSize">final Size of the panel.</param>
            <returns>returns Size.</returns>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.UpdateElements">
            <summary>
            Adds the elements in a panel.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.UpdateLabels">
            <summary>
            Updates the labels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.UpdateTickLines">
            <summary>
            Updates the tick lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.RenderTicks">
            <summary>
            Renders the tick lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.RenderLabels">
            <summary>
            Renders the labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Center">
            <summary>
            Gets or sets the center point of the panel.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Radius">
            <summary>
            Gets or sets the radius of the circular panel.
            </summary>     
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Axis">
            <summary>
            Gets or sets the axis of the panel.
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Children">
            <summary>
            Gets the Children count of the panel.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDock">
            <summary>
            Represents the position of a child element in the chart.
            </summary>  
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Left">
            <summary>
            Docks element at the left side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Top">
            <summary>
            Docks element at the top side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Right">
            <summary>
            Docks element at the right side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Bottom">
            <summary>
            Docks element at the bottom side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Floating">
            <summary>
            Docks element at any position on  panel
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDockPanel">
            <summary>
            Arranges child elements around the edges of the panel. Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.LastChildFillProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.LastChildFill"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.DockProperty">
            <summary>
             The DependencyProperty for Dock property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.HostProperty">
            <summary>
             The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.Host"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ElementMarginProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ElementMargin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.RootElementProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.RootElement"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_rootElement">
            <summary>
            Initializes m_rootElement
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_controlsThickness">
            <summary>
            Initializes m_controlsThickness
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_resultDockRect">
            <summary>
            Initializes m_resultDockRect
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets an element's dock position in the Chart area.
            </summary>
            <param name="element">any UIElement</param>
            <returns>returns dock position of UIElement.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.SetDock(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.ChartDock)">
             <summary>
            Sets an element's dock position in the Chart area.
             </summary>
             <param name="element"></param>
             <param name="dock"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"/> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its ChartDock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnRootElementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when root element is changed.
            </summary>
            <param name="dpObj">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.EnsureRectIsInside(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Ensures the rectangle is inside specified bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="rect">The rectangle.</param>
            <returns>Returns the Rectangle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.parentgrid_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Invalidates the layout when parent grid size changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ArrangeElement(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.ChartDock,System.Windows.Rect)">
            <summary>
            Arranges the elements inside the passing element.
            </summary>
            <param name="element">The Element</param>
            <param name="dock">The Dock Position</param>
            <param name="rect">The Reference Size <see cref="T:System.Windows.Rect"/></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether to enable the lastChildFillProperty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.RootElement">
            <summary>
            Gets or sets the root element. This is a dependency property.
            </summary>
            <value>The root element.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ElementMargin">
            <summary>
            Gets or sets the element margin. This is a dependency property.
            </summary>
            <value>The element margin.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.Host">
            <summary>
            Gets or sets the sync chart area.
            </summary>
            <value>The sync chart area.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel"/> class.
            </summary>
            <param name="panel">The Required Panel</param>
            <exception cref="T:System.ArgumentNullException"><see cref="T:System.ArgumentNullException"/> may be thrown</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel
            </summary>
            <param name="availableSize">Available Size of the panel</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.DetachElements">
            <summary>
            Seek the elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements in a panel
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.CalculateSeriesRect(System.Windows.Size)">
            <summary>
            Calculates the series rectangle.
            </summary>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.CalculateCartesianArrangeRect(System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            To calculate the cartesian arrange rect based on StartAngle property 
            </summary>
            <param name="center">The Center Point</param>
            <param name="axis">The Axis</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Area">
            <summary>
            Gets or sets the Chart area of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.PolarAxis">
            <summary>
            Gets or sets the polar axis of the Chart area.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.CartesianAxis">
            <summary>
            Gets or sets the Cartesian axis of the Chart area.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Radius">
            <summary>
            Gets or sets the radius of the panel
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.DesiredSize">
            <summary>
            Gets the desired sze of a panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel">
            <summary>
            Represents ChartPolarGridLinesPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel"/> class.
            </summary>
            <param name="panel">The Required Panel</param>
            <exception cref="T:System.ArgumentNullException"><see cref="T:System.ArgumentNullException"/> may be thrown</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements of a panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns Size.</returns>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements of a panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.DetachElements">
            <summary>
            Seek the elements from the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdateElements">
            <summary>
            Adds the elements to the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderCircles">
            <summary>
            Renders the circles.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdateStripLines">
            <summary>
            Updates the striplines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.CreateBinding(System.String,System.Object)">
            <summary>
            Creates the binding provider with the provided path and source.
            </summary>
            <param name="path">The path for binding</param>
            <param name="source">The source for binding</param>
            <returns>Returns the required binding provider.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderEllipse(System.Windows.Point,System.Double,System.Double,System.Windows.Media.GeometryGroup@)">
            <summary>
            Renders the ellipse.
            </summary>
            <param name="center">The center point</param>
            <param name="start">The start value</param>
            <param name="end">The end value</param>
            <param name="group">The geometry group</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderSegmentedPath(System.Double,System.Double,System.Double,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Media.ArcSegment,System.Windows.Media.ArcSegment,System.Windows.Media.PathGeometry@)">
            <summary>
            Renders the segment path.
            </summary>
            <param name="start">The start value</param>
            <param name="end">The end value</param>
            <param name="angle">The angle</param>
            <param name="center">The Cneter point</param>
            <param name="vector1">The first vector point</param>
            <param name="vector2">The second vector point</param>
            <param name="innerArc">The inner arc</param>
            <param name="outerArc">the outer arc</param>
            <param name="pathGeometry">The path geometry</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.CalculateAngle(System.Windows.Point,System.Windows.Point,System.Double@)">
            <summary>
            Calculates the angle between two vectors.
            </summary>
            <param name="vector1">The first vector</param>
            <param name="vector2">The second vector</param>
            <param name="angle">The angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderArc(System.Double,System.Double,System.Windows.Point,System.Windows.Media.ArcSegment@,System.Windows.Media.SweepDirection)">
            <summary>
            Renders the arc
            </summary>
            <param name="radius">The radius</param>
            <param name="angle">The angle</param>
            <param name="point">The point</param>
            <param name="arc">The arc</param>
            <param name="direction">The direction</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderStripLine(System.Windows.Media.Geometry,Syncfusion.UI.Xaml.Charts.ChartStripLine)">
            <summary>
            Renders the striplines.
            </summary>
            <param name="data">The data</param>
            <param name="stripLine">The stripline</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdatePolarVerticalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds stripline for the secondary axis of polar series.
            </summary>
            <param name="axis">Vertically oriented axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdatePolarHorizontalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds stripline for the primary axis of polar series.
            </summary>
            <param name="axis">Horizontally oriented axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderPolarStripLines">
            <summary>
            Renders the polar strip lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderGridLines">
            <summary>
            Renders the grid lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.RenderRadarStripLines">
            <summary>
            Render radar striplines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdateRadarHorizontalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds stripline for the primary axis of radar series.
            </summary>
            <param name="axis">Horizontally oriented axis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdateRadarVerticalStripLine(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds stripline for the secondary axis of radar series.
            </summary>
            <param name="axis">Vertically oriented axis</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.IsRadar">
            <summary>
            Gets or sets a value indicating whether the Series is Radar/Polar Series type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Area">
            <summary>
            Gets or sets the chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.XAxis">
            <summary>
            Gets the x-axis of the chart.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.YAxis">
             <summary>
            Gets the y-axis of the chart.
             </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.DesiredSize">
            <summary>
            Gets the desired position of the panel.
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRootPanel">
            <summary>
            Represents the panel where all the child elements of Chart will be arranged.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRootPanel.MeasurePriorityIndexProperty">
            <summary>
            The DependencyProperty for MeasurePriorityIndex property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.GetMeasurePriorityIndex(System.Windows.DependencyObject)">
            <summary>
            Gets measure priority for this obj.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.SetMeasurePriorityIndex(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the measure priority for this obj.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize">The Available Size</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRootPanel.Area">
            <summary>
            Gets or sets the chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRootPanel.Surface">
            <summary>
            Gets or sets the surface chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel">
            <summary>
            Represents the panel where the series segments and adornments will be placed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.Update(System.Windows.Size)">
            <summary>
            Updates the panel.
            </summary>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.OnSegmentsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the chart on segment collection changed.
            </summary>
            <param name="sender">The Sender Object</param>
            <param name="e">The Collection Changed Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.AddItems">
            <summary>
            Adds the segment visuals to <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.Series">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel"/> series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator">
            <summary>
            Represents the AccumulationDistribution technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator">
            <summary>
            Base class for all the Financial technical indicators available in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> control.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.ShowTrackballInfoProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.ShowTrackballInfo"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YAxisProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YAxis"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.IsTransposedProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.IsTransposed"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CustomTemplateProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CustomTemplate"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.StrokeDashArrayProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.StrokeDashArray"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SeriesNameProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SeriesName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.HighProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.High"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.LowProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Low"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OpenProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Open"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CloseProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Close"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.VolumeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Volume"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of financial technical indicators.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when data source changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis property changed.
            </summary>
            <param name="oldAxis">Specifies the old axis value.</param>
            <param name="newAxis">Specifies the new axis value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis property changed.
            </summary>
            <param name="oldAxis">Specifies the old axis value.</param>
            <param name="newAxis">Specifies the new axis value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XRange">
            <summary>
            Gets the values of XRange.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YRange">
            <summary>
            Gets the values of YRange.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.ShowTrackballInfo">
            <summary>
            Gets or sets a value indicating whether to show/hide indicator value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XAxis">
            <summary>        
            Gets or sets the XAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YAxis">
            <summary>
            Gets or sets the associated YAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.IsTransposed">
            <summary>
            Gets or sets a value indicating whether to exchange the orientation of the series.
            </summary>
            <value>
                <c>True</c> exchanges the horizontal axis to vertical and vice versa. 
                <c>False</c> is the default behavior.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CustomTemplate">
            <summary>
            Gets or sets the custom template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the line.
            </summary>
            <value>
            <see cref="T:System.Windows.Media.DoubleCollection"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SeriesName">
            <summary>
            Gets or sets the name of the series to which this indicator is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.High">
            <summary>
            Gets or sets the property path to retrieve high value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Low">
            <summary>
            Gets or sets the property path to retrieve low value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Open">
            <summary>
            Gets or sets the property path to retrieve open value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Close">
            <summary>
            Gets or sets the property path to retrieve close value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Volume">
            <summary>
            Gets or sets the property path to retrieve volume data from ItemsSource.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
             Called when ItemsSource property changed. 
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SignalLineColor">
            <summary>
            Gets or sets the fill color for the Signal Line.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator">
            <summary>
            Represents the AverageTrueRange technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.Period">
            <summary>
            Gets or sets the moving average value for the indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SignalLineColor">
            <summary>
            Gets or sets the color for the signal Line.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator">
            <summary>
            Represents the BollingerBand technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpperLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpperLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.LowerLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.LowerLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource property changed.
            </summary>
            <param name="oldValue">Specifies the old value</param>
            <param name="newValue">Specifies the new value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.CreateSegments">
            <summary>
            Creates the segments of BollingerBandIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.Period">
            <summary>
            Gets or sets the moving average value for the indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpperLineColor">
            <summary>
            Gets or sets the value for upper line color of the <see cref="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator"/>.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.LowerLineColor">
            <summary>
            Gets or sets the value for lower line color of the <see cref="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator"/>.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SignalLineColor">
            <summary>
            Gets or sets the color for the signal Line.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator">
            <summary>
            Represents the ExponentialAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.CreateSegments">
            <summary>
            Creates the Segments of <see cref="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.Period">
            <summary>
            Gets or sets the moving average value for the indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SignalLineColor">
            <summary>
            Gets or sets the color for the signal line.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator">
            <summary>
            Represents the MACD technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.TypeProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.Type"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ShortPeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ShortPeriod"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.LongPeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.LongPeriod"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ConvergenceLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ConvergenceLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.DivergenceLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.DivergenceLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.HistogramColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.HistogramColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.AddMACDPoints">
            <summary>
            Method implementation for add MACD indicator values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.IsSideBySide">
            <summary>
            Gets a value indicating whether this series is placed side by side.
            </summary>
            <returns>
            It returns <c>true</c>, if the series is placed side by side [cluster mode].
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.Type">
            <summary>
            Gets or sets the type of MACD indicator.
            </summary>
            <value>
            <see cref="T:Syncfusion.UI.Xaml.Charts.MACDType"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ShortPeriod">
            <summary>
            Gets or sets the short time period(no of days) for calculating EMA.
            </summary>
            <remarks>
            By default, its value is 12 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.LongPeriod">
            <summary>
            Gets or sets the long time period(no of days) for calculating EMA.
            </summary>
            <remarks>
            By default, its value is 26 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.Period">
            <summary>
            Gets or sets the moving average period for MACD.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ConvergenceLineColor">
            <summary>
            Gets or sets the convergence line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.DivergenceLineColor">
            <summary>
            Gets or sets the divergence line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.HistogramColor">
            <summary>
            Gets or sets the histogram interior color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator">
            <summary>
            Represents the Momentum technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.MomentumLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.MomentumLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CenterLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CenterLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.Period">
            <summary>
            Gets or sets the momentum time span.
            </summary>
            <remarks>
            The default value is 14 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.MomentumLineColor">
            <summary>
            Gets or sets the momentum line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CenterLineColor">
            <summary>
            Gets or sets the center line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator">
            <summary>
            Represents the RelativeStrengthIndex technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpperLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpperLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.LowerLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.LowerLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">specifies the old value.</param>
            <param name="newValue">specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.Period">
            <summary>
            Gets or sets the moving average period for indicator.
            </summary>
            <remarks>
            The default value is 14 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpperLineColor">
            <summary>
            Gets or sets the upper line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.LowerLineColor">
            <summary>
            Gets or sets the lower line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator">
            <summary>
            Represents the SimpleAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.Period">
            <summary>
            Gets or sets the moving average period for indicator.
            </summary>
            <remarks>
            The default value is 14 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator">
            <summary>
            Represents the Stochastic technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.KPeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.KPeriod"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.DPeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.DPeriod"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.PeriodLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.PeriodLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpperLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpperLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.LowerLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.LowerLineColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.BasePoints(System.Int32,System.Collections.Generic.List{System.Double})">
            <summary>
            Calculates the percentage K value.
            </summary>
            <param name="period">Period value.</param>
            <param name="ypoints">Percentage K points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddPoints(System.Int32,System.Int32)">
            <summary>
            Adding points of Upper line and Lower line.
            </summary>
            <param name="period">Period value.</param>
            <param name="k_period">KPeriod value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddSignalPoints(System.Int32)">
            <summary>
            Calculates the Signal line points.
            </summary>
            <param name="d_period">DPeriod points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddPeriodPoints(System.Int32)">
            <summary>
            Calculates the Period line points.
            </summary>
            <param name="k_period">KPeriod value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.Period">
            <summary>
            Gets or sets the moving average period for indicator.
            </summary>
            <remarks>
            The default value is 14 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.KPeriod">
            <summary>
            Gets or sets the %K for the Stochastic indicator.
            </summary>
            <remarks>
            %K = (Current Close - Lowest Low)/(Highest High - Lowest Low) * 100
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.DPeriod">
            <summary>
            Gets or sets the %D for the Stochastic indicator.
            </summary>
            <remarks>
            %D = 3-day SMA of %K
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.PeriodLineColor">
            <summary>
            Gets or sets the period line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpperLineColor">
            <summary>
            Gets or sets the upper line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.LowerLineColor">
            <summary>
            Gets or sets the lower line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment">
            <summary>
            Represents the chart technical indicator segment.
            </summary>
            <remarks>Class instance is created automatically by Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Windows.Media.Brush,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>.
            </summary>
            <param name="xVals">Used to specify the x values</param>
            <param name="yVals">Used to specify the y values</param>
            <param name="stroke">Used to specify the stroke</param>
            <param name="series">Used to specify the series</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Windows.Media.Brush,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Int32)">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>.
            </summary>
            <param name="xVals">Used to specify the x values</param>
            <param name="yVals">Used to specify the y values</param>
            <param name="stroke">Used to specify the stroke</param>
            <param name="series">Used to specify the series</param>
            <param name="length">Used to specify the length</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals">Used to specify segment x-values.</param>
            <param name="yVals">Used to specify segment y-values.</param>
            <param name="strokeBrush">Used to specify brush for segment stroke.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush,System.Int32)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals">Used to specify the x values.</param>
            <param name="yVals">Used to specify the y values.</param>
            <param name="strokeBrush">Used to specify the stroke.</param>
            <param name="length">Used to specify the length.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.TransformToScreenCo(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis.
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis.
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator">
            <summary>
            Represents the TriangularAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.#ctor">
            <summary>
            Called when instance created for <see cref="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.PeriodProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.Period"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SignalLineColorProperty">
            <summary>
            The DependencyProperty for <see cref="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SignalLineColor"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when ItemsSource changed.
            </summary>
            <param name="oldValue">Specifies the old value.</param>
            <param name="newValue">Specifies the new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when binding path changed.
            </summary>
            <param name="args">Event args.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for set ItemsSource to TechnicalIndicator.
            </summary>
            <param name="series">TechnicalIndicator instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.CreateSegment">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.Period">
            <summary>
            Gets or sets the triangular average period.
            </summary>
            <remarks>
            The default value is 2 days.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color.
            </summary>
            <value>
            The <see cref="T:System.Windows.Media.Brush"/> value.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDataUtils">
            <summary>
            Contains utility methods to manipulate data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.GetObjectByPath(System.Object,System.String)">
            <summary>
             Gets the object by path.
             </summary>
             <param name="obj">The obj value.</param>
             <param name="path">The path value.</param>
             <returns>Returns the object</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.ConvertPathObjectToPositionValue(System.Object)">
            <summary>
            Converts to double.
            </summary>
            <param name="obj">The obj value.</param>
            <returns>The double value</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartDataUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.GetPositionalPathValue(System.Object,System.String)">
            <summary>
            Gets the double by path.
            </summary>
            <param name="obj">The obj value.</param>
            <param name="path">The path value.</param>
            <returns>The double value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.GetPropertyInfo(System.Object,System.String)">
            <summary>
            Gets the property from the specified object.
            </summary>
            <param name="obj">Object to retrieve a property.</param>
            <param name="path">Property name</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer">
            <summary>
            Custom comaprer to compare the chart points by x-value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer.diff">
            <summary>
            Initializes diff
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer.Compare(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares the specified p1 with the specified p2.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <returns>
            negative value if point1 &lt; point2
            <para>
            zero if point1 = point2.
            </para>
            <para>
            positive value if point1 &gt; point2
            </para>
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorModifier">
            <summary>
            ChartColorModifed To modify a given color.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModifier.GetDarkenedColor(System.Windows.Media.Brush,System.Double)">
            <summary>
            Gets the darkened color which was set.
            </summary>
            <param name="brush">The point1.</param>
            <param name="darkCoefficient">The point2.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils">
            <summary>
            Contains Chart extension methods.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.ToOADate(System.DateTime)">
            <summary>
            Converts the value of this instance to the equivalent OLE Automation date.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.FromOADate(System.Double)">
            <summary>
            Returns a DateTime equivalent to the specified OLE Automation Date.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.Sum(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Charts.DoubleRange})">
            <summary>
            Returns sum of DoubleRange
            </summary>
            <param name="ranges">Collection of DoubleRange</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.Max(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Charts.ChartSeriesBase},System.Func{Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.IsDraggable(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Get the bool value for current series is draggable or not
            </summary>
            <param name="chartSeries">Current Series</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.GetAxisArrangeRect(System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartAxis,System.Boolean@)">
            <summary>
            Gets the multiple area rectangle of the provided mouse point.
            Also returns a <see cref="T:System.Boolean"/> value indicating whether the point is inside rect. 
            This bool is used since the <see cref="T:System.Windows.Rect"/> is value type and the null conditions for the outcoming rect cannot be checked.
            </summary>
            <param name="mousePoint">The mouse point.</param>
            <param name="axis">The axis to be checked.</param>
            <param name="isPointInsideRect">The property indicates whether the point is inside the axis area rectangle.</param>
            <returns>Returns the point captured <see cref="T:System.Windows.Rect"/>.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPoint">
            <summary>
            Create and compare chart points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.#ctor(System.Double,System.Double)">
            <summary>
            Called when instance created for ChartPoint.
            </summary>
            <param name="x">Used to specify <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPoint.X"/> point value.</param>
            <param name="y">Used to specify <see cref="P:Syncfusion.UI.Xaml.Charts.ChartPoint.Y"/> point value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.GetHashCode">
            <summary>
             Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>true if obj and this instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.Equals(Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Indicates whether this instance and a specified points are equal.
            </summary>
            <param name="point">The point to compare with the current instance.</param>
            <returns>true if x and y of <paramref name="point"/> and current instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.op_Equality(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Indicates whether the both instance and a specified points are equal.
            </summary>
            <returns>true if <paramref name="point1"/> and <paramref name="point2"/> instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPoint.op_Inequality(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Indicates whether both the specified points are not equal.
            </summary>
            <returns>true if <paramref name="point1"/> and <paramref name="point2"/> are represent not the same value otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPoint.X">
            <summary>
            Gets or sets point X.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPoint.Y">
            <summary>
            Gets or sets point Y.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartMath">
            <summary>
            Contains static methods for performing certain mathematical calculations.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.ToDegree">
            <summary>
            Initializes ToDegree
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.ToRadial">
            <summary>
            Initializes ToRadial
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.Percent">
            <summary>
            Initializes Percent
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.DoublePI">
            <summary>
            Initializes DoublePI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.HalfPI">
            <summary>
            Initializes HalfPI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.OneAndHalfPI">
            <summary>
            Initializes OneAndHalfPI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.Epsilon">
            <summary>
            The epsilon
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.IntersectWith(System.Collections.Generic.IList{System.Windows.Rect},System.Windows.Rect)">
            <summary>
            Method used to gets or sets intersect of two rectangle.
            </summary>
            <param name="rectCollection"></param>
            <param name="newRect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GetInterpolarationPoint(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Method used to get interpolarated point
            </summary>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GetNormal(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Method used to get the normal.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.SolveQuadraticEquation(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Solves quadratic equation in form a*x^2 + b*x + c = 0
            </summary>
            <param name="a">The A component</param>
            <param name="b">The B component</param>
            <param name="c">The C component</param>
            <param name="root1">First root.</param>
            <param name="root2">Second root.</param>
            <returns>Bool value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MinMax(System.Double,System.Double,System.Double)">
            <summary>
            Gets minimal value from <c>value</c> or <c>min</c> and maximal from <c>value</c> or <c>max</c>.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns>The MinMax value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Min(System.Double[])">
            <summary>
            Gets minimal value from parameters.
            </summary>
            <param name="values">The parameters</param>
            <returns>The minimal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Max(System.Double[])">
            <summary>
            Gets maximal value from parameters.
            </summary>
            <param name="values">The parameters</param>
            <returns>The maximal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MaxZero(System.Double)">
            <summary>
            Gets maximal value from parameter or zero.
            </summary>
            <param name="value">The value.</param>
            <returns>The double value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MinZero(System.Double)">
            <summary>
            Gets minimal value from parameter or zero.
            </summary>
            <param name="value">The value.</param>
            <returns>The MinZero value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Round(System.Double,System.Double,System.Boolean)">
            <summary>
            Rounds the specified value.
            </summary>
            <param name="x">The x value.</param>
            <param name="div">The divider.</param>
            <param name="up">if set to <c>true</c> value will be rounded up.</param>
            <returns>The Round off value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GetCrossPoint(Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint,Syncfusion.UI.Xaml.Charts.ChartPoint)">
            <summary>
            Gets the cross point.
            </summary>
            <param name="p11">The P11 value.</param>
            <param name="p12">The P12 value.</param>
            <param name="p21">The P21 value.</param>
            <param name="p22">The P22 value.</param>
            <returns>The CrossPoint</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GetAngle(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the angle between the points.
            </summary>
            <param name="startPoint">The start point</param>
            <param name="endPoint">The end point</param>
            <returns>The Angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalcPerpendicularDistance(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the perpendicular distance of point from a line.
            </summary>
            <param name="Point1">Starting point of the line.</param>
            <param name="Point2">Ending point of the line</param>
            <param name="Point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GeneralPointRotation(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            return point values from the given origin,end and angle points
            </summary>
            <param name="originpoint"></param>
            <param name="endpoint"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.IsPointInsideRectangle(System.Windows.Point,System.Windows.Point[])">
            <summary>
            Method used to check a point inside a rectangle.
            </summary>
            <param name="point"></param>
            <param name="rectanglePoints"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalculateTriangleArea(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the area of the given triangle.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalculateRectangleArea(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the area of the given rectangle.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="p4"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalculateDistanceBetweenTwoPoints(System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the distance between two points.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalculatePerpendicularDistantPoint(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Calculates the perpendicular distant point with the given points and distance.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.IsPointInsideCircle(System.Windows.Point,System.Double,System.Windows.Point)">
            <summary>
            Checks whether the given point is inside the circle.
            </summary>
            <param name="circleCenter">The center point of the circle.</param>
            <param name="radius">The radius of the circle</param>
            <param name="testPoint">The test point to be checked inside a circle.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.C_half">
            <summary>
            Initializes c_half
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetRectByCenter(System.Windows.Point,System.Windows.Size)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="center">The center.</param>
            <param name="size">The size value.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetRectByCenter(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="cx">The cx value.</param>
            <param name="cy">The cy value.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetCenter(System.Windows.Size)">
            <summary>
            Gets the center.
            </summary>
            <param name="size">The size value.</param>
            <returns>The vector center value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetCenter(System.Windows.Rect)">
            <summary>
            Gets the center.
            </summary>
            <param name="rect">The rect value.</param>
            <returns>The center point value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Subtractthickness(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="rect">The rect value.</param>
            <param name="thickness">The thickness.</param>
            <returns>The Rectangle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Subtractthickness(System.Windows.Size,System.Windows.Thickness)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="size">The size value.</param>
            <param name="thickness">The thickness.</param>
            <returns>Returns the size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Addthickness(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            The Addthickness method
            </summary>
            <param name="rect">The Rect value</param>
            <param name="thickness">The thickness</param>
            <returns>The rectangle</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Addthickness(System.Windows.Size,System.Windows.Thickness)">
            <summary>
            The Addthickness method
            </summary>
            <param name="size">The size value</param>
            <param name="thickness">The thickness value</param>
            <returns>Returns the size</returns>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.CheckSize(System.Windows.Size)">
            <summary>
            Checks the members of size by infinity.
            </summary>
            <param name="size">The size value.</param>
            <returns>Returns the size</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartTransformer">
             <summary>
            Defines methods and memebers to transform the screen co-ordinate to Chart co-ordinate.
             </summary>
             <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.IChartTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>Visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
            <exclude/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform">
            <summary>
            Class implementation for Chartransform
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateSimple(System.Windows.Size)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The Chart Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateSimple3D(System.Windows.Size)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewPort">The viewport.</param>
            <returns>The Chart Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateCartesian(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
            <returns>The Cartesian Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateCartesian(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param> 
            <returns>The Cartesian Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreatePolar(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Creates the polar.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
            <returns>The Polar Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CoefficientToVector(System.Double)">
            <summary>
            Return point values from the given values 
            </summary>
            <param name="coefficient"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.RadianToPolarCoefficient(System.Double)">
            <summary>
            Return the Polar/Radar type Axis Coefficient Value from the given radian value
            </summary>
            <param name="radian"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.PointToPolarRadian(System.Windows.Point,System.Double)">
            <summary>
            Return the Radian Value of Polar/Radar chart Mouse point
            </summary>
            <param name="point"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ValueToVector(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Values to vector.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="value">The value.</param>
            <returns>The vector value</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer">
            <summary>
            Represents ChartSimpleTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.#ctor(System.Windows.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer">
            <summary>
            Represents ChartCartesianTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.XAxis">
            <summary>
            Initializes m_xAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.YAxis">
            <summary>
            Initializes m_yAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.ZAxis">
            <summary>
            Initializes m_zAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.m_IsRoated">
            <summary>
            Initializes m_IsRotated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.#ctor(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.#ctor(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The visible point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.TransformToVisible3D(System.Double,System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <param name="z">The y value.</param>
            <returns>The visible point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.TransformToVisible(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Return point values from the given values
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="isXInversed"></param>
            <param name="isYInversed"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer">
            <summary>
            Represents ChartPolarTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.xlogarithmicBase">
            <summary>
            Initializes xlogarithmicBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.ylogarithmicBase">
            <summary>
            Initializes ylogarithmicBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.y_IsLogarithmic">
            <summary>
            Initializes y_IsLogarithmic
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.x_IsLogarithmic">
            <summary>
            Initializes x_IsLogarithmic
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_xAxis">
            <summary>
            Initializes m_xAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_yAxis">
            <summary>
            Initializes m_yAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_center">
            <summary>
            Initializes m_center
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_radius">
            <summary>
            Initializes m_radius
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.#ctor(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.#ctor(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D">
            <summary>
            Represents a ChartTransform3D class implementation. 
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.mViewport">
            <summary>
            Initializes mviewport
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.TransformToVisible(System.Double,System.Double)">
            <summary>
            Method used to get the visible transform points.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.SetCenter(Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Sets the center of world.
            </summary>
            <param name="center">The center.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.ToScreen(Syncfusion.UI.Xaml.Charts.Vector3D)">
            <param name="vector3D">The vector3d.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.ToPlane(System.Windows.Point,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Returns the intercept point of mouse ray with the specified plane.
            </summary>
            <param name="point">The point.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.Centered">
            <summary>
            Gets or sets the centered matrix.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.Result">
            <summary>
            Gets the result matrix.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeRange">
            <summary>
            Defines memebers and methods to handle DateTime type range in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRange.m_start">
            <summary>
            Initilaizes m_start
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRange.m_end">
            <summary>
            Initilaizes m_end
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DateTimeRange"/> struct.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.GetHashCode">
            <summary>
             Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>true if obj and this instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.Equals(Syncfusion.UI.Xaml.Charts.DateTimeRange)">
            <summary>
            Indicates whether this instance and a specified range are equal.
            </summary>
            <param name="other">The range to compare with the current instance.</param>
            <returns>true if start and end range of <paramref name="other"/> and current instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.op_Equality(Syncfusion.UI.Xaml.Charts.DateTimeRange,Syncfusion.UI.Xaml.Charts.DateTimeRange)">
            <summary>
            Indicates whether the both instance and a specified range are equal.
            </summary>
            <returns>true if <paramref name="point1"/> and <paramref name="point2"/> instance are the same type and represent the same value otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.op_Inequality(Syncfusion.UI.Xaml.Charts.DateTimeRange,Syncfusion.UI.Xaml.Charts.DateTimeRange)">
            <summary>
            Indicates whether both the specified range are not equal.
            </summary>
            <returns>true if <paramref name="point1"/> and <paramref name="point2"/> are represent not the same value otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.Start">
            <summary>
            Gets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.End">
            <summary>
            Gets the end.
            </summary>
            <value>The end value.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoubleRange">
            <summary>
            Defines a custom DoubleRange data type for<see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.c_empty">
            <summary>
            Initializes c_empty
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.m_start">
            <summary>
            Initializes m_start
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.m_end">
            <summary>
            Initializes m_end
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoubleRange"/> struct.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Addition(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Union operator
            </summary>
            <param name="leftRange">First double range</param>
            <param name="rightRange">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Addition(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Union operator
            </summary>
            <param name="range">First double range</param>
            <param name="value">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_GreaterThan(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_GreaterThan(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Return bool value from the given DoubleRange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_LessThan(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            return Bool value from doublerange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_LessThan(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Equality(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left DoubleRange</param>
            <param name="rightRange">The right DoubleRange</param>
            <returns>The left range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Inequality(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left range</param>
            <param name="rightRange">The right range</param>
            <returns>The inverse left range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(System.Double[])">
            <summary>
            Create range by array of double.
            </summary>
            <param name="values">The values</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Unions the specified left range with right range.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Unions the specified range with value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Scale(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Scales the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Offset(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Offsets the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Exclude(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange@,Syncfusion.UI.Xaml.Charts.DoubleRange@)">
            <summary>
            Excludes the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="excluder">The excluder.</param>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>True if empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Intersects(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="range">the DoubleRange</param>
            <returns><b>true</b> if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Intersects(System.Double,System.Double)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="start">The start value</param>
            <param name="end">The end value</param>
            <returns> true if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Inside(System.Double)">
            <summary>
            Checks whether the given value is inside the axis range
            </summary>
            <param name="value">The value.</param>
            <returns>True if value is inside</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Inside(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Checks whether the given range is inside the axis range
            </summary>
            <param name="range">The range.</param>
            <returns>True is range is inside</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Empty">
            <summary>
            Gets the Empty value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Start">
            <summary>
            Gets the Start value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.End">
            <summary>
            Gets the End value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Delta">
            <summary>
            Gets the Delta value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Median">
            <summary>
            Gets the median.
            </summary>
            <value>The median.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.IsEmpty">
            <summary>
            Gets a value indicating whether IsEmpty 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TooltipPosition">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.TooltipPosition"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TooltipPosition.Auto">
            <summary>
            Position the tooltip at data point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TooltipPosition.Pointer">
            <summary>
            Position the tooltip at mouse pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode">
            <summary>
            Represents <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode"/> mode of axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.Start">
            <summary>
            Indicates AutoScrollingDelta calculated in axis start position. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.End">
            <summary>
            Indicates AutoScrollingDelta calculated in axis end position. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutCapStyle">
            <summary>
            Represents the doughnut series cap style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutCapStyle.BothFlat">
            <summary>
            The both edges are flat.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutCapStyle.BothCurve">
            <summary>
            The both edges are curve.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutCapStyle.StartCurve">
            <summary>
            The start edge only curve.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutCapStyle.EndCurve">
            <summary>
            The end edge only curve.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieGroupMode">
            <summary>
            Circular series segment grouping based on group mode.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieGroupMode.Value">
            <summary>
            Circular series segment grouping based on value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieGroupMode.Percentage">
            <summary>
            Circular series segment grouping based on percentage.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieGroupMode.Angle">
            <summary>
            Circular series segment grouping based on angle.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionMode">
            <summary>
            Defines the way of series or segment selection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SelectionMode.MouseClick">
            <summary>
            Select the segment using mouse or pointer click.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SelectionMode.MouseMove">
            <summary>
            Select the segment while mouse hovering.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding">
            <summary>
            Represents range padding to the minimum and maximum extremes of the chart axis range for the <see cref="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.Auto">
            <summary>
            RangePadding will be automatically chosen based on the orientation of the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.None">
            <summary>
            The visible range sets to exact minimum and maximum value of the items source.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.Round">
            <summary>
            The visible range start and end round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.Additional">
            <summary>
            The visible range start and end will be added with an additional interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.RoundStart">
            <summary>
            The visible range start round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.RoundEnd">
            <summary>
            The visible range end round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.PrependInterval">
            <summary>
            The visible range start will be prepended with an additional interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRangePadding.AppendInterval">
            <summary>
            The visible range start will be appended with an additional interval.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionStyle">
            <summary>
            Defines the way of selection type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SelectionStyle.Single">
            <summary>
            Single segment selection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SelectionStyle.Multiple">
            <summary>
            Multiple segment selection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Day">
            <summary>
            Defines to find the working days for <see cref="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Day.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NumericalPadding">
            <summary>
            Represents range padding to the minimum and maximum extremes of the chart axis range for the <see cref="T:Syncfusion.UI.Xaml.Charts.NumericalAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.Auto">
            <summary>
            RangePadding will be automatically chosen based on the orientation of the axis. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.None">
            <summary>
            The visible range sets to exact minimum and maximum value of the items source.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.Round">
            <summary>
            The visible range start and end round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.Normal">
            <summary>
            The visible range will be the actual range calculated from given items source and series types.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.Additional">
            <summary>
            The visible range start and end will be added with an additional interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundStart">
            <summary>
            The visible range start round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundEnd">
            <summary>
            The visible range end round to nearest interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.PrependInterval">
            <summary>
            The visible range start will be prepended with an additional interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalPadding.AppendInterval">
            <summary>
            The visible range end will be appended with an additional interval.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendPosition">
            <summary>
            Legend position in chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendPosition.Inside">
            <summary>
            Positioning the legend inside of chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendPosition.Outside">
            <summary>
            Positioning the legend outside of chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType">
            <summary>
            A date time interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartValueType">
            <summary>
            Specifies the different values that are natively used.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Double">
            <summary>
             <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Double"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.DateTime">
            <summary>
             <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.DateTime"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.String">
            <summary>
              <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.String"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.TimeSpan">
            <summary>
              <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.TimeSpan"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Logarithmic">
            <summary>
              Logarithmic value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RenderingMode">
            <summary>
            Specifies the rendering mode to be used to render the chart series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.Default">
            <summary>
            Default element will be used to render the series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.WriteableBitmap">
            <summary>
            WriteableBitmap will be used to render the series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.DirectX">
            <summary>
            DirectX will be used to render the series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegendIcon">
            <summary>
            Represents the Icon for the Chartlegend
            </summary>  
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None">
            <summary>
            Default behaviour
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType">
            <summary>
            Represents the Icon of Series type
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle">
            <summary>
            Represents the Rectangular Icon
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine">
             <summary>
            Represents the Straight Line
             </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.VerticalLine">
            <summary>
            Represents the VerticalLine
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle">
            <summary>
            Represents the Circle
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond">
            <summary>
            Represents the Diamond
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon">
            <summary>
            Represents the Pentagon
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Hexagon">
            <summary>
            Represents the Hexagon
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle">
            <summary>
            Represents the Triangle
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle">
            <summary>
            Represents the Inverted Triangle
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross">
            <summary>
            Represents the Cross
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Plus">
            <summary>
            Represents the Plus
            </summary>       
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode">
            <summary>
             Defines the way of display mode for trackball labels. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode.NearestPoint">
            <summary>
            Trackball displays only the nearest label to the touch point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode.FloatAllPoints">
            <summary>
            Trackball displays all the nearest labels in same x values.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TrackballLabelDisplayMode.GroupAllPoints">
            <summary>
            Trackball displays label for all the data points that are grouped.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Direction">
            <summary>
            Represents sorting direction
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Direction.Ascending">
            <summary>
            Orders the items in increasing order.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Direction.Descending">
            <summary>
            Orders the items in decreasing order.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SortingAxis">
            <summary>
            Represents Sorting Axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SortingAxis.X">
            <summary>
            Sorting will be done based on values related to x-axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SortingAxis.Y">
            <summary>
            Sorting will be done based on values related to y-axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSymbol">
            <summary>
            Represents the adornments marker symbol types.
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Custom">
            <summary>
            Custom option to set User-defined SymbolTemplates
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Ellipse">
            <summary>
            Renders Ellipse symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Cross">
            <summary>
            Renders Cross symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Diamond">
            <summary>
            Renders Diamond symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Hexagon">
            <summary>
            Renders Hexagon symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.HorizontalLine">
            <summary>
            Renders HorizontalLine symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.InvertedTriangle">
            <summary>
            Renders InvertedTriangle symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Pentagon">
            <summary>
            Renders Pentagon symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Plus">
            <summary>
            Renders Plus symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Square">
            <summary>
            Renders Square symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Triangle">
            <summary>
            Renders Traingle symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.VerticalLine">
            <summary>
            Renders VerticalLine symbol
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelPlacement">
            <summary>
            Defines the way of category axis label placement.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelPlacement.OnTicks">
            <summary>
            Labels placed on ticks.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelPlacement.BetweenTicks">
            <summary>
            Labels placed on between ticks.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelAlignment">
            <summary>
            Represents label placement in Axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelAlignment.Center">
            <summary>
            Label placed center to the axis tick. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelAlignment.Far">
            <summary>
            Label placed Far to the axis tick.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelAlignment.Near">
            <summary>
            Label placed Near to the axis tick.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPolarAngle">
            <summary>
            Represents the polar and radar chart axis start angle for primary axis, secondary axis, or both axes.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPolarAngle.Rotate0">
            <summary>
            Indicates chart polar and radar angle axis start position at 0 degree angle. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPolarAngle.Rotate90">
            <summary>
            Indicates chart polar and radar angle axis start position at 90 degree angle. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPolarAngle.Rotate180">
            <summary>
            Indicates chart polar and radar angle axis start position at 180 degree angle. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPolarAngle.Rotate270">
            <summary>
            Indicates chart polar and radar angle axis start position at 270 degree angle. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisElementPosition">
            <summary>
            Represents axis elements position in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> elements panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisElementPosition.Inside">
            <summary>
            Positions the elements above the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisElementPosition.Outside">
            <summary>
            Positions the elements below the axis line.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisHeaderPosition">
            <summary>
            Represents the axis header position<see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisHeaderPosition.Near">
            <summary>
            Positions the header near the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisHeaderPosition.Far">
            <summary>
            Positions the header far away from the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AggregateFunctions">
            <summary>
            Represents the aggregation functions<see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode">
            <summary>
            Represents the modes for placing edge labels in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center">
            <summary>
            Value indicating that the edge label should appear at the center of its GridLines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift">
            <summary>
            Value indicating that edge labels should be shifted to either left or right so that it comes within the area of Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit">
            <summary>
            Value indicating that the edge labels should be fit within the area of <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide">
            <summary>
            Value indicating that the edge labels will be hidden.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode">
            <summary>
            Represents the visibility for edge label<see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default">
            <summary>
            Value indicating that default behavior of axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible">
            <summary>
            Value indicating that edge labels should be visible all cases.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible">
            <summary>
            Value indicating that edge labels should be visible in non zoom mode.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction">
            <summary>
             Specifies the options for the action that is to be taken when labels intersect each other.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None">
            <summary>
            No special action is taken. Labels may intersect.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows">
            <summary>
            Labels are wrapped into multiple rows to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide">
            <summary>
            Labels are hidden to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Auto">
            <summary>
            Labels are rotated to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Wrap">
            <summary>
            Labels are wrapped to next line to aviod intersection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorPalette">
            <summary>
            Represents the different types of color palette available in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.None">
            <summary>
            No palette will be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Metro">
            <summary>
            Metro palette will be set.
            </summary>
            
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Custom">
            <summary>
            Custom palette will be set, and color values will be taken from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes"/> collection.
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.AutumnBrights">
            <summary>
            AutumnBrights palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.FloraHues">
            <summary>
            FloraHues palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Pineapple">
            <summary>
            Pineapple palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.TomotoSpectrum">
            <summary>
            TomatoSpectram palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.RedChrome">
            <summary>
            RedChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.PurpleChrome">
            <summary>
            PurpleChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.BlueChrome">
            <summary>
            BlueChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.GreenChrome">
            <summary>
            GreenChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Elite">
            <summary>
            Elite palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.SandyBeach">
            <summary>
            SandyBeach palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.LightCandy">
            <summary>
            LightCandy palette will be set
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAlignment">
            <summary>
            A custom <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> alignment to handle both horizontal and vertical alignment types in a generalized way. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Near">
            <summary>
            Positions the element as like setting left/top alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Far">
            <summary>
            Positions the element as like setting right/bottom alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Center">
            <summary>
            Positions the element with center alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Auto">
            <summary>
            Positions the element with default alignment when the series is transposed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType">
            <summary>
            Represents modes of drawing radar and polar types.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType.Area">
            <summary>
            Draw the Filled Area in the Polar Chart type
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType.Line">
            <summary>
            Draw the Lines in the Polar chart type
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartOrientation">
            <summary>
            Represents modes of Chart orientation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Default">
            <summary>
            Orienatation will be automatically analyzed based on the panel's docking position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Horizontal">
            <summary>
            Horizontal Orientation will be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Vertical">
            <summary>
            Vertical Orientation will be set.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAreaType">
            <summary>
            Identifies axes types enumeration.
            </summary>
            <example>
            Intended for internal use
            </example>
            <seealso>
                <cref>ChartArea</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.None">
            <summary>
            Represents No axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.CartesianAxes">
            <summary>
            Cartesian axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.PolarAxes">
            <summary>
            Polar axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartUnitType">
            <summary>
            Represents modes for chart rows/columns space allocations.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartUnitType.Star">
            <summary>
            Height/Width will be auto adjusted.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartUnitType.Pixels">
            <summary>
            Height/Width will be based on the pixel units given.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomMode">
            <summary>
            Represents zooming modes of <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.X">
            <summary>
            Zooming will be done along x-axis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.Y">
            <summary>
            Zooming will be done along y-axis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.XY">
            <summary>
            Zooming will be done along both axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition">
            <summary>
            Represents label position modes available for PieSeries adornments.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Inside">
            <summary>
            PieSeries adornment labels will be  placed inside over the PieSeries.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Outside">
            <summary>
            PieSeries adornment labels will be  placed just outside over the PieSeries.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.OutsideExtended">
            <summary>
            PieSeries adornment labels will be placed outside over the PieSeries at a certain distance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ConnectorMode">
            <summary>
            Represents the type  of connector line that connects the adornment label and data point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ConnectorMode.Bezier">
            <summary>
            This draws a Bezier curve as connector line. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ConnectorMode.Line">
            <summary>
             This draws a solid line as connector line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ConnectorMode.StraightLine">
            <summary>
            This draws a horizontal straight line as connector line. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ConnectorLinePosition">
            <summary>
            Represents the circular series connector line position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ConnectorLinePosition.Auto">
            <summary>
            Connector line will be positioned automatically.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ConnectorLinePosition.Center">
            <summary>
            Connector line will be positioned at center.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition">
            <summary>
            Represents the positioning of Adornment labels.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Default">
            <summary>
            Positions the Adornment labels at Default.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Auto">
            <summary>
            Positions the Adornment labels at Auto.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Inner">
            <summary>
            Positions the Adornment labels at Inner.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Outer">
            <summary>
            Positions the Adornment labels at Outer.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Center">
            <summary>
            Positions the Adornment labels at Center.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentsPosition">
            <summary>
            Represents modes for positioning Chart adornments.
            </summary>
            <remarks>
            AdornementPosition value cannot be specified for all series types.
            The values in adornments position will be applicable only to certain series
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Top">
            <summary>
            Positions the adornment at the top edge point of a chart segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Bottom">
            <summary>
            Positions the adornment at the bottom edge point of a chart segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.TopAndBottom">
            <summary>
            Positions the adornment at the center point of a chart segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelContent">
            <summary>
            Enumeration represents series adornments label content.
            </summary>
            <seealso>
                <cref>AdornmentInfo</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.XValue">
            <summary>
            Identifies that label should contain X value of series' point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.YValue">
            <summary>
            Identifies that label should contain Y value of series' point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.Percentage">
            <summary>
            Identifies that label should contain percentage value of series' point among other points.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.YofTot">
            <summary>
            Identifies that label should contain value of Y of total values.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.DateTime">
            <summary>
            Identifies that label should contain <see cref="F:Syncfusion.UI.Xaml.Charts.LabelContent.DateTime"/> value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.LabelContentPath">
            <summary>
            Label's content will be retrieved from the <see>
            <cref>ChartAdornmentInfo.LabelContentPath</cref>
            </see>
            property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointStyle">
            <summary>
            Represents modes of displaying empty points.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Interior">
            <summary>
            The empty point segment resembles the shape of a normal segment.
            Fills the empty point segments with the color value specified in series <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Symbol">
            <summary>
            The empty point segment resembles the shape of a symbol control.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.SymbolAndInterior">
             <summary>
             The empty point segment resembles the shape of a symbol control.
            Fills the symbol segments with the color value specified in series <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior"/> property.
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointValue">
            <summary>
            Represents modes for handling empty points.
            </summary> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValue.Zero">
            <summary>
            Validates the empty points in a series and sets the points y-value to Zero.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValue.Average">
            <summary>
            Validates the empty points in a series and sets the points y-value to an average value based on its neighbouring points.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartFunnelMode">
            <summary>
            Represents modes of the funnel types.
            </summary>
            <seealso>
                <cref>ChartFunnelType</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartFunnelMode.ValueIsWidth">
            <summary>
            The specified Y value is used to compute the width of the corresponding block.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartFunnelMode.ValueIsHeight">
            <summary>
            The specified Y value is used to compute the height of the corresponding block.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPyramidMode">
            <summary>
            Specifies the mode in which the Y values should be interpreted in the Pyramid chart.
            </summary>
            <seealso>
                <cref>ChartPyramidType</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPyramidMode.Linear">
            <summary>
            The Y values are proportional to the length of the sides of the pyramid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPyramidMode.Surface">
            <summary>
            The Y values are proportional to the surface area of the corresponding blocks.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType">
            <summary>
            Specifies the Interval type in which the navigator values should be displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Year">
            <summary>
            One year interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Quarter">
            <summary>
            One Quarter interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Month">
            <summary>
            One Month interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Week">
            <summary>
            One Week interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Day">
            <summary>
            One Day interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Hour">
            <summary>
            One Day interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CoordinateUnit.Pixel">
            <summary>
            The pixel mode for the CoordinateUnit of Annotation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CoordinateUnit.Axis">
            <summary>
            The axis mode for the CoordianteUint of Annotation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement">
            <summary>
            Defines the way of positioning the tooltip labels.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Left">
            <summary>
            Represents the tooltip position left to the interaction point. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Right">
            <summary>
            Represents the tooltip position right to the interaction point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Top">
            <summary>
            Represents the tooltip position top to the interaction point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Bottom">
            <summary>
            Represents the tooltip position left to the interaction point.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceType">
            <summary>
            Specifies the type of surface
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CameraProjection">
            <summary>
            Specifies the mode of surface projection
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CameraProjection.Perspective">
            <summary>
            Represents Perspective CameraProjection
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CameraProjection.Orthographic">
            <summary>
            Represents Orthographic CameraProjection
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FinancialPrice">
            <summary>
            Specifies which price need to consider for fluctuation detection
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.WaterfallSegmentType">
            <summary>
            Specifies which type segment consider for rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineType">
            <summary>
            Specifies the type of spline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineType.Natural">
            <summary>
            This type used natural spline for data rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineType.Monotonic">
            <summary>
            This type used monotonic spline for data rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineType.Cardinal">
            <summary>
            This type used cartinal spline for data rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineType.Clamped">
            <summary>
            This type used clamped spline data rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDictionaries">
            <summary>
            Contains Chart resource dictionaries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1">
            <summary>
            Contains utility methods to add and remove elements inside a panel.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Constructor
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.GenerateElements(System.Int32)">
            <summary>
            Generates or recycles the elements
            </summary>
            <param name="count">Number of elements to be generated</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.GenerateElementsOfType(System.Int32,System.Type)">
            <summary>
            Generates or recycles the elements of the specified type.
            Please not the type must be inherited from the FrameworkElement.
            </summary>
            <param name="count">Number of elements to be generated</param>
            <param name="type">Used to indicate element type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Add(`0)">
            <summary>
            Method used to add a element in the panel.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Remove(`0)">
            <summary>
            Method used to remove the element from the panel.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.CreateNewInstance">
            <summary>
            Creates a new instance of the specified type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.RemoveBinding(System.Windows.DependencyProperty)">
            <summary>
            Removes the particular binding from the generated elements
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Clear">
            <summary>
            Clears the generated elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Panel">
            <summary>
            Gets the panel
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Count">
            <summary>
            Gets the value of CLR property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.BindingProvider">
            <summary>
            Gets the binding objects to be attached with the generated FrameworkElement.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Item(System.Int32)">
            <summary>
            Return the panel's child at the corresponding index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LicenseHelper">
            <summary>
            LicenseHelper class used for validate the license of syncfusion controls
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LicenseHelper.ValidateLicense">
            <summary>
            Validates the license for tools controls in .NETCore project
            </summary>
        </member>
    </members>
</doc>
