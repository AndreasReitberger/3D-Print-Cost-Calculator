<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Wpf.Toolkit</name>
  </assembly>
  <members>
    <member name="T:Xceed.Wpf.Toolkit.IRichTextBoxFormatBar">
      <summary>Provides an interface for creating rich-text format bars.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ITextFormatter">
      <summary>Provides an interface for formatting text in the RichTextBox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.IRichTextBoxFormatBar.Update">
      <summary>Updates the RichTextBoxFormatBar.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IRichTextBoxFormatBar.Target">
      <summary>Gets or sets the RichTextBox that will be the target for all text manipulations in the format bar.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ITextFormatter.GetText(System.Windows.Documents.FlowDocument)">
      <summary>Returns the formatted text of the passed FlowDocument.</summary>
      <returns>A string representing the extracted text.</returns>
      <param name="document">A FlowDocument from which the text will be extracted.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ITextFormatter.SetText(System.Windows.Documents.FlowDocument,System.String)">
      <summary>Sets the content of the passed FlowDocument.</summary>
      <param name="document">A FlowDocument whose content will be set.</param>
      <param name="text">A string representing the text that will be used to set the content of <em>document</em>.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.AllowedSpecialValues">
      <summary>Values representing the special values the user is allowed to input.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.None">
      <summary>No special values allowed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.NaN">
      <summary>NaN values allowed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.PositiveInfinity">
      <summary>Positive infinity allowed</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.NegativeInfinity">
      <summary>Negative infinity allowed</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.AnyInfinity">
      <summary>Either NegativeInfinity or PositiveInfinity.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AllowedSpecialValues.Any">
      <summary>Any special value allowed.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.AutoSelectBehavior">
      <summary>Value indicating how the content of an AutoSelectTextBox is selected.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AutoSelectBehavior.Never">
      <summary>The content is never selected.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AutoSelectBehavior.OnFocus">
      <summary>The context is selected when the AutoSelectTextBox received the focus.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType">
      <summary>Value representing the type of a calculator button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Add">
      <summary>The "+" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Back">
      <summary>The Back button, which provides backspace functionality for digits entered into the calculator control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Cancel">
      <summary>The Cancel button ("C").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Clear">
      <summary>The Clear button ("CE").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Decimal">
      <summary>The decimal point button ("."). NOTE: The current culture's decimal separator is used.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Divide">
      <summary>The division button ("/").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Eight">
      <summary>The "8" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Equal">
      <summary>The Equals button ("=").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Five">
      <summary>The "5" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Four">
      <summary>The "4" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Fraction">
      <summary>The Fraction button ("1/x").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.MAdd">
      <summary>The Memory Add button ("M+").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.MC">
      <summary>The Memory Clear button ("MC").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.MR">
      <summary>The Memory Recall button ("MR").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.MS">
      <summary>The Memory Storage button ("MS").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.MSub">
      <summary>The Memory Subtract button ("M-").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Multiply">
      <summary>The Multiply button ("*").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Negate">
      <summary>The Negate button ("+/-").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Nine">
      <summary>The "9" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.None">
      <summary>No button pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.One">
      <summary>The "1" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Percent">
      <summary>The Percent button ("%").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Seven">
      <summary>The "7" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Six">
      <summary>The "6" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Sqrt">
      <summary>The Square Root button ("Sqrt").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Subtract">
      <summary>The Subtract button ("-").</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Three">
      <summary>The "3" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Two">
      <summary>The "2" button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType.Zero">
      <summary>
        <para>The "0" button.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Calculator.Operation">
      <summary>Value representing the operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Add">
      <summary>The Add operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Subtract">
      <summary>The Subtract operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Divide">
      <summary>The Divide operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Multiply">
      <summary>The Multiply operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Percent">
      <summary>The Percent operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Sqrt">
      <summary>The Square Root operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Fraction">
      <summary>The Fraction operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.None">
      <summary>No operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Clear">
      <summary>The Clear operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.Operation.Negate">
      <summary>The Negate operation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DateTimeFormat">
      <summary>Value representing the date-time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.Custom">
      <summary>The custom format provided by DateTimeUpDown.FormatString will be used.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.FullDateTime">
      <summary>The full date-time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.LongDate">
      <summary>The long date format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.LongTime">
      <summary>The long time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.MonthDay">
      <summary>The month-day format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.RFC1123">
      <summary>The RFC 1123 International format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.ShortDate">
      <summary>The short date format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.ShortTime">
      <summary>The short time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.SortableDateTime">
      <summary>The sortable date-time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.UniversalSortableDateTime">
      <summary>The universal sortable date-time format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeFormat.YearMonth">
      <summary>The year-month format.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DateTimePart">
      <summary>Value representing the date-time part.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Day">
      <summary>The day.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.DayName">
      <summary>The day name.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.AmPmDesignator">
      <summary>The AM / PM designator.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Millisecond">
      <summary>The milliseconds.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Hour12">
      <summary>The 12-hour format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Hour24">
      <summary>The 24-hour format.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Minute">
      <summary>The minutes.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Month">
      <summary>The month.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.MonthName">
      <summary>The month name.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Other">
      <summary>An unspecified part.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Period">
      <summary>The period.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.TimeZone">
      <summary>The timezone.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Second">
      <summary>The seconds.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePart.Year">
      <summary>The year.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.FrameType">
      <summary>Value representing the type of frame used for the Magnifier.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FrameType.Circle">
      <summary>A circular frame.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FrameType.Rectangle">
      <summary>A rectangular frame.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.HamburgerLocation">
      <summary>Value representing the location used by the MaterialHamburger.MenuLocation property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.InsertKeyMode">
      <summary>Value representing the text insertion mode of the masked text box.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.InsertKeyMode.Default">
      <summary>The current INSERT key mode of the keyboard will be used.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.InsertKeyMode.Insert">
      <summary>The insertion mode is always enabled.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.InsertKeyMode.Overwrite">
      <summary>The overwrite mode is always enabled.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaskFormat">
      <summary>Values representing the mask format.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialButtonModeEnum">
      <summary>Represents the shape of a MaterialButton control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButtonModeEnum.Rectangle">
      <summary>The button will have a rectangular shape.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButtonModeEnum.Circle">
      <summary>The button will have a circular shape.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialSliderBubbleLocationEnum">
      <summary>Represents the bubble location of the MaterialSlider control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSliderBubbleLocationEnum.Over">
      <summary>The bubble is located over the silder control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSliderBubbleLocationEnum.Under">
      <summary>The bubble is located under the slider control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialSliderModeEnum">
      <summary>Represents the MaterialSlider control's mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSliderModeEnum.WithBubble">
      <summary>A bubble with the current value as its content is shown when the slider control is focused.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSliderModeEnum.ThumbResize">
      <summary>A bigger thumb is displayed when the silder control is focused.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum">
      <summary>Represents how the watermark in the MaterialTextField control will behave when the
control receives the focus.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum.OnFocus">
      <summary>The watermark will move up when the control is focused.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum.OnTyping">
      <summary>The watermark will move up when the control us focused and the user starts typing.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum.Disabled">
      <summary>The watermark remains up and does not animate.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialToastLocationEnum">
      <summary>Represents the location where the MaterialToast control will be displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.BottomLeft">
      <summary>The control will be displayed at the bottom-left of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.Left">
      <summary>The control will be displayed at the left of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.TopLeft">
      <summary>The control will be displayed at the top-left of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.Top">
      <summary>The control will be displayed at the top of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.TopRight">
      <summary>The control will be displayed at the top-right of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.Right">
      <summary>The control will be displayed at the right of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.BottomRight">
      <summary>The control will be displayed at the bottom-right of its owner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToastLocationEnum.Bottom">
      <summary>The control will be displayed at the bottom of its owner.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.OverlapBehavior">
      <summary>Value representing the overlap behavior used in TimelinePanel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.OverlapBehavior.Stack">
      <summary>TimelinePanel items are stacked.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.OverlapBehavior.Stretch">
      <summary>TimelinePanel items are stretched.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.OverlapBehavior.Hide">
      <summary>TimelinePanel items hide one another.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.OverlapBehavior.None">
      <summary>No overlapping behavior.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PieMode">
      <summary>Value representing the mode of the Pie.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PieMode.Manual">
      <summary>Allows both Slice and EndAngle to be set.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PieMode.EndAngle">
      <summary>Allows EndAngle to be set directly; Slice property cannot be set directly. (Causes the
<see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Pie~Slice.html">Slice</see> value to be calculated indirectly from StartAngle and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Pie~EndAngle.html">EndAngle</see>.)</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PieMode.Slice">
      <summary>Allows Slice to be set directly; EndAngle cannot be set directly. (Causes the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Pie~EndAngle.html">EndAngle</see> value to be calculated indirectly from StartAngle and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Pie~Slice.html">Slice</see>.)</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingFillDirection">
      <summary>
        <para>Represents the directions of the fill used by the Rating control to fill the inside of the icons according to the value.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingFillDirection.Left">
      <summary>Fill from right to left.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingFillDirection.Right">
      <summary>Fill from left to right.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingFillDirection.Up">
      <summary>Fill from bottom to top.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingFillDirection.Down">
      <summary>Fill from top to bottom.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingIconType">
      <summary>Value representing the type of icon used for the Rating control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingIconType.Star">
      <summary>The icon will use the built-in Star template.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingIconType.Circle">
      <summary>The icon will use the built-in Circle template.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingIconType.Square">
      <summary>The icon will use the built-in Square template.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingIconType.Triangle">
      <summary>The icon will use the built-in Triangle template.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingIconType.Custom">
      <summary>The icon will use the path data specified in the CustomPath property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingLabelPosition">
      <summary>Represents the position of the labels with respect to the their icons.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingLabelPosition.Before">
      <summary>If set to <strong>Before</strong>, The label will appear above (Horizontal Orientation) or to the left (Vertical Orientation) of the icon..</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingLabelPosition.After">
      <summary>If set to <strong>After</strong>, the label will appear under (Horizontal Orientation) or to the right (Vertical Orientation) of the icon.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingOrientation">
      <summary>Gets or sets the orientation of the Rating control. This determines the direction that icons are drawn next to each other.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingOrientation.Horizontal">
      <summary>Icons are layed out horizontally next to each other.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingOrientation.Vertical">
      <summary>Icons are layed out vertically on top of each other.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingPrecision">
      <summary>
        <para>Represents the types of precisions.</para>
        <para></para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingPrecision.Full">
      <summary>When set to <strong>Full</strong>, icons are never partially filled. They can either be filled or not.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingPrecision.Half">
      <summary>
        <para>When set to <strong>Half</strong>, the can be filled, half filled, or not filled at all, rounded up. For example, if ItemCount is 5, and the Value is 2.1,
then the first two icons will be fully filled, and the third will be half filled.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingPrecision.Exact">
      <summary>When set to <strong>Exact</strong>, icons will be partially filled to try to exactly represent the Rating control's Value property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingValueType">
      <summary>Value representing the type of value used for the Rating control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingValueType.Exact">
      <summary>When set to <strong>Exact</strong>, the Rating?s Value will represent the exact icon value. For example, a value of 3 would mean that the first 3 icons are
filled, no matter how many icons there are in total.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingValueType.Percentage">
      <summary>When set to <strong>Percentage</strong>, the Rating?s Value represents a percentage value (Min=0.0, Max = 1.0). For example, a value of 0.50 would mean that
the first 50% is filled (if the Rating control has 5 stars, then the Value would represent the first 3.5 icons).</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SpinDirection">
      <summary>Value representing the direction of a spinner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SpinDirection.Increase">
      <summary>The increase button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SpinDirection.Decrease">
      <summary>The decrease button.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TransitionMode">
      <summary>Represents the type of transition to use when the slideshow is in <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.SlideShow~IsPlaying.html">auto-play mode</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TransitionMode.None">
      <summary>No transition</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TransitionMode.Sliding">
      <summary>Slides slide from one to another.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TransitionMode.Fading">
      <summary>Slides fade in and out from one to another.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ValidSpinDirections">
      <summary>Value representing the allowed directions of a spinner.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ValidSpinDirections.None">
      <summary>No operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ValidSpinDirections.Increase">
      <summary>The increase operation.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ValidSpinDirections.Decrease">
      <summary>The decrease operation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WindowStartupLocation">
      <summary>Value representing the startup location of a control or window.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WindowStartupLocation.Center">
      <summary>A centered position.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WindowStartupLocation.Manual">
      <summary>A manual position.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WindowState">
      <summary>Value representing the state of a control or window.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WindowState.Closed">
      <summary>The control or window is closed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WindowState.Open">
      <summary>The control or window is open.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WizardPageButtonVisibility">
      <summary>Value representing the visibility of a WizardPage.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageButtonVisibility.Inherit">
      <summary>Use the value of the corresponding property of the Wizard containing the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.WizardPage.html">WizardPage</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageButtonVisibility.Collapsed">
      <summary>Do not display the button, and do not reserve space for it in layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageButtonVisibility.Hidden">
      <summary>Do not display the button, but reserve space for the element in layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageButtonVisibility.Visible">
      <summary>
        <span>Display the button.</span>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WizardPageType">
      <summary>Value representing the type of the WizardPage.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageType.Blank">
      <summary>The WizardPage is blank.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageType.Exterior">
      <summary>The exterior WizardPage look. Typically used for the first or introductory page.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPageType.Interior">
      <summary>The interior WizardPage look. Typically used for page after the first or introductory page.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.AngleArc">
      <summary>Represents the shape that is used to define the content of the MaterialProgressBarCircular.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs">
      <summary>Provides information on input text whose mask is being automatically completed.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.AutoSelectTextBox">
      <summary>Represents a text box whose content is selected when it receives the focus as well as performs automatic focus navigation when the caret reaches the
extremities of the text range.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Bubble">
      <summary>A <strong>ContentControl</strong> that displays its content in a bubble.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.BubbleAdorner">
      <summary>
        <para>Adorner that is used to display the Bubble over the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.MaterialSlider.html">MaterialSlider</see> control.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.BusyIndicator">
      <summary>Represents a control that lets the user know when an application is busy.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ButtonSpinner">
      <summary>Represents a two-button spinner control that can be added to any element, which raises Spin events when the element is manipulated.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ByteUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing byte values by using the spinner buttons, keyboard up/down arrows, or mouse
wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Calculator">
      <summary>Represents a control used for performing mathematical calculations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CalculatorCommands">
      <summary>Provides a set of commands that can be used to accomplish various actions.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CalculatorUpDown">
      <summary>A control that provides a TextBox with button spinners that allow incrementing and decrementing numeric values by using the spinner buttons, keyboard up/down
arrows, or mouse wheel, and also provides a Calculator dropdown that allows you to perform
mathematical calculations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CheckComboBox">
      <summary>Represents a combo box in which the items in the dropdown are preceded by a checkbox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CheckListBox">
      <summary>Represents a ListBox control whose items are preceded by a CheckBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ChildWindow">
      <summary>Represents a modal content control that can be placed over sections of a view or over other content controls, locking out the rest.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl">
      <summary>Provides a user interface that can edit types of collections.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControlButton">
      <summary>Provides a button containing a collection editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControlDialog">
      <summary>Provides a dialog containing a collection editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControlDialogBase">
      <summary>
        <para>
          <font size="2">CollectionControlDialog now derives from this class instead of Window.</font>
        </para>
        <para>
          <font size="2">
            <br />
This class makes it possible to derive the CollectionControlDialog from StyleableWindow and theme it in v2.9 Plus while CollectionControlDialog will remain a
Window in v2.9.</font>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ColorCanvas">
      <summary>Represents a control that allows you to select a color either using an advanced color canvas, by setting the HexadecimalString, or by setting the ARGB values.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ColorItem">
      <summary>Represents a color in the ColorPicker.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ColorPicker">
      <summary>
        <para>Represents an editor that allows a user to pick a color from a predefind color palettes.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ColorSpectrumSlider">
      <summary>Represents a slider control that lets the user select a color from a range of values by moving a thumb control along a track.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CommonNumericUpDown`1">
      <summary>Base class of the numerical up-down controls.</summary>
      <typeparam name="T">The generic type of the class.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DateElement">
      <summary>
        <span id="BugEvents">Represents a date element of the TimelinePanel.</span>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DateTimePicker">
      <summary>Represents a control that allows the user to select a date and a time.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DateTimeUpDown">
      <summary>
        <para>Represents a control that allows a user to increment or decrement a DateTime using button spinners, up/down keys, or the mouse wheel.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DecimalUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing decimal values by using the spinner buttons, keyboard up/down arrows, or
mouse wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DoubleUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing double values by using the spinner buttons, keyboard up/down arrows, or
mouse wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.DropDownButton">
      <summary>Represents a button that when clicked displays a drop-down in which you can place any custom content.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ExtendedTabControl">
      <summary>Represents a TabControl that displays the tabs in a single row, and offers a different navigation style than the standard TabControl to reach the extra tabs,
if any.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ExtendedTabControlCommands">
      <summary>The Commands available to the ExtendedTabControl class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.FilePicker">
      <summary>
        <para>Represents an editor that allows a user to pick a file from the disk.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.GaugePie">
      <summary>
        <para>Creates a shape for use by a gauge in the form of a pie slice, a full circle, or a circle with a flat base as shown. Does not include the tick marks,
labels, markers or the pointer. The shape is determined by range, in degrees, of the StartAngle and EndAngle. If the range is 90 degrees or less, it will be a
pie slice. A range of 360 degrees is a full circle. A range between 90 and 360 is a circle with a flat base.</para>
        <para>
          <img border="0" alt="" src="images/GaugePieSlice.png" />
          <img style="HEIGHT: 162px; WIDTH: 191px" border="0" alt="" src="images/GaugePieFullBase.png" width="294" height="258" />
        </para>
        <para>Shown: Pie slice, circle with flat base.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.GaugePortion">
      <summary>
        <para>Represents the data used by a <em>portion</em> of a Gauge. A <em>portion</em> is a part of the RadialGauge that can have custom color and margin.</para>
        <para>
          <img style="HEIGHT: 143px; WIDTH: 159px" border="0" alt="" src="images/GaugePortion.png" width="293" height="257" />
        </para>
        <para>Shown here is a RadialGauge with two portions.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.IconButton">
      <summary>
        <para>Represents a <strong>Button</strong> that contains an icon and some data.</para>
        <para>The Foreground, Background and BorderBrush can be easily modified with properties, while the Icon location is customizable.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.IntegerUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing integer values by using the spinner buttons, keyboard up/down arrows, or
mouse wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.InvalidValueEventArgs">
      <summary>
        <font size="2">Argument used in the InvalidValueEntered event to obtain the invalid string.</font>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ItemAddingEventArgs">
      <summary>Provides event information for the ItemAdding event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ItemDeletingEventArgs">
      <summary>Provides event information for the ItemDeleting event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ItemEventArgs">
      <summary>Provides event data for the ItemAdded and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.CollectionControl~ItemDeleted_EV.html">ItemDeleted</see> events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Licenser">
      <summary>Class that registers the classes defined in the WPFToolkit.Extended assembly.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.LongUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing long values by using the spinner buttons, keyboard up/down arrows, or mouse
wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Magnifier">
      <summary>Represents a control that allows a user to magnify parts of an application.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MagnifierAdorner">
      <summary>Represents the Magnifier adorner.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MagnifierManager">
      <summary>Represents a manager class for the Magnifier.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Marker">
      <summary>Represents a visible marker drawn along the RadialGauge's circumference to identify an important value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaskedTextBox">
      <summary>Represents a control that lets users display and edit values based on a mask.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialButton">
      <summary>
        <para>
          <font size="2">Represents a button control that uses the material colors and animations</font>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialCheckBox">
      <summary>
        <para>
          <font size="2">Represents a checkbox control that uses the material colors and animations</font>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialComboBox">
      <summary>Class that represents a <strong>ComboBox</strong> control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialComboBoxItem">
      <summary>Class that represents a <strong>ComboBoxItem</strong> control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialDropDown">
      <summary>
        <para>
          <font size="2">Represents a drop-down button control that uses the material colors and animations.</font>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialFrame">
      <summary>
        <para>A <strong>ContentControl</strong> with a customizable shadow and that uses the material colors and animations.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialHamburger">
      <summary>Represents a <strong>ToggleButton</strong> that can pop a Menu on the left, right, top or bottom of a Window (or any FramworkElement).</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialHamburgerMenu">
      <summary>Represents an <strong>ItemsControl</strong> that can be set as the MaterialHamburger.MenuContent. It contains an Header, a Close button, and animated
MaterialHamburgerMenuItems.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialHamburgerMenuItem">
      <summary>Represents one of the items from MaterialHamburgerMenu that can be animated when
the MaterialHamburgerMenu is popped.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialListBox">
      <summary>Class that represents a <strong>ListBox</strong> control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialListBoxItem">
      <summary>Class that represents a <strong>ListBoxItem</strong> control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialProgressBar">
      <summary>A linear progress bar that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialProgressBarBase">
      <summary>Base class for the progress bar controls that use the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialProgressBarCircular">
      <summary>A circular progress bar that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialRadioButton">
      <summary>
        <font size="2">Represents a radio button control that uses the material colors and animations</font>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialSlider">
      <summary>
        <para>
          <font size="2">Represents a slider control that uses the material colors and animations</font>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialSwitch">
      <summary>Represents a ToogleSwitch control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialTabControl">
      <summary>Represents a <strong>TabControl</strong> that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialTabControlCommands">
      <summary>The Commands available to the MaterialTabControl class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialTabItem">
      <summary>Represents a tab item that is used by the MaterialTabControl and that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialTextField">
      <summary>
        <para>Represents a text field that contains a customizable watermark that remains active when text is entered and uses the material colors and animations.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialToast">
      <summary>Represents a <strong>ContentControl</strong> that can be used to display content in any corner or any window or <strong>FrameworkElement</strong>. It uses the
material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialToastAdorner">
      <summary>
        <para>Adorner that is used to display the MaterialToast control.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialToastCommands">
      <summary>Represents the commands available to the MaterialToast control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialToolTip">
      <summary>Represents a ToolTip control that uses the material colors and animations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MessageBox">
      <summary>Represents a message box that has a message and that returns a result.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MonthlyBackgroundData">
      <summary>A class containing data specific to a Month, in order to be displayed as background in a Calendar.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MultiCalendar">
      <summary>The MultiCalendar combines X Microsoft Calendars that can be positioned in a grid with rows and columns. The selected dates, blackout dates and highlighted
dates can be chosen from any calendars. The Background/Foreground of any CalendarDayButton can be easily customized based on its
state(selected/highlighted/blackout/mouseOver/focused/today) and the background of any Calendar can be customized with an image or a brush.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MultiLineTextEditor">
      <summary>Represents a resizable multi-line text editor that displays in a dropdown.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.NumericIndicator">
      <summary>Class that creates an object that is used by the gauge to display the numeric value of RadialGauge.Value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.NumericUpDown`1">
      <summary>Base class of the CommonNumericUpDown&lt;T&gt;.</summary>
      <typeparam name="T">The generic type of the class.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Pie">
      <summary>Draws an arcing segment of a circle (a pie slice). This class cannot be inherited.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowCard">
      <summary>Used for displaying content with a mirror-like reflection in PileFlowPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowItem">
      <summary>Used as wrapper for a FrameworkElement that is displayed in the flow panel, providing animation for the element.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowPanel">
      <summary>Represents the main class of the PileFlowPanel control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowActivationEventArgs">
      <summary>PileFlowItemActivated event arguments.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PlainTextFormatter">
      <summary>Formats the RichTextBox text as plain text.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Pointer">
      <summary>Represents the pointer that visually points to RadialGauge.Value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PointerCap">
      <summary>Represents the base of the pointer at the center of the RadialGauge.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl">
      <summary>Represents an editor of primitive types.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.QueryItemFromTextEventArgs">
      <summary>Arguments for the TokenizedTextBox.QueryItemFromText event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.QueryMoveFocusEventArgs">
      <summary>Provides information on the focus navigation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.QuerySuggestItemForTextEventArgs">
      <summary>Arguments for the TokenizedTextBox.QuerySuggestItemForText event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.QueryTextFromItemEventArgs">
      <summary>Arguments for the TokenizedTextBox.QueryTextFromItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RadialGauge">
      <summary>The main class for the gauge control. Setting the Value property will make the pointer point toward that value along the RadialGauge's circumference.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RangeSlider">
      <summary>RangeSlider is a control which allows interactive input of a Lower and Higher value. The range of input is between the specified Minimum and Maximum values.
Behaves much like the default behavior of the standard Slider control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Rating">
      <summary>The main class for the Rating control. Setting the Value property will highlight the corresponding RatingItem icons.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RatingItem">
      <summary>Represents an individual Icon used by the Rating control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RichTextBox">
      <summary>Extends the System.Windows.Control.RichTextBox control that represents a rich editing control which operates on FlowDocument objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RichTextBoxFormatBar">
      <summary>Represents a contextual formatting toolbar that mimics the behavior of the Microsoft Office 2010 formatting bar.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager">
      <summary>Represents the manager class for using the RichTextBoxFormatBar.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.RtfFormatter">
      <summary>Formats the RichTextBox text as RTF.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ShortUpDown">
      <summary>
        <para>Represents a textbox with button spinners that allow incrementing and decrementing short values by using the spinner buttons, keyboard up/down arrows, or
mouse wheel.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SingleUpDown">
      <summary>Represents a textbox with button spinners that allow incrementing and decrementing float values by using the spinner buttons, keyboard up/down arrows, or mouse
wheel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SlideShow">
      <summary>Control that is used to display slideshow items one after the other like a diaporama. It offers an auto-play mode to automatically play the slideshow items.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SlideShowCommands">
      <summary>SlideShow commands.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SlideShowItem">
      <summary>
        <para>Class that contains the data of an item that will be displayed in the SlideShow control. It
can contain any <strong>UIElement</strong> (e.g., <strong>Image</strong>, <strong>Calendar</strong>, <strong>Grid</strong>,
<strong>ContentControl</strong>).</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SpinEventArgs">
      <summary>Provides information on spin events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Spinner">
      <summary>Base class for controls that represents controls that can spin.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.SplitButton">
      <summary>Represents a button that can be clicked and also provides a drop down in which you can place any custom content.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.StyleableWindow">
      <summary>
        <para>
          <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-size-adjust: none; font-stretch: normal">
Represents a window possessing all of the basic features of a normal window whose elements can all be styled.</span>
        </para>
        <para>
          <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-size-adjust: none; font-stretch: normal">
            <img border="0" alt="" src="images/StylableWindow.png" />
          </span>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Tick">
      <summary>A Tick is a mark on the RadialGauge that helps the user determine with greater precision which value the gauge's pointer is indicating. Ticks are composed of a
mark and a label. MajorTicks use both the mark and the label, but MinorTicks and MiddleTicks use only the mark.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TimeItem">
      <summary>Represents an item in the list in TimePicker's dropdown.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TimelinePanel">
      <summary>Represents a WPF panel that arranges its children along a timeline, based on the Date attached property of each item.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TimePicker">
      <summary>Represents a control that allows users to select a time.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TimeSpanUpDown">
      <summary>
        <para>The TimeSpanUpDown class represents a control that lets you increment or decrement a time value over 24 hours. The Format is Days.Hours:Minutes:Seconds.</para>
        <para></para>
        <para>This class derives from UpDownBase, which is an abstract class that is now the base class for DateTimeUpDown and TimeSpanUpDown. It contains their common
methods and properties.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.ToggleSwitch">
      <summary>Represents an on/off switch where the user can either click, or drag/drop the thumb, to change the value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TokenItem">
      <summary>ContentControl used to display the selected tokens in the TokenizedTextBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TokenizedTextBox">
      <summary>Represents a textbox control that lets you edit and display a series of values as tokens. If an ItemsSource is specified, an AutoComplete popup will appear
with a filtered list of valid values during editing.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TokenizedTextBoxCoreItemsControl">
      <summary>This class is an ItemsControl and is used in the TokenizedTextBox ControlTemplate to display the FilteredItems of the TokenizedTextBox. Its containers are
TokenizedTextBoxItems.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.TokenizedTextBoxItem">
      <summary>Item container used by the TokenizedTextBox to display the control's Items in the dropdown suggestion box.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WatermarkComboBox">
      <summary>Represents a <strong>ComboBox</strong> with a customizable watermark.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WatermarkPasswordBox">
      <summary>The WatermarkPasswordBox is a PasswordBox where you can enter a secure password and display a watermark when the password is not defined.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WatermarkTextBox">
      <summary>Represents a textbox control that permits the use of a watermark.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Wizard">
      <summary>Represents a wizard control that presents pages to assist the user in performing a task or series of tasks</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WizardCommands">
      <summary>Provides a set of commands that can be used to accomplish various actions associated with the Wizard control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.WizardPage">
      <summary>Represents a page in the Wizard.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.XamlFormatter">
      <summary>Formats the RichTextBox text as RTF.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AngleArc.#ctor">
      <summary>Initializes a new instance of the <strong>AngleArc</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AngleArc.ArrangeOverride(System.Windows.Size)">
      <summary>
        <para>
          <font size="2">Arranges a Shape by evaluating its RenderedGeometry and Stretch properties.</font>
        </para>
      </summary>
      <returns>
        <para>
          <font size="2">The final size of the arranged Shape element.</font>
        </para>
      </returns>
      <param name="finalSize">
        <para>
          <font size="2">The final evaluated size of the Shape.</font>
        </para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AngleArc.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>
          <font size="2">Measures a Shape during the first layout pass prior to arranging it.</font>
        </para>
      </summary>
      <returns>
        <para>
          <font size="2">The maximum Size for the Shape.</font>
        </para>
      </returns>
      <param name="constraint">
        <para>
          <font size="2">A maximum Size to not exceed.</font>
        </para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AngleArc.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <para>
          <font size="2">Provides a means to change the default appearance of a Shape element.</font>
        </para>
      </summary>
      <param name="drawingContext">
        <para>
          <font size="2">A DrawingContext object that is drawn during the rendering pass of this Shape.</font>
        </para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AngleArc.DefiningGeometry">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(42,42,42); FONT: 13px/18px &amp;quot;Segoe UI&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, Verdana, Arial, Helvetica, sans-serif; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets a value that represents the</span>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(42,42,42); FONT: 13px/18px &amp;quot;Segoe UI&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, Verdana, Arial, Helvetica, sans-serif; WIDOWS: 1; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
          <strong>Geometry</strong>
        </span>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(42,42,42); FONT: 13px/18px &amp;quot;Segoe UI&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, Verdana, Arial, Helvetica, sans-serif; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
of the <span class="Apple-converted-space">s</span></span>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(42,42,42); FONT: 13px/18px &amp;quot;Segoe UI&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, Verdana, Arial, Helvetica, sans-serif; WIDOWS: 1; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">hape</span>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(42,42,42); FONT: 13px/18px &amp;quot;Segoe UI&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, Verdana, Arial, Helvetica, sans-serif; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AngleArc.EndAngle">
      <summary>Gets or sets the ending angle, in degrees, of the shape.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AngleArc.RenderedGeometry">
      <summary>
        <para>
          <font size="2">Gets a value that represents the final rendered <strong>Geometry</strong> of a Shape.</font>
        </para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AngleArc.StartAngle">
      <summary>Gets or sets the starting angle, in degrees, of the shape.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AngleArc.Thickness">
      <summary>Gets or sets the thickess of the shape.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AngleArc.EndAngleProperty">
      <summary>Identifies the EndAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AngleArc.StartAngleProperty">
      <summary>Identifies the StartAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AngleArc.ThicknessProperty">
      <summary>Identifies the Thickness dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.#ctor(System.ComponentModel.MaskedTextProvider,System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <strong>AutoCompletingMaskEventArgs</strong> class specifying the input text as well as the information required to
automatically complete the mask.</summary>
      <param name="maskedTextProvider">A copy of the <strong>MaskTextProvider</strong> that was used to mask the inputted text.</param>
      <param name="startPosition">A zero-based value indicating the position at which the automatic completion of the mask starts.</param>
      <param name="selectionLength">A value indicating the number of selected characters.</param>
      <param name="input">The input text.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.AutoCompleteStartPosition">
      <summary>Gets or sets a value indicating the position at which the automatic completion of the mask starts.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.AutoCompleteText">
      <summary>Gets or sets the text that will be used to automatically complete the mask.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.Input">
      <summary>Gets the input text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.MaskedTextProvider">
      <summary>Gets a copy of the <strong>MaskTextProvider</strong> that was used to mask the input text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.SelectionLength">
      <summary>
        <para>Gets a value indicating the number of selected characters.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs.StartPosition">
      <summary>Gets the position at which the inputted text starts.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoSelectTextBox.#ctor">
      <summary>Initializes a new instance of the AutoSelectTextBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoSelectTextBox.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled PreviewGotKeyboardFocus attached event reaches this element in its route.</summary>
      <param name="e">A KeyboardFocusChangedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoSelectTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled PreviewKeyDown attached event reaches this element in its route.</summary>
      <param name="e">A KeyEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoSelectTextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled PreviewMouseLeftButtonDown attached event reaches this element in its route.</summary>
      <param name="e">A MouseButtonEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.AutoSelectTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Raises the TextChanged event.</summary>
      <param name="e">A TextChangedEventArgs that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoSelectTextBox.AutoMoveFocus">
      <summary>Gets or sets a value indicating if the focus can navigate in the appropriate flow direction (e.g., from one cell to another when a cell is being edited) when
the cursor is at the beginning or end of the auto-select text box.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.AutoSelectTextBox.AutoSelectBehavior">
      <summary>Gets or sets a value indicating how the content of the auto-select text box is selected.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AutoSelectTextBox.AutoMoveFocusProperty">
      <summary>Identifies the AutoMoveFocus dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AutoSelectTextBox.AutoSelectBehaviorProperty">
      <summary>Identifies the AutoSelectBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.AutoSelectTextBox.QueryMoveFocusEvent">
      <summary>Occurs before the focus navigates to another element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Bubble.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when the IsOpen property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Bubble.IsOpen">
      <summary>Gets or sets a value indicating whether the bubble is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Bubble.Owner">
      <summary>Gets the owner of the bubble.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Bubble.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Bubble.OwnerProperty">
      <summary>Identifies the Owner dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.BubbleAdorner.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the <strong>BubbleAdorner</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BubbleAdorner.Bubble">
      <summary>Gets or sets the Bubble that will be used within the <strong>BubbleAdorner</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.BusyIndicator.#ctor">
      <summary>Initializes a new instance of BusyIndicator.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.BusyIndicator.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.BusyIndicator.ChangeVisualState(System.Boolean)">
      <summary>Changes the control's visual state.</summary>
      <param name="useTransitions">
        <strong>true</strong> if state transitions should be used; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.BusyIndicator.OnIsBusyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>IsBusyProperty property changed handler.</summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.BusyContent">
      <summary>Gets or sets the busy content to display to the user.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.BusyContentTemplate">
      <summary>Gets or sets the DataTemplate to use for displaying the busy content to the user.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.DisplayAfter">
      <summary>
        <para>Gets or sets the time interval that the busy content is delayed before being displayed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.FocusAfterBusy">
      <summary>Gets or sets a value representing the control that will receive the focus once the busy indicator disappears.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.IsBusy">
      <summary>Gets or sets a value indicating whether the busy indicator should be shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.IsContentVisible">
      <summary>Gets or sets a value indicating whether the BusyContent is visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.OverlayStyle">
      <summary>Gets or sets the style to use for the overlay.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.BusyIndicator.ProgressBarStyle">
      <summary>Gets or sets the style to use for the progress bar.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.BusyContentProperty">
      <summary>
        <para>Identifies the BusyContent dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.BusyContentTemplateProperty">
      <summary>
        <para>Identifies the BusyContentTemplate dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.DisplayAfterProperty">
      <summary>
        <para>Identifies the DisplayAfter dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.FocusAfterBusyProperty">
      <summary>Identifies the FocusAfterBusy dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.IsBusyProperty">
      <summary>
        <para>Identifies the IsBusy dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.OverlayStyleProperty">
      <summary>
        <para>Identifies the OverlayStyle dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.BusyIndicator.ProgressBarStyleProperty">
      <summary>
        <para>Identifies the ProgressBarStyle dependency property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ButtonSpinner.#ctor">
      <summary>Initializes a new instance of ButtonSpinner.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ButtonSpinner.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ButtonSpinner.OnContentChanged(System.Object,System.Object)">
      <summary>Occurs when the Content property value changes.</summary>
      <param name="oldValue">The old value of the Content property.</param>
      <param name="newValue">The new value of the Content property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ButtonSpinner.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Cancel. LeftMouseButtonUp events originating from a button that has been disabled.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ButtonSpinner.OnValidSpinDirectionChanged(Xceed.Wpf.Toolkit.ValidSpinDirections,Xceed.Wpf.Toolkit.ValidSpinDirections)">
      <summary>Called when valid spin direction changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ButtonSpinner.AllowSpin">
      <summary>Gets or sets a value indicating whether the spinner buttons are enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ButtonSpinner.ButtonSpinnerLocation">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 14px Verdana, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(251,251,251); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets/Sets the location of the Up/Down buttons (either on the left or on the right) of ButtonSpinner controls.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ButtonSpinner.Content">
      <summary>Gets or sets the content of the ButtonSpinner.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ButtonSpinner.ShowButtonSpinner">
      <summary>Gets or sets a value indicating whether the ButtonSpinner is visible.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ButtonSpinner.AllowSpinProperty">
      <summary>
        <para>Identifies the AllowSpin dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ButtonSpinner.ContentProperty">
      <summary>
        <para>Identifies the Content dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ButtonSpinner.ShowButtonSpinnerProperty">
      <summary>
        <para>Identifies the ShowButtonSpinner dependency property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ByteUpDown.#ctor">
      <summary>Initializes a new instance of the ByteUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.#ctor">
      <summary>Initializes a new instance of the Calculator class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.GetCalculatorButtonType(System.Windows.DependencyObject)">
      <summary>Gets the type of the calculator button.</summary>
      <returns>A CalculatorButtonType representing the type of the calculator button.</returns>
      <param name="target">The dependency object from which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Overrides OnTextInput.</summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.SetCalculatorButtonType(System.Windows.DependencyObject,Xceed.Wpf.Toolkit.Calculator.CalculatorButtonType)">
      <summary>Sets the type of the calculator button.</summary>
      <param name="target">The dependency object from which the property value is read.</param>
      <param name="value">A CalculatorButtonType representing the type of the calculator button.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.OnDisplayTextChanged(System.String,System.String)">
      <summary>Raised when DisplayText changes.</summary>
      <param name="oldValue">The old string value.</param>
      <param name="newValue">The new string value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Calculator.OnValueChanged(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>Invoked when when Value changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonPanelTemplate">
      <summary>
        <para>Gets or sets the <strong>ControlTemplate</strong> that will be applied to the panel that hosts the calculator buttons.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Calculator.DisplayText">
      <summary>Gets or sets the text displayed in the calculator control's "display."</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Calculator.Memory">
      <summary>Gets or sets the numeric value stored in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Calculator.Precision">
      <summary>Gets or sets the maximum number of digits displayed to the right of the decimal point.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Calculator.Value">
      <summary>Gets or sets the currently calculated numeric value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonPanelTemplateProperty">
      <summary>Identifies the CalculatorButtonPanelTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.CalculatorButtonTypeProperty">
      <summary>
        <para>Identifies the <strong>CalculatorButtonType</strong> attached property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.DisplayTextProperty">
      <summary>
        <para>Identifies the DisplayText dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.MemoryProperty">
      <summary>
        <para>Identifies the Memory dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.PrecisionProperty">
      <summary>
        <para>Identifies the Precision dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.ValueChangedEvent">
      <summary>
        <para>Identifies the ValueChanged routed event.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Calculator.ValueProperty">
      <summary>
        <para>Identifies the Value dependency property.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Calculator.ValueChanged">
      <summary>Occurs when the Value changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorCommands.CalculatorButtonClick">
      <summary>Gets the CalculatorButtonClick command.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CalculatorUpDown.#ctor">
      <summary>Initializes a new instance of the CalculatorUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CalculatorUpDown.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorUpDown.DisplayText">
      <summary>Gets or sets the text displayed in the calculator control's "display."</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorUpDown.EnterClosesCalculator">
      <summary>Gets or sets a value indicating whether the Enter keyboard button closes the calculator when pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorUpDown.IsOpen">
      <summary>Gets or sets a value indicating whether the calculator dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorUpDown.Memory">
      <summary>Gets or sets the numeric value stored in the calculator's memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CalculatorUpDown.Precision">
      <summary>Gets or sets the maximum number of digits displayed to the right of the decimal point in the calculator.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CalculatorUpDown.DisplayTextProperty">
      <summary>
        <para>Identifies the DisplayText dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CalculatorUpDown.EnterClosesCalculatorProperty">
      <summary>
        <para>Identifies the EnterClosesCalculator dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CalculatorUpDown.IsOpenProperty">
      <summary>
        <para>Identifies the IsOpen dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CalculatorUpDown.MemoryProperty">
      <summary>
        <para>Identifies the Memory dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CalculatorUpDown.PrecisionProperty">
      <summary>
        <para>Identifies the Precision dependency property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckComboBox.#ctor">
      <summary>Initializes a new instance of CheckComboBox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckComboBox.GetItemDisplayValue(System.Object)">
      <summary>Returns the display value of an item.</summary>
      <returns>An object representing the display value of <em>item</em>.</returns>
      <param name="item">An object representing the item whose display value will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckComboBox.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckComboBox.OnSelectedValueChanged(System.String,System.String)">
      <summary>Called when SelectedValue changes.</summary>
      <param name="oldValue">A string representing the old value.</param>
      <param name="newValue">A string representing the new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckComboBox.OnIsDropDownOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when IsDropDownOpen changes</summary>
      <param name="oldValue">A bool representing the old value.</param>
      <param name="newValue">A bool representing the new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CheckComboBox.IsDropDownOpen">
      <summary>Gets or sets a value indicating whether the combo box drop-down is currently open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CheckComboBox.IsEditable">
      <summary>Gets or sets a value that enables or disables editing of the text in the Textbox of the CheckComboBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CheckComboBox.MaxDropDownHeight">
      <summary>Gets or sets a value representing the maximum dropdown height.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CheckComboBox.Text">
      <summary>Gets or sets the formatted text of the currently checked items.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CheckComboBox.IsDropDownOpenProperty">
      <summary>
        <para>Identifies the IsDropDownOpen dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CheckComboBox.IsEditableProperty">
      <summary>Identifies the IsEditable dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CheckComboBox.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CheckComboBox.TextProperty">
      <summary>
        <para>Identifies the Text dependency property.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CheckComboBox.Closed">
      <summary>Raised when the popup is closed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CheckComboBox.Opened">
      <summary>Raised when the popup is opened.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CheckListBox.#ctor">
      <summary>Initializes a new instance of the CheckListBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.#ctor">
      <summary>Initializes a new instance of the ChildWindow class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.Close">
      <summary>Closes the ChildWindow and sets the WindowState to Closed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnCloseButtonClicked(System.Windows.RoutedEventArgs)">
      <summary>Called when the CloseButtonClicked event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnClosed(System.EventArgs)">
      <summary>Called when the ChildWindow has closed.</summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Occurs when the ChildWindow is closing.</summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Called when an element gets focus.</summary>
      <param name="e">A RoutedEventArgs that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>Called when the HeaderDragDelta event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnHeaderIconDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the HeaderIconDoubleClicked event is
raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnHeaderMouseLeftButtonDoubleClicked(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the HeaderMouseLeftButtonDoubleClicked event is
raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when a key is pressed.</summary>
      <param name="e">A KeyEventArgs that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnLeftPropertyChanged(System.Double,System.Double)">
      <summary>Called when the Left property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnMaximizeButtonClicked(System.Windows.RoutedEventArgs)">
      <summary>Called when the MaximizeButtonClicked event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnTopPropertyChanged(System.Double,System.Double)">
      <summary>Called when the Top property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnWindowResize(Xceed.Wpf.Toolkit.Core.WindowResizeDragEventArgs)">
      <summary>Called when the WindowResizeThumbDrage event is
raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.Show">
      <summary>Shows the ChildWindow and sets the WindowState to Open.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnDesignerWindowStatePropertyChanged(Xceed.Wpf.Toolkit.WindowState,Xceed.Wpf.Toolkit.WindowState)">
      <summary>Called when DesignerWindowState changes.</summary>
      <param name="oldValue">The old WindowState value.</param>
      <param name="newValue">The new WindowState value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnWindowStartupLocationChanged(Xceed.Wpf.Toolkit.WindowStartupLocation,Xceed.Wpf.Toolkit.WindowStartupLocation)">
      <summary>Called when WindowStartupLocation changes.</summary>
      <param name="oldValue">The old WindowStartupLocation value.</param>
      <param name="newValue">The new WindowStartupLocation value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ChildWindow.OnWindowStatePropertyChanged(Xceed.Wpf.Toolkit.WindowState,Xceed.Wpf.Toolkit.WindowState)">
      <summary>Called when WindowState changes.</summary>
      <param name="oldValue">The old WindowState value.</param>
      <param name="newValue">The new WindowState value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.DesignerWindowState">
      <summary>Gets or sets the state of the ChildWindow in the designer.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.DialogResult">
      <summary>Gets or sets a value indicating whether the ChildWindow was accepted or canceled</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.FocusedElement">
      <summary>Gets or sets the FrameworkElement that currently has focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.IsModal">
      <summary>Gets or sets a value indicating whether the ChildWindow is modal.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.WindowStartupLocation">
      <summary>Gets or sets the startup location of the ChildWindow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ChildWindow.WindowState">
      <summary>Gets or sets the current state of the ChildWindow.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ChildWindow.DesignerWindowStateProperty">
      <summary>
        <para>Identifies the DesignerWindowState dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ChildWindow.FocusedElementProperty">
      <summary>
        <para>Identifies the FocusedElement dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ChildWindow.IsModalProperty">
      <summary>
        <para>Identifies the IsModal dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ChildWindow.WindowStartupLocationProperty">
      <summary>
        <para>Identifies the WindowStartupLocation dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ChildWindow.WindowStateProperty">
      <summary>
        <para>Identifies the WindowState dependency property.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ChildWindow.Closed">
      <summary>Occurs when the ChildWindow is closed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ChildWindow.Closing">
      <summary>Occurs when the ChildWindow is closing.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControl.#ctor">
      <summary>Initializes a new instance of the CollectionControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControl.OnItemSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when ItemsSource changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControl.PersistChanges">
      <summary>Persists changes made in the collection editor.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControl.PersistChanges">
      <summary>Returns if an item was added, removed, moved or modified in the collection.</summary>
      <returns>
        <strong>true</strong> if an item was added, removed, moved or modified in the collection; otherwise <strong>false</strong>.</returns>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.EditorDefinitions">
      <summary>Gets or sets the custom editors for the PropertyGrid located in the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.IsReadOnly">
      <summary>Gets or sets whether the CollectionControl is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.Items">
      <summary>Gets or sets the collection used to generate the content of the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.ItemsSource">
      <summary>Gets or sets a list used to generate the content of the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.ItemsSourceType">
      <summary>Gets or sets the type of ItemsSource.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.NewItemTypes">
      <summary>Gets or sets a list of custom item types that appear in the Add ComboBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.PropertiesLabel">
      <summary>
        <span id="BugEvents">Gets or sets the content of properties label (the label on top of the PropertyGrid).</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.PropertyGrid">
      <summary>Gets the PropertyGrid associated with the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.SelectedItem">
      <summary>Gets or sets the currently selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControl.TypeSelectionLabel">
      <summary>
        <span id="BugEvents">Gets or sets the content of types label (the label on top of the ComboBox).</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.EditorDefinitionsProperty">
      <summary>Identifies the EditorDefinitions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemAddedEvent">
      <summary>Identifies the ItemAdded routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemAddingEvent">
      <summary>Identifies the ItemAdding routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemDeletedEvent">
      <summary>Identifies the ItemDeleted routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemDeletingEvent">
      <summary>Identifies the ItemDeleting routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemsProperty">
      <summary>Identifies the Items dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.ItemsSourceTypeProperty">
      <summary>Identifies the ItemsSourceType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.NewItemTypesProperty">
      <summary>Identifies the NewItemTypes dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.PropertiesLabelProperty">
      <summary>Identifies the PropertiesLabel dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControl.TypeSelectionLabelProperty">
      <summary>Identifies the TypeSelectionLabel dependency property</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CollectionControl.ItemAdded">
      <summary>Raised when an item is added to the CollectionControl.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CollectionControl.ItemAdding">
      <summary>Raised when an item is about to be added to the CollectionControl.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CollectionControl.ItemDeleted">
      <summary>Raised when an item is deleted from the CollectionControl.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CollectionControl.ItemDeleting">
      <summary>Raised when an item is about to be deleted from the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlButton.EditorDefinitions">
      <summary>Gets or sets the custom editors for the PropertyGrid located in the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlButton.IsReadOnly">
      <summary>Gets or sets whether the CollectionControlButton is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlButton.ItemsSource">
      <summary>Gets or sets a list used to generate the content of the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlButton.ItemsSourceType">
      <summary>Gets or sets the type of ItemsSource.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlButton.NewItemTypes">
      <summary>Gets or sets a list of custom item types that appear in the Add ComboBox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlButton.EditorDefinitionsProperty">
      <summary>Identifies the EditorDefinitions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlButton.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlButton.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlButton.ItemsSourceTypeProperty">
      <summary>Identifies the ItemsSourceType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlButton.NewItemTypesProperty">
      <summary>Identifies the NewItemTypes dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.CollectionControlButton.CollectionUpdated">
      <summary>Raised when an item is added, removed, moved or modified in the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControlDialog.#ctor">
      <summary>Initializes a new instance of the CollectionControlDialog class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControlDialog.#ctor">
      <summary>Initializes a new instance of the CollectionControlDialog class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.CollectionControlDialog.#ctor(System.Type)">
      <summary>Initializes a new instance of the CollectionControlDialog class, specifying the Type.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.CollectionControl">
      <summary>Gets the CollectionControl from the CollectionControlDialog.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.EditorDefinitions">
      <summary>Gets or sets the custom editors for the PropertyGrid located in the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.IsReadOnly">
      <summary>Gets or sets whether the CollectionControlDialog is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.ItemsSource">
      <summary>Gets or sets a list used to generate the content of the CollectionControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.ItemsSourceType">
      <summary>Gets or sets the type of ItemsSource.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CollectionControlDialog.NewItemTypes">
      <summary>Gets or sets a list of custom item types that appear in the Add ComboBox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlDialog.EditorDefinitionsProperty">
      <summary>Identifies the EditorDefinitions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlDialog.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlDialog.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlDialog.ItemsSourceTypeProperty">
      <summary>Identifies the ItemsSourceType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CollectionControlDialog.NewItemTypesProperty">
      <summary>Identifies the NewItemTypes dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.#ctor">
      <summary>Initializes a new instance of the ColorCanvas class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnUsingAlphaChannelChanged">
      <summary>Called when UsingAlphaChannel changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnAChanged(System.Byte,System.Byte)">
      <summary>Called when A changes.</summary>
      <param name="oldValue">The old byte value.</param>
      <param name="newValue">The new byte value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnBChanged(System.Byte,System.Byte)">
      <summary>Called when B changes.</summary>
      <param name="oldValue">The old byte value.</param>
      <param name="newValue">The new byte value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnGChanged(System.Byte,System.Byte)">
      <summary>Called when G changes.</summary>
      <param name="oldValue">The old byte value.</param>
      <param name="newValue">The new byte value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnHexadecimalStringChanged(System.String,System.String)">
      <summary>Called when HexadecimalString changes.</summary>
      <param name="oldValue">The old string value.</param>
      <param name="newValue">The new string value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorCanvas.OnRChanged(System.Byte,System.Byte)">
      <summary>Called when R changes.</summary>
      <param name="oldValue">The old byte value.</param>
      <param name="newValue">The new byte value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.A">
      <summary>Gets or sets the alpha channel of the SelectedColor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.B">
      <summary>Gets or sets the blue channel of the SelectedColor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.G">
      <summary>Gets or sets the green channel of the SelectedColor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.HexadecimalString">
      <summary>Gets/Sets the hexadecimal string for the SelectedColor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.R">
      <summary>Gets or sets the red channel of the SelectedColor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.SelectedColor">
      <summary>Gets or sets the currently selected color.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorCanvas.UsingAlphaChannel">
      <summary>Gets or sets a value indicating whether the alpha channel is being used.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.AProperty">
      <summary>
        <para>Identifies the A dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.BProperty">
      <summary>
        <para>Identifies the B dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.GProperty">
      <summary>
        <para>Identifies the G dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.HexadecimalStringProperty">
      <summary>
        <para>Identifies the HexadecimalString dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.RProperty">
      <summary>
        <para>Identifies the R dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.SelectedColorChangedEvent">
      <summary>
        <para>Identifies the SelectedColorChanged routed event.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.SelectedColorProperty">
      <summary>
        <para>Identifies the SelectedColor dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorCanvas.UsingAlphaChannelProperty">
      <summary>
        <para>Identifies the UsingAlphaChannel dependency property.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ColorCanvas.SelectedColorChanged">
      <summary>Raised after the SelectedColor property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorItem.#ctor(System.Nullable{System.Windows.Media.Color},System.String)">
      <summary>Initializes a new instance of the ColorItem class, specifying the Color and its name.</summary>
      <param name="color">A Color structure.</param>
      <param name="name">A string representing the name of the ColorItem.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorItem.Color">
      <summary>Gets or sets the color of the ColorItem.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorItem.Name">
      <summary>Gets or sets the name of the ColorItem.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorPicker.#ctor">
      <summary>Initializes a new instance of the ColorPicker class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorPicker.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.AdvancedTabHeader">
      <summary>Gets or sets the text to use for the "Advanced" tab in the ColorPicker's popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.AvailableColors">
      <summary>
        <para>Gets or sets all colors that are available to the user for selection.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.AvailableColorsHeader">
      <summary>Gets or sets the header text of the Available Colors section in the dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ButtonStyle">
      <summary>Gets or sets the dropdown button style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ColorMode">
      <summary>Gets or sets the current display of the ColorPicker (ColorPalette or ColorCanvas). By default, ColorPalette.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.DisplayColorAndName">
      <summary>Gets or sets a value indicating whether the control should display the color, or both the color and the color name, when the color dropdown is closed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.DisplayColorTooltip">
      <summary>Gets or sets if Tooltips will be shown in the popup of the ColorPicker to display the preset color names.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.DropDownBackground">
      <summary>Gets or sets the background of the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.HeaderBackground">
      <summary>Gets or sets the background of the headers used in the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.HeaderForeground">
      <summary>Gets or sets the foreground of the headers used in the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.IsOpen">
      <summary>Gets or sets a value indicating whether the color dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.MaxDropDownWidth">
      <summary>Gets or Sets the maximum width of the ColorPicker popup's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.RecentColors">
      <summary>Gets or sets all the recently selected colors.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.RecentColorsHeader">
      <summary>Gets or sets the header text of the Recent Colors section in the dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.SelectedColor">
      <summary>Gets or sets the currently selected color.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.SelectedColorText">
      <summary>Gets the known color name of the SelectedColor, or its color hexadecimal
string.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ShowAvailableColors">
      <summary>Gets or sets a value indicating whether the Show Available section in the dropdown is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ShowDropDownButton">
      <summary>Gets or sets a value indicating whether the dropdown button is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ShowRecentColors">
      <summary>Gets or sets a value indicating whether the Recent Colors section in the dropdown is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ShowStandardColors">
      <summary>Gets or sets a value indicating whether the Standard Colors section in the dropdown is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.ShowTabHeaders">
      <summary>Gets or sets a value indicating if the Advanced color mode tabs are visible in the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.StandardColors">
      <summary>Gets or sets the collection of standard colors.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.StandardColorsHeader">
      <summary>Gets or sets the header text of the Standard Colors section in the dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.StandardTabHeader">
      <summary>Gets or sets the text to use for the "Standard" tab in the ColorPicker's popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.TabBackground">
      <summary>Gets or sets the background of the tabs used in the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.TabForeground">
      <summary>Gets or sets the foreground of the tabs used in the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorPicker.UsingAlphaChannel">
      <summary>Gets a value indicating whether the alpha channel is being used.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.AdvancedTabHeaderProperty">
      <summary>Identifies the AdvancedTabHeader dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.AvailableColorsHeaderProperty">
      <summary>Identifies the AvailableColorsHeader dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.AvailableColorsProperty">
      <summary>Identifies the AvailableColors dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.AvailableColorsSortingModeProperty">
      <summary>Identifies the AvailableColorsSortingMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ButtonStyleProperty">
      <summary>Identifies the ButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ColorModeProperty">
      <summary>Identifies the ColorMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.DisplayColorAndNameProperty">
      <summary>Identifies the DisplayColorAndName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.DisplayColorTooltipProperty">
      <summary>Identifies the DisplayColorTooltip dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.DropDownBackgroundProperty">
      <summary>Identifies the DropDownBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.HeaderBackgroundProperty">
      <summary>Identifies the HeaderBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.HeaderForegroundProperty">
      <summary>Identifies the HeaderForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.MaxDropDownWidthProperty">
      <summary>Identifies the MaxDropDownWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.RecentColorsHeaderProperty">
      <summary>Identifies the RecentColorsHeader dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.RecentColorsProperty">
      <summary>Identifies the RecentColors dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.SelectedColorChangedEvent">
      <summary>Identifies the SelectedColorChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.SelectedColorProperty">
      <summary>Identifies the SelectedColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.SelectedColorTextProperty">
      <summary>Identifies the SelectedColorText dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ShowAvailableColorsProperty">
      <summary>Identifies the ShowAvailableColors dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ShowDropDownButtonProperty">
      <summary>Identifies the ShowDropDown dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ShowRecentColorsProperty">
      <summary>Identifies the ShowRecentColors dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ShowStandardColorsProperty">
      <summary>Identifies the ShowStandardColors dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.ShowTabHeadersProperty">
      <summary>Identifies the ShowTabHeaders dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.StandardColorsHeaderProperty">
      <summary>Identifies the StandardColorsHeader dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.StandardColorsProperty">
      <summary>Identifies the StandardColors dependency property. .</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.StandardTabHeaderProperty">
      <summary>Identifies the StandardTabHeader dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.TabBackgroundProperty">
      <summary>Identifies the TabBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.TabForegroundProperty">
      <summary>Identifies the TabForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorPicker.UsingAlphaChannelProperty">
      <summary>Identifies the UsingAlphaChannel dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ColorPicker.Closed">
      <summary>R <font size="2">aised when the ColorPicker popup is closed.</font></summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ColorPicker.Opened">
      <summary>
        <para>
          <font size="2">Raised when the ColorPicker popup is opened.</font>
        </para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ColorPicker.SelectedColorChanged">
      <summary>Raised when SelectedColor changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorSpectrumSlider.#ctor">
      <summary>Initializes a new instance of the ColorSpectrumSlider class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorSpectrumSlider.OnApplyTemplate">
      <summary>Invoked whenever ApplyTemplate is called.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ColorSpectrumSlider.OnValueChanged(System.Double,System.Double)">
      <summary>Called when the value of the color spectrum slider changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ColorSpectrumSlider.SelectedColor">
      <summary>Gets or sets the currently selected color.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ColorSpectrumSlider.SelectedColorProperty">
      <summary>Identifies the SelectedColor dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.CommonNumericUpDown`1.ParsingNumberStyle">
      <summary>Gets or sets a value representing the number style of the numeric up-down control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.CommonNumericUpDown`1.ParsingNumberStyleProperty">
      <summary>Identifies the ParsingNumberStyle dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateElement.CompareTo(Xceed.Wpf.Toolkit.DateElement)">
      <summary>Compares this DateElement to another DateElement.</summary>
      <returns>-1 if the caller is less than <em>d,</em> 1 if the caller is greater than <em>d,</em> or 0 if caller and <em>d</em> are identical.</returns>
      <param name="d">A DateElement with which the caller will be compared.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateElement.Date">
      <summary>
        <span id="BugEvents">Gets the starting date of this DateElement.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateElement.DateEnd">
      <summary>
        <span id="BugEvents">Gets the ending date of this DateElement.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateElement.Element">
      <summary>
        <span id="BugEvents">Gets the UIElement of this DateElement.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimePicker.#ctor">
      <summary>Initializes a new instance of the DateTimePicker class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimePicker.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimePicker.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Overrides the OnPreviewKeyDown method.</summary>
      <param name="e">A KeyEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimePicker.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrides the OnPreviewMouseUp method.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimePicker.OnValueChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Called when the DateTimePicker's value changes.</summary>
      <param name="oldValue">The old DateTime value.</param>
      <param name="newValue">The new DateTime value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.AutoCloseCalendar">
      <summary>Gets or sets whether the DatePicker calendar popup will close once the user clicks a new date.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.CalendarDisplayMode">
      <summary>
        <font size="2">Gets/Sets the display mode of the calendar inside the DateTimePicker. Default is Month.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.CalendarWidth">
      <summary>Gets or sets the width of the Calendar inside the popup of the DateTimePicker. The Calendar?s height will be adjusted accordingly.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.TimeFormat">
      <summary>Gets or sets the time format.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.TimeFormatString">
      <summary>Gets or sets the time format string used when TimeFormat is set to Custom.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.TimeWatermark">
      <summary>Gets or sets the time watermark.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimePicker.TimeWatermarkTemplate">
      <summary>Gets or sets the time watermark's data template.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.AutoCloseCalendarProperty">
      <summary>Identifies the AutoCloseCalendar dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.CalendarDisplayModeProperty">
      <summary>Identifies the CalendarDisplayMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.CalendarWidthProperty">
      <summary>Identifies the CalendarWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimeFormatProperty">
      <summary>Identifies the TimeFormat dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimeFormatStringProperty">
      <summary>Identifies the TimeFormatString dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimePickerAllowSpinProperty">
      <summary>Identifies the TimePickerAllowSpin dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimePickerShowButtonSpinnerProperty">
      <summary>Identifies the TimePickerShowButtonSpinner dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimePickerVisibilityProperty">
      <summary>Identifies the TimePickerVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimeWatermarkProperty">
      <summary>Identifies the TimeWatermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimePicker.TimeWatermarkTemplateProperty">
      <summary>Identifies the TimeWatermarkTemplate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.#ctor">
      <summary>Initializes a new instance of the DateTimeUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.ConvertTextToValue(System.String)">
      <summary>Converts text to a DateTime value.</summary>
      <returns>A converted DateTime.</returns>
      <param name="text">The text to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.ConvertValueToText">
      <summary>Converts the DateTimeUpDown's value to text.</summary>
      <returns>A string representing the converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnCultureInfoChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
      <summary>Called when the culture info changes.</summary>
      <param name="oldValue">The old culture info.</param>
      <param name="newValue">The new culture info.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnDecrement">
      <summary>Called by OnSpin when the spin direction is SpinDirection.Decrease.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnIncrement">
      <summary>Called by OnSpin when the spin direction is SpinDirection.Increase.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnTextChanged(System.String,System.String)">
      <summary>Called when Text changes.</summary>
      <param name="previousValue">The previous value.</param>
      <param name="currentValue">The current value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnValueChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Called when the DateTimeUpDown's value changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.SelectAll">
      <summary>Selects all the of the content of the control's textbox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.SetValidSpinDirection">
      <summary>Sets the valid spin directions.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnFormatChanged(Xceed.Wpf.Toolkit.DateTimeFormat,Xceed.Wpf.Toolkit.DateTimeFormat)">
      <summary>Called when Format changes.</summary>
      <param name="oldValue">The old DateTimeFormat.</param>
      <param name="newValue">The new DateTimeFormat.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DateTimeUpDown.OnFormatStringChanged(System.String,System.String)">
      <summary>Called when FormatString changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimeUpDown.AutoClipTimeParts">
      <summary>Gets or sets if the hours, minutes and seconds time parts are clipped automatically.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimeUpDown.Format">
      <summary>Gets or sets the date-time format used by DateTimeUpDown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DateTimeUpDown.FormatString">
      <summary>Gets or sets the date-time format to be used by the control when Format is set to
Custom.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeUpDown.AutoClipTimePartsProperty">
      <summary>Identifies the AutoClipTimeParts dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeUpDown.FormatProperty">
      <summary>Identifies the Format dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DateTimeUpDown.FormatStringProperty">
      <summary>Identifies the FormatString dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DecimalUpDown.#ctor">
      <summary>Initializes a new instance of the DecimalUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DoubleUpDown.#ctor">
      <summary>Initializes a new instance of the DoubleUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DoubleUpDown.ConvertTextToValue(System.String)">
      <summary>Converts the formatted text to a value.</summary>
      <returns>A converted decimal value.</returns>
      <param name="text">The string to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DoubleUpDown.SetValidSpinDirection">
      <summary>Sets the valid spin directions.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DoubleUpDown.AllowInputSpecialValues">
      <summary>Gets or sets a value representing the special values the user is allowed to input, such as "Infinity", "-Infinity" and "NaN" values.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DoubleUpDown.AllowInputSpecialValuesProperty">
      <summary>Identifies the AllowInputSpecialValues dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.#ctor">
      <summary>Initializes a new instance of the DropDownButton class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.OnClick">
      <summary>Raises the Click event and the command's Execute event</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.OnCommandChanged(System.Windows.Input.ICommand,System.Windows.Input.ICommand)">
      <summary>Called when the Command property changes.</summary>
      <param name="oldValue">The old ICommand value.</param>
      <param name="newValue">The new ICommand value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.OnDropDownContentChanged(System.Object,System.Object)">
      <summary>Called when DropDownContent has changed</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.DropDownButton.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when IsOpen changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.Button">
      <summary>Gets or sets the button used by the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.Command">
      <summary>Gets or sets the command to execute when the button is clicked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.CommandParameter">
      <summary>Gets or sets the command parameter to pass to the Command when the button is
clicked</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.CommandTarget">
      <summary>Gets or sets the element on which to raise the specified command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.DropDownContent">
      <summary>Get or sets the object to use as the drop down button's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.DropDownContentBackground">
      <summary>Gets or sets the background of the popup.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.DropDownPosition">
      <summary>Gets or sets the position of the popup relative to the DropDownButton.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.IsDefault">
      <summary>&lt;P&gt;Gets or sets a value that indicates whether a Button is the default button.&lt;/P&gt;&lt;innovasys:widget type="Note Box"
layout="block"&gt;&lt;innovasys:widgetproperty layout="block" name="Content"&gt;A user invokes the default button by pressing the ENTER
key.&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.IsOpen">
      <summary>Gets or sets a value indicating whether the dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.DropDownButton.MaxDropDownHeight">
      <summary>Gets or sets a value representing the maximum height of the popup in the control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.ClickEvent">
      <summary>Identifies the Click routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.ClosedEvent">
      <summary>Identifies the Closed routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.CommandParameterProperty">
      <summary>Identifies the CommandParameter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.CommandTargetProperty">
      <summary>Identifies the CommandTarget dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.DropDownContentProperty">
      <summary>Identifies the DropDownContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.DropDownButton.OpenedEvent">
      <summary>Identifies the Opened routed event.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.DropDownButton.Click">
      <summary>Raised when the control is clicked</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.DropDownButton.Closed">
      <summary>Raised when the DropDownButton dropdown has closed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.DropDownButton.Opened">
      <summary>Raised when the DropDownButton dropdown has opened.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ExtendedTabControl.#ctor">
      <summary>Initializes a new instance of the ExtendedTabControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ExtendedTabControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the <strong>ItemsSource</strong> changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControl.CachedContentTemplate">
      <summary>Gets or sets the cached ContentTemplate for the ExtendedTabControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControl.CacheTabItems">
      <summary>Gets or sets if the TabItems will be cached or reloaded while switching the selected TabItems.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControl.ShowDropListButton">
      <summary>Gets or sets if the DropList button is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControl.ShowPrevNextButtons">
      <summary>Gets or sets if the Previous and Next buttons are displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ExtendedTabControl.CachedContentTemplateProperty">
      <summary>Identifies the CachedContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ExtendedTabControl.CacheTabItemsProperty">
      <summary>Identifies the CacheTabItems dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ExtendedTabControl.ShowDropListButtonProperty">
      <summary>Identifies the ShowDropListButton dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ExtendedTabControl.ShowPrevNextButtonsProperty">
      <summary>Identifies the ShowPrevNextButtons dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControlCommands.NextTab">
      <summary>Gets the <strong>NextTab</strong> routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ExtendedTabControlCommands.PreviousTab">
      <summary>Gets the <strong>PreviousTab</strong> routed command.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.FilePicker.#ctor">
      <summary>Initializes a new instance of the <strong>FilePicker</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.FilePicker.OnSelectedValueChanged(System.String,System.String)">
      <summary>Raises the <strong>SelectedValueChanged</strong> event.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.BrowseButtonStyle">
      <summary>Gets or sets the style of the "Browse" button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.BrowseContent">
      <summary>Gets or sets the content of the "Browse" button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.Filter">
      <summary>Gets or sets the filter to ues when opening the browsing window. For example, "Image Files | *.jpg;*.jpeg"</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.InitialDirectory">
      <summary>Gets or sets the path that will be used as the intial directory when the browsing window is opened.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.IsOpen">
      <summary>Gets or sets a value indicating whether the browsing window is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.MultiSelect">
      <summary>Gets or sets a value indicating whether mulitple files can be selected in the browsing window.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.SelectedFile">
      <summary>Gets or sets the name of the selected file.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.SelectedFiles">
      <summary>Gets or sets a collection of strings representing the names of the selected files.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.SelectedValue">
      <summary>Gets the string representing the displayed selection(s) in the FilePicker.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.Title">
      <summary>Gets or sets the title of the browsing window.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.UseFullPath">
      <summary>Gets or sets a value indicating whether the full path of the selected file(s) should be included when return the name of the selected file(s) through the
SelectedFile or <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.FilePicker~SelectedFiles.html">SelectedFiles</see> properties.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.Watermark">
      <summary>Gets or sets the watermark to display when no files are selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.FilePicker.WatermarkTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> to use for the Watermark.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.BrowseButtonStyleProperty">
      <summary>Identifies the BrowseButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.BrowseContentProperty">
      <summary>Identifies the BrowseContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.FilterProperty">
      <summary>Identifies the Filter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.InitialDirectoryProperty">
      <summary>Identifies the IntialDirectory dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.MultiSelectProperty">
      <summary>Identifies the MultiSelect dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.SelectedFileChangedEvent">
      <summary>Identifies the SeletedFileChanged event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.SelectedFileProperty">
      <summary>Identifies the SelectedFile dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.SelectedFilesChangedEvent">
      <summary>Identifies the SelectedFileChanged event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.SelectedFilesProperty">
      <summary>Identifies the SelectedFiles dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.SelectedValueProperty">
      <summary>Identifies the SelectedValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.UseFullPathProperty">
      <summary>Identifies the UseFullPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.WatermarkProperty">
      <summary>Identifies the Watermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.FilePicker.WatermarkTemplateProperty">
      <summary>Identifies the WatermarkTemplate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.GaugePie.#ctor">
      <summary>Initializes a new instance of the GaugePie class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePie.EndAngle">
      <summary>Gets of sets the end angle, in degrees, of the pie slice representing the gauge, or the end angle of the flat base in a circular gauge. Angle 0 is the top, 90
is the right, 180 is the bottom and 270 is the left.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePie.IsClosed">
      <summary>
        <para>Gets or sets the closing of the GaugePie shape. If not closed, only the arc is used, the shape will not be filled in with a background color.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePie.RenderedGeometry">
      <summary>Gets the RenderedGeometry of the GaugePie.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePie.StartAngle">
      <summary>Gets of sets the start angle, in degrees, of the pie slice representing the gauge, or the start angle of the base in a circular gauge. Angle 0 is the top, 90
is the right, 180 is the bottom and 270 is the left.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePie.SweepDirection">
      <summary>Gets or sets the direction in which the GaugePie will be drawn when going from StartAngle to EndAngle, either ClockWise or CounterClockWise.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.GaugePie.EndAngleProperty">
      <summary>Identifies the EndAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.GaugePie.IsClosedProperty">
      <summary>Identifies the IsClosed dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.GaugePie.StartAngleProperty">
      <summary>Identifies the StartAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.GaugePie.SweepDirectionProperty">
      <summary>Identifies the SweepDirection dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.GaugePortion.#ctor">
      <summary>Initializes a new instance of the GaugePortion class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePortion.Margin">
      <summary>Gets or sets the GaugePortion's margin from the Border of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePortion.PortionColor">
      <summary>Gets or sets the GaugePortion's fill color.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.GaugePortion.PortionSize">
      <summary>Gets or sets the percentage of the RadialGauge covered by the GaugePortion. For example, if the first GaugePortion's PortionSize is set to 30, it will cover
(and let you customize the margin and color of) the first 30% of the gauge's displayed range of values. If a second GaugePortion is 70, the second portion will
cover the 30% to 100% displayed range of values.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.IconButton.#ctor">
      <summary>Initializes a new instance of the IconButton class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.Icon">
      <summary>Gets or sets the image to use as the icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.IconLocation">
      <summary>Gets or sets the location of the icon relative to the Content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MouseOverBackground">
      <summary>Gets or sets the background brush when the mouse is over.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MouseOverBorderBrush">
      <summary>Gets or sets the border brush when the mouse is over.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MouseOverForeground">
      <summary>Gets or sets the foreground brush when the mouse is over.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MousePressedBackground">
      <summary>Gets or sets the background brush when the IconButton is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MousePressedBorderBrush">
      <summary>Gets or sets the border brush when the IconButton is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.IconButton.MousePressedForeground">
      <summary>Gets or sets the foreground brush when the IconButton is pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.IconLocationProperty">
      <summary>Identifies the IconLocation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.IconProperty">
      <summary>Identifies the Icon dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MouseOverBackgroundProperty">
      <summary>Identifies the MouseOverBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MouseOverBorderBrushProperty">
      <summary>Identifies the MouseOverBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MouseOverForegroundProperty">
      <summary>Identifies the MouseOverForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MousePressedBackgroundProperty">
      <summary>Identifies the MousePressedBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MousePressedBorderBrushProperty">
      <summary>Identifies the MousePressedBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.IconButton.MousePressedForegroundProperty">
      <summary>Identifies the MousePressedForeground dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.IntegerUpDown.#ctor">
      <summary>Initializes a new instance of the IntegerUpDown class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.InvalidValueEventArgs.Text">
      <summary>
        <font size="2">Gets the invalid string entered.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ItemAddingEventArgs.Item">
      <summary>Gets the item being added.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ItemDeletingEventArgs.Item">
      <summary>Gets the item being deleted.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ItemEventArgs.Item">
      <summary>Gets the added/deleted item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Licenser.LicenseKey">
      <summary>Gets or sets the license key.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.LongUpDown.#ctor">
      <summary>Initializes a new instance of the LongUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.#ctor">
      <summary>Initializes a new instance of the Magnifier class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.Freeze(System.Boolean)">
      <summary>Use this method to tell the Magnifier to start or stop updating its position (to follow or not the mouse's position).</summary>
      <param name="freeze">Value that tells the Magnifier to start (<em>freeze</em> = <strong>false</strong>) or stop (<em>freeze</em> = <strong>true</strong>) updating its position.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.OnRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when Radius changes.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.OnZoomFactorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when ZoomFactor changes.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Magnifier.OnFrameTypeChanged(Xceed.Wpf.Toolkit.FrameType,Xceed.Wpf.Toolkit.FrameType)">
      <summary>Called when FrameType changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.FrameType">
      <summary>Gets or sets the type of frame used by the Magnifier.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.IsFrozen">
      <summary>Gets if the Magnifier is frozen. When frozen, the Magnifier will not update its position and will not follow the mouse position.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.IsUsingZoomOnMouseWheel">
      <summary>
        <font size="2">Gets/Sets if the zooming is activated when scrolling the mouse wheel. Default is True.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.Radius">
      <summary>Gets or sets the radius of the Magnifier.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.Target">
      <summary>Gets or sets the UIElement to which the Magnifier is attached.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.ZoomFactor">
      <summary>Gets or sets the zoom factor in the Magnifier.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Magnifier.ZoomFactorOnMouseWheel">
      <summary>
        <font size="2">Gets/Sets the Zoom factor to be used when scrolling the mouse wheel. Property IsUsingZoomOnMouseWheel needs to be true for this property to have
an effect. Default is 0.1.</font>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Magnifier.FrameTypeProperty">
      <summary>Identifies the FrameType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Magnifier.RadiusProperty">
      <summary>Identifies the Radius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Magnifier.TargetProperty">
      <summary>Identifies the Target dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Magnifier.ZoomFactorProperty">
      <summary>Identifies the ZoomFactor dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierAdorner.#ctor(System.Windows.UIElement,Xceed.Wpf.Toolkit.Magnifier)">
      <summary>Initializes a new instance of the MagnifierAdorner class.</summary>
      <param name="element">A UIElement representing the adorned element.</param>
      <param name="magnifier">The associated Magnifier.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierAdorner.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines the size.</summary>
      <returns>
        <span>
          <span>The actual size used.</span>
        </span>
      </returns>
      <param name="finalSize">
        <span>
          <span>The final area within the parent that this element should use to arrange itself and its children.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierAdorner.GetVisualChild(System.Int32)">
      <summary>Returns a child at the specified index from a collection of child elements.</summary>
      <returns>
        <span>
          <span>The requested child element.</span>
        </span>
      </returns>
      <param name="index">
        <span>
          <span>The zero-based index of the requested child element in the collection.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierAdorner.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <returns>The size of the control, up to the maximum specified by <em>constraint</em>.</returns>
      <param name="constraint">
        <span>
          <span>The maximum size that the method can return.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MagnifierAdorner.VisualChildrenCount">
      <summary>Gets the number of visual child elements within this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierManager.#ctor">
      <summary>Initializes a new instance of the MagnifierManager class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierManager.GetMagnifier(System.Windows.UIElement)">
      <summary>Returns the current Magnifier of the passed UIElement.</summary>
      <returns>The current Magnifier of the passed UIElement.</returns>
      <param name="element">The UIElement whose Magnifier will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MagnifierManager.SetMagnifier(System.Windows.UIElement,Xceed.Wpf.Toolkit.Magnifier)">
      <summary>Sets the Magnifier using the passed UIElement and Magnifier.</summary>
      <param name="element">The UIElement whose Magnifier will be set.</param>
      <param name="value">The Magnifier that will be set.</param>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MagnifierManager.CurrentProperty">
      <summary>Identifies the Current attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Marker.#ctor">
      <summary>Initializes a new instance of the Marker class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Marker.Angle">
      <summary>Gets the rotation angle of the marker.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Marker.Position">
      <summary>Gets the offset of the marker from the center of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Marker.Value">
      <summary>Gets or sets the position of the marker along the circumference of the RadialGauge between the gauge's Minimum and Maximum values.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Marker.AngleProperty">
      <summary>Identifies the Angle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Marker.PositionProperty">
      <summary>Identifies the Position dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Marker.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.#ctor">
      <summary>Initializes a new instance of the MaskedTextBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.GetMaskCharacters">
      <summary>Retrieves the mask characters that are supported by the masked text box.</summary>
      <returns>An array of characters containing the mask characters that are supported by the masked text box (see Remarks).</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.OnAutoCompletingMask(Xceed.Wpf.Toolkit.AutoCompletingMaskEventArgs)">
      <summary>Raises the AutoCompletingMask event.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>Called when an unhandled <strong>DragEnter</strong> attached routed event reaches this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.OnDragOver(System.Windows.DragEventArgs)">
      <summary>Called when an unhandled <strong>DragOver</strong> attached routed event reaches this element.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.OnInitialized(System.EventArgs)">
      <summary>Raises the Initialized event. This method is invoked whenever IsInitialized is set to true internally.</summary>
      <param name="e">The RoutedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.ValidateValue(System.Object)">
      <summary>Validates the specified value to ensure that it fits in the mask specified by the Mask property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.CreateMaskedTextProvider(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
      <summary>Creates the masked-text provider that will be used by the masked text box specifying various settings.</summary>
      <param name="mask">The string that will be used as the input mask.</param>
      <param name="cultureInfo">The CultureInfo that will be used by the masked-text provider.</param>
      <param name="allowPromptAsInput">true if the prompt char should be considered as a valid input character; false, otherwise. By default, true.</param>
      <param name="promptChar">A character that represents the positions in the masked text box that require input. By default, "_"? (underscore).</param>
      <param name="passwordChar">A character that represents the character to used to mask a password.</param>
      <param name="restrictToAscii">true if non-ASCII characters are accepted; false otherwise. By default, false.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaskedTextBox.GetFormatSpecifierFromMask(System.String,System.IFormatProvider)">
      <summary>Retrieves a format specifier from the specified mask and format provider.</summary>
      <param name="mask">The mask from which the format specifier is to be extracted.</param>
      <param name="formatProvider">An <strong>IFormatProvider</strong> that will be used to extract the appropriate symbols for any numeric mask characters contained in the mask.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.AllowPromptAsInput">
      <summary>Gets or sets a value indicating if the prompt character should be considered as
a valid input character.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.ClipboardMaskFormat">
      <summary>Gets or sets a value representing the mask format that will be used when the inputted text is copied to the clipboard.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.HidePromptOnLeave">
      <summary>Gets or sets a value indicating if the prompt character is hidden when the
masked text box loses focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.IncludeLiteralsInValue">
      <summary>Gets or sets a value indicating if literal characters in the input mask should be used to calculate the numeric value of the input text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.IncludePromptInValue">
      <summary>Gets or sets a value indicating if prompt characters in the input mask should be included in the numeric value of the input text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.InsertKeyMode">
      <summary>Gets or sets a value representing the text insertion mode of the masked text box.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.IsMaskCompleted">
      <summary>Gets a value indicating if all <strong>required</strong> characters have been inputted into the mask.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.IsMaskFull">
      <summary>Gets a value indicating if all characters, required and optional, have been inputted into the mask.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.Mask">
      <summary>Gets or sets the input mask.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.MaskedTextProvider">
      <summary>
        <span class="st">Gets the MaskedTextProvider that was used to mask the input text.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.PromptChar">
      <summary>Gets or sets the character that represents the positions in the masked text box that require user input.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.RejectInputOnFirstFailure">
      <summary>Gets or sets a value indicating if inputted text that is pasted into the masked text box can be rejected if it contains an invalid character for the
corresponding mask position.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.ResetOnPrompt">
      <summary>Gets or sets a value indicating if the character at the current caret position should be reset when the prompt character is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.ResetOnSpace">
      <summary>Gets or sets a value indicating if the character at the current caret position should be reset when the space bar is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.RestrictToAscii">
      <summary>Gets or sets a value indicating if the masked text box accepts non-ASCII characters.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaskedTextBox.SkipLiterals">
      <summary>Gets or sets a value indicating if literal values can be overwritten by their same values.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.AllowPromptAsInputProperty">
      <summary>Identifies the AllowPromptAsInput dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.ClipboardMaskFormatProperty">
      <summary>Identifies the ClipboardMaskFormat dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.HidePromptOnLeaveProperty">
      <summary>Identifies the HidePromptOnLeave dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.IncludeLiteralsInValueProperty">
      <summary>Identifies the IncludeLiteralsInValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.IncludePromptInValueProperty">
      <summary>Identifies the IncludePromptInValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.InsertKeyModeProperty">
      <summary>Identifies the InsertKeyMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.IsMaskCompletedProperty">
      <summary>Identifies the IsMaskCompleted dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.IsMaskFullProperty">
      <summary>Identifies the IsMaskFull dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.MaskProperty">
      <summary>Identifies the Mask dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.PromptCharProperty">
      <summary>Identifies the PromptChar dependency property. The identifier for the
PromptChar dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.RejectInputOnFirstFailureProperty">
      <summary>Identifies the RejectInputOnFirstFailure dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.ResetOnPromptProperty">
      <summary>Identifies the ResetOnPrompt dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.ResetOnSpaceProperty">
      <summary>Identifies the ResetOnSpace dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.RestrictToAsciiProperty">
      <summary>Identifies the RestrictToAscii dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaskedTextBox.SkipLiteralsProperty">
      <summary>Identifies the SkipLiterals dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MaskedTextBox.AutoCompletingMask">
      <summary>Raised when a mask is being automatically created.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.#ctor">
      <summary>Initializes a new instance of the MaterialButton class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrides the <strong>OnMouseLeftButtonDown</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrides the <strong>OnMouseLeftButtonUp</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialButton.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.InkEffectBrush">
      <summary>
        <para>
          <font size="2">Gets or sets the brush to use for the ink effect when the button is pressed.</font>
        </para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.InkEffectOpacity">
      <summary>Gets or sets <font size="2">the opacity to use for the InkEffectBrush when
the button is pressed.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.IsInkEffectActive">
      <summary>Gets or sets a value indicating whether <font size="2">the ink effect will be shown when the button is pressed.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.IsRaisedActive">
      <summary>Gets or sets a value indicating whether <font size="2">the raised effect will be used when the mouse is over the button.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialButton.Mode">
      <summary>
        <para>Gets or sets a value representing the button's shape.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.InkEffectBrushProperty">
      <summary>Identifies the InkEffectBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.InkEffectOpacityProperty">
      <summary>Identifies the InkEffectOpacity dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.IsInkEffectActiveProperty">
      <summary>Identifies the IsInkEffectActive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.IsRaisedActiveProperty">
      <summary>Identifies the IsRaisedActive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialButton.ModeProperty">
      <summary>Identifies the Mode dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialCheckBox.#ctor">
      <summary>Initializes a new instance of the MaterialCheckBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialCheckBox.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialCheckBox.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialCheckBox.CheckMarkBrush">
      <summary>Gets or sets the brush to use for the checkmark.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialCheckBox.CornerRadius">
      <summary>Gets or sets the corner radius of the checkbox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background and border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialCheckBox.CheckMarkBrushProperty">
      <summary>Identifies the CheckMarkBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialCheckBox.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialCheckBox.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.#ctor">
      <summary>Initalizes a new instance of the <strong>MaterialComboBox</strong> control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Raises the <strong>KeyDown</strong> event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Raises the <strong>PreviewKeyDown</strong> event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnInkEffectBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the InkEffectBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnInkEffectOpacityChanged(System.Double,System.Double)">
      <summary>Called when the InkEffectOpacity property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnIsInkEffectActiveChanged(System.Boolean,System.Boolean)">
      <summary>Called when the IsInkEffectActive property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBox.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.DropDownContentBackground">
      <summary>
        <span id="BugEvents">Gets or sets the brush to use for the background of the popup.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when the combo-box item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.InkEffectOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the ink effect brush on when a combo-box item is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a combo-box item when it is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.IsUsingFadeAnimation">
      <summary>
        <para>Gets or sets a value indicating whether the fading animation will be used when opening the dropdown.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.LineBrush">
      <summary>
        <para>Gets ot sets the brush to use for the line under the text when the control is not focused.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.LineFocusBrush">
      <summary>
        <para>Gets ot sets the brush to use for the line under the text when the control is focused.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialAccentBrush">
      <summary>
        <para>Gets or sets the color that will be used as the control's background and border.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialForeground">
      <summary>Gets or set the color to use for the control's foreground and ink-effect.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.DropDownContentBackgroundProperty">
      <summary>
        <div>
    Identifies the DropDownContentBackground dependency
    property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.IsUsingFadeAnimationProperty">
      <summary>
        <div>
    Identifies the IsUsingFadeAnimation dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.LineBrushProperty">
      <summary>
        <div>
    Identifies the LineBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.LineFocusBrushProperty">
      <summary>
        <div>
    Identifies the LineFocusBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBox.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.#ctor">
      <summary>Initializes a new instance of the <strong>MaterialComboBoxItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Raises the <strong>KeyDown</strong> event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Raises the <strong>MouseEnter</strong> event.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>MouseLEftButtonDown</strong> event.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>MouseLeftButtonUp</strong> event.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnInkEffectBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the InkEffectBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnInkEffectOpacityChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Called when the InkEffectOpacity property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The the value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnIsInkEffectActiveChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Called when the IsInkEffectActive property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialComboBoxItem.OnMaterialForegroundChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialForeground property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when the combo-box item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.InkEffectOpacity">
      <summary>Gets or sets the brush to use for the ink effect when the combo-box item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a combo-box item when it is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialAccentBrush">
      <summary>
        <para>Gets or sets the color that will be used as the control's background and border.</para>
        <para></para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialForeground">
      <summary>Gets or set the color to use for the control's foreground and ink-effect.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialComboBoxItem.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialDropDown.#ctor">
      <summary>Initializes a new instance of the MaterialDropDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialDropDown.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialDropDown.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialDropDown.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.InkEffectBrush">
      <summary>
        <para>
          <font size="2">Gets or sets the brush to use for the ink effect when the drop-down's button is pressed.</font>
        </para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.InkEffectOpacity">
      <summary>Gets or sets <font size="2">the opacity to use for the InkEffectBrush
when the drop-down's button is pressed.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.IsInkEffectActive">
      <summary>Gets or sets a value indicating whether <font size="2">the ink effect will be shown when the drop-down's button is pressed.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.IsUsingFadeAnimation">
      <summary>
        <para>Gets or sets a value indicating whether the fading animation will be used when opening the dropdown.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.InkEffectBrushProperty">
      <summary>Identifies the InkEffectBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.InkEffectOpacityProperty">
      <summary>Identifies the InkEffectOpacity dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.IsInkEffectActiveProperty">
      <summary>Identifies the IsInkeffectActive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.IsUsingFadeAnimationProperty">
      <summary>Identifies the IsUsingFadeAnimation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialDropDown.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialFrame.#ctor">
      <summary>Initializes a new instance of the MaterialFrame class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.CornerRadius">
      <summary>Gets or sets the control's corner radius.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.ShadowBlurRadius">
      <summary>
        <para>Gets or sets the blur radius to use for the shadow.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.ShadowColor">
      <summary>
        <para>Gets or sets the color to use for the shadow.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.ShadowDepth">
      <summary>
        <para>Gets or sets the depth to use for the shadow.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.ShadowDirection">
      <summary>
        <para>Gets or sets the direction of the shadow in degress.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.ShadowOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the shadow.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialFrame.Z">
      <summary>
        <para>Gets or sets the predefined shadow to use for the control.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ShadowBlurRadiusProperty">
      <summary>Identifies the ShadowBlurRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ShadowColorProperty">
      <summary>Identifies the ShadowColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ShadowDepthProperty">
      <summary>Identifies the ShadowDepth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ShadowDirectionProperty">
      <summary>Identifies the ShadowDirection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ShadowOpacityProperty">
      <summary>Identifies the Z dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialFrame.ZProperty">
      <summary>
        <div>
    Identifies the Z dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialHamburger.#ctor">
      <summary>Initializes a new instance of the MaterialHamburger class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.CanResizeMenu">
      <summary>Gets or sets if the popped menu can be resized with the mouse.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.CheckedContent">
      <summary>Gets or sets the Content of the ToggleButton when the MaterialHamburger is checked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialForeground">
      <summary>Gets or sets the color to use as the control's foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MenuContent">
      <summary>Gets or sets the content of the popped menu.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MenuLocation">
      <summary>Gets or sets the position of the popped menu.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.MenuOwner">
      <summary>Gets or sets the owner of the popped menu.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburger.UncheckedContent">
      <summary>Gets or sets the Content of the ToggleButton when the MaterialHamburger is not checked.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.CanResizeMenuProperty">
      <summary>Identifies the CanResizeMenu dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.CheckedContentProperty">
      <summary>Identifies the CheckedContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MenuContentProperty">
      <summary>Identifies the MenuContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MenuLocationProperty">
      <summary>Identifies the MenuLocation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.MenuOwnerProperty">
      <summary>Identifies the MenuOwner dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburger.UncheckedContentProperty">
      <summary>Identifies the UncheckedContent dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.#ctor">
      <summary>Initializes a new instance of the MaterialHamburgerMenu class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.CloseButtonLocation">
      <summary>Gets or sets the location of the Close button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.CloseButtonStyle">
      <summary>Gets or sets the Style for the Close button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.Header">
      <summary>Gets or sets the header to use.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.HeaderTemplate">
      <summary>Gets or sets the DataTemplate to use for the Header.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.IsAnimatingItems">
      <summary>Gets or sets if the Items from the MaterialHamburgerMenu will be animated (sliding in) when the MaterialHamburgerMenu is popped.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialForeground">
      <summary>Gets or sets the color to use as the control's foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MenuLocation">
      <summary>Gets the position of the <strong>MaterialHamburgerMenu</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.CloseButtonLocationProperty">
      <summary>Identifies the CloseButtonLocation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.CloseButtonStyleProperty">
      <summary>Identifies the CloseButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.HeaderProperty">
      <summary>Identifies the Header dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.HeaderTemplateProperty">
      <summary>Identifies the HeaderTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.IsAnimatingItemsProperty">
      <summary>Identifies the IsAnimatingItems dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialHamburgerMenu.MenuLocationProperty">
      <summary>Identifies the MenuLocation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialHamburgerMenuItem.#ctor">
      <summary>Initializes a new instance of the MaterialHamburgerItem class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.#ctor">
      <summary>Initalizes a new instance of the <strong>MaterialListBox</strong> control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.OnInkEffectBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the InkEffectBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.OnInkEffectOpacityChanged(System.Double,System.Double)">
      <summary>Called when the InkEffectBOpacity property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.OnIsInkEffectActiveChanged(System.Boolean,System.Boolean)">
      <summary>Called when the IsInkEffectActive property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBox.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when the listbox item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.InkEffectOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the ink effect brush on when a listbox item is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a listbox item when it is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background and border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBox.MaterialForeground">
      <summary>Gets or set the color to use for the control's foreground and ink-effect.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBox.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.#ctor">
      <summary>Initializes a new instance of the <strong>MaterialListBoxItem</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Called when the listbox item is selected.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Called when the listbox item is unselected.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnInkEffectBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the OnInkEffectBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnInkEffectOpacityChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>Called when the OnInkEffectOpacity property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnIsInkEffectActiveChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>Called when the IsInkEffectActive property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialListBoxItem.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBoxItem.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when the listbox item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBoxItem.InkEffectOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the ink effect brush on when a listbox item is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBoxItem.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a listbox item when it is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialListBoxItem.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control. A MaterialAccentEnum representing the
material color palette that will be applied to the control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBoxItem.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBoxItem.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBoxItem.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialListBoxItem.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBar.#ctor">
      <summary>Initializes a new instance of the MaterialProgressBar class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBar.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarBase.OnIndeterminateIndicatorMaxLengthChanged(System.Double,System.Double)">
      <summary>Called when the IndeterminateIndicatorMaxLength
property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarBase.OnIndeterminateIndicatorMinLengthChanged(System.Double,System.Double)">
      <summary>Called when the IndeterminateIndicatorMinLength
property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarBase.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarBase.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorMaxLength">
      <summary>
        <para>Gets or sets the maximum length of the progress bar?s indicator, in percent, when the the progress bar has an indetermined range.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorMinLength">
      <summary>
        <para>Gets or sets the minimum length of the progress bar?s indicator, in percent, when the the progress bar has an indetermined range.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorSpeedRatio">
      <summary>
        <para>Gets or sets the speed ratio of the progress bar?s indicator when the the progress bar has an indetermined range.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorMaxLengthProperty">
      <summary>Identifies the IndeterminateIndicatorMaxLength
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorMinLengthProperty">
      <summary>Identifies the IndeterminateIndicatorMinLength
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.IndeterminateIndicatorSpeedRatioProperty">
      <summary>Identifies the IndeterminateIndicatorSpeedRatio
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarBase.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.#ctor">
      <summary>Initializes a new instance of the MaterialProgressBarCircular class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.OnIndeterminateRotationSpeedRatioChanged(System.Double,System.Double)">
      <summary>Called when the IndeterminateRotationSpeedRatio property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.IndeterminateRotationSpeedRatio">
      <summary>
        <para>Gets or sets the rotation speed ratio of the progress bar?s indicator when the the progress bar has an indetermined range.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.Thickness">
      <summary>
        <para>Gets or sets the thickness of the indicator.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.IndeterminateRotationSpeedRatioProperty">
      <summary>
        <div>
    Identifies the IndeterminateRotationSpeedRatio dependency
    property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialProgressBarCircular.ThicknessProperty">
      <summary>
        <div>
    Identifies the Thickness dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialRadioButton.#ctor">
      <summary>Initializes a new instance of the MaterialRadioButton class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialRadioButton.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialRadioButton.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialRadioButton.CheckMarkBrush">
      <summary>Gets or sets the brush to use for the checkmark.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialRadioButton.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialRadioButton.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's checkmark and border.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialRadioButton.CheckMarkBrushProperty">
      <summary>
        <div>
    Identifies the CheckMarkBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialRadioButton.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialRadioButton.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialRadioButton.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.#ctor">
      <summary>Initializes a new instance of the MaterialSlider class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Overrides the <strong>OnGotFocus</strong> method.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Overrides the <strong>OnLostFocus</strong> method.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnValueChanged(System.Double,System.Double)">
      <summary>Overrides the <strong>OnValueChanged</strong> method?</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnBubbleLocationChanged(Xceed.Wpf.Toolkit.MaterialSliderBubbleLocationEnum,Xceed.Wpf.Toolkit.MaterialSliderBubbleLocationEnum)">
      <summary>Called when the BubbleLocation property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnBubbleTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the BubbleTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSlider.OnModeChanged(Xceed.Wpf.Toolkit.MaterialSliderModeEnum,Xceed.Wpf.Toolkit.MaterialSliderModeEnum)">
      <summary>Called when the Mode property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.BubbleLocation">
      <summary>
        <para>Gets or sets the location of the bubble.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.BubbleTemplate">
      <summary>Gets or sets the bubble's DataTemplate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background and border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.Mode">
      <summary>Gets or sets the slider's mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.NearestTick">
      <summary>
        <para>Gets the tick that is the closest from the current value.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.ShowTicks">
      <summary>Gets or sets a value indicating whether the ticks are shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.ThumbResizeScaleFactor">
      <summary>
        <para>Gets or sets the scale factor to use for the thumb when its Mode property is set
to <strong>ThumbResize</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSlider.ThumbStyle">
      <summary>Gets or sets the thumb's style.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.BubbleLocationProperty">
      <summary>
        <div>
    Identifies the BubbleLocation dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.BubbleTemplateProperty">
      <summary>
        <div>
    Identifies the BubbleTemplate dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.ModeProperty">
      <summary>
        <div>
    Identifies the Mode dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.NearestTickProperty">
      <summary>
        <div>
    Identifies the NearestTick dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.ShowTicksProperty">
      <summary>
        <div>
    Identifies the ShowTicks dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.ThumbResizeScaleFactorProperty">
      <summary>
        <div>
    Identifies the ThumbResizeScaleFactor dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSlider.ThumbStyleProperty">
      <summary>
        <div>
    Identifies the ThumbStyle dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.#ctor">
      <summary>Initializes a new instance of the MaterialSwitch class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnIsCheckedValueChanged(System.Boolean,System.Boolean)">
      <summary>Overrides the <strong>OnIsCheckedValueChanged</strong> method.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnThumbBackgroundChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Overrides the <strong>OnThumbBackgroundChanged</strong> method.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialSwitch.OnThumbCheckedBackgroundChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the ThumbCheckedBackground property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's thumb checked background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's and its thumb foreground.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialSwitch.ThumbCheckedBackground">
      <summary>
        <para>Gets or sets the background of the thumb when control is checked.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSwitch.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialSwitch.ThumbCheckedBackgroundProperty">
      <summary>
        <div>
    Identifies the ThumbCheckedBackground dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.#ctor">
      <summary>Initializes a new instance of the MaterialTabControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Overrides the <strong>OnSelectionChanged</strong> method.</summary>
      <param name="e">A <strong>SelectionChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabControl.OnSelectedForegroundChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Raised when the SelectedForeground property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.InkBarBrush">
      <summary>Gets or sets the brush to use for the ink bar located under the selected tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when pressing a tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.InkEffectOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the ink effect brush on when a tab item is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.IsInkBarActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink bar will be shown under the selected tab item.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a tab item when it is pressed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.IsSlidingAnimationActive">
      <summary>Gets ot sets a value indicating whether the sliding transition animation will be used when changing the selected tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's ink-effect and ink-bar brushes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.NextItem">
      <summary>Gets the next tab item to slide in.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.PreviousItem">
      <summary>Gets the previous tab item to slide out.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControl.SelectedForeground">
      <summary>
        <para>Gets or sets the foreground to use for the selected tab item.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.InkBarBrushProperty">
      <summary>
        <div>
    Identifies the InkBarBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.IsInkBarActiveProperty">
      <summary>
        <div>
    Identifies the IsInkBarActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.IsSlidingAnimationActiveProperty">
      <summary>
        <div>
    Identifies the IsSlidingAnimationActive dependency
    property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.NextItemProperty">
      <summary>Identifies the NextItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.PreviousItemProperty">
      <summary>Identifies the PreviousItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabControl.SelectedForegroundProperty">
      <summary>Identifies the SelectedForeground dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControlCommands.ClickNext">
      <summary>Gets the ClickNext command when the Next RepeatButton is displayed to scroll to the next MaterialTabItem.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabControlCommands.ClickPrevious">
      <summary>Gets the ClickPrevious command when the Previous RepeatButton is displayed to scroll to the previous MaterialTabItem.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.#ctor">
      <summary>Initializes a new instance of the MaterialTabItem class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrides the <strong>OnMouseLeftButtonDown</strong> method.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrudes the <strong>OnMouseLeftButtonUp</strong> event.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Overrides the <strong>OnUnselected</strong> method.</summary>
      <param name="e">A <strong>RoutedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTabItem.OnSelectedForegroundChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the SelectedForeground property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.CornerRadius">
      <summary>Gets or Sets the CornerRadius of the MaterialTabItems.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.InkEffectBrush">
      <summary>Gets or sets the brush to use for the ink effect when pressing a tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.InkEffectOpacity">
      <summary>
        <para>Gets or sets the opacity to use for the ink effect brush on when a tab item is selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.IsInkEffectActive">
      <summary>
        <para>Gets or sets a value indicating whether the ink effect will be shown on a tab item when it is pressed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background when it is selected using the InkEffectBrush.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground when it is selected using the InkEffectBrush.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTabItem.SelectedForeground">
      <summary>
        <para>Gets or sets the foreground to use for the selected tab item.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabItem.InkEffectBrushProperty">
      <summary>
        <div>
    Identifies the InkEffectBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabItem.InkEffectOpacityProperty">
      <summary>
        <div>
    Identifies the InkEffectOpacity dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabItem.IsInkEffectActiveProperty">
      <summary>
        <div>
    Identifies the IsInkEffectActive dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabItem.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTabItem.SelectedForegroundProperty">
      <summary>
        <div>
    Identifies the LineBrush dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.#ctor">
      <summary>Initializes a new instance of the MaterialTextField class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnApplyTemplate">
      <summary>Overrides the <strong>OnApplyTemplate</strong> method.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Overrides the <strong>OnGotKeyboardFocus</strong> method.</summary>
      <param name="e">A <strong>KeyBoardFocusChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Overrides the <strong>OnLostKeyboardFocus</strong> method.</summary>
      <param name="e">A <strong>KeyboardFocusChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>Overrides the <strong>OnTextChanged</strong> method.</summary>
      <param name="e">A <strong>TextChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnWatermarkModeChanged(Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum,Xceed.Wpf.Toolkit.MaterialTextFieldModeEnum)">
      <summary>Called when the WatermarkMode property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialTextField.OnWatermarkScaleFactorChanged(System.Double,System.Double)">
      <summary>Called when the WatermarkScaleFactor property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.LineBrush">
      <summary>
        <para>Gets ot sets the brush to use for the line under the text when the control is not focused.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.LineFocusBrush">
      <summary>
        <para>Gets ot sets the brush to use for the line under the text when the control is focused.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's watermark-focus and line-focus brushes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.Watermark">
      <summary>Gets or sets the control's watermark.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkFocusBrush">
      <summary>Gets or sets the brush to use for the watermark when the control is focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkForeground">
      <summary>Gets or sets the watermark foreground when the control is not focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkMode">
      <summary>
        <para>Gets or sets a value indicating how the watermark will behave when the control receives the focus.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkScaleFactor">
      <summary>
        <para>Gets or sets the scale factor to use for the watermark when the control is focused and watermark is moved up.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> to use for the watermark.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.LineBrushProperty">
      <summary>
        <div>
    Identifies the LineBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.LineFocusBrushProperty">
      <summary>
        <div>
    Identifies the LineFocusBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MaterialForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkFocusBrushProperty">
      <summary>
        <div>
    Identifies the WatermarkFocusBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkForegroundProperty">
      <summary>
        <div>
    Identifies the WatermarkForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkModeProperty">
      <summary>
        <div>
    Identifies the WatermarkMode dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkProperty">
      <summary>
        <div>
    Identifies the Watermark dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkScaleFactorProperty">
      <summary>
        <div>
    Identifies the WatermarkScaleFactor dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialTextField.WatermarkTemplateProperty">
      <summary>
        <div>
    Identifies the WatermarkTemplate dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.#ctor">
      <summary>Initializes a new instance of the MaterialToast class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.HideToast">
      <summary>Hides the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overrides the <strong>OnMouseLeftButtonUp</strong> method.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.ShowToast">
      <summary>Displays the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when the IsOpen property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToast.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent
property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.CloseButtonStyle">
      <summary>Gets or sets the style to use for the close button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.CornerRadius">
      <summary>Gets or sets the control's corner radius.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.DisplayTime">
      <summary>
        <para>Gets or sets the number of milliseconds the control will remain visible.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.HideOnClick">
      <summary>
        <para>Gets or sets a value indicating whether the control can be closed with a mouse click.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.IsCloseButtonVisible">
      <summary>Gets or sets a value indicating whether the close button will be shown in the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.IsOpen">
      <summary>Gets or sets a value indicating whether the controls is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.Location">
      <summary>
        <para>Gets or sets the location of the control relative to its owner.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.Owner">
      <summary>
        <para>Gets or sets the owner of the control, which is the element from which it will popup.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToast.SlidingDirection">
      <summary>Gets or Sets the sliding direction of the MaterialToast. Default is Vertical. Please note that selecting a Location of Right/Left will force this property to
be Horizontal (since Vertical sliding is not allowed for a Left/Right Location).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.CloseButtonStyleProperty">
      <summary>
        <div>
    Identifies the CloseButtonStyle dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.CornerRadiusProperty">
      <summary>
        <div>
    Identifies the CornerRadius dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.DisplayTimeProperty">
      <summary>
        <div>
    Identifies the DisplayTime dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.HideOnClickProperty">
      <summary>
        <div>
    Identifies the HideOnClick dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.IsCloseButtonVisibleProperty">
      <summary>
        <div>
    Identifies the IsCloseButtonVisible dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.IsOpenProperty">
      <summary>
        <div>
    Identifies the IsOpen dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.LocationProperty">
      <summary>
        <div>
    Identifies the Location dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.MaterialAccentBrushProperty">
      <summary>
        <div>
    Identifies the MaterialAccentBrush dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.MaterialAccentProperty">
      <summary>
        <div>
    Identifies the MaterialAccent dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.MaterialForegroundProperty">
      <summary>
        <div>
    Identifies the MateriaForeground dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToast.OwnerProperty">
      <summary>
        <div>
    Identifies the Owner dependency property.
</div>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MaterialToast.HideCompleted">
      <summary>Raised when the control has been hidden.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MaterialToast.Hiding">
      <summary>Raised when the control starts to hide.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MaterialToast.ShowCompleted">
      <summary>Raised when the control is shown.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MaterialToast.Showing">
      <summary>Raised when the control starts to show.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToastAdorner.#ctor(System.Windows.UIElement)">
      <summary>Initializes a new instance of the MaterialToastAdorner class specifying the UIElement to adorn.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToastAdorner.Toast">
      <summary>Gets or sets the MaterialToast control that will be displayed within the adorner.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToastCommands.Close">
      <summary>Called to close the MaterialToast control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToolTip.#ctor">
      <summary>Initializes a new instance of the <strong>MaterialToolTip</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToolTip.OnMaterialAccentBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when the MaterialAccentBrush property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialToolTip.OnMaterialAccentChanged(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum,Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>Called when the MaterialAccent property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialAccentBrush">
      <summary>Gets or sets the color that will be used as the control's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialAccentBrushProperty">
      <summary>Identifies the MaterialAccentBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialAccentProperty">
      <summary>Identifies the MaterialAccent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialToolTip.MaterialForegroundProperty">
      <summary>Identifies the MaterialForeground dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.#ctor">
      <summary>Initializes a new instance of the MessageBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.InitializeMessageBox(System.Windows.Window,System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Initializes the MessageBox.</summary>
      <param name="owner">The owner Window.</param>
      <param name="text">The text of the MessageBox.</param>
      <param name="caption">The caption of the MessageBox.</param>
      <param name="button">The MessageBoxButton.</param>
      <param name="image">The MessageBoxImage.</param>
      <param name="defaultResult">The default result.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnApplyTemplate">
      <summary>Builds the visual tree for the element..</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnCloseButtonClicked(System.Windows.RoutedEventArgs)">
      <summary>Called when the CloseButtonClicked event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnClosed(System.EventArgs)">
      <summary>Called when the MessageBox is closed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnCoerceCloseButtonVisibility(System.Windows.Visibility)">
      <summary>Called when the CloseButtonVisibility value is being re-evaluated, or coercion is specifically requested</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnCoerceResizeMode(System.Windows.ResizeMode)">
      <summary>Called when the CloseButtonVisibility value is being re-evaluated, or coercion is specifically requested</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnCoerceWindowStyle(System.Windows.WindowStyle)">
      <summary>Called when the CloseButtonVisibility value is being re-evaluated, or coercion is specifically requested</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>Called when the HeaderDragDelta event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.OnHeaderIconDoubleClicked(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Called when the HeaderIconDoubleClicked event is
raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show">
      <summary>Displays a message box.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowDialog">
      <summary>Displays the MessageBox window and returns only when this MessageBox closes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox">
      <summary>Displays this message box when embedded in a WindowContainer parent.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ChangeVisualState(System.String,System.Boolean)">
      <summary>Changes the control's visual states.</summary>
      <param name="name">A string representing the name of the state.</param>
      <param name="useTransitions">A value indicating whether state transitions should be used.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String)">
      <summary>Displays a message box that has a message and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string that specifies the text to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String)">
      <summary>Displays a message box that has a window owner, a message and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String)">
      <summary>Displays a message box that has a message and title bar caption and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.Style)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A System.Windows.Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.Style)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.Style)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A System.Windows.Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection, an image and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A MessageBoxImage value that specifies the icon to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.Style)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection, an image, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection, an image and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A MessageBoxImage value that specifies the icon to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.Style)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection, an image, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A System.Windows.Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection, an image, a default result and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the text to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A MessageBoxResult value that specifies the default result of the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.Style)">
      <summary>Displays a message box that has a message, a title bar caption, a buttons selection, an image, a default result, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A System.Windows.MessageBoxResult value that specifies the default result of the MessageBox.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection, an image, a default result and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the text to display.</param>
      <param name="button">A MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A MessageBoxResult value that specifies the default result of the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.Style)">
      <summary>Displays a message box that has a window owner, a message, a title bar caption, a buttons selection, an image, a default result, a style and that returns a
result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="owner">A System.Windows.Window that represents the owner of the MessageBox.</param>
      <param name="messageText">A string representing the text to display.</param>
      <param name="caption">A System.String that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A System.Windows.MessageBoxResult value that specifies the default result of the MessageBox.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String)">
      <summary>Displays a message box that has a windowHandle owner, a message and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.Style)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.Style)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection, an image and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.Style)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection, an image, a style and that returns a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection, an image, a default result and that returns a
result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A System.Windows.MessageBoxResult value that specifies the default result of the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.Show(System.IntPtr,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.Style)">
      <summary>Displays a message box that has a windowHandle owner, a message, a title bar caption, a buttons selection, an image, a default result, a style and that returns
a result.</summary>
      <returns>A MessageBoxResult value that specifies which message box button is clicked by the user.</returns>
      <param name="ownerWindowHandle">An IntPtr that specifies the handle of the window that owns this MessageBox.</param>
      <param name="messageText">A string that specifies the text to display.</param>
      <param name="caption">A string that specifies the title bar caption to display.</param>
      <param name="button">A System.Windows.MessageBoxButton value that specifies which button or buttons to display.</param>
      <param name="icon">A System.Windows.MessageBoxImage value that specifies the icon to display.</param>
      <param name="defaultResult">A System.Windows.MessageBoxResult value that specifies the default result of the MessageBox.</param>
      <param name="messageBoxStyle">A Style representing the style that will be applied to the MessageBox.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox">
      <summary>Displays this message box when embedded in a WindowContainer parent.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox(System.String)">
      <summary>Displays this message box when embedded in a WindowContainer parent using the specified message text.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox(System.String,System.String)">
      <summary>Displays this message box when embedded in a WindowContainer parent using the specified message and caption.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>Displays this message box when embedded in a WindowContainer parent using the specified message, caption, and button.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>Displays this message box when embedded in a WindowContainer parent using the specified message, caption, button, and icon.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MessageBox.ShowMessageBox(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>Displays this message box when embedded in a WindowContainer parent using the specified message, caption, button, icon, and default message box result.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.ButtonRegionBackground">
      <summary>Gets or sets the background of the region behind the message box buttons.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.CancelButtonContent">
      <summary>Gets or sets the content of the Cancel button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.CancelButtonStyle">
      <summary>Gets or sets the style of the Cancel button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.Container">
      <summary>Gets or sets the container which contains the MessageBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.ImageSource">
      <summary>Gets or sets the ImageSource.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.MessageBoxResult">
      <summary>Gets the MessageBox result, which is set when the Closed event is raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.NoButtonContent">
      <summary>Gets or sets the content of the No button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.NoButtonStyle">
      <summary>Gets or sets the style of the No button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.OkButtonContent">
      <summary>Gets or sets the content of the OK button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.OkButtonStyle">
      <summary>Gets or sets the OK button's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.Text">
      <summary>Gets or sets the text of the message box.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.YesButtonContent">
      <summary>Gets or sets the content of the Yes button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MessageBox.YesButtonStyle">
      <summary>Gets or sets the Yes button's style.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.ButtonRegionBackgroundProperty">
      <summary>Identifies the ButtonRegionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.CancelButtonContentProperty">
      <summary>Identifies the CancelButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.CancelButtonStyleProperty">
      <summary>Identifies the CancelButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.ImageSourceProperty">
      <summary>Identifies the ImageSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.NoButtonContentProperty">
      <summary>Identifies the NoButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.NoButtonStyleProperty">
      <summary>Identifies the NoButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.OkButtonContentProperty">
      <summary>Identifies the OkButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.OkButtonStyleProperty">
      <summary>Identifies the OkButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.YesButtonContentProperty">
      <summary>Identifies the YesButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MessageBox.YesButtonStyleProperty">
      <summary>Identifies the YesButtonStyle dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MessageBox.Closed">
      <summary>Raised when the message box is closed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MonthlyBackgroundData.Brush">
      <summary>Gets or sets the brush to use as background for a specific calendar.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MonthlyBackgroundData.Image">
      <summary>Gets or sets the Uri of an image to use as background for a specific calendar.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MonthlyBackgroundData.Month">
      <summary>Gets or sets the month value to identify the month of the year where the MonthlyBackgroundData will be used. Value should be between 1 and 12. If the value "2"
is set, the Calendar "February" of each year will use this MonthlyBackgroundData.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MonthlyBackgroundData.Opacity">
      <summary>Gets or sets the Opacity value of the Background for a specific calendar when the Image property is set.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MonthlyBackgroundData.Year">
      <summary>Gets or sets the year value to identify the the year where the MonthlyBackgroundData will be used. The Year property will be used together with the Month
property to identify a unique calendar where the MonthlyBackgroundData will be used.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.BlackoutDates">
      <summary>Gets of sets the collection of dates that are marked as not selectable through all the calendars.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonBlackoutDataTemplate">
      <summary>Gets of sets the dataTemplate to be displayed over each blackout dates.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonCurrentDateBorderBrush">
      <summary>Gets of sets the border brush of the current date in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonHighlightedBackground">
      <summary>Gets of sets the background brush of each highlighted dates in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonHighlightedForeground">
      <summary>Gets of sets the foreground of each highlighted dates in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonMouseOverBackground">
      <summary>Gets of sets the background brush of the date under the mouse in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonMouseOverForeground">
      <summary>Gets of sets the foreground of the date under the mouse in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonSelectedBackground">
      <summary>Gets of sets the background brush of each selected dates in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonSelectedForeground">
      <summary>Gets of sets the foreground of each selected dates in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonTodayBackground">
      <summary>Gets of sets the background brush of the today date in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarButtonTodayForeground">
      <summary>Gets of sets the foreground of the today date in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarDayTitleDataTemplate">
      <summary>Gets of sets the DataTemplate to use for the days of the week displayed in each calendar of the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarHeaderButtonStyle">
      <summary>Gets of sets the style for the header of each calendar in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarsBackground">
      <summary>Gets of sets the background brush of each calendar in the MultiCalendar control. This background will be used when a calendar has no monthlyBackground
associated.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarsBorderBrush">
      <summary>Gets of sets the border brush of each calendar in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarsBorderThickness">
      <summary>Gets of sets the border thickness of each calendar in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarsCollection">
      <summary>Gets the list of Calendars used in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.CalendarStyle">
      <summary>Gets of sets the style of the Calendars in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.ColumnCount">
      <summary>Gets of sets the number of columns to use to display the calendars of the MultiCalendar control. The value is adjusted automatically when the property
MonthCount changes. However, as soon as a custom value is assigned, this custom value will remain and no longer be adjusted automatically. If the combination
of the properties ColumnCount and RowCount is not big enough for the property MonthCount, the MonthCount will be modified to fit based on the
ColumnCount/RowCount provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.DisplayDateEnd">
      <summary>Gets of sets the last day available in the MultiCalendar control. If the combination of the properties DisplayDateStart and DisplayDateEnd is not big enough
for the property MonthCount, the MonthCount will be modified to fit based on the DisplayDateStart/DisplayDateEnd provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.DisplayDateStart">
      <summary>Gets of sets the first day available in the MultiCalendar control. If the combination of the properties DisplayDateStart and DisplayDateEnd is not big enough
for the property MonthCount, the MonthCount will be modified to fit based on the DisplayDateStart/DisplayDateEnd provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.FirstDisplayedDate">
      <summary>Gets the first date that is currently displayed in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.HideInactiveDates">
      <summary>Gets of sets if the inactive dates will be displayed at beginning and end of each calendar in the MultiCalendar control. Default is true.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.HighlightedDates">
      <summary>Gets of sets the collection of dates that are marked as highlighted through all the calendars.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.MonthCount">
      <summary>Gets of sets the number of calendars to display in the MultiCalendar control. Default is 2. If values are not provided for propreties ColumnCount and RowCount,
they will be filled with values based on MonthCount. If values are provided for properties ColumnCount and RowCount, and the MonthCount doesn't fit in the
ColumnCount/RowCount because too big, the MonthCount will be modified to fit based on the ColumnCount/RowCount provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.MonthlyBackgrounds">
      <summary>Gets of sets the collection of monthly background data used to display the background of specific calendars in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.NextButtonStyle">
      <summary>Gets of sets the style to use for the button changing to next month in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.Orientation">
      <summary>Gets of sets the orientation of the calendars (Rows/Columns) in the MultiCalendar control. Default is Horizontal.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.PreviousButtonStyle">
      <summary>Gets of sets the style to use for the button changing to previous month in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.RowCount">
      <summary>Gets of sets the number of rows to use to display the calendars of the MultiCalendar control. The value is adjusted automatically when the property MonthCount
changes. However, as soon as a custom value is assigned, this custom value will remain and no longer be adjusted automatically. If the combination of the
properties ColumnCount and RowCount is not big enough for the property MonthCount, the MonthCount will be modified to fit based on the ColumnCount/RowCount
provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.SelectedDate">
      <summary>Gets of sets the selected date in the MultiCalendar control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.SelectedDates">
      <summary>Gets of sets the collection of dates that are marked as selected through all the calendars.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiCalendar.SelectionMode">
      <summary>Gets of sets the selection mode in the MultiCalendar control. Default is SingleRange.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MultiCalendar.BlackoutDatesChanged">
      <summary>This event is raised when the collection of blackout dates has a collectionChanged.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MultiCalendar.HighlightedDatesChanged">
      <summary>This event is raised when the collection of highlighted dates has a collectionChanged.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MultiCalendar.SelectedDateChanged">
      <summary>This event is raised when the selected date is changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.MultiCalendar.SelectedDatesChanged">
      <summary>This event is raised when the collection of selected dates has a collectionChanged.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MultiLineTextEditor.#ctor">
      <summary>Initializes a new instance of the MultiLineTextEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MultiLineTextEditor.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MultiLineTextEditor.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when IsOpen changes.</summary>
      <param name="oldValue">The old bool value.</param>
      <param name="newValue">The new bool value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MultiLineTextEditor.OnTextChanged(System.String,System.String)">
      <summary>Called when Text changes.</summary>
      <param name="oldValue">The old string value.</param>
      <param name="newValue">The new string value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.DropDownHeight">
      <summary>Gets or sets the height of the dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.DropDownWidth">
      <summary>Gets or sets the width of the dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsOpen">
      <summary>Gets or sets a value indicating whether the dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsReadOnly">
      <summary>Gets or sets whether the editor is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsSpellCheckEnabled">
      <summary>Gets or sets a value indicating whether the spell checker is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.Text">
      <summary>Gets or sets the text of the MultiLineEditor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.TextAlignment">
      <summary>Gets or sets the alignment of Text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MultiLineTextEditor.TextWrapping">
      <summary>Gets or sets the text wrapping method of Text.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.DropDownHeightProperty">
      <summary>Identifies the DropDownHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.DropDownWidthProperty">
      <summary>Identifies the DropDownWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.IsSpellCheckEnabledProperty">
      <summary>Identifies the IsSpellCheckEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MultiLineTextEditor.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.NumericIndicator.#ctor">
      <summary>Initializes a new instance of the NumericIndicator class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.NumericIndicator.Position">
      <summary>Gets the coordinate offset of the NumericIndicator from the center of the RadialGauge.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.NumericUpDown`1.ParsePercent(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number to its equivalent as a decimal value using the specified culture-specific format information.</summary>
      <returns>The equivalent of <em>text</em> as a decimal value.</returns>
      <param name="text">The string representation of the number to convert.</param>
      <param name="cultureInfo">An IFormatProvider that supplies culture-specific parsing information about <em>text</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.NumericUpDown`1.OnFormatStringChanged(System.String,System.String)">
      <summary>Called when FormatString changes.</summary>
      <param name="oldValue">The old string value.</param>
      <param name="newValue">The new string value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.NumericUpDown`1.FormatString">
      <summary>Gets or sets the dispaly format of the Value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.NumericUpDown`1.Increment">
      <summary>Gets or sets the amount in which to increment the value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.NumericUpDown`1.MaxLength">
      <summary>
        <span id="BugEvents">Gets or sets the maximum number of characters that can be manually entered into the NumericUpDown.</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.NumericUpDown`1.AutoMoveFocusProperty">
      <summary>Identifies the <strong>AutoMoveFocus</strong> dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.NumericUpDown`1.AutoSelectBehaviorProperty">
      <summary>Identifies the <strong>AutoSelectBehavior</strong> dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.NumericUpDown`1.FormatStringProperty">
      <summary>Identifies the FormatString dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.NumericUpDown`1.IncrementProperty">
      <summary>Identifies the Increment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.NumericUpDown`1.MaxLengthProperty">
      <summary>Identifies the MaxLength dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Pie.#ctor">
      <summary>Initializes a new instance of the Pie class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.DefiningGeometry">
      <summary>Gets the geometry object defining the pie shape.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.EndAngle">
      <summary>
        <para>Gets or sets the angle of the second of two line segments connected to the end of an arc.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.GeometryTransform">
      <summary>Gets the identity transform, since pie objects do not use geometry transforms.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.Mode">
      <summary>Gets or sets the mode of the Pie control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.RenderedGeometry">
      <summary>Gets the geometry of the rendered pie.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.Slice">
      <summary>Gets or sets the portion of the ellipse that is included in the Pie.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.StartAngle">
      <summary>
        <para>Gets or sets the angle of the first of two line segments connected to the end of an arc.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pie.SweepDirection">
      <summary>
        <para>Gets or sets the direction that the Pie?s arc sweeps (clockwise or counterclockwise).</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Pie.EndAngleProperty">
      <summary>Identifies the EndAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Pie.ModeProperty">
      <summary>Identifies the Mode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Pie.SliceProperty">
      <summary>Identifies the Slice dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Pie.StartAngleProperty">
      <summary>Identifies the StartAngle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Pie.SweepDirectionProperty">
      <summary>Identifies the SweepDirection dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowCard.#ctor">
      <summary>Initializes a new instance of the PileFlowCard class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowCard.OnApplyTemplate">
      <summary>Occurs when the template is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowCard.BeginReflectionOpacity">
      <summary>Gets or sets the beginning opacity value for the reflection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowCard.Child">
      <summary>Gets or sets the content of the card.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowCard.EndReflectionOpacity">
      <summary>Gets or sets end opacity value for reflection, between 0 and 1.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowCard.ShowReflection">
      <summary>Gets or sets visibility of content reflection</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowCard.BeginReflectionOpacityProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowCard.ChildProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowCard.EndReflectionOpacityProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowCard.ShowReflectionProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.#ctor(Xceed.Wpf.Toolkit.PileFlowPanel,System.Windows.FrameworkElement,System.Int32)">
      <summary>Initializes a new instance of the PileFlowItem class.</summary>
      <param name="parentPanel">Parent flow panel.</param>
      <param name="element">Content element.</param>
      <param name="index">Current item index.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.GetAnimationProgress">
      <summary>Returns animation progress of the current item.</summary>
      <returns>A value representing the animation progress.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.HideElement">
      <summary>Hides the current element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.OnZIndexChanged(System.Int32)">
      <summary>Occurs when the item's z-order index should be changed.</summary>
      <param name="zIndex">New z-index.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.RestartItemAnimation(System.Double,System.Double,System.Double)">
      <summary>Restarts the animation to change deceleration.</summary>
      <param name="duration">Duration of animation.</param>
      <param name="moveRatio">Animation ratio.</param>
      <param name="decelerationRatio">Determines if current animation will have decelerating ratio.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.SetSpeedRatio(System.Double)">
      <summary>Sets the speed ratio for item animation.</summary>
      <param name="ratio">Speed ratio value</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.ShowElement">
      <summary>Showes the current element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.StartItemAnimation(System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
      <summary>Starts the animation of the current item with specified transfom values.</summary>
      <param name="offsetX">X offset transform.</param>
      <param name="offsetY">Y offset transform.</param>
      <param name="scaleWidth">Width scale transform.</param>
      <param name="scaleHeight">Height scale transform.</param>
      <param name="duration">Duration of animation.</param>
      <param name="index">Current item index.</param>
      <param name="moveRatio">Animation ratio.</param>
      <param name="decelerationRatio">Determines if current animation will have decelerating ratio.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowItem.UpdateZIndex">
      <summary>Updates the z-order index depending on the item's index.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.Element">
      <summary>Gets the FrameworkElement of the current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.HeightAnimation">
      <summary>Gets the height animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.Index">
      <summary>Gets or sets the index of the current item from the selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.MoveTransform">
      <summary>Gets the move translation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.OpacityAnimation">
      <summary>Gets the opacity animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.ScaleTransform">
      <summary>Gets the scale transform.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.WidthAnimation">
      <summary>Gets the width animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.XAnimation">
      <summary>Gets the x-axis animation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowItem.YAnimation">
      <summary>Gets the y-axis animation.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.#ctor">
      <summary>Initializes a new instance of the PileFlowPanel class..</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Occurs when control needs to be rearranged.</summary>
      <param name="finalSize">Final size for control.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.InitChild(System.Windows.FrameworkElement)">
      <summary>Initializes and creates PileFlowItem using the specified child.</summary>
      <returns>Created item.</returns>
      <param name="child">Child to be added.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size in layout required for child elements and determines a size for the FrameworkElement-derived class.</summary>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
      <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever
content is available.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveLeft">
      <summary>Move all items to the left by a certain number of items.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveRight">
      <summary>
        <div>
    Move all items to the right by a certain number of items.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Invoked when the VisualCollection of a visual object is modified.</summary>
      <param name="visualAdded">The Visual that was added to the collection.</param>
      <param name="visualRemoved">The Visual that was removed from the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.SelectChild(System.Windows.FrameworkElement)">
      <summary>Selects specified element.</summary>
      <param name="child">Element to select.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.SelectItem(Xceed.Wpf.Toolkit.PileFlowItem)">
      <summary>Selects specified item.</summary>
      <param name="item">Item to select.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveLeft">
      <summary>Move all items to the left by 1 item.</summary>
      <returns>
        <strong>true</strong> if moving has started; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveLeft(System.Int32)">
      <summary>Move (shift) all items to the left by the specified number of items.</summary>
      <returns>
        <strong>true</strong> if moving has started; <strong>false</strong> otherwise.</returns>
      <param name="itemsCount">The number of items by which the items will be moved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveRight">
      <summary>Move all items to the right by 1 item.</summary>
      <returns>
        <strong>true</strong> if moving has started; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.MoveRight(System.Int32)">
      <summary>Move all items to the right by the specified number of items.</summary>
      <returns>
        <strong>true</strong> if moving has started; <strong>false</strong> otherwise.</returns>
      <param name="itemsCount">The specified number of items</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.AnimationDuration">
      <summary>Gets or sets the animation duration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.CenterOffsetX">
      <summary>Gets or sets the offset of flow items to the left or right of the selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabel">
      <summary>Gets or sets the content label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabelOffsetY">
      <summary>Gets or sets the vertical offset from center for the content label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabelSize">
      <summary>Gets or sets the size of content label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowItemHeight">
      <summary>Gets the flow item height.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowItemRatio">
      <summary>Gets or sets the size of non-selected flow items as a percentage of the selected (centered) item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowItemsCount">
      <summary>Gets or sets the number of flow items that appear to the left or right of the center, selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowItemWidth">
      <summary>Gets the flow item width.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowOffsetX">
      <summary>Gets or sets the horizontal offset between flow items to the left or right of the center, selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.FlowOffsetY">
      <summary>Gets or sets the vertical offset between flow items to the left or right of the center, selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ItemHeight">
      <summary>Gets the height of the center, selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ItemsCount">
      <summary>Gets the total number of items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ItemSize">
      <summary>Gets the item size.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.ItemWidth">
      <summary>Gets the height of the center, selected item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.PageScrollItemsCount">
      <summary>Gets the number of items to move for page scroll.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabelOffsetYProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabelProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PileFlowPanel.ContentLabelSizeProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowItemActivated">
      <summary>Event that occurs when all animations was stopped and returns selected item.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowItemDeactivated">
      <summary>Event that occurs when animation started.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowActivationEventArgs.#ctor(Xceed.Wpf.Toolkit.PileFlowItem)">
      <summary>Initializes a new instance of the PileFlowActivationEventArgs class.</summary>
      <param name="item">The selected flow item.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowActivationEventArgs.Item">
      <summary>Gets the selected flow item.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PlainTextFormatter.#ctor">
      <summary>Initializes a new instance of the PlainTextFormatter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PlainTextFormatter.GetText(System.Windows.Documents.FlowDocument)">
      <summary>Returns the formatted text of the passed FlowDocument.</summary>
      <returns>A string representing the extracted text.</returns>
      <param name="document">A FlowDocument from which the text will be extracted.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PlainTextFormatter.SetText(System.Windows.Documents.FlowDocument,System.String)">
      <summary>Sets the content of the passed FlowDocument.</summary>
      <param name="document">A FlowDocument whose content will be set.</param>
      <param name="text">A string representing the text that will be used to set the content of <em>document</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Pointer.#ctor">
      <summary>Initializes a new instance of the Pointer class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pointer.Angle">
      <summary>Gets the angle of rotation of the Pointer, in degrees.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Pointer.Offset">
      <summary>Gets or sets the offset of the pointer from the center of the RadialGauge.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PointerCap.#ctor">
      <summary>Initializes a new instance of the PointerCap class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.#ctor">
      <summary>Initializes a new instance of the PrimitiveTypeCollectionControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>Called when IsOpen changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.OnItemsSourceChanged(System.Collections.IList,System.Collections.IList)">
      <summary>Called when ItemsSource changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.OnTextChanged(System.String,System.String)">
      <summary>Called when Text changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.IsOpen">
      <summary>Gets or sets a value indicating whether the editor's dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.IsReadOnly">
      <summary>Gets or sets whether the control is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemsSource">
      <summary>Gets or sets a collection used to generate the content of the control.<span></span></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemsSourceType">
      <summary>Gets or sets the type of ItemsSource.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemType">
      <summary>Gets the type of the item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.Text">
      <summary>Gets or sets the text of the editor.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemsSourceTypeProperty">
      <summary>Identifies the ItemsSourceType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.ItemTypeProperty">
      <summary>Identifies the ItemType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PrimitiveTypeCollectionControl.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryItemFromTextEventArgs.Item">
      <summary>The item corresponding to the maching text. This value should be set by the user if there is a matching item for the specified text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryItemFromTextEventArgs.Text">
      <summary>The text corresponding to the maching item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryMoveFocusEventArgs.CanMoveFocus">
      <summary>Gets or sets a value indicating if the focus can move.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryMoveFocusEventArgs.FocusNavigationDirection">
      <summary>Gets a value indicating the direction in which the focus is attempting to navigate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryMoveFocusEventArgs.ReachedMaxLength">
      <summary>Gets a value indicating if the maximum allowed length of text has been reached.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QuerySuggestItemForTextEventArgs.Item">
      <summary>The item corresponding to the maching text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QuerySuggestItemForTextEventArgs.SuggestItem">
      <summary>This value should be set to True to specify if the provided item should be displayed in the dropdown suggestion box, taking into account the actual input
provided by the QuerySuggestItemForTextEventArgs.Text property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QuerySuggestItemForTextEventArgs.Text">
      <summary>The text corresponding to the current input text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryTextFromItemEventArgs.Item">
      <summary>The item corresponding to the maching text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.QueryTextFromItemEventArgs.Text">
      <summary>The text corresponding to the maching item. This value should be set by the user to specify the desired text representation of the item.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RadialGauge.#ctor">
      <summary>Initializes a new instance of the RadialGauge class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.ActualValue">
      <summary>Gets the current Value of the RadialGauge regardless of whether the pointer is at rest or animating.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.BackgroundImage">
      <summary>Gets or sets the image to display within the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.BackgroundImageOffsetX">
      <summary>Gets or sets the X offset of the BackgroundImage displayed in the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.BackgroundImageOffsetY">
      <summary>Gets or sets the Y offset of the BackgroundImage displayed in the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.BGPortions">
      <summary>Gets or sets the Collection of Background GaugePortions.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.BorderPortions">
      <summary>Gets or sets the collection of Border portions of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.EndAngle">
      <summary>Gets or sets the end angle of the RadialGauge, in degrees. Angle 0 is the top, 90 is the right, 180 is the bottom and 270 is the left.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Fill">
      <summary>Gets or sets the brush that is used to fill the RadialGauge's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsFullCircleBackground">
      <summary>Gets or sets whether or not the RadialGauge will be represented as a full circle, even if the StartAngle and EndAngle do not give a 360 degree gauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsNumericIndicatorVisible">
      <summary>Gets or sets if the NumericIndicator is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsPointerCapVisible">
      <summary>Gets or sets if the pointer cap at the center of the gauge is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsPointerVisible">
      <summary>Gets or sets if the gauge's pointer is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsTickLabelRotated">
      <summary>Gets or sets if the label on the MajorTicks will be rotated to follow the tangent of its position along the circumference of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsTickLabelVisible">
      <summary>Gets or sets if the label on the MajorTicks is displayed. The labels are the numbers of the scale shown on the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.IsTickMarkVisible">
      <summary>Gets or sets if the marks of the Ticks will be visible. A tick is composed of a mark and a label. The label is the numeric graduation value shown. The mark is
the line on the scale of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MajorTickCount">
      <summary>Gets or sets the count of MajorTicks on the RadialGauge. MajorTicks are the main tick marks of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MajorTickCustomLabels">
      <summary>Gets or sets the major tick labels in the RadialGauge. For example, when you want to display 'North', 'South', 'East', 'West' instead of numeric values, you
can fill this property with the string value "North,South,East,West". Starting from the first MajorTick, the MajorTick labels will be replaced with the
comma-separated substrings.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MajorTickLabelOffset">
      <summary>Gets or sets the offset of the MajorTick labels from the center of the RadialGauge. A positive value will push the markers away from center while a negative
value will pull them toward the center of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MajorTickLabelTemplate">
      <summary>Gets or sets the DataTemplate to be used for the MajorTick Labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MajorTickMarkTemplate">
      <summary>Gets or sets the DataTemplate to be used for the MajorTick marks. The new MajorTickMarkTemplate needs to be defined inside, at top-left, of a rectangle with
(0,0) for top-left and (x,x) for bottom right.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MarkerOffset">
      <summary>Gets or sets the offset to use for Markers on the RadialGauge. A positive value will push the markers away from center while a negative value will pull them
toward the center of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Markers">
      <summary>Gets or sets the collection of markers in the RadialGauge. Markers represent marks along the RadialGauge to identify important Values.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MarkersTemplate">
      <summary>Gets or sets the DataTemplate to be used for the Markers. The new MarkerDataTemplate needs to be defined inside, at top-left, of a rectangle with (0,0) for
top-left and (x,x) for bottom right.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Maximum">
      <summary>Gets or sets the maximum value of the scale of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MiddleTickCount">
      <summary>Gets or sets the count of MiddleTick divisions in the RadialGauge. MiddleTicks are divisions in between MajorTicks on the RadialGauge. A tick shape will be
displayed between each division. To clarify, MiddleTicks counts the number of <strong>divisions</strong> created between MajorTicks, not the number of actual
tick shapes displayed. To display 1 tick shape, set MiddleTickCount to 2. Setting MiddleTickCount to 1 will not display any tick shapes for the major ticks.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MiddleTickMarkTemplate">
      <summary>Gets or sets the DataTemplate to be used for the MiddleTick marks. The new MiddleTickMarkTemplate needs to be defined inside, at top-left, of a rectangle with
(0,0) for top-left and (x,x) for bottom right.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Minimum">
      <summary>Gets or sets the minimum value of the scale of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MinorTickCount">
      <summary>
        <para>Gets or sets the count of MinorTick divisions in the RadialGauge. MinorTicks are divisions in between MiddleTicks and MajorTicks on the RadialGauge. A tick
shape will be displayed between each division. To clarify, MinorTicks counts the number of <strong>divisions</strong> created between MajorTicks and
MiddleTicks, not the number of actual tick shapes displayed. To display 1 tick shape, set MinorTickCount to 2. Setting MinorTickCount to 1 will not display any
tick shapes between the major ticks and middle ticks.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.MinorTickMarkTemplate">
      <summary>Gets or sets the DataTemplate to be used for the MinorTick marks. The new MinorTickMarkTemplate needs to be defined inside, at top-left, of a rectangle with
(0,0) for top-left and (x,x) for bottom right.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.NumericIndicatorOffsetX">
      <summary>Gets or sets the X offset of the NumericIndicator. A positive value will move the NumericIndicator to the right while a negative value will move it to the
left.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.NumericIndicatorOffsetY">
      <summary>Gets or sets the Y offset of the NumericIndicator. A positive value will move the NumericIndicator down while a negative value will move it up.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.NumericIndicatorTemplate">
      <summary>Gets or sets the DataTemplate to be used for the NumericIndicator.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.PointerCapStyle">
      <summary>Gets or sets the Style to be used for the PointerCap.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.PointerOffset">
      <summary>
        <para>Gets or sets the offset from the center to display the Pointer from. A positive value will push the Pointer away from center while a negative value will
pull it toward the center of the RadialGauge.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.PointerTemplate">
      <summary>Gets or sets the DataTemplate to be used for the Pointer. The new PointerDataTemplate needs to be defined inside, at top-left, of a rectangle with (0,0) for
top-left and (x,x) for bottom right. The Pointer should be pointing straight up.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.PointerTooltipTemplate">
      <summary>Gets or sets the DataTemplate to be used for the tooltip of the Pointer.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.StartAngle">
      <summary>Gets or sets the start angle of the RadialGauge, in degrees. Angle 0 is the top, 90 is the right, 180 is the bottom and 270 is the left.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Stroke">
      <summary>Gets or sets the brush to use for the stroke of the RadialGauge. The stroke is the border drawn around the gauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.StrokeThickness">
      <summary>Gets or sets the Thickness of the stroke on the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.SweepDirection">
      <summary>Gets or sets the direction to draw the RadialGauge between StartAngle and EndAngle, either ClockWise or CounterClockWise.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.TickMarkOffset">
      <summary>Gets or sets the offset to be used for the gauge's tick marks. A positive value will move the tick marks away from center while a negative value will move them
toward the center of the radialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.Value">
      <summary>Gets or sets the value of the RadialGauge. The Pointer will point to or animate towards this value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RadialGauge.ValueAnimation">
      <summary>Gets or sets the animation that will be used for the pointer when the RadialGauge's Value property is modified. Animation types include None, Linear, BackEase,
PowerEase, ElasticEase, and BounceEase.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RangeSlider.#ctor">
      <summary>Initializes a new instance of the RangeSlider class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.AutoToolTipPlacement">
      <summary>Gets or sets whether a tooltip that contains the current value of a RangeSlider Thumb displays when the Thumb is pressed. If a tooltip is displayed, this
property also specifies the placement of the tooltip. Default is None.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.AutoToolTipPrecision">
      <summary>Gets or sets the number of digits that are displayed to the right side of the decimal point for the Value of a RangeSlider Thumb in a tooltip. Default is 0.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeBackground">
      <summary>Gets or sets the Brush for the HigherRange area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeStyle">
      <summary>Gets or sets the Style for the HigherRange area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeWidth">
      <summary>Gets the percentage of the size of the HigherRange area within the entire min/max range. The higher range area is the area on the slider that is drawn between
the higher thumb and the slider's Maximum.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.HigherThumbBackground">
      <summary>Gets or sets the Brush for the HigherValue thumb.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.HigherValue">
      <summary>Gets or sets the current higher value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.IsDeferredUpdateValues">
      <summary>Gets or sets a value indicating whether the HigherValue and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.RangeSlider~LowerValue.html">LowerValue</see> properties will be updated on the <strong>DragComplete</strong> event from the
<strong>HigherSlider</strong> and <strong>LowerSlider</strong> thumbs or on the <strong>DragDelta</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.IsSnapToTickEnabled">
      <summary>Gets or sets a value that indicates whether the RangeSlider automatically moves the selected Thumb to the closest tick mark. Default is False.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeBackground">
      <summary>Gets or sets the Brush for the LowerRange area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeStyle">
      <summary>Gets or sets the Style for the LowerRange area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeWidth">
      <summary>Gets the percentage of the size of the LowerRange area within the entire min/max range. The lower range area is the area on the slider that is drawn between
the slider's Minimum and the lower thumb.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.LowerThumbBackground">
      <summary>Gets or sets the Brush for the LowerValue thumb.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.LowerValue">
      <summary>Gets or sets the current lower value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.Maximum">
      <summary>Gets or sets the maximum value of the input range.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.Minimum">
      <summary>Gets or sets the minimum value of the input range.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.Orientation">
      <summary>Gets or sets the orientation used by the RangeSlider.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.RangeBackground">
      <summary>Gets or sets the Brush for the selected range area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.RangeStyle">
      <summary>Gets or sets the Style for the selected range area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.RangeWidth">
      <summary>Gets the percentage of the size of the selected range area within the entire min/max range. The selected range area is the area on the slider that is drawn
between the lower and higher thumbs.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.Step">
      <summary>Gets or sets the step size (increase/decrease amount) used by the sliders. Used when the user clicks in the range areas (not the thumbs). Not used when
interactively dragging the thumbs.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.TickFrequency">
      <summary>Gets or sets the interval between tick marks. Default is 1.0.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RangeSlider.TickPlacement">
      <summary>Gets or sets the position of tick marks with respect to the Track of the RangeSlider. Default is None.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeBackgroundProperty">
      <summary>Identifies the HigherRangeBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeStyleProperty">
      <summary>Identifies the HigherRangeStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.HigherRangeWidthProperty">
      <summary>Identifies the HigherRangeWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.HigherThumbBackgroundProperty">
      <summary>Identifies the HigherThumbBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.HigherValueProperty">
      <summary>Identifies the HigherValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.IsDeferredUpdateValuesProperty">
      <summary>Identifies the IsDeferredUpdateValues dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeBackgroundProperty">
      <summary>Identifies the LowerRangeBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeStyleProperty">
      <summary>Identifies the LowerRangeStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.LowerRangeWidthProperty">
      <summary>Identifies the LowerRangeWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.LowerThumbBackgroundProperty">
      <summary>Identifies the LowerThumbBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.LowerValueProperty">
      <summary>Identifies the LowerValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.MaximumProperty">
      <summary>Identifies the Maximum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.MinimumProperty">
      <summary>Identifies the Minimum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.RangeBackgroundProperty">
      <summary>Identifies the RangeBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.RangeStyleProperty">
      <summary>Identifies the RangeStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RangeSlider.RangeWidthProperty">
      <summary>Identifies the RangeWidth dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.RangeSlider.HigherValueChanged">
      <summary>Event raised when the RangeSlider?s LowerValue has been changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.RangeSlider.LowerValueChanged">
      <summary>Event raised when the RangeSlider?s HigherValue has been changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Rating.#ctor">
      <summary>Initializes a new instance of the Rating class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ActiveBorderColor">
      <summary>Gets or sets the Brush for the outer border (Stroke) of the icons that are in the active state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ActiveFillColor">
      <summary>Gets or sets the Brush to use to fill in the interior area of icons that are in the active state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.CustomPath">
      <summary>Gets or sets the custom path for the icons to use.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.FillDirection">
      <summary>
        <para>Gets or sets the direction of the fill used by the Rating control. This useful when Precision is set to Half or Exact. You can have the icons fill from left
to right, top to bottom, and other directions. Please note, this is independent of the Orientation that determines the direction icons are drawn next to each
other.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.HoverBorderColor">
      <summary>Gets or sets the Brush for the outer border of icons that are in the hover state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.HoverFillColor">
      <summary>Gets or sets the Brush for the outer border of icons that are in the hover state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.IconHeight">
      <summary>Gets or sets the height of the icons, in pixels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.IconPadding">
      <summary>Gets or sets the padding between each icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.IconStrokeThickness">
      <summary>Gets or sets the icon border's Stroke thickness. The Stroke represents the outer border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.IconType">
      <summary>Gets or sets the predefined or custom shape used to draw the icons.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.InactiveBorderColor">
      <summary>Gets or sets the Brush for the outer border of icons that are in the inactive state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.InactiveFillColor">
      <summary>Gets or sets the Brush for the outer border of icons that are in the inactive state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ItemCount">
      <summary>Gets or sets the total number of icons.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.LabelPosition">
      <summary>Gets or sets the position of the labels with respect to the their associated icons. If set to <strong>Before</strong>, The label will appear above (Horizontal
Orientation) or to the left (Vertical Orientation) of the icon. If set to <strong>After</strong>, the label will appear under (Horizontal Orientation) or to
the right (Vertical Orientation) of the icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.Orientation">
      <summary>Gets or sets the orientation of the icons. This determines the direction that icons are drawn next to each other. Use FillDirection to determine afterwards if
you want the icons to go from left to right, right to left, top to bottom, or bottom to top.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.Precision">
      <summary>
        <para>Gets or sets a value representing the type of precision to use. When set to <strong>Full</strong>, icons are never partially filled. They can either be
filled or not. When set to <strong>Exact</strong>, icons will be partially filled to try to exactly represent the Rating control's Value property.</para>
        <para>When set to <strong>Half</strong>, the can be filled, half filled, or not filled at all, rounded up. For example, if ItemCount is 5, and the Value is 2.1,
then the first two icons will be fully filled, and the third will be half filled.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ReadOnly">
      <summary>Gets or sets a value indicating whether the input control is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ShowLabels">
      <summary>Gets or sets if the labels should be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ShowValueTooltip">
      <summary>Gets or sets if the value tooltip should be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.Value">
      <summary>Gets or sets the current rating value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Rating.ValueType">
      <summary>Gets or sets the type of value used. When set to <strong>Exact</strong>, the Rating?s Value will represent the exact icon value. For example, a value of 3
would mean that the first 3 icons are filled, no matter how many icons there are in total. When set to <strong>Percentage</strong>, the Rating?s Value
represents a percentage value (Min=0.0, Max = 1.0). For example, a value of 0.50 would mean that the first 50% is filled (if the Rating control has 5 stars,
then the Value would represent the first 3.5 icons).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ActiveBorderColorProperty">
      <summary>Identifies the ActiveBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ActiveFillColorProperty">
      <summary>Identifies the ActiveFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.CustomPathProperty">
      <summary>Identifies the CustomPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.FillDirectionProperty">
      <summary>Identifies the FillDirection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.HoverBorderColorProperty">
      <summary>Identifies the HoverBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.HoverFillColorProperty">
      <summary>Identifies the HoverFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.IconHeightProperty">
      <summary>Identifies the IconHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.IconPaddingProperty">
      <summary>Identifies the IconPadding dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.IconStrokeThicknessProperty">
      <summary>Identifies the IconStrokeThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.IconTypeProperty">
      <summary>Identifies the IconType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.InactiveBorderColorProperty">
      <summary>Identifies the InactiveBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.InactiveFillColorProperty">
      <summary>Identifies the InactiveFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ItemCountProperty">
      <summary>Identifies the ItemCount dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.LabelPositionProperty">
      <summary>Identifies the LabelPosition dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.PrecisionProperty">
      <summary>Identifies the Precision dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ShowLabelsProperty">
      <summary>Identifies the ShowLabels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ShowValueTooltipProperty">
      <summary>Identifies the ShowValueTooltip dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Rating.ValueTypeProperty">
      <summary>Identifies the ValueType dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Rating.RatingValueChanged">
      <summary>Event called when the Rating?s Value has been changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RatingItem.#ctor(System.Int32)">
      <summary>Initializes a new instance of the RatingItem class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.ActiveBorderColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the active state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.ActiveFillColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the active state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.CustomPath">
      <summary>Gets or sets the custom path for the icon to use.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.HoverBorderColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the hover state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.HoverFillColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the hover state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.IconPadding">
      <summary>Gets or sets the padding between each icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.IconStrokeThickness">
      <summary>Gets or sets the icon's Stroke thickness.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.IconType">
      <summary>Gets or sets the predefined or custom shape used to draw the icons.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.InactiveBorderColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the inactive state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.InactiveFillColor">
      <summary>Gets or sets the Brush for the outer border of an icon in the inactive state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RatingItem.Index">
      <summary>Gets or sets the Index of the current icon. Index value starts at 1. If you have 5 icons, the first one is 1. The 5th is 5.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.ActiveBorderColorProperty">
      <summary>Identifies the ActiveBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.ActiveFillColorProperty">
      <summary>Identifies the ActiveFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.CustomPathProperty">
      <summary>Identifies the CustomPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.HoverBorderColorProperty">
      <summary>Identifies the HoverBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.HoverFillColorProperty">
      <summary>Identifies the HoverFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.IconPaddingProperty">
      <summary>Identifies the IconPadding dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.IconStrokeThicknessProperty">
      <summary>Identifies the IconStrokeThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.IconTypeProperty">
      <summary>Identifies the IconType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.InactiveBorderColorProperty">
      <summary>Identifies the InActiveBorderColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.InactiveFillColorProperty">
      <summary>Identifies the InactiveFillColor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RatingItem.IndexProperty">
      <summary>Identifies the Index dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBox.#ctor">
      <summary>Initializes a new instance of the RichTextBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBox.#ctor">
      <summary>Initializes a new instance of the RichTextBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
      <summary>Initializes a new instance of the RichTextBox class, specifying a FlowDocument.</summary>
      <param name="document">The FlowDocument to use to create</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBox.Clear">
      <summary>Clears the content of the RichTextBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RichTextBox.Text">
      <summary>
        <para>Gets or sets the text displayed in the RichTextBox.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RichTextBox.TextFormatter">
      <summary>Gets or sets the text formatter of the RichTextBox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RichTextBox.TextFormatterProperty">
      <summary>Identifies the TextFormatter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RichTextBox.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBoxFormatBar.#ctor">
      <summary>Initializes a new instance of the RichTextBoxFormatBar class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBoxFormatBar.Update">
      <summary>Updates the RichTextBoxFormatBar.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RichTextBoxFormatBar.FontSizes">
      <summary>Gets an array of font sizes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RichTextBoxFormatBar.Target">
      <summary>Gets or sets the target RichTextBox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RichTextBoxFormatBar.TargetProperty">
      <summary>Identifies the Target dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager.#ctor">
      <summary>Initializes a new instance of the RichTextBoxFormatBarManager class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager.GetFormatBar(System.Windows.UIElement)">
      <summary>Gets the RichTextFormatBar.</summary>
      <returns>The RichTextFormatBar.</returns>
      <param name="element">The UIElement from which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager.SetFormatBar(System.Windows.UIElement,Xceed.Wpf.Toolkit.IRichTextBoxFormatBar)">
      <summary>Sets the RichTextFormatBar.</summary>
      <param name="element">The UIElement to which the attached property is written.</param>
      <param name="value">The RichTextFormatBar.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager.IsAdornerVisible">
      <summary>Gets a value indicating whether the adorner is visible.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.RichTextBoxFormatBarManager.FormatBarProperty">
      <summary>Identifies the FormatBar attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RtfFormatter.#ctor">
      <summary>Initializes a new instance of the RtfFormatter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RtfFormatter.GetText(System.Windows.Documents.FlowDocument)">
      <summary>Returns the formatted text of the passed FlowDocument.</summary>
      <returns>A string representing the extracted text.</returns>
      <param name="document">A FlowDocument from which the text will be extracted.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.RtfFormatter.SetText(System.Windows.Documents.FlowDocument,System.String)">
      <summary>Sets the content of the passed FlowDocument.</summary>
      <param name="document">A FlowDocument whose content will be set.</param>
      <param name="text">A string representing the text that will be used to set the content of <em>document</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ShortUpDown.#ctor">
      <summary>Initializes a new instance of the ShortUpDown class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SingleUpDown.#ctor">
      <summary>Initializes a new instance of the SingleUpDown class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SingleUpDown.AllowInputSpecialValues">
      <summary>Gets or sets a value representing the special values the user is allowed to input, such as "Infinity", "-Infinity" and "NaN" values.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SingleUpDown.AllowInputSpecialValuesProperty">
      <summary>Identifies the AllowInputSpecialValues dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SlideShow.#ctor">
      <summary>Initializes a new instance of the <strong>SlideShow</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.AllowLooping">
      <summary>Gets or sets a value indicating whether the slideshow can loop from the last to the first item when the last item is reached (and vice-versa).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.CurrentIndex">
      <summary>Gets or sets the index of the slideshow's CurrentItem.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.CurrentItem">
      <summary>Gets or sets the slideshow's current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.DisplayCaption">
      <summary>Gets or sets a value indicating whether the slideshow's caption is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.DisplayCountLabel">
      <summary>Gets or sets a value indicating whether the count label zone is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.DisplaySideNavigationButtons">
      <summary>Gets or sets a value indicating whether the side navigation buttons (last and previous buttons) are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.DisplaySliderNavigationBar">
      <summary>Gets or sets a value indicating whether the slider navigation bar is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.IsPlaying">
      <summary>Gets or sets a value indicating whether the slideshow is in auto-play mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.NextItem">
      <summary>Gets or sets the slideshow's next item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.PauseSlideShowOnMouseOver">
      <summary>Gets or sets a value indicating whether the slideshow will be paused when the mouse moves over the presentation area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.PreviousItem">
      <summary>Gets or sets the slideshow's previous item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.TimeInterval">
      <summary>Gets or sets the slideshow's time interval while playing slideshow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShow.TransitionMode">
      <summary>Gets or sets a value representing the type of transition to use when the slideshow is in auto-play mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.AllowLoopingProperty">
      <summary>Identifies the AllowLooping dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.CurrentIndexProperty">
      <summary>Identifies the CurrentIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.CurrentItemProperty">
      <summary>Identifies the CurrentItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.DisplayCaptionProperty">
      <summary>Identifies the DisplayCaption dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.DisplayNavigationBarProperty">
      <summary>Identifies the DisplayNavigationBar dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.DisplaySideNavigationButtonsProperty">
      <summary>Identifies the DisplaySideNavigationButtons dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.DisplaySliderNavigationBarProperty">
      <summary>Identifies the DisplaySliderNavigationBar dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.IsPlayingProperty">
      <summary>Identifies the IsPlaying dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.NextItemProperty">
      <summary>Identifies the NextItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.PauseSlideShowOnMouseOverProperty">
      <summary>Identifies the PauseSlideShowOnMouseOver dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.PreviousItemProperty">
      <summary>Identifies the PreviousItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.TimeIntervalProperty">
      <summary>Identifies the TimeInterval dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShow.TransitionModeProperty">
      <summary>Identifies the TransitionMode dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.First">
      <summary>Raised when the "First" button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.Last">
      <summary>Raised when the "Last" button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.Next">
      <summary>Raised when the "Next" button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.Play">
      <summary>Raised when the "Play" button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.Previous">
      <summary>Raised when the "Previous" button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.SlideShow.Stop">
      <summary>Raised when the "Stop" button is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowCommands.FirstItem">
      <summary>Gets the <strong>FirstItem</strong> routed command</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowCommands.LastItem">
      <summary>Gets the <strong>LastItem</strong> routed command</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowCommands.NextItem">
      <summary>Gets the <strong>NextItem</strong> routed command</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowCommands.PlaySlideShow">
      <summary>Gets the <strong>PlaySlideShow</strong> routed command</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowCommands.PreviousItem">
      <summary>Gets the <strong>PreviousItem</strong> routed command</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SlideShowItem.#ctor">
      <summary>Intializes a new instance of the <strong>SlideShowItem</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowItem.Description">
      <summary>Gets or sets the data associated with the Item in the <strong>SlideShowItem</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SlideShowItem.Item">
      <summary>Gets or sets the <strong>UIElement</strong> that will be included in the <strong>SlideShowItem</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShowItem.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.SlideShowItem.ItemProperty">
      <summary>Identifies the Item dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SpinEventArgs.#ctor">
      <summary>Initializes a new instance of the SpinEventArgs class, specifying a SpinDirection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SpinEventArgs.Direction">
      <summary>Gets the spin direction.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.SpinEventArgs.UsingMouseWheel">
      <summary>Get or set whether the spin event originated from a mouse wheel event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Spinner.OnSpin(Xceed.Wpf.Toolkit.SpinEventArgs)">
      <summary>Called when the Spin event is raised.</summary>
      <param name="e">A SpinEventArgs containing event information.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Spinner.OnValidSpinDirectionChanged(Xceed.Wpf.Toolkit.ValidSpinDirections,Xceed.Wpf.Toolkit.ValidSpinDirections)">
      <summary>Called when ValidSpinDirection changes.</summary>
      <param name="oldValue">The old ValidSpinDirections value.</param>
      <param name="newValue">The new ValidSpinDirections value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Spinner.ValidSpinDirection">
      <summary>Gets or sets the valid spin directions.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Spinner.ValidSpinDirectionProperty">
      <summary>Identifies the ValidSpinDirection dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Spinner.Spin">
      <summary>Raised when spinning is initiated by the end-user.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Spinner.SpinnerSpin">
      <summary>Used as the routed event in SpinEventArgs.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SplitButton.#ctor">
      <summary>Initializes a new instance of the SpitButton class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.SplitButton.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.CloseButtonStyle">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the style used for the Close button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.CloseButtonVisibility">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the visibility of the Close button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.MaximizeButtonStyle">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the style used for the Maximize button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.MinimizeButtonStyle">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the style used for the Minimize button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.ResizeModeOverride">
      <summary>
        <span id="BugEvents">Gets or sets the Resize mode used to resize the StylableWindow.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.RestoreButtonStyle">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the style used for the Restore button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.TitleFontSize">
      <summary>Gets or sets the font size of the StyleableWindow title. Default is 15.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.TitleForeground">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the title foreground.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.TitleShadowBrush">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the brush used for the title's shadow.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowBackground">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the window background.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowBorderBrush">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the chrome?s border.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowBorderThickness">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the thickness for the chrome?s outer border thickness.</span>
        <br />
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowInactiveBackground">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the Brush used for the chrome when the StylableWindow is inactive (in background).</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowOpacity">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the value for the chrome?s opacity.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowStyleOverride">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the style used to display the StylableWindow.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.StyleableWindow.WindowThickness">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the thickness of the chrome?s border.</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.CloseButtonStyleProperty">
      <summary>Identifies the CloseButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.CloseButtonVisibilityProperty">
      <summary>Identifies the CloseButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.MaximizeButtonStyleProperty">
      <summary>Identifies the MaximizeButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.MinimizeButtonStyleProperty">
      <summary>Identifies the MinimizeButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.RestoreButtonStyleProperty">
      <summary>Identifies the RestoreButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.TitleForegroundProperty">
      <summary>Identifies the TitleForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.TitleShadowBrushProperty">
      <summary>Identifies the TitleShadowBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowBackgroundProperty">
      <summary>Identifies the WindowBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowBorderBrushProperty">
      <summary>Identifies the WindowBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowBorderThicknessProperty">
      <summary>Identifies the WindowBorderThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowInactiveBackgroundProperty">
      <summary>Identifies the WindowInactiveBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowOpacityProperty">
      <summary>Identifies the WindowOpacity dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowStyleOverrideProperty">
      <summary>Identifies the WindowStyleOverride dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.StyleableWindow.WindowThicknessProperty">
      <summary>Identifies the WindowThickness dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.CloseButtonClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the Close button is clicked.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.HeaderIconClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the header icon is clicked.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.HeaderIconDoubleClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the header icon is double-clicked.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.HeaderMouseLeftButtonClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the header is clicked using the left mouse button.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.HeaderMouseLeftButtonDoubleClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the header is double-clicked with the left mouse button</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.HeaderMouseRightButtonClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the header is clicked using the right mouse button.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.MaximizeButtonClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the Maximize button is clicked.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.MinimizeButtonClicked">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the Minimize button is clicked.</span>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.StyleableWindow.WindowResizeThumbDrag">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(37,51,64); FONT: 13px/19px &amp;quot;Segoe UI&amp;quot;, Tahoma, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Raised when the window resize thumb is dragged.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Tick.#ctor">
      <summary>Initializes a new instance of the Tick class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.Angle">
      <summary>Gets the angle of rotation of the tick, in degrees.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.IsLabelVisible">
      <summary>Gets or sets if the tick's label should be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.IsMarkVisible">
      <summary>Gets or sets if the tick's mark should be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.Label">
      <summary>Gets or sets the content of the label of the tick. This can be a string or an image or any kind of other object that WPF can display.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.LabelAngle">
      <summary>Gets the angle of the label of the tick, in degrees.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.LabelPosition">
      <summary>Gets the offset of the tick's label from the center of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.LabelTemplate">
      <summary>Gets or sets the DataTemplate of the tick's label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.MarkPosition">
      <summary>Gets the offset of the tick's mark from the center of the RadialGauge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.MarkTemplate">
      <summary>Gets or sets the DataTemplate of the tick's mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Tick.TickType">
      <summary>Gets or sets the type of the tick, either Major, Middle or Minor.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimeItem.#ctor(System.String,System.TimeSpan)">
      <summary>Initializes a new instance of the TimeItem class.</summary>
      <param name="display">The string</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimeItem.Equals(System.Object)">
      <summary>Overrides the Equals method.</summary>
      <returns>
        <strong>true</strong> if the specified Object is equal to the current Object; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <span>
          <span>The object to compare with the current object.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimeItem.GetHashCode">
      <summary>Overrides the GetHashCode method.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimeItem.Display">
      <summary>Gets or sets the TimeItem's text displayed in the dropdown's list.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimeItem.Time">
      <summary>Gets or sets the TimeItem's time.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.#ctor">
      <summary>Initializes a new instance of the TimelinePanel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size.</summary>
      <returns>
        <span>
          <span>The actual size used.</span>
        </span>
      </returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.GetDate(System.Windows.DependencyObject)">
      <summary>Gets the value of the Date attached property for the specified dependency object.</summary>
      <returns>The Date property value for the dependency object.</returns>
      <param name="obj">The DependencyObject from which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.GetDateEnd(System.Windows.DependencyObject)">
      <summary>Gets the value of the DateEnd attached property for the specified dependency object.</summary>
      <returns>The DateEnd property value for the dependency object.</returns>
      <param name="obj">The DependencyObject from which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.LineDown">
      <summary>
        <span>Scrolls down within content by one logical unit.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.LineLeft">
      <summary>
        <span>Scrolls left within content by one logical unit.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.LineRight">
      <summary>
        <span>Scrolls right within content by one logical unit.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.LineUp">
      <summary>
        <span>Scrolls up within content by one logical unit.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>
        <span>Forces content to scroll until the coordinate space of a <span>Visual</span> object is visible.</span>
      </summary>
      <returns>A Rect that is visible.</returns>
      <param name="visual">A Visual that becomes visible.</param>
      <param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size in layout required for child elements and determines a size for the TimeLinePanel.</summary>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
      <param name="availableSize">
        <span>
          <span>The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to
whatever content is available.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MouseWheelDown">
      <summary>
        <span>Scrolls down within content after a user clicks the wheel button on a mouse.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.PageLeft">
      <summary>Scrolls left within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.PageRight">
      <summary>Scrolls right within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.PageUp">
      <summary>Scrolls up within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.SetDate(System.Windows.DependencyObject,System.DateTime)">
      <summary>Sets the value of the Date attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The desired DateTime value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.SetDateEnd(System.Windows.DependencyObject,System.DateTime)">
      <summary>Sets the value of the DateEnd attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The desired DateTime value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.SetHorizontalOffset(System.Double)">
      <summary>
        <span>Sets the amount of horizontal offset.</span>
      </summary>
      <param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimelinePanel.SetVerticalOffset(System.Double)">
      <summary>
        <span>Sets the amount of vertical offset.</span>
      </summary>
      <param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.BeginDate">
      <summary>Gets or sets the beginning date of the TimeLinePanel, which corresponds to the beginning or leftmost side of the TimelinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.CanHorizontallyScroll">
      <summary>Gets or sets a value indicating whether scrolling on the horizontal axis is possible.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.CanVerticallyScroll">
      <summary>Gets or sets a value indicating whether scrolling on the vertical axis is possible.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.EndDate">
      <summary>Gets or sets the end date of the TimeLinePanel, which corresponds to the end or rightmost side of the TimelinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.ExtentHeight">
      <summary>Gets a value that contains the vertical size of the extent.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.ExtentWidth">
      <summary>Gets a value that contains the horizontal size of the extent.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.HorizontalOffset">
      <summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.KeepOriginalOrderForOverlap">
      <summary>Gets or sets a value indicating whether the original order of the children should be respected when items with the same begin and end date overlap.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.Orientation">
      <summary>Gets or sets the orientation of the timeline.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.OverlapBehavior">
      <summary>Gets or sets the overlap behavior of items in the TimeLinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.ScrollOwner">
      <summary>Gets or sets the container that controls scrolling behavior in the panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.UnitSize">
      <summary>Gets or sets the unit size (e.g., in pixels) to use in the timeline.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.UnitTimeSpan">
      <summary>Gets or sets the unit timespan to use in the timeline. Must be used in conjunction with UnitSize.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.VerticalOffset">
      <summary>
        <span>Gets the vertical offset of the scrolled content.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimelinePanel.VisibleElements">
      <summary>
        <span id="BugEvents">Gets the visible DateElements in the order they appear in the
TimelinePanel.</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.BeginDateProperty">
      <summary>Identifies the BeginDate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.DateEndProperty">
      <summary>Identifies the DateEnd attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.DateProperty">
      <summary>Identifies the Date attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.EndDateProperty">
      <summary>Identifies the EndDate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.KeepOriginalOrderForOverlapProperty">
      <summary>Identifies the KeepOriginalOrderForOverlap dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.OverlapBehaviorProperty">
      <summary>Identifies the OverlapBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.UnitSizeProperty">
      <summary>Identifies the UnitSize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimelinePanel.UnitTimeSpanProperty">
      <summary>Identifies the UnitTimeSpan dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.#ctor">
      <summary>Initializes a new instance of the TimePicker class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.GenerateTimeListItemsSource">
      <summary>Generates a list of TimeItem objects.</summary>
      <returns>A list of TimeItem objects.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnCoerceEndTime(System.TimeSpan)">
      <summary>Coerces the value of EndTime if necessary.</summary>
      <returns>The potentially coerced value.</returns>
      <param name="value">The TimeSpan value that will be coerced.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnCoerceStartTime(System.TimeSpan)">
      <summary>Coerces the value of StartTime if necessary.</summary>
      <returns>The potentially coerced value.</returns>
      <param name="value">The TimeSpan value that will be coerced.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnEndTimeChanged(System.TimeSpan,System.TimeSpan)">
      <summary>Called when when EndTime changes.</summary>
      <param name="oldValue">The old TimeSpan value.</param>
      <param name="newValue">The new TimeSpan value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnStartTimeChanged(System.TimeSpan,System.TimeSpan)">
      <summary>Called when StartTime changes.</summary>
      <param name="oldValue">The old TimeSpan value.</param>
      <param name="newValue">The new TimeSpan value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimePicker.OnTimeIntervalChanged(System.TimeSpan,System.TimeSpan)">
      <summary>Called when TimeInterval changes.</summary>
      <param name="oldValue">The old TimeSpan value.</param>
      <param name="newValue">The new TimeSpan value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimePicker.EndTime">
      <summary>Gets or sets the last time listed in the control's dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimePicker.MaxDropDownHeight">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 14px Verdana, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(251,251,251); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets the height of the popup of the TimePicker.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimePicker.StartTime">
      <summary>Gets or sets the first time listed in the control's dropdown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimePicker.TimeInterval">
      <summary>Gets or sets the time interval between the TimeItem items listed in the dropdown.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimePicker.EndTimeProperty">
      <summary>Identifies the EndTime dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimePicker.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimePicker.StartTimeProperty">
      <summary>Identifies the StartTime dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimePicker.TimeIntervalProperty">
      <summary>Identifies the TimeInterval dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TimeSpanUpDown.#ctor">
      <summary>Initializes a new instance of the TimeSpanUpDown class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimeSpanUpDown.FractionalSecondsDigitsCount">
      <summary>Gets or sets the number of digits to use to represent the fractions of seconds in the TimeSpan.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimeSpanUpDown.ShowDays">
      <summary>Gets or sets if the days will be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TimeSpanUpDown.ShowSeconds">
      <summary>Gets or Sets if the seconds will be displayed in the TimeSpanUpDown.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimeSpanUpDown.FractionalSecondsDigitsCountProperty">
      <summary>Identifies the FractionalSecondsDigitsCount dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimeSpanUpDown.ShowDaysProperty">
      <summary>
        <div>
    Identifies the ShowDays dependency property.
</div>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TimeSpanUpDown.ShowSecondsProperty">
      <summary>
        <div>
    Identifies the ShowSeconds dependency property.
</div>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.ToggleSwitch.#ctor">
      <summary>Initializes a new instance of the ToggleSwitch class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedBackground">
      <summary>Gets or sets the Brush for the background on the checked side.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedContent">
      <summary>Gets or set the content that is displayed when the toggle switch is checked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedForeground">
      <summary>Gets or sets the Brush for the CheckedLabel?s Foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedToolTip">
      <summary>Gets or sets the ToolTip to use when the mouse is over the checked side.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.CornerRadius">
      <summary>Gets or sets the CornerRadius to use for the ToggleSwitch and its thumb button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.InnerMargin">
      <summary>Gets or sets the margin to apply on the inner content of the ToggleSwitch.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.IsChecked">
      <summary>Gets or sets if the ToggleSwitch is currently in the checked state.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.IsCheckedLeft">
      <summary>Gets or sets if the checked value is on the left side of the ToggleSwitch.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.OuterMargin">
      <summary>Gets or sets the margin to apply on the outer border part of the ToggleSwitch.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBackground">
      <summary>Gets or sets the Brush for the Thumb?s Background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBorderBrush">
      <summary>Gets or sets the Brush for the Thumb?s Border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBorderThickness">
      <summary>Gets or sets the Thickness for the Thumb?s Border.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbElasticity">
      <summary>Gets or sets how far the Thumb must be dragged before it switches to the other value (as a percentage of the ToggleSwitch width).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbForeground">
      <summary>Gets or sets the Brush for the Thumb?s Foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHeight">
      <summary>Gets or sets the height of the thumb.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHoverBackground">
      <summary>Gets or sets the Brush for the Thumb?s Background (hover state).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHoverBorderBrush">
      <summary>Gets or sets the Brush for the Thumb?s Border (hover state).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbLeftContent">
      <summary>Gets or sets the content that is displayed on the Thumb button when it is located on the left side of the ToggleSwitch.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbPressedBackground">
      <summary>Gets or sets the Brush for the Thumb?s Background (pressed state).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbPressedBorderBrush">
      <summary>Gets or sets the Brush for the Thumb?s Border (pressed state).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbRightContent">
      <summary>Gets or sets the content that is displayed on the Thumb button when it is located on the right side of the ToggleSwitch.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbStyle">
      <summary>Gets or sets the style to use for the thumb in the ToggleSwitch control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbWidth">
      <summary>Gets or sets the width of the thumb.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedBackground">
      <summary>Gets or sets the Brush for the Background of the unchecked side.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedContent">
      <summary>Gets or set the content that is displayed when the toggle switch is un-checked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedForeground">
      <summary>Gets or sets the Brush for the UncheckedLabel?s Foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedToolTip">
      <summary>Gets or sets the ToolTip to use when the mouse is over the unchecked side.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedBackgroundProperty">
      <summary>Identifies the CheckedBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedContentProperty">
      <summary>Identifies the CheckedContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedForegroundProperty">
      <summary>Identifies the CheckedForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.CheckedToolTipProperty">
      <summary>Identifies the CheckedToolTip dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.InnerMarginProperty">
      <summary>Identifies the InnerMargin dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.IsCheckedLeftProperty">
      <summary>Identifies the IsCheckedLeft dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.IsCheckedProperty">
      <summary>Identifies the IsChecked dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.OuterMarginProperty">
      <summary>Identifies the OuterMargindependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBackgroundProperty">
      <summary>Identifies the ThumbBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBorderBrushProperty">
      <summary>Identifies the ThumbBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbBorderThicknessProperty">
      <summary>Identifies the ThumbBorderThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbElasticityProperty">
      <summary>Identifies the ThumbElasticity dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbForegroundProperty">
      <summary>Identifies the ThumbForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHeightProperty">
      <summary>Identifies the ThumbHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHoverBackgroundProperty">
      <summary>Identifies the ThumbHoverBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbHoverBorderBrushProperty">
      <summary>Identifies the ThumbHoverBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbLeftContentProperty">
      <summary>Identifies the ThumbLeftContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbPressedBackgroundProperty">
      <summary>Identifies the ThumbPressedBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbPressedBorderBrushProperty">
      <summary>Identifies the ThumbPressedBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbRightContentProperty">
      <summary>Identifies the ThumbRightContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbStyleProperty">
      <summary>Identifies the ThumbStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.ThumbWidthProperty">
      <summary>Identifies the ThumbWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedBackgroundProperty">
      <summary>Identifies the UncheckedBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedContentProperty">
      <summary>Identifies the UnCheckedContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedForegroundProperty">
      <summary>Identifies the UncheckedForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.ToggleSwitch.UncheckedToolTipProperty">
      <summary>Identifies the UncheckedToolTip dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ToggleSwitch.IsCheckedLeftValueChanged">
      <summary>Event called when the ToggleSwitch?s IsChecked value has been changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.ToggleSwitch.IsCheckedValueChanged">
      <summary>Event called when the ToggleSwitch?s IsCheckedLeft value has been changed.<br /></summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenItem.IsValid">
      <summary>Get/Set if the Token is valid (the Token is found in the ItemsSource, if provided).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenItem.IsValidProperty">
      <summary>Identifies the IsValid dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.TokenizedTextBox.#ctor">
      <summary>Initializes a new instance of the TokenizedTextBox class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.AllowDuplicateValues">
      <summary>Gets or sets if duplicate Tokens are allowed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.AllowInvalidValues">
      <summary>Gets or sets if invalid values are allowed (i.e.: values not found in the ItemsSource if an ItemsSource is used).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.FilteredItems">
      <summary>Gets the filtered items from the TokenizedTextBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.HighlightedItem">
      <summary>Gets the Highlighted item in the ToknizedTextBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.IsDropDownOpen">
      <summary>Gets or sets a value indicating whether the dropdown is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.IsValid">
      <summary>Gets if the TokenizedTextBox is currently valid (if all the Tokens are found in the ItemsSource, if one is provided).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.MaxDropDownHeight">
      <summary>Gets or sets a value representing the maximum dropdown height.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.SearchMemberPaths">
      <summary>Gets or sets the field(s) used for filtering valid values (only string columns are considered).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.Text">
      <summary>Gets or sets the Text string behind the TokenizedTextBox's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenDelimiter">
      <summary>Gets or sets the Delimiter used to identify a Token.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenDisplayMemberPath">
      <summary>Gets or sets a path to a value on the source object to serve as the visual representation of a selected token. If this value is null, DisplayMemberPath will be
used as a fallback.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenItemContainerStyle">
      <summary>Gets or sets the Style that is applied to the container element generated for each selected token.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenItemTemplate">
      <summary>Gets or sets the DataTemplate used to display each selected token If this value is null, ItemTemplate will be used as a fallback.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.AllowDuplicateValuesProperty">
      <summary>Identifies the AllowDuplicateValues dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.AllowInvalidValuesProperty">
      <summary>Identifies the AllowInvalidValues dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.IsDropDownOpenProperty">
      <summary>Identifies the IsDropDownOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.IsValidProperty">
      <summary>Identifies the IsValid dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.SearchMemberPathsProperty">
      <summary>Identifies the SearchMemberPaths dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenDelimiterProperty">
      <summary>Identifies the TokenDelimiter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenDisplayMemberPathProperty">
      <summary>Identifies the TokenDisplayMemberPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenItemContainerStyleProperty">
      <summary>Identifies the TokenItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBox.TokenItemTemplateProperty">
      <summary>Identifies the TokenItemTemplate dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.TokenizedTextBox.InvalidValueEntered">
      <summary>
        <font size="2">This event will be raised when an invalid value will be resolved in the TokenizedTextBox.</font>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.TokenizedTextBox.QueryItemFromText">
      <summary>This event can be handled to extend the way a text input is converted to the corresponding item. Text input may be typed by the user or specified through the
Text property. The query results have priority over the values underlined by the TokenDisplayMemberPath property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.TokenizedTextBox.QuerySuggestItemForText">
      <summary>This event can be handled to extend the way a text input is considered to be a search match for an item. Search matches are displayed in the dropdown
suggestion box. The query results have priority over the values underlined by the SearchMemberPaths property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.TokenizedTextBox.QueryTextFromItem">
      <summary>This event can be handled to extend the way a token is converted to text for displaying, matching text, or for updating the Text property. The query result
have priority over the values underlined by the TokenDisplayMemberPath property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.TokenizedTextBoxCoreItemsControl.HighlightedItem">
      <summary>Gets or sets the Highlighted item from the TokenizedTextBoxCoreItemsControl.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.TokenizedTextBoxItem.IsHighlightedProperty">
      <summary>Identifies the IsHighlighted dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.WatermarkComboBox.#ctor">
      <summary>Initializes a new instance of the <strong>WatermarkCombBox</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkComboBox.Watermark">
      <summary>Gets or sets a value indicating whether the watermark is displayed when the <strong>WatermarkComboBox</strong> is not selected nor have the focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkComboBox.WatermarkTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> to use to display the watermark in the <strong>WatermarkComboBox</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WatermarkComboBox.WatermarkProperty">
      <summary>Identifies the Watermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WatermarkComboBox.WatermarkTemplateProperty">
      <summary>Identifies the WatermarkTemplate dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkPasswordBox.Password">
      <summary>Gets or sets the password currently held by the WatermarkPasswordBox. Default value is System.String.Empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkPasswordBox.PasswordChar">
      <summary>Gets or sets the masking character for the WatermarkPasswordBox when the user enters text. Default value is a bullet character.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkPasswordBox.SecurePassword">
      <summary>Gets the password currently held by the WatermarkPasswordBox as a System.Security.SecureString.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.WatermarkPasswordBox.PasswordChanged">
      <summary>This even will be raised when the value of the WatermarkPasswordBox.Password property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.WatermarkTextBox.#ctor">
      <summary>Initializes a new instance of the WatermarkTextBox class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkTextBox.KeepWatermarkOnGotFocus">
      <summary>Gets or sets a value indicating if the watermark will be displayed when the focus is set on the WatermarkTextBox when the text is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkTextBox.Watermark">
      <summary>Gets or sets the object to use in place of null or missing Text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WatermarkTextBox.WatermarkTemplate">
      <summary>Gets or sets the DataTemplate to use to display the watermark.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WatermarkTextBox.KeepWatermarkOnGotFocusProperty">
      <summary>Identifies the KeepWatermarkOnGotFocus dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WatermarkTextBox.WatermarkProperty">
      <summary>Identifies the Watermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WatermarkTextBox.WatermarkTemplateProperty">
      <summary>Identifies the WatermarkTemplate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Wizard.#ctor">
      <summary>Initializes a new instance of the Wizard class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Wizard.GetContainerForItemOverride">
      <summary>Creates the WizardPage that is used to display the given item.</summary>
      <returns>
        <para>A DependencyObject representing the WizardPage that is used to display the given item.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Wizard.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <returns>
        <strong>true</strong> if the item is (or is eligible to be) its own container; <strong>false</strong> otherwise.</returns>
      <param name="item">
        <span>
          <span>The item to check.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Wizard.OnInitialized(System.EventArgs)">
      <summary>Raises the Initialized event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Wizard.OnCurrentPageChanged(Xceed.Wpf.Toolkit.WizardPage,Xceed.Wpf.Toolkit.WizardPage)">
      <summary>Called when CurrentPage changes.</summary>
      <param name="oldValue">The old WizardPage value.</param>
      <param name="newValue">The new WizardPage value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.BackButtonContent">
      <summary>Gets or sets the content of the wizard's Back button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.BackButtonVisibility">
      <summary>Gets or sets the visibility of the Back button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CanCancel">
      <summary>Gets or sets a value indicating whether the Cancel button is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CancelButtonClosesWindow">
      <summary>Gets or sets a value indicating whether the Cancel button closes the window.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CancelButtonContent">
      <summary>Gets or sets the content of the Cancel button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CancelButtonVisibility">
      <summary>Gets or sets the visibility of the Cancel button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CanFinish">
      <summary>Gets or sets a value indicating whether the Finish button is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CanHelp">
      <summary>Gets or sets a value indicating whether the Help button is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CanSelectNextPage">
      <summary>Gets or sets a value indicating whether the Next Page button is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CanSelectPreviousPage">
      <summary>Gets or sets a value indicating whether the Previous Page button is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.CurrentPage">
      <summary>Gets or sets the current page in the wizard.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.ExteriorPanelMinWidth">
      <summary>Gets or sets the minimum width of the exterior panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.FinishButtonClosesWindow">
      <summary>Gets or sets a value indicating whether the Finish button closes the containing window.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.FinishButtonContent">
      <summary>Gets or sets the content of the Finish button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.FinishButtonVisibility">
      <summary>Gets or sets the visibility of the Finish button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.HelpButtonContent">
      <summary>Gets or sets the Help button content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.HelpButtonVisibility">
      <summary>Gets or sets the visibility of the Help button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.NextButtonContent">
      <summary>Gets or sets the Next button content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Wizard.NextButtonVisibility">
      <summary>Gets or sets the visibility of the Next button.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.BackButtonContentProperty">
      <summary>Identifies the BackButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.BackButtonVisibilityProperty">
      <summary>Identifies the BackButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CanCancelProperty">
      <summary>Identifies the CanCancel dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CancelButtonClosesWindowProperty">
      <summary>Identifies the CancelButtonClosesWindow dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CancelButtonContentProperty">
      <summary>Identifies the CancelButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CancelButtonVisibilityProperty">
      <summary>Identifies the CancelButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CancelEvent">
      <summary>Identifies the Cancel routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CanFinishProperty">
      <summary>Identifies the CanFinish dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CanHelpProperty">
      <summary>Identifies the CanHelp dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CanSelectNextPageProperty">
      <summary>Identifies the CanSelectNextPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CanSelectPreviousPageProperty">
      <summary>Identifies the CanSelectPreviousPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.CurrentPageProperty">
      <summary>Identifies the CurrentPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.ExteriorPanelMinWidthProperty">
      <summary>Identifies the ExteriorPanelMinWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.FinishButtonClosesWindowProperty">
      <summary>Identifies the FinishButtonClosesWindow dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.FinishButtonContentProperty">
      <summary>Identifies the FinishButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.FinishButtonVisibilityProperty">
      <summary>Identifies the FinishButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.FinishEvent">
      <summary>Identifies the Finish routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.HelpButtonContentProperty">
      <summary>Identifies the HelpButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.HelpButtonVisibilityProperty">
      <summary>Identifies the HelpButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.HelpEvent">
      <summary>Identifies the Help routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.NextButtonContentProperty">
      <summary>Identifies the NextButtonContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.NextButtonVisibilityProperty">
      <summary>Identifies the NextButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.NextEvent">
      <summary>Identifies the Next routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.PageChangedEvent">
      <summary>Identifies the PageChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Wizard.PreviousEvent">
      <summary>Identifies the Previous routed event.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.Cancel">
      <summary>Raised when the wizard is canceled (the Cancel button is clicked).</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.Finish">
      <summary>Raised when the Finish button is clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.Help">
      <summary>Raised when the Help button is pressed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.Next">
      <summary>Raised when WizardCommands.NextPage command is executed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.PageChanged">
      <summary>Raised when the current page changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Wizard.Previous">
      <summary>Raised when WizardCommands.PreviousPage command is executed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.Cancel">
      <summary>Gets or sets the Cancel routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.Finish">
      <summary>Gets or sets the Finish routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.Help">
      <summary>Gets or sets the Help routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.NextPage">
      <summary>Gets or sets the NextPage routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.PreviousPage">
      <summary>Gets or sets the PreviousPage routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardCommands.SelectPage">
      <summary>Gets or sets the SelectPage routed command.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.WizardPage.#ctor">
      <summary>Initializes a new instance of the WizardPage class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.BackButtonVisibility">
      <summary>Gets or sets the visibility of the Back button for this wizard page.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CanCancel">
      <summary>Gets or sets a value indicating whether the Cancel button is enabled for this WindowPage.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CancelButtonVisibility">
      <summary>
        <para>Gets or sets the visibility of the Cancel button for this wizard page.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CanFinish">
      <summary>
        <para>Gets or sets a value indicating whether the Finish button is enabled for this WindowPage.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CanHelp">
      <summary>
        <para>Gets or sets a value indicating whether the Help button is enabled for this WindowPage.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CanSelectNextPage">
      <summary>
        <para>Gets or sets a value indicating whether the Next Page button is enabled for this WindowPage.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.CanSelectPreviousPage">
      <summary>
        <para>Gets or sets a value indicating whether the Previous Page button is enabled for this WindowPage.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.Description">
      <summary>Gets or sets the text displayed in the WizardPage.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.ExteriorPanelBackground">
      <summary>Gets or sets the exterior panel's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.ExteriorPanelContent">
      <summary>Gets or sets the exterior panel's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.FinishButtonVisibility">
      <summary>
        <para>Gets or sets the visibility of the Finish button for this wizard page.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.HeaderBackground">
      <summary>Gets or sets the header background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.HeaderImage">
      <summary>Gets or sets the image of the header.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.HelpButtonVisibility">
      <summary>
        <para>Gets or sets the visibility of the Help button for this wizard page.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.NextButtonVisibility">
      <summary>
        <para>Gets or sets the visibility of the Next button for this wizard page.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.NextPage">
      <summary>Gets or sets the page following this one in the wizard.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.PageType">
      <summary>Gets or sets the type of the WizardPage.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.PreviousPage">
      <summary>Gets or sets the page preceding this one in the wizard.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.WizardPage.Title">
      <summary>Gets or sets the title on the WizardPage.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.BackButtonVisibilityProperty">
      <summary>Identifies the BackButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CanCancelProperty">
      <summary>Identifies the CanCancel dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CancelButtonVisibilityProperty">
      <summary>Identifies the CancelButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CanFinishProperty">
      <summary>Identifies the CanFinish dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CanHelpProperty">
      <summary>Identifies the CanHelp dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CanSelectNextPageProperty">
      <summary>Identifies the CanSelectNextPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.CanSelectPreviousPageProperty">
      <summary>Identifies the CanSelectPreviousPage dependency property. The identifier for the CanSelectPreviousPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.EnterEvent">
      <summary>Identifies the Enter routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.ExteriorPanelBackgroundProperty">
      <summary>Identifies the ExteriorPanelBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.ExteriorPanelContentProperty">
      <summary>Identifies the ExteriorPanelContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.FinishButtonVisibilityProperty">
      <summary>Identifies the FinishButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.HeaderBackgroundProperty">
      <summary>Identifies the HeaderBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.HeaderImageProperty">
      <summary>Identifies the HeaderImage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.HelpButtonVisibilityProperty">
      <summary>Identifies the HelpButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.LeaveEvent">
      <summary>Identifies the Leave routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.NextButtonVisibilityProperty">
      <summary>Identifies the NextButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.NextPageProperty">
      <summary>Identifies the NextPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.PageTypeProperty">
      <summary>Identifies the PageType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.PreviousPageProperty">
      <summary>Identifies the PreviousPage dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.WizardPage.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.WizardPage.Enter">
      <summary>Raised when a wizard page is loaded.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.WizardPage.Leave">
      <summary>Raised when a wizard page is unloaded.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.XamlFormatter.#ctor">
      <summary>Initializes a new instance of the XamlFormatter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.XamlFormatter.GetText(System.Windows.Documents.FlowDocument)">
      <summary>Returns the formatted text of the passed FlowDocument.</summary>
      <returns>A string representing the extracted text.</returns>
      <param name="document">A FlowDocument from which the text will be extracted.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.XamlFormatter.SetText(System.Windows.Documents.FlowDocument,System.String)">
      <summary>Sets the content of the passed FlowDocument.</summary>
      <param name="document">A FlowDocument whose content will be set.</param>
      <param name="text">A string representing the text that will be used to set the content of <em>document</em>.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemAddedRoutedEventHandler">
      <summary>Handles the ItemAdded routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemAddingRoutedEventHandler">
      <summary>Handles the ItemAdding routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemDeletedRoutedEventHandler">
      <summary>Handles the ItemDeleted routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemDeletingRoutedEventHandler">
      <summary>Handles the ItemDeleting routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemMovedDownRoutedEventHandler">
      <summary>Handles the ItemMovedDown routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.CollectionControl.ItemMovedUpRoutedEventHandler">
      <summary>Handles the ItemMovedUp routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowItemActivatedHandler">
      <summary>Delegate for the PileFlowItemActivated event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PileFlowPanel.PileFlowItemDeactivatedHandler">
      <summary>Delegate for the PileFlowItemDeactivated event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.QueryMoveFocusEventHandler">
      <summary>Represents the method that will handle the QueryMoveFocus routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Wizard.NextRoutedEventHandler">
      <summary>Handler for the Next routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Wizard.PreviousRoutedEventHandler">
      <summary>Handler for the Previous routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AxisGraduationMode">
      <summary>Represents GridLine layouts for use in the chart.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisGraduationMode.Automatic">
      <summary>Grid lines are placed along the axis by dividing the axis evenly using the value of TicksCount.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisGraduationMode.Manual">
      <summary>Grid lines are placed only for the values of the data points and are lined up with those data points.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AxisLabelLayout">
      <summary>Determines label layout mode for an axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisLabelLayout.ShowAll">
      <summary>All labels are shown by staggering the labels on two or more levels if there is not enough space to show them side-by-side. The Level property of the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.LevelLabel.html">LevelLabel</see> class holds the level of label.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisLabelLayout.ShowToFit">
      <summary>Every second, third, fourth label, etc., is hidden when there is not enough space to show the labels side-by-side.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AxisScaleMode">
      <summary>Specifies the scale mode of the axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisScaleMode.Manual">
      <summary>A custom range between CustomRangeStart and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Axis~CustomRangeEnd.html">CustomRangeEnd</see> is used for the axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.AxisScaleMode.Automatic">
      <summary>The range spans from the lowest value to the highest value of the data points.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataPointPropertyName">
      <summary>Specifies DataPoint property name to apply binding to.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPointPropertyName.X">
      <summary>Apply binding to the X property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPointPropertyName.Y">
      <summary>Apply binding to the Y property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPointPropertyName.Label">
      <summary>Apply binding to the Label property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPointPropertyName.None">
      <summary>Do not apply binding.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LabelsType">
      <summary>Represents the types of tick labels.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LabelsType.Numeric">
      <summary>Tick label is the value as a string.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LabelsType.DateTime">
      <summary>Tick label is a DateTime as a string.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LabelsType.Labels">
      <summary>Tick label is the same as Numeric or is DataPoint.Label.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LayoutMode">
      <summary>Specifies the general layout mode of the Series within the same
<see cref="T:Xceed.Wpf.Toolkit.Chart.Area" />.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutMode.SideBySide">
      <summary>Series are displayed side-by-side.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutMode.Stacked">
      <summary>Series are stacked.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutMode.Custom">
      <summary>Series are displayed and sorted according to user-defined criteria. In this case, developers must implement their own 
sorting and layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutMode.Default">
      <summary>Default layout mode for Series.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LegendDock">
      <summary>Specifies the docking mode of a Legend.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LegendDock.Top">
      <summary>The Legend is docked at the top.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LegendDock.Left">
      <summary>The Legend is docked at the left.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LegendDock.Right">
      <summary>The Legend is docked at the right.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LegendDock.Bottom">
      <summary>The Legend is docked at the bottom.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LegendDock.Float">
      <summary>The Legend is floating.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ListActionType">
      <summary>
        <para>Specifies the mode of action perfomed in ListBase&lt;T&gt;.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.ListActionType.Insert">
      <summary>Item or items being added.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.ListActionType.Remove">
      <summary>Item is being removed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.ListActionType.Set">
      <summary>Item is being set.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.ListActionType.Clear">
      <summary>All items are being cleared.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.ListActionType.None">
      <summary>No action.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Orientation">
      <summary>Specifies the orientation of an axis in the chart's layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Orientation.Vertical">
      <summary>The vertical axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Orientation.Horizontal">
      <summary>The horizontal axis.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes">
      <summary>Specifies the predefined layout modes of the Chart control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes.Area">
      <summary>Predefined layout for area charts.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes.Column">
      <summary>Predefined layout for column (bar) charts.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes.Line">
      <summary>Predefined layout for line charts.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes.Pie">
      <summary>Predefined layout for pie charts.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.PredefinedLayoutTypes.Custom">
      <summary>Predefined layout for custom charts.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.TitleOrientation">
      <summary>Specifies the orientation of title labels.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.TitleOrientation.Horizontal">
      <summary>The title label's orientation is horizontal.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.TitleOrientation.Vertical">
      <summary>The title label's orientation is vertical.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Area">
      <summary>Used to display charts and a grid with axes and labels.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AreaLayout">
      <summary>
        <para>Performs the creation, layout, and arrangement of the primitives of area charts for a given Series.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AreaPrimitiveInfo">
      <summary>
        <para>Represents information used to perform layout of area charts and used in the databinding of their primitives for styling.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.AreasList`1">
      <summary>A list of Area objects.</summary>
      <typeparam name="T">Type is Area.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Arrow">
      <summary>Represents arrows on the axes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Axis">
      <summary>Represents an axis.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel">
      <summary>Base class of classes used to draw title, level, and hint labels using a rounded rectangle and text specified in the Text property</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.BindingInfo">
      <summary>
        <para>Stores binding information for a single property of the DataPoint class.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.BindingsList`1">
      <summary>Stores a list of  objects.</summary>
      <typeparam name="T">Type is BindingInfo.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Chart">
      <summary>
        <para>Xceed's WPF chart control is designed to display rich, flexible, configurable, extendable charts. The control is 100% lookless and is able to display
multiple areas with multiple charts at the same time. It supports area, column (bar), line, and pie charts, and also provides the ability to create custom
charts.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ChartPrimitive">
      <summary>Base class of all of the chart's visual elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ChartPrimitiveComparer">
      <summary>Used to compare  instances by the value of the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.DataPoint~X.html">X</see> property of their <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.DataPoint.html">DataPoint</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList`1">
      <summary>Represents a list of  objects.</summary>
      <typeparam name="T">Type is ChartPrimitive.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ColorConverter">
      <summary>Helper class to perform operations on colors such as conversion to/from various formats, etc.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ColorPalette">
      <summary>Defines the default color palette for the chart control to draw a Series of <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.DataPoint.html">DataPoint</see> objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ColumnLayout">
      <summary>
        <para>Performs the creation, layout, and arrangement of the primitives of column (bar) charts.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ColumnPrimitiveInfo">
      <summary>Represents information used to perform layout of column (bar) charts and used in the databinding of their primitives for styling.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataPoint">
      <summary>Contains user-logic coordinates for every chart primitive.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataPointComparer">
      <summary>Used to compare  instances by their X values.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataPointEnumerator`1">
      <summary>Supports iteration over a collection of DataPoint objects.</summary>
      <typeparam name="T">Type is DataPoint.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataPointsList`1">
      <summary>Represents a list of the  objects.</summary>
      <typeparam name="T">Type is Datapoint.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.DataRange">
      <summary>Defines a range of data.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.GridLine">
      <summary>Represents a line of the chart's grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.GridPrimitivesList`1">
      <summary>Represents a list of the  primitives.</summary>
      <typeparam name="T">Type is GridLine.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LabelPrimitiveInfo">
      <summary>Represents information specific to labels.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LabelsList`1">
      <summary>Represents a list of level labels.</summary>
      <typeparam name="T">Type is LevelLabel.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LayoutEngine">
      <summary>
        <para>Base class of the engines that perform the layout, the arrangement, and the creation and the configuration of the 
objects associated with each chart type.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LayoutGrid">
      <summary>Used to perform the layout of controls in the chart's grid horizontally or vertically.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Legend">
      <summary>Represents a chart legend.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LegendItem">
      <summary>Participates in Legend databinding as a data source and stores information about one legend item displayed in a legend.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LegendItemBase">
      <summary>Base class of LegendItem.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LevelLabel">
      <summary>Draws level labels and stores their index.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LineLayout">
      <summary>
        <para>Perform the creation, layout, and arrangement of the primitives of line charts.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo">
      <summary>
        <para>Represents information used to perform layout of line charts and used in the databinding of their primitives for styling.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ListBase`1">
      <summary>Base class used in the chart's controls as list containers.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1">
      <summary>Event data used in the BeforeListChanged and the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.ListBase`1~ListChanged_EV.html">ListChanged</see> events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.PieLayout">
      <summary>
        <para>Perform the creation, layout, and arrangement of the primitives of pie charts.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo">
      <summary>
        <para>Represents information used to perform layout of pie charts and used in the databinding of their primitives.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase">
      <summary>
        <para>Base class of the classes that represent information used to perform the layout of chart primitives (columns/bars, pie slices, lines, etc.) and used in the
databinding of these primitives.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Series">
      <summary>Displays a list of  primitives in an <see cref="P:Xceed.Wpf.Toolkit.Chart.Series.Area" /> of a <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Chart.html">Chart</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.SeriesList`1">
      <summary>Represents a list of  instances.</summary>
      <typeparam name="T">Type is Series.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.Tick">
      <summary>Represents an Axis tick.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.TicksList`1">
      <summary>Represents a list of  elements.</summary>
      <typeparam name="T">Type is Tick.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.TitleLabel">
      <summary>Used to draw axis title labels.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.#ctor">
      <summary>Initializes a new instance of the Area class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of an Area object.</summary>
      <returns>The size of the content.</returns>
      <param name="arrangeSize">The computed size that is used to arrange the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.CreateVisualChildren">
      <summary>Creates visual children for all Area elements.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetActualPoint">
      <summary>Converts point in user logic coordinates or DataPoint into actual pixel point.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetDataPoints">
      <summary>Gets a list of DataPoint objects for all <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Series.html">Series</see> instances in this Area.</summary>
      <returns>A list of DataPoint objects for all Series instances in this Area.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetSeriesLayoutBounds">
      <summary>Calculates the layout bounds without tick and title labels.</summary>
      <returns>The calculated bounds.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetSideBySideSeriesInfo(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Used to calculate position and size by x-axis for certain Series relative to other
side-by-side Series in Series list.</summary>
      <returns>DataPoint with offset (X value means location and Y value means width for one DataPoint to display).</returns>
      <param name="series">The series for which the relative position will be calculated.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.HighlightSeries(Xceed.Wpf.Toolkit.Chart.Series,System.Boolean)">
      <summary>Sets highlighted state for the specified Series.</summary>
      <param name="series">Series to highlight.</param>
      <param name="highlighted">Highlight the series if true; otherwise, remove highlight.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.Invalidate">
      <summary>Invalidates Area and all its children.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.LayoutSeries">
      <summary>Performs Series layout and prepares all series for arrangement.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.OnBackgroundTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when BackgroundTemplate changes.</summary>
      <param name="oldValue">The old DataTemplate.</param>
      <param name="newValue">The new DataTemplate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.OnTitleChanged(System.String,System.String)">
      <summary>Called when Title changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.RaiseLegendRefresh">
      <summary>Raises the LegendRefresh event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.UniteWithAxisRange(Xceed.Wpf.Toolkit.Chart.Axis)">
      <summary>Goes through the Series instances contained in the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Area.html">Area</see> and uses the range of each one to calculate the needed total range for an <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Axis.html">Axis</see>.</summary>
      <param name="axis">The Axis whose total range will be calculated.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetActualPoint(System.Windows.Point)">
      <summary>Converts point in user logic coordinates into actual pixel point.</summary>
      <returns>Point in actual pixels.</returns>
      <param name="point">Point in user logic coordinates.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Area.GetActualPoint(Xceed.Wpf.Toolkit.Chart.DataPoint)">
      <summary>Converts DataPoint into actual pixel point.</summary>
      <returns>Point in actual pixels.</returns>
      <param name="point">The DataPoint to convert.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.BackgroundTemplate">
      <summary>Gets or sets the data template for grid representation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.LayoutBounds">
      <summary>Gets the layout bounds for the interior of a Series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.Series">
      <summary>Gets a list of Series instances contained in the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Area.html">Area</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.Title">
      <summary>Gets or sets the Area title.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.XAxis">
      <summary>Gets or sets the x-axis of the Area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.XStep">
      <summary>Gets or sets the step for the x-axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.YAxis">
      <summary>Gets or sets the y-axis of the Area.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Area.YStep">
      <summary>Gets or sets the step for the y-axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Area.BackgroundTemplateProperty">
      <summary>Identifies the BackgroundTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Area.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.Area.LegendRefresh">
      <summary>Raised when legend items need to be refreshed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.#ctor">
      <summary>Initializes a new instance of the AreaLayout class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.ApplyDefaultTemplate(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>
        <para>Applies the default area template to the specified Series.</para>
      </summary>
      <param name="series">The Series to which the default template will be applied.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.ArrangePrimitives(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>
        <para>Arranges an area chart's ChartPrimitive
instances for the specified <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Series.html">Series</see> in pixel
coordinates.</para>
      </summary>
      <param name="series">The Series whose primitives will be arranged.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.CreateElements(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>
        <para>Creates area chart primitives for the specified Series.</para>
      </summary>
      <param name="series">The Series for which primitives will be created.</param>
      <param name="lstVisuals">List to which the created primitives will be added.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.CreateHints(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates the hints for the specified Series.</summary>
      <param name="series">The Series whose hints will be created.</param>
      <param name="lstVisuals">A list of ChartPrimitive objects representing
the created hints.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaLayout.PerformLayout(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>
        <para>Performs the layout of the ChartPrimitive objects for the specified Series in logical coordinates.</para>
      </summary>
      <param name="series">The Series for which primitives will be laid out.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.AreaLayout.DefaultTemplate">
      <summary>Gets the default area DataTemplate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.AreaLayout.LayoutType">
      <summary>
        <para>Gets the predefined chart type for AreaLayout.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.AreaPrimitiveInfo.#ctor">
      <summary>Initializes a new instance of the AreaPrimitiveInfo class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Arrow.#ctor">
      <summary>Initializes a new instance of the Arrow class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Arrow.RecalculateSize">
      <summary>Recalculates size of the arrow.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Arrow.CalculatePoints">
      <summary>Calculates the Points collection for the polyline that draws the arrow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Arrow.Length">
      <summary>Gets or sets length of the arrow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Arrow.Size">
      <summary>Gets the size of the arrow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Arrow.Thickness">
      <summary>Gets or sets the thickness of the arrow.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Arrow.LengthProperty">
      <summary>Identifies the Length dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Arrow.ThicknessProperty">
      <summary>Identifies the Thickness dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.#ctor">
      <summary>Initializes a new instance of the Axis class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.#ctor">
      <summary>Initializes a new instance of the Axis class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.#ctor(Xceed.Wpf.Toolkit.Chart.Orientation)">
      <summary>Initializes a new instance of the Axis class using the specified Orientation.</summary>
      <param name="orientation">The orientation to use when creating the instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.ArrangeLabels">
      <summary>Arranges tick labels and title label.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.CorrectGridLinesPosition">
      <summary>Corrects the position of the grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.CreateVisualChildren">
      <summary>Adds axis primitives (arrow, axis title, axis label, ticks, and tick labels) to the visual children collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.GetRealPoint(System.Double)">
      <summary>Converts a point in user-logic coordinates into a point in actual pixels.</summary>
      <returns>Point in actual pixels.</returns>
      <param name="pt">Point in user-logic coordinates.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.GetTitleText(System.Double)">
      <summary>Gets text for tick labels.</summary>
      <returns>The formatted value.</returns>
      <param name="value">Value that must be represented on the label.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.LayoutAxis(System.Windows.Rect)">
      <summary>Performs the layout of the axis line and arrow; calculates the axis length, location, and zero point; and recalculates axis layout data.</summary>
      <param name="layoutRect">A Rectangle representing where the layout is being performed.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnArrowChanged">
      <summary>Called when the Arrow property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnArrowTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the ArrowTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnAxisLabelsLayoutChanged(Xceed.Wpf.Toolkit.Chart.AxisLabelLayout,Xceed.Wpf.Toolkit.Chart.AxisLabelLayout)">
      <summary>Called when the AxisLabelsLayout property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnAxisTitleTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the AxisTitleTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnCustomRangeEndChanged(System.Double,System.Double)">
      <summary>Called when the CustomRangeEnd property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnCustomRangeStartChanged(System.Double,System.Double)">
      <summary>Called when the CustomRangeStart property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnGridTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the GridTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnLabelTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the LabelTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnOrientationChanged">
      <summary>Called when the Orientation property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnTicksCountChanged(System.Int32,System.Int32)">
      <summary>Called when the TicksCount property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnTickTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the TickTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnTitleChanged(System.String,System.String)">
      <summary>Called when the Title property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.OnTitleMarginChanged(System.Double,System.Double)">
      <summary>Called when the TitleMargin property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformArrowLayout(System.Windows.Point)">
      <summary>Performs the layout of an arrow.</summary>
      <param name="zero">Zero point in pixels.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformAxisLayout">
      <summary>Performs the layout of an axis.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformAxisTitleLayout(System.Windows.Rect,System.Windows.Rect@)">
      <summary>Performs the layout of the axis label.</summary>
      <param name="baseRect">The Rectangle where the layout is being performed.</param>
      <param name="layoutedRect">The Rectangle of free space after the layout.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformCustomRangeGraduation">
      <summary>Perform the graduation for a custom range in manual scale mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformGraduation">
      <summary>Performs the graduation of the axis.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformGridLayout">
      <summary>Performs the layout of the grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformLabelsLayout(System.Windows.Rect,System.Windows.Rect@)">
      <summary>Performs the layout of the labels.</summary>
      <returns>An integer repesenting the count of Title levels.</returns>
      <param name="axisBounds">The Rectangle where the layout is being performed.</param>
      <param name="layoutedRect">Th Rectangle of free space after the layout.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformLayout">
      <summary>Performs the layout of the axis and its components.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformManualGraduation(Xceed.Wpf.Toolkit.Chart.DataPointsList{Xceed.Wpf.Toolkit.Chart.DataPoint})">
      <summary>Prepares the layout of the axis and its components.</summary>
      <param name="dataPoints">A collection of DataPoint objects.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PerformTicksLayout">
      <summary>Performs the layout of the ticks.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PrepareLabels">
      <summary>Creates the Tick label collection and Axis title label.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PrepareLayout(Xceed.Wpf.Toolkit.Chart.DataPointsList{Xceed.Wpf.Toolkit.Chart.DataPoint})">
      <summary>Prepares layout of the axis and its components.</summary>
      <param name="dataPoints">A collection of DataPoint objects.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.PrepareTicks">
      <summary>Creates the Tick collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.RecalculateAxis">
      <summary>Recalculates the axis.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.Reset">
      <summary>Resets the layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Axis.SetTitlesDirection(Xceed.Wpf.Toolkit.Chart.DataRange,System.Boolean)">
      <summary>Sets the direction of the tick labels.</summary>
      <param name="layoutRange">The DataRange of the layout.</param>
      <param name="layoutReversed">A bool indicating whether the layout is reversed.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Arrow">
      <summary>Gets or sets the arrow of the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ArrowTemplate">
      <summary>Gets or sets the data template used to represent the Arrow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.AxisLabelsLayout">
      <summary>Gets or sets the layout mode of the axis labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.AxisTitleTemplate">
      <summary>Gets or sets the data template used to represent axis title labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.CustomRangeEnd">
      <summary>Gets or sets the custom end point for manual scale mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.CustomRangeStart">
      <summary>Gets or sets the custom start point for manual scale mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.DateTimeFormat">
      <summary>Gets or sets the DateTime format used for converting DateTime to label text in LabelsType.DateTime mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.DateTimeFormatInfo">
      <summary>Gets or sets the format information used to determine how DateTime values are formatted and displayed, depending on culture.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.GraduationMode">
      <summary>Gets or sets the graduation mode of the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.GridLines">
      <summary>Gets a collection of grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.GridTemplate">
      <summary>Gets or sets the data template used to represent grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.IntersectMinValue">
      <summary>Gets or sets if the axis intersects the other axis at other axis minimim value. Default is true.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.LabelDecimalCount">
      <summary>Gets or sets the decimals count on axis labels. Default is null. This property can be used when the LabelType property is set to Numeric. Please note that this
property can modify the TickCount property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.LabelsType">
      <summary>Gets or sets type of Tick labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.LabelTemplate">
      <summary>Gets or sets the data template used to represent labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Location">
      <summary>Gets or sets the start point of the axis line.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Offset">
      <summary>Gets or sets the offset for axis length used to lay out helper visuals correctly, such as "spider leg" labels, etc.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Range">
      <summary>Gets or sets range of the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Reversed">
      <summary>Gets or sets whether the axis is reversed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ScaleMode">
      <summary>Gets or sets the scale mode of the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowArrow">
      <summary>Gets or sets the visibility of the arrow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowAxis">
      <summary>Gets or sets the visibility of the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowAxisLabel">
      <summary>Gets or sets the visibility of the axis label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowGridLines">
      <summary>Gets or sets the visibility of grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowTickLabels">
      <summary>Gets or sets the visibility of tick labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.ShowTicks">
      <summary>Gets or sets the visibility of ticks.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.TickLabels">
      <summary>Gets a list of tick labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.TickList">
      <summary>Gets a collection of ticks.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.TicksCount">
      <summary>Gets or sets the count of ticks on the axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.TickTemplate">
      <summary>Gets or sets the data template used to represent ticks.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.Title">
      <summary>Gets or sets text for the axis label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Axis.TitleMargin">
      <summary>Gets or sets the margin between the axis label (whose text is represented by Title) and
the axis line.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.ArrowTemplateProperty">
      <summary>Identifies the ArrowTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.AxisLabelsLayoutProperty">
      <summary>Identifies the AxisLabelsLayout dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.AxisTitleTemplateProperty">
      <summary>Identifies the AxisTitleTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.CustomRangeEndProperty">
      <summary>Identifies the CustomRangeEnd dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.CustomRangeStartProperty">
      <summary>Identifies the CustomRangeStart dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.GridTemplateProperty">
      <summary>Identifies the GridTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.LabelsTypeProperty">
      <summary>Identifies the LabelsType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.LabelTemplateProperty">
      <summary>Identifies the LabelTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.TicksCountProperty">
      <summary>Identifies the TicksCount dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.TickTemplateProperty">
      <summary>Identifies the TickTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.TitleMarginProperty">
      <summary>Identifies the TitleMargin dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Axis.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.#ctor">
      <summary>Initializes a new instance of the BaseTitleLabel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.#ctor(System.String)">
      <summary>Initializes a new instance of the BaseTitleLabel class using the specified text as the title.</summary>
      <param name="text">Text to displayed in the label.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.#ctor">
      <summary>Initializes a new instance of the BaseTitleLabel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.PerformLayout">
      <summary>Performs the layout of the label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.CenterLocation">
      <summary>Gets or sets the center point of the label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.Location">
      <summary>Gets the location of the label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.Orientation">
      <summary>Gets or sets the title label's orientation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.RealHeight">
      <summary>Gets the actual height of the label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.RealWidth">
      <summary>Gets the actual width of the label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.Text">
      <summary>Gets or sets the Title text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.X">
      <summary>Gets or sets the x-coordinate of the label's center.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BaseTitleLabel.Y">
      <summary>Gets or sets the y-coordinate of the label's center.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingInfo.#ctor">
      <summary>Initializes a new instance of the BindingInfo class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingInfo.#ctor">
      <summary>Initializes a new instance of the BindingInfo class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingInfo.#ctor(System.Windows.Data.Binding,Xceed.Wpf.Toolkit.Chart.DataPointPropertyName)">
      <summary>Initializes a new instance of the BindingInfo class using the specified Binding and DataPointPropertyName.</summary>
      <param name="binding">The Binding to use for the specified property name.</param>
      <param name="propertyName">The property name to use the specified binding for.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BindingInfo.Binding">
      <summary>Gets or sets the Binding object to use in binding operations for the associated DataPoint property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.BindingInfo.PropertyName">
      <summary>Gets or sets the DataPoint property name to apply binding to.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.#ctor">
      <summary>Initializes a new instance of the BindingsList&lt;T&gt; class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.Add(`0)">
      <summary>Adds an object to the BindingsList</summary>
      <param name="item">The object to add to the list.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.AddRange(`0[])">
      <summary>Adds an array of items to the end of the BindingsList.</summary>
      <param name="items">The array of items to add to the end of the BindingsList.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.Clear">
      <summary>Removes all items from the BindingsList.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.Insert(System.Int32,`0)">
      <summary>Inserts an item to the BindingsList at the specified index.</summary>
      <param name="index">The zero-based index at which <em>item</em> should be inserted.</param>
      <param name="item">The item to insert into the BindingsList.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the BindingsList.</summary>
      <returns>
        <strong>true</strong> if the item is successfully removed; otherwise, <strong>false</strong>. This method also returns false if <em>item</em> was not found in
the list.</returns>
      <param name="item">The item to remove from the BindingsList.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.BindingsList`1.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index of the BindingsList.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.#ctor">
      <summary>Initializes a new instance of the Chart class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of an  control.</summary>
      <returns>The size of the content.</returns>
      <param name="arrangeBounds">Computed size used to arrange the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.CorrectSize(System.Windows.Size)">
      <summary>Corrects a size if the size's width or height is positive Infinity.</summary>
      <returns>The corrected size.</returns>
      <param name="size">The Size to correct.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.GetVisualChild(System.Int32)">
      <summary>Returns a child at the specified index from a collection of child elements.</summary>
      <returns>The requested child element. If the provided index is out of range, an exception is thrown</returns>
      <param name="index">The zero-based index of the requested child element in the collection.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.MeasureOverride(System.Windows.Size)">
      <summary>Re-measures the control.</summary>
      <returns>The desired size.</returns>
      <param name="constraint">A Size representing an upper limit.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.OnApplyTemplate">
      <summary>Called when ApplyTemplate is called and returns true.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.OnLegendRefresh(System.Object,System.EventArgs)">
      <summary>Handles the LegendRefresh event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An EventArgs that contains event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Called when the VisualCollection of the visual object is modified.</summary>
      <param name="visualAdded">The Visual that was added to the collection</param>
      <param name="visualRemoved">The Visual that was removed from the collection</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Chart.RefreshLegendItems">
      <summary>Refreshes legend content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Chart.Areas">
      <summary>Gets the chart's list of  instances.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Chart.Legend">
      <summary>Gets or sets chart Legend.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Chart.ShowLegend">
      <summary>Gets or sets whether the chart's Legend is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Chart.VisualChildrenCount">
      <summary>Gets the count of the chart's visual children.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.Chart.SeriesChanged">
      <summary>Called when the Series list in any <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Area.html">Area</see> is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.#ctor">
      <summary>Initializes a new instance of the ChartPrimitive class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.#ctor(Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase)">
      <summary>Initializes a new instance of the ChartPrimitive class using the specificed PrimitiveInfoBase-derived object.</summary>
      <param name="info"> object to use as a binding source for this primitive.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.#ctor">
      <summary>Initializes a new instance of the ChartPrimitive class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.RaisePropertyChanged(System.String)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.DataPoint">
      <summary>Gets the DataPoint corresponding to this primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.Info">
      <summary>Gets or sets the binding source object for this primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.IsCovered">
      <summary>Gets or sets whether a primitive is "covered." (When "covered," a primitive is not highlighted, but some other primitive is highlighted.)</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.IsHighlighted">
      <summary>Gets or sets whether the primitive is highlighted.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.HighlightEnter">
      <summary>Raised when the primitive becomes highlighted.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.HighlightLeave">
      <summary>Raised when primitive is no longer highlighted.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.ChartPrimitive.PropertyChanged">
      <summary>Raised when a property value changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitiveComparer.#ctor">
      <summary>Initializes a new instance of the ChartPrimitiveComparer class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitiveComparer.Compare(System.Object,System.Object)">
      <summary>Compares two  objects by the value of the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.DataPoint~X.html">X</see>
property of their <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.DataPoint.html">DataPoint</see>.</summary>
      <returns>-1 if <em>x</em> is less than <em>y,</em> 1 if <em>x</em> is greater than <em>y</em>, 0 if they are equal or either is <strong>null</strong>.</returns>
      <param name="x">The first primitive to compare.</param>
      <param name="y">The second primitive to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList`1.#ctor">
      <summary>Initializes a new instance of the ChartPrimitivesList&lt;T&gt; class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorConverter.#ctor">
      <summary>Initializes a new instance of the ColorConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorConverter.GetNextColor(System.Windows.Media.Color,System.Int32,System.Int32)">
      <summary>Calculates next palette color using the specified start color value, index, and count.</summary>
      <param name="color">The start color value to calculate the next color relative to.</param>
      <param name="index">Index of the next color.</param>
      <param name="count">Count of total colors.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorConverter.HSVtoRGB(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
      <summary>Converts an HSV representation of a color to an RGB representation.</summary>
      <param name="h">A double representing the color's hue.</param>
      <param name="s">A double representing the color's saturation.</param>
      <param name="v">A double representing the color's value.</param>
      <param name="r">A double representing the red channel.</param>
      <param name="g">A double representing the green channel.</param>
      <param name="b">A double representing the blue channel.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorConverter.RGBtoHSV(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
      <param name="r">A double representing the red channel.</param>
      <param name="g">A double representing the green channel.</param>
      <param name="b">A double representing the blue channel.</param>
      <param name="h">A double representing the color's hue.</param>
      <param name="s">A double representing the color's saturation.</param>
      <param name="v">A double representing the color's value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorPalette.#ctor">
      <summary>Initializes a new instance of the ColorPalette class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColorPalette.GetColor(System.Int32)">
      <summary>Returns the predefined color by index value.</summary>
      <returns>The returned color.</returns>
      <param name="index">Index of the color to get.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.#ctor">
      <summary>Initializes a new instance of the ColumnLayout class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.ApplyDefaultTemplate(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Assigns the default column template to the specified Series.</summary>
      <param name="series">The Series to assign the default template to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.ArrangeHint(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.BaseTitleLabel,Xceed.Wpf.Toolkit.Chart.ChartPrimitive,System.Windows.Rect)">
      <summary>Arrange the hint label and line.</summary>
      <param name="series">The Series containing the hint label and line that will be arranged.</param>
      <param name="labelPrimitive">The label primitive that will be used for the arrangement.</param>
      <param name="linePrimitive">The line primitive that will be used for the arrangement.</param>
      <param name="layoutedBounds">The bounds of the column, used to calculate the placement of the hint label and line.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.ArrangePrimitives(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Arranges a column chart's ChartPrimitive instances for the specified <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Series.html">Series</see> in pixel coordinates.</summary>
      <param name="series">The Series whose primitives will be arranged.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.CreateElements(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates column chart primitives for the specified Series.</summary>
      <param name="series">The Series whose primitives will be created.</param>
      <param name="lstVisuals">A list of ChartPrimitive objects representing the created column primitives.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.CreateHints(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates the hints for the specified Series.</summary>
      <param name="series">The Series whose hints will be created.</param>
      <param name="lstVisuals">A list of ChartPrimitive objects representing the created hints.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnLayout.PerformLayout(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>
        <para>Performs the layout of the ChartPrimitive objects for the specified Series in logical coordinates.</para>
      </summary>
      <param name="series">Series whose layout will be performed.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ColumnLayout.DefaultTemplate">
      <summary>Gets the default DataTemplate for columns (bars).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ColumnLayout.LayoutType">
      <summary>Gets the predefined layout type for ColumnLayout.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ColumnPrimitiveInfo.#ctor">
      <summary>Initializes a new instance of the ColumnPrimitiveInfo class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPoint.#ctor">
      <summary>Initializes a new instance of the DataPoint class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPoint.#ctor">
      <summary>Initializes a new instance of the DataPoint class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPoint.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the DataPoint class using the specified X and Y double values.</summary>
      <param name="x">The datapoint's X value.</param>
      <param name="y">The datapoint's Y value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPoint.#ctor(System.Double,System.Double,System.String)">
      <summary>Initializes a new instance of the DataPoint class using the specified X and Y double values and label.</summary>
      <param name="x">The datapoint's X value.</param>
      <param name="y">The datapoint's Y value.</param>
      <param name="label">The datapoint's label.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPoint.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event with the specified PropertyChangedEventArgs objects.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPoint.Content">
      <summary>Gets the content for this DataPoint as a participant in data binding with the corresponding chart visuals (primitives) as a data source object.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPoint.Label">
      <summary>Gets or sets the datapoint's label.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPoint.X">
      <summary>Gets or sets the x-value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPoint.Y">
      <summary>Gets or sets y-value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPoint.ContentProperty">
      <summary>Identifies the Content dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPoint.LabelProperty">
      <summary>Identifies the Label dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPoint.XProperty">
      <summary>Identifies the X dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.DataPoint.YProperty">
      <summary>Identifies the Y dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.DataPoint.PropertyChanged">
      <summary>Occurs when properties or sub-properties of the PropertyValue object have changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointComparer.#ctor">
      <summary>Initializes a new instance of the DataPointComparer class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointComparer.Compare(System.Object,System.Object)">
      <summary>Compares two  instances by their X values</summary>
      <returns>-1 if <em>x</em> is less than <em>y,</em> 1 if <em>x</em> is greater than <em>y</em>, 0 if they are equal or either is <strong>null</strong>.</returns>
      <param name="x">The first DataPoint.</param>
      <param name="y">The second DataPoint.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointEnumerator`1.#ctor(Xceed.Wpf.Toolkit.Chart.DataPointsList{`0})">
      <summary>Initializes a new instance of the DataPointEnumerator class.</summary>
      <param name="list">The DataPointsList through which to enumerate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>
        <span>
          <span>
            <span>
              <span class="input">
                <strong>true</strong>
              </span>
            </span> if the enumerator was successfully advanced to the next element; <span><span class="input"><strong>false</strong></span></span> if the enumerator has passed the end of the collection.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPointEnumerator`1.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.#ctor">
      <summary>Initializes a new instance of the DataPointsList class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.GetCount">
      <summary>Gets the number of the items in the list.</summary>
      <returns>The number of items in the list.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the CollectionChanged event.</summary>
      <param name="e">The NotifyCollectionChangedEventArgs
object to pass to the event handler.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.Item(System.Int32)">
      <summary>Retrieves or assigns a DataPoint in a collection.</summary>
      <param name="index">The zero-based index at which to retrieve or assign the DataPoint in the collection.</param>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.DataPointsList`1.CollectionChanged">
      <summary>Called when the collection changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.#ctor">
      <summary>Initializes a new instance of the DataRange class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.#ctor">
      <summary>Initializes a new instance of the DataRange class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the DataRange class using the specified start and end values.</summary>
      <param name="start">The start value of the range.</param>
      <param name="end">The end value of the range.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.Contains(System.Double)">
      <summary>Checks if the DataRange contains the specified value.</summary>
      <returns>
        <strong>true</strong> if the DataRange contains; <strong>false</strong> otherwise.</returns>
      <param name="value">The value to check.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>
        <strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>.</returns>
      <param name="o">The object to compare with the current object.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current Object.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.Reset">
      <summary>Resets the DataRange to default values.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.op_Addition(Xceed.Wpf.Toolkit.Chart.DataRange,Xceed.Wpf.Toolkit.Chart.DataRange)">
      <summary>Merges two DataRange instances.</summary>
      <returns>The resulting DataRange.</returns>
      <param name="r1">First DataRange to merge.</param>
      <param name="r2">Second DataRange to merge.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.op_Equality(Xceed.Wpf.Toolkit.Chart.DataRange,Xceed.Wpf.Toolkit.Chart.DataRange)">
      <summary>Compares two DataRange instances.</summary>
      <returns>
        <strong>true</strong> if equal; otherwise, <strong>false</strong>.</returns>
      <param name="r1">First DataRange to compare.</param>
      <param name="r2">Second DataRange to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.DataRange.op_Inequality(Xceed.Wpf.Toolkit.Chart.DataRange,Xceed.Wpf.Toolkit.Chart.DataRange)">
      <summary>Compares two DataRange instances.</summary>
      <returns>
        <strong>true</strong> if not equal; otherwise, <strong>false</strong>.</returns>
      <param name="r1">First DataRange to compare.</param>
      <param name="r2">Second DataRange to compare.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataRange.End">
      <summary>Gets or sets the end position of the datarasnge.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataRange.IsEmpty">
      <summary>Indicates whether this DataRange is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataRange.Length">
      <summary>Gets the length of the datarange.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.DataRange.Start">
      <summary>Gets or sets the start position of the datarasnge.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridLine.#ctor">
      <summary>Initializes a new instance of the GridLine class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridLine.#ctor(System.Windows.Point,Xceed.Wpf.Toolkit.Chart.Orientation)">
      <summary>Initializes a new instance of the GridLine class using the specified grid point and orientation.</summary>
      <param name="point">Grid point.</param>
      <param name="orientation">Orientation.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridLine.#ctor">
      <summary>Initializes a new instance of the GridLine class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridLine.#ctor(Xceed.Wpf.Toolkit.Chart.Orientation)">
      <summary>Initializes a new instance of the GridLine class using the specified orientation.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridLine.OnOrientationChanged">
      <summary>Called when the  property is changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.GridLine.GridPoint">
      <summary>Gets the layout point used to calculate position of the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.GridLine.Orientation">
      <summary>Gets or sets the orientation of the grid line.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.GridPrimitivesList`1.#ctor">
      <summary>Initializes a new instance of the GridPrimitivesList class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LabelPrimitiveInfo.#ctor">
      <summary>Initializes a new instance of the LabelPrimitieInfo class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LabelPrimitiveInfo.Text">
      <summary>Gets or sets the text of the label.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LabelsList`1.#ctor">
      <summary>Initializes a new instance of the LabelsList class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.ApplyDefaultTemplate(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Applies the default template for the ChartPrimitive instances associated with the
chart type for which the engine performs the layout.</summary>
      <param name="series">The Series whose primitives the layout engine will apply default templates to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.ArrangePrimitives(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Arranges the ChartPrimitive instances for the specified <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.Series.html">Series</see>.</summary>
      <param name="series">The Series whose primitives the layout engine will arrange.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.CreateElements(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates a collection of primitives for the specified Series and adds them to a list.</summary>
      <param name="series">The Series for the engine will create primitives.</param>
      <param name="lstVisuals">A list of ChartPrimitive instances to which created primitives are added.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.CreateHints(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates a list of hint primitive for the specified series and adds them to a list.</summary>
      <param name="series">The Series for which the engine will create the primitives.</param>
      <param name="lstVisuals">A list of ChartPrimitve instances to which created primitives are added.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.PerformLayout(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Performs the layout of the ChartPrimitive objects for the specified Series in logical coordinates.</summary>
      <param name="series">The Series for which the engine will perform the layout.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutEngine.UniteWithSeriesRange(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.DataRange,Xceed.Wpf.Toolkit.Chart.DataRange)">
      <summary>Unites specified x- and y-range with the specified Series x and y ranges.</summary>
      <param name="series">The Series with which the x- and y-range will be united.</param>
      <param name="xRange">X-range to unite.</param>
      <param name="yRange">Y-range to unite.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutEngine.DefaultHintLabelTemplate">
      <summary>Gets the default DataTemplate for the hint labels.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutEngine.DefaultHintLineTemplate">
      <summary>Gets the default DataTemplate for hint lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutEngine.DefaultResources">
      <summary>Gets the default resource dictionary.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutEngine.LayoutMode">
      <summary>Gets the layout mode for this layout engine.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutEngine.LayoutType">
      <summary>Gets the predefined layout type corresponding to this layout engine, or  for custom layouts.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutGrid.#ctor">
      <summary>Initializes a new instance of the LayoutGrid class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LayoutGrid.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of the Grid.</summary>
      <returns>A Size that represents the required size to arrange child content.</returns>
      <param name="constraint">Indicates an upper limit size that should not be exceeded.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutGrid.ColumnCount">
      <summary>Gets or sets the column count in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutGrid.Orientation">
      <summary>Gets or sets the grid's orientation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LayoutGrid.RowCount">
      <summary>Gets or sets the row count in the grid.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutGrid.ColumnCountProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutGrid.OrientationProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.LayoutGrid.RowCountProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.#ctor">
      <summary>Intializes a new instance of the Legend class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.Initialize">
      <summary>Initializes the object and configures its properties and grouping styles.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnAllowDockChanged(System.Boolean,System.Boolean)">
      <summary>Called when AllowDock changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnAllowMoveChanged(System.Boolean,System.Boolean)">
      <summary>Called when AllowMove changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnAllowResizeChanged(System.Boolean,System.Boolean)">
      <summary>Called when AllowResize changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnDockChanged(Xceed.Wpf.Toolkit.Chart.LegendDock,Xceed.Wpf.Toolkit.Chart.LegendDock)">
      <summary>Called when Dock changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when ItemTemplate property changes to use ItemTemplateSelector or ItemTemplate</summary>
      <param name="oldItemTemplate">The old DataTemplate.</param>
      <param name="newItemTemplate">The new DataTemplate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>Called when the ItemTemplateSelector property changes to use ItemTemplateSelector or ItemTemplate.</summary>
      <param name="oldItemTemplateSelector">The old DataTemplateSelector.</param>
      <param name="newItemTemplateSelector">The new DataTemplateSelector.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.OnTitleChanged(System.String,System.String)">
      <summary>Called when the Title property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Legend.RaisePropertyChanged(System.String)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.AllowDock">
      <summary>Gets or sets whether a legend can be docked to different sides of Chart when dragging with mouse.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.AllowMove">
      <summary>Gets or sets whether a legend can be dragged with a mouse.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.AllowResize">
      <summary>Gets or sets whether a legend can be resized when in floating mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.DefaultAreaTitleDataTemplate">
      <summary>Gets the default DataTemplate for a legend item that displays an Area title.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.DefaultDataPointItemTemplate">
      <summary>Gets the default DataTemplate for a legend item that displays a DataPoint.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.DefaultSeriesItemTemplate">
      <summary>Gets the default DataTemplate for a legend item that displays a Series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.DefaultSeriesTitleDataTemplate">
      <summary>Gets the default DataTemplate for a legend item that displays a Series title.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.Dock">
      <summary>Gets or sets legend's dock mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Legend.Title">
      <summary>Gets or sets the legend's title.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Legend.AllowDockProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Legend.AllowMoveProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Legend.AllowResizeProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Legend.DockProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Legend.TitleProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.Legend.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LegendItem.#ctor(System.String,System.String,System.String,System.Windows.Media.Brush)">
      <summary>Initializes a new instance of the LegendItem class.</summary>
      <param name="text">Legend item text.</param>
      <param name="areaTitle">Legend item area title.</param>
      <param name="seriesTitle">Legend item series title.</param>
      <param name="interiorBrush">Legend item interior brush.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LegendItem.SeriesTitle">
      <summary>Gets or sets the legend item series title.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LegendItemBase.#ctor(System.String,System.String,System.Windows.Media.Brush)">
      <summary>Initializes a new instance of the LegendItemBase class.</summary>
      <param name="text">Legend item text.</param>
      <param name="areaTitle">Legend item area title.</param>
      <param name="interiorBrush">Legend item interrior brush.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LegendItemBase.OnPropertyChanged(System.String)">
      <summary>Called when any property is changed.</summary>
      <param name="name">Name of changed property</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LegendItemBase.AreaTitle">
      <summary>Gets or sets the legend item's Area title.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LegendItemBase.InteriorBrush">
      <summary>Gets or sets the legend item's interior brush.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LegendItemBase.Text">
      <summary>Gets or sets the legend item's text.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.LegendItemBase.PropertyChanged">
      <summary>Raised when a property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LevelLabel.#ctor">
      <summary>Initializes a new intance of the LevelLable class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LevelLabel.Level">
      <summary>Gets or sets level index of title. See Axis.LayoutTitles for details</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.#ctor">
      <summary>Initializes a new instance of the LineLayout class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.ApplyDefaultTemplate(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Applies the default template for a column (bar) to the specified Series.</summary>
      <param name="series">Series to apply the default template to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.ArrangeHint(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.BaseTitleLabel,Xceed.Wpf.Toolkit.Chart.ChartPrimitive,Xceed.Wpf.Toolkit.Chart.ChartPrimitive,Xceed.Wpf.Toolkit.Chart.DataPoint)">
      <summary>Arranges the hint label and line.</summary>
      <param name="series">The Series containing the hint label and line that will be arranged.</param>
      <param name="labelPrimitive">The label primitive that will be used for the arrangement.</param>
      <param name="linePrimitive">The line primitive that will be used for the arrangement.</param>
      <param name="marker">The marker whose hint label and line will be arranged.</param>
      <param name="location">Offset used to calculate the position of the line and label primitives.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.ArrangeMarker(Xceed.Wpf.Toolkit.Chart.ChartPrimitive,Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.DataPoint)">
      <summary>Performs layout for marker primitives in logical coordinates.</summary>
      <param name="marker">The marker for which layout will be performed</param>
      <param name="series">The series containing the marker primitive.</param>
      <param name="location">Offset used to calculate position for the primitive.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.ArrangePrimitives(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Arranges line primitives for the specified series in pixel coordinates.</summary>
      <param name="series">Series to arrange primitives for.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.CreateElements(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Arranges a line chart's ChartPrimitive instances for the specified Series in pixel coordinates.</summary>
      <param name="series">Series to create primitives for.</param>
      <param name="lstVisuals">Primitives list to add created primitives to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.CreateHints(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates the line chart hint labels and lines.</summary>
      <param name="series">The Series for which line hints will be created.</param>
      <param name="lstVisuals">The list that will contain the created hint lines and labels.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LineLayout.PerformLayout(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>
        <para>Performs the layout of the ChartPrimitive objects for the specified Series in logical coordinates.</para>
      </summary>
      <param name="series">Series whose layout will be performed.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LineLayout.DefaultMarkerTemplate">
      <summary>Gets the default DataTemplate for line markers.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LineLayout.DefaultTemplate">
      <summary>Gets the default DataTemplate for a line.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LineLayout.LayoutType">
      <summary>Gets the predefined layout type for LineLayout.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.#ctor">
      <summary>Initializes a new instance of the LinePrimitiveInfo class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.Points">
      <summary>Gets or sets a collection of Points in pixel coordinates corresponding to this chart primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.XEnd">
      <summary>Gets or sets the x-coordinate of line end point.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.XStart">
      <summary>Gets or sets the x-coordinate of line start point.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.YEnd">
      <summary>Gets or sets the y-coordinate of line end point.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.LinePrimitiveInfo.YStart">
      <summary>Gets or sets the y-coordinate of line start point.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.#ctor">
      <summary>Initializes a new instance of the ListBase&lt;T&gt; class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.#ctor">
      <summary>Initializes a new instance of the ListBase&lt;T&gt; class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the ListBase&lt;T&gt; using the specified size.</summary>
      <param name="capacity">Value indicating the size of the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the ListBase&lt;T&gt; class using the specified collection.</summary>
      <param name="collection">The collection with which to initialize the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.Add(`0)">
      <summary>Adds an item to the ListBase.</summary>
      <param name="item">The object to add to the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.AddRange(`0[])">
      <summary>Adds the items of the specified collection to the ListBase.</summary>
      <param name="items">The items to add to the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.Clear">
      <summary>Removes all items from the ListBase.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.Contains(`0)">
      <summary>Determines whether an element is in the ListBase.</summary>
      <returns>true if the Object is found in the ListBase; otherwise, false.</returns>
      <param name="item">The object to locate in the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the entire ListBase to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.GetCount">
      <summary>Returns the number of elements actually contained in the ListBase.</summary>
      <returns>The number of elements actually contained in the ListBase.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the ListBase.</summary>
      <returns>An enumerator for the ListBase.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the ListBase.</summary>
      <returns>The index of item if found in the list; otherwise, -1.</returns>
      <param name="item">The item to locate in the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.Insert(System.Int32,`0)">
      <summary>Inserts an item into the ListBase at the specified index.</summary>
      <param name="index">The zero-based index at which item should be inserted.</param>
      <param name="item">The object to insert into the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.OnBeforeListChanged(Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs{`0})">
      <summary>Called before a list is modified, raising the BeforeListChanged
event.</summary>
      <param name="args">A ListChangedEventArgs&lt;T&gt; containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.OnListChanged(Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs{`0})">
      <summary>Called after a list has been modified, raising the ListChanged event.</summary>
      <param name="args">A ListChangedEventArgs&lt;T&gt; containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the ListBase.</summary>
      <returns>
        <strong>true</strong> if <em>item</em> is successfully removed; otherwise, <strong>false</strong>. This method also returns <strong>false</strong> if item was
not found in the ListBase.</returns>
      <param name="item">The object to remove from the ListBase.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index of the ListBase.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListBase`1.ToArray">
      <summary>Copies the elements of the ListBase to a new array.</summary>
      <returns>An array containing copies of the elements of the ListBase.</returns>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListBase`1.Count">
      <summary>Gets the number of items in the ListBase.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListBase`1.IsReadOnly">
      <summary>Gets whether the ListBase is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListBase`1.Item(System.Int32)">
      <summary>
        <para>Retrieves or assigns an item in a collection.</para>
      </summary>
      <param name="index">
        <para>The zero-based index at which to retrieve or assign the item in the collection.</para>
      </param>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.ListBase`1.BeforeListChanged">
      <summary>Raised before the list is changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.ListBase`1.ListChanged">
      <summary>Raised after the list is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1.#ctor(System.Int32,`0[],`0[],Xceed.Wpf.Toolkit.Chart.ListActionType)">
      <summary>Initializes a new instance of the ListChangedEventArgs class.</summary>
      <param name="index">The index of first changed item.</param>
      <param name="arrOldItems">The old items in the list. These are removed items or items that are going to be changed in the list.</param>
      <param name="arrNewItems">The new items in the list. Contains changed or newly added items.</param>
      <param name="actionType">Type of action being performed on the new and old items.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1.ActionType">
      <summary>Gets the type of action being performed on the old and new items in list.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1.Index">
      <summary>Gets the start index of the changed items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1.NewItems">
      <summary>Gets the new items (changed or newly added items).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.ListChangedEventArgs`1.OldItems">
      <summary>Gets the old items (removed items or items that are going to be changed).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.#ctor">
      <summary>Initializes a new instance of the PieLayout class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.ApplyDefaultTemplate(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Applies the default DataTemplate for a pie segment to specified series.</summary>
      <param name="series">Series to assign the template to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.ArrangeHint(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitive,Xceed.Wpf.Toolkit.Chart.BaseTitleLabel,System.Double,System.Double,System.Double,System.Double,System.Windows.Point,System.Windows.Rect)">
      <summary>Arranges the hint label and line.</summary>
      <param name="series">The Series containing the hint label and line that will be arranged.</param>
      <param name="lineHintPrimitive">The line primitive that will be used for the arrangement.</param>
      <param name="labelHintElement">The label hint that will be used for the arrangement.</param>
      <param name="radius">The radius of the pie section, used to calculate the placement of the label and line primitives.</param>
      <param name="startAngle">The start angle of the pie section, used to calculate the placement of the label and line primitives.</param>
      <param name="endAngle">The end angle of the pie section, used to calculate the placement of the label and line primitives.</param>
      <param name="size">The smaller of layoutBounds.Width and layoutBound.Height, used to calculate the placement of the label and line primitives.</param>
      <param name="centerPoint">The center of layoutBounds.</param>
      <param name="layoutedBounds">The layout bounds without tick and title labels.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.ArrangePrimitives(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Arranges pie primitives for the specified series in pixel coordinates.</summary>
      <param name="series">Series to arrange chart primitives for.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.CreateElements(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>
        <para>Arranges a pie chart's ChartPrimitive instances for the specified Series in pixel coordinates.</para>
      </summary>
      <param name="series">Series to create primitives for.</param>
      <param name="lstVisuals">Primitives list to add created primitives to.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.CreateHints(Xceed.Wpf.Toolkit.Chart.Series,Xceed.Wpf.Toolkit.Chart.ChartPrimitivesList{Xceed.Wpf.Toolkit.Chart.ChartPrimitive})">
      <summary>Creates the pie chart hint labels and lines.</summary>
      <param name="series">The Series for which line hints will be created.</param>
      <param name="lstVisuals">The list that will contain the created hint lines and labels.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.CreatePieSliceGeometry(System.Windows.Point,System.Double,System.Double,System.Double)">
      <summary>Creates the Geometry for a pie slice.</summary>
      <returns>The Geometry for a pie slice.</returns>
      <param name="centerPoint">Pie center point.</param>
      <param name="radius">Pie radius.</param>
      <param name="startAngle">Pie slice start angle.</param>
      <param name="endAngle">Pie slice end angle.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.CreateSinglePieSliceGeometry(System.Windows.Point,System.Double)">
      <summary>Creates the Geometry for single pie slice.</summary>
      <returns>The Geometry for a pie slice.</returns>
      <param name="centerPoint">Pie center point.</param>
      <param name="radius">Pie radius.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PieLayout.PerformLayout(Xceed.Wpf.Toolkit.Chart.Series)">
      <summary>Performs the layout of the ChartPrimitive objects for the specified Series in logical coordinates.</summary>
      <param name="series">Series to layout primitives for.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PieLayout.DefaultTemplate">
      <summary>Gets the default DataTemplate for a pie segment.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PieLayout.LayoutType">
      <summary>
        <para>Gets the predefined layout type for PieLayout.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.#ctor">
      <summary>Initializes a new instance of the PiePrimitiveInfo class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.CenterX">
      <summary>Gets or sets the x-coordinate for the center point of pie charts.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.CenterY">
      <summary>Gets or sets the y-coordinate for the center point of pie charts.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.EndAngle">
      <summary>Gets or sets the end angle for pie chart segment primitives.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.Geometry">
      <summary>Gets or sets the Geometry for pie charts and other more complex 2d charts that require Geometry and complex Shapes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.Radius">
      <summary>Gets or sets the pie segment radius.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PiePrimitiveInfo.StartAngle">
      <summary>Gets or sets the start angle for pie chart segment primitives.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.#ctor">
      <summary>Initializes a new instance of the PrimitiveInfoBase class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="e">A PropertyChangedEventArgs that contains event data.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.Content">
      <summary>Gets or sets the object that participates in databinding for the corresponding ChartPrimitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.DataPoint">
      <summary>Gets or sets the datapoint of the chart primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.H">
      <summary>Gets or sets the height of the chart primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.Interior">
      <summary>Gets or sets the interior brush of the chart primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.IsCovered">
      <summary>Gets or sets whether the primitive is "covered."</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.IsHighlighted">
      <summary>Gets or sets whether this chart primitive is highlighted.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.W">
      <summary>Gets or sets the width of the chart primitive.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.XRange">
      <summary>Gets or sets the range the primitive occupies on the x-axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.YRange">
      <summary>Gets or sets the range the primitive occupies on the y-axis.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Chart.PrimitiveInfoBase.PropertyChanged">
      <summary>Raised when any property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.#ctor">
      <summary>Initializes a new instance of the Series class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.ApplyDefaultTemplate">
      <summary>Applies the default DataTemplates to series elements.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.CreateElements">
      <summary>Prepares the layout for the drawing of the chart's primitives, depending on the type of series involved.</summary>
      <returns>A list of the  instances.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.CreateHints">
      <summary>Prepares the layout for the drawing of the chart's hint primitives, depending on the type of series involved.</summary>
      <returns>A list of the  instances.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.GetHintOffset">
      <summary>Calculates the x-axis and y-axis offsets for additional series decorators, such as hint lines.</summary>
      <returns>The x-axis and y-axis offsets for additional series decorators.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.GetSortedPoints">
      <summary>Returns an array of DataPoints contained in this series, sorted if needed.</summary>
      <returns>Array of DataPoints contained in this series, sorted if needed.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnDataTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the DataTemplate property is changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnDefaultInteriorChanged(System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>Called when the DefaultInterior property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnHintLabelTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the HintLabelTemplate changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnHintLineLengthChanged(System.Double,System.Double)">
      <summary>Called when the HintLineLength property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnHintLineTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the HintLineTemplate changes.</summary>
      <param name="oldValue">The old value</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnIsOwnerHighlightChanged(System.Boolean,System.Boolean)">
      <summary>Called when the IsOwnerHighlight property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnLayoutChanged(Xceed.Wpf.Toolkit.Chart.LayoutEngine,Xceed.Wpf.Toolkit.Chart.LayoutEngine)">
      <summary>Called when the Layout property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnMarkerDataTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the MarkerDataTemplate changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnShowHintLabelsChanged(System.Boolean,System.Boolean)">
      <summary>Called when the ShowHintLabels property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnShowPointsInLegendChanged(System.Boolean,System.Boolean)">
      <summary>Called when the ShowPointsInLegend changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnSpacingChanged(System.Double,System.Double)">
      <summary>Called when the Spacing property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnTitleChanged(System.String,System.String)">
      <summary>Called when the Title property changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.Reset">
      <summary>Clears the list of chart-specific and hint primitives.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.SetCovered(System.Boolean)">
      <summary>Sets the covered state of the primitives.</summary>
      <param name="isCovered">Covered state to set.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.SetHighlighted(System.Boolean)">
      <summary>Sets the highlighted state of primitives.</summary>
      <param name="isHighlighted">Highlighted state to set.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Series.OnDataPointsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the  property is changed.</summary>
      <param name="oldValue">Old value.</param>
      <param name="newValue">New value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.Area">
      <summary>Gets the parent  of the series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.DataPointBindings">
      <summary>Gets the list of  objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.DataPoints">
      <summary>Gets or sets the list of  objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.DataPointsSource">
      <summary>Gets or sets the binding source for DataPoints.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.DefaultInterior">
      <summary>Gets or sets the default interior color for series elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.HintLabelTemplate">
      <summary>Gets or sets the hint label template for elements of this series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.HintLineLength">
      <summary>Gets or sets the hint line length.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.HintLineTemplate">
      <summary>Gets or sets the hint line template for elements of this series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.IsOwnerHighlight">
      <summary>Gets or sets whether this series performs highlighting of its child elements manually.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.Layout">
      <summary>Gets or sets the LayoutEngine-derived layout engine used for this Series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.LayoutHints">
      <summary>Gets a list of hint primitives.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.LayoutPrimitives">
      <summary>Gets a list of chart primitives of the series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.MarkerTemplate">
      <summary>Gets or sets the DataTemplate for line markers.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.ShowHintLabels">
      <summary>Gets or sets whether hint labels for the series are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.ShowPointsInLegend">
      <summary>
        <para>Gets or sets whether datapoints from the series are displayed in the Legend.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.Spacing">
      <summary>Gets or sets the spacing between series elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.Template">
      <summary>Gets or sets the DataTemplate for the elements of this Series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.Title">
      <summary>Gets or Sets the title of the series.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.XRange">
      <summary>Gets or sets the range this series occupies on the x-axis.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Series.YRange">
      <summary>Gets or sets the range this series occupies on the y-axis.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.DataPointsSourceProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.HintLabelTemplateProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.HintLineLengthProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.HintLineTemplateProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.IsOwnerHighlightProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.LayoutProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.MarkerTemplateProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.ShowHintLabelsProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.ShowPointsInLegendProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.SpacingProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.TemplateProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Series.TitleProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Tick.#ctor">
      <summary>Initializes a new instance of the Tick class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Tick.#ctor">
      <summary>Initializes a new instance of the Tick class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.Tick.#ctor(Xceed.Wpf.Toolkit.Chart.Orientation)">
      <summary>Initializes a new instance of the Tick class, setting the tick orientation.</summary>
      <param name="orientation">The Orientation of the tick</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chart.Tick.Length">
      <summary>Gets or sets the length of the tick.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chart.Tick.LengthProperty">
      <summary>Identifies the  dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.TicksList`1.#ctor">
      <summary>Initializes a new instance of the TicksList class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Chart.TitleLabel.#ctor">
      <summary>Initializes a new instance of the TitleLabel class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.LayoutEventHandler">
      <summary>Represents the method that will handle a layout event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chart.ListChangedEventHandler`1">
      <summary>Represents the method that will handle the ListChanged or <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Chart.ListBase`1~BeforeListChanged_EV.html">BeforeListChanged</see> events.</summary>
      <typeparam name="T">The type.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Chromes.ButtonChrome">
      <summary>Represents a button's chrome.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.CornerRadius">
      <summary>Gets or sets the button's corner radius.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.InnerCornerRadius">
      <summary>Gets or sets the button's inner corner radius.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderChecked">
      <summary>Gets or sets whether the button's Checked state should be rendered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderEnabled">
      <summary>Gets or sets whether the button's Enabled state should be rendered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderFocused">
      <summary>Gets or sets whether the button's Enabled state should be rendered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderMouseOver">
      <summary>Gets or sets whether the button's MouseOver state should be rendered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderNormal">
      <summary>Gets or sets whether the button's Normal state should be rendered.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderPressed">
      <summary>Gets or sets whether the button's Pressed state should be rendered.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.CornerRadiusProperty">
      <summary>Identifies the CornerRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.InnerCornerRadiusProperty">
      <summary>Identifies the InnerCornerRadius dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderCheckedProperty">
      <summary>Identifies the RenderChecked dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderEnabledProperty">
      <summary>Identifies the RenderEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderFocusedProperty">
      <summary>Identifies the RenderFocused dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderMouseOverProperty">
      <summary>Identifies the RenderMouseOver dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderNormalProperty">
      <summary>Identifies the RenderNormal dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Chromes.ButtonChrome.RenderPressedProperty">
      <summary>Identifies the RenderPressed dependency property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Converters.NewItemTypesComboBoxConverter">
      <summary>
        <para>This multi-value converter is used in the CollectionControl template to determine the list of possible new item types that will be shown in the combo
box.</para>
        <para>If the second value (i.e., CollectionControl.NewItemTypes) is not null, this list will be used. Otherwise, if the first value (i.e.,
CollectionControl.ItemsSourceType) is a IList&lt;T&gt; type, the new item type list will contain "T".</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Converters.NewItemTypesComboBoxConverter.#ctor">
      <summary>Initializes a new instance of the NewItemTypesComboBoxConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Converters.NewItemTypesComboBoxConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts source values to a value for the binding target.</summary>
      <returns>A converted value.</returns>
      <param name="values">The array of values that the source bindings in the MultiBinding produces. The value UnsetValue indicates that the source binding has no value to provide for
conversion.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Converters.NewItemTypesComboBoxConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.WindowResizeThumb">
      <summary>Identifies one of the resize thumbs used during the WindowResizeThumbDrag and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Primitives.WindowControl~WindowResizeThumbDrag_EV.html">WindowResizeThumbDrag</see> events.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.Left">
      <summary>The left grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.TopLeft">
      <summary>The top-left grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.Top">
      <summary>The top grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.TopRight">
      <summary>The top-right grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.Right">
      <summary>The right grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.BottomRight">
      <summary>The bottom-right grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.Bottom">
      <summary>The bottom grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.BottomLeft">
      <summary>The bottom-left grip control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Core.WindowResizeThumb.Grip">
      <summary>Refers to the lower right gripping control when window's ResizeMode
is <strong>CanResizeWithGrip</strong>.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.CancelRoutedEventArgs">
      <summary>An event data class that allows to inform the sender that the handler wants to cancel the ongoing action. The handler can set the Cancel property to false to cancel the action.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.EnumDisplayNameConverter">
      <summary>
        <span id="BugEvents">Allows enum values to be displayed as customized values.</span>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.IndexChangedEventArgs">
      <summary>Provides event data for the ViewStackIndexChanged routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.InvalidContentException">
      <summary>Represents an error that occurs when a Zoombox's content is invalid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.InvalidTemplateException">
      <summary>Represents an error that occurs when an invalid template is used.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.QueryTextFromValueEventArgs">
      <summary>Provides information about the value and text being queried when an attempt is made to convert the specified value into its string representation</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.QueryValueFromTextEventArgs">
      <summary>Provides information about the text and value being queried when an attempt is made to extract a value from the specified text</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.WindowResizeDragEventArgs">
      <summary>Event arguments for the StylableWindow.WindowResizeThumbDrag and
WindowControl.<see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Primitives.WindowControl~WindowResizeThumbDrag_EV.html">WindowResizeThumbDrag</see> events.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Core.WindowResizeDragEventArgs.ThumbID">
      <summary>Gets the dragged thumb while resizing.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.CancelRoutedEventHandler">
      <summary>Represents the method that will handle the routed event contained in CancelRoutedEventArgs.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.IndexChangedEventHandler">
      <summary>Handles the ViewStackIndexChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.WindowResizeDragEventHandler">
      <summary>Handles the StylableWindow.WindowResizeThumbDrag and
WindowControl.<see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Primitives.WindowControl~WindowResizeThumbDrag_EV.html">WindowResizeThumbDrag</see> events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Attributes.ExtendedDisplayNameAttribute">
      <summary>
        <para>Represents an attribute that is set on a property to enable <span id="BugEvents">specifying a DisplayName for fields and Enum type values.</span></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Attributes.LocalizedDescriptionAttribute">
      <summary>
        <para>
          <span id="BugEvents">Represents an attribute that is set on a property to allow</span>
          <span>
            <span>easy localization of the</span>
          </span>
          <span id="BugEvents">string used as the DescriptionAttribute value.</span>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Attributes.LocalizedDisplayNameAttribute">
      <summary>
        <para>
          <span id="BugEvents">Represents an attribute that is set on a property to enable</span>
          <span>easy localization of strings used for the DisplayNameAttribute
value.</span>
        </para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Attributes.ExtendedDisplayNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the ExtendedDisplayNameAttribute class.</summary>
      <param name="displayName">The display name to use.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Attributes.LocalizedDescriptionAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the LocalizedDescriptionAttribute class with a description.</summary>
      <param name="descriptionResourceKey">The description text.</param>
      <param name="resourceClassType">The Type of the resource.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Core.Attributes.LocalizedDescriptionAttribute.Description">
      <summary>Gets the description text..</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Attributes.LocalizedDisplayNameAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the LocalizedDisplayNameAttribute class.</summary>
      <param name="displayNameResourceKey">The display name text.</param>
      <param name="resourceClassType">The Type of the resource.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.BorderThicknessToStrokeThicknessConverter">
      <summary>Converts between border thickness and stroke thickness.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.CalculatorMemoryToVisibilityConverter">
      <summary>Converts from the calculator memory's content to a visibility.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.ColorToSolidColorBrushConverter">
      <summary>Converts a Color to a SolidColorBrush.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.InverseBoolConverter">
      <summary>Inverts a bool value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.ObjectTypeToNameConverter">
      <summary>Returns the string representation of the Name of the Type of an object.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.RoundedValueConverter">
      <summary>Rounds the value if it is a double or a Point. Otherwise, returns the original value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.SolidColorBrushToColorConverter">
      <summary>Returns the Color of a SolidBrushColor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.VisibilityToBoolConverter">
      <summary>Converts between Visibility and bool values.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.WindowContentBorderMarginConverter">
      <summary>Sets the margin for the thumb grip, the top buttons, or for the content border in the WindowControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.WindowControlBackgroundConverter">
      <summary>Used in the WindowContainer template to calculate the resulting background brush from the WindowBackground (values[0]) and WindowOpacity (values[1])
propreties.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.WindowResizeThumbMarginConverter">
      <summary>Convert margin of resize thumb to values of WindowControl.WindowBorderThickness, ContentBorderOffset (defined in XAML), and 0d.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Converters.WindowResizeThumbWidthConverter">
      <summary>Convert Width (or Height) of resize thumb to values of WindowControl.WindowBorderThickness + ContentBorderOffset (defined in XAML).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.BorderThicknessToStrokeThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts from a border thickness to a stroke thickness.</summary>
      <returns>A stroke thickness.</returns>
      <param name="value">The border thickness.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.BorderThicknessToStrokeThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts from a stroke thickness to a border thickness.</summary>
      <returns>A border thickness.</returns>
      <param name="value">The stroke thickness.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.CalculatorMemoryToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts from the calculator memory's content to a visibility.</summary>
      <returns>
        <strong>Visibility.Hidden</strong> if the calculator's memory holds <strong>decimal.Zero</strong>. Otherwise, <strong>Visibility.Visible.</strong></returns>
      <param name="value">The decimal value of the calculator's memory.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.CalculatorMemoryToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.ColorToSolidColorBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a Color to a SolidColorBrush.</summary>
      <returns>A SolidColorBrush.</returns>
      <param name="value">The Color produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.ColorToSolidColorBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.InverseBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Inverts a bool value.</summary>
      <returns>The inverted value of <em>value</em>.</returns>
      <param name="value">The bool value to invert.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.InverseBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.ObjectTypeToNameConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns the string representation of the Name of the Type of an object.</summary>
      <returns>The string representation of the Name of the Type of an object.</returns>
      <param name="value">The object whose type's name will be returned as a string.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.ObjectTypeToNameConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.RoundedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Rounds the value if it is a double or a Point. Otherwise, returns the original value.</summary>
      <returns>A rounded value if <em>value</em> is a double or a Point. Otherwise, the original value.</returns>
      <param name="value">The value to attempt to round.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.RoundedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns the original value.</summary>
      <returns>The original value.</returns>
      <param name="value">The value to convert.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.SolidColorBrushToColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns the Color of a SolidBrushColor.</summary>
      <returns>The Color of a SolidBrushColor if <em>value</em> is not null. Otherwise, the default Color.</returns>
      <param name="value">The SolidBrushColor whose Color will be returned.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.SolidColorBrushToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns a SolidColorBrush created from the passed Color.</summary>
      <returns>A SolidColorBrush created from the passed Color.</returns>
      <param name="value">The Color for which a SolidColorBrush will be returned.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Converters.WizardPageButtonVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.IValidateInput">
      <summary>Provides members related to input validation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.KeyModifier">
      <summary>Represents the key modifier used.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.InputValidationErrorEventArgs">
      <summary>Provides information used in the InputValidationError
event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollection">
      <summary>Represents a collection of key modifiers.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollectionConverter">
      <summary>Converts between KeyModifier values and string representations.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether conversation can be done.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether conversion can be done.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a string delimited by '+', ' ', '|', or ',' to a KeyModifierCollection containing the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Core.Input.KeyModifier.html">KeyModifier</see> values corresponding to the substrings of the passed string.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Core.Input.KeyModifierCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts between KeyModifier values and string representations.</summary>
      <returns>A "+" delimited string representation of the KeyModifiers.</returns>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Input.InputValidationErrorEventHandler">
      <summary>Represents the method that will handle the InputValidationError event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.Media.WindowColors">
      <summary>
        <para>Contains system colors and configurations that can be used by the control themes.</para>
        <para>Mainly extracted from the registry because theses values are not exposed by the standard .NET API.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Core.Media.WindowColors.ColorizationColor">
      <summary>
        <para>Gets the window chrome color.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Core.Media.WindowColors.ColorizationOpaqueBlend">
      <summary>Gets whether transparency is disabled.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ButtonAutomationPeer">
      <summary>The AutomationPeer class used for Buttons in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ButtonSpinnerAutomationPeer">
      <summary>The AutomationPeer class used for ButtonSpinners in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ComboBoxAutomationPeer">
      <summary>The AutomationPeer class used for ComboBoxes in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.GenericAutomationPeer">
      <summary>The AutomationPeer class used to set the default Names, class names and AutomationIds in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ItemsControlAutomationPeer">
      <summary>The AutomationPeer class used for ItemsControl in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ListBoxAutomationPeer">
      <summary>The AutomationPeer class used for ListBoxes in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.PanelAutomationPeer">
      <summary>The AutomationPeer class used for Panels in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.ProgressBarAutomationPeer">
      <summary>The AutomationPeer class used for ProgressBars in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.PropertyItemAutomationPeer">
      <summary>The AutomationPeer class used for PropertyItems in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.RatingItemAutomationPeer">
      <summary>The AutomationPeer class used for RatingItems in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.SliderAutomationPeer">
      <summary>The AutomationPeer class used for Sliders in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.TabControlAutomationPeer">
      <summary>The AutomationPeer class used for TabControls in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.TabItemAutomationPeer">
      <summary>The AutomationPeer class used for TabItems in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.TextBoxAutomationPeer">
      <summary>The AutomationPeer class used for TextBoxes in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Core.UIAutomation.WindowAutomationPeer">
      <summary>The AutomationPeer class used for Windows in the Toolkit.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialControls.IMaterialBrushes">
      <summary>Interface implemented by all material controls, which allows them to use the material colors and animations.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialControls.IMaterialBrushes.MaterialAccent">
      <summary>Gets or sets a value representing the material color palette that will be applied to the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialControls.IMaterialBrushes.MaterialAccentBrush">
      <summary>
        <para>Gets or sets the color that will be used as the control's background.</para>
        <para></para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.MaterialControls.IMaterialBrushes.MaterialForeground">
      <summary>
        <para>Gets or sets the color to use as the control's foreground.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum">
      <summary>Represents the material color palettes. Each color palette defines complimentary background and foreground colors in addition to any other required brushes,
such as the selection and border brushes.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Red">
      <summary>The red color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Pink">
      <summary>The pink color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Purple">
      <summary>The purple color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.DeepPurple">
      <summary>The deep purple color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Indigo">
      <summary>The indigo color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Blue">
      <summary>The blue color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.LightBlue">
      <summary>The light-blue color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Cyan">
      <summary>The cyan color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Teal">
      <summary>The tealcolor palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Green">
      <summary>The green color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.LightGreen">
      <summary>The light-green color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Lime">
      <summary>The lime color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Yellow">
      <summary>The yellow color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Amber">
      <summary>The amber color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Orange">
      <summary>The orange color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.DeepOrange">
      <summary>The deep-orange color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Brown">
      <summary>The brown color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.Gray">
      <summary>The gray color palette.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum.BlueGray">
      <summary>The blue-gray color palette.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.MaterialControls.DefaultMaterialBrushes">
      <summary>Represents the material color palettes, which define complimentary background and foreground colors in addition to any other required brushes, such as the
selection and border brushes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialControls.DefaultMaterialBrushes.GetMaterialAccentBrush(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>
        <para>Returns the backgound brush corresponding to the specified material color palette.</para>
      </summary>
      <param name="color">A MaterialAccentEnum value representing the material color palette.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.MaterialControls.DefaultMaterialBrushes.GetMaterialForeground(Xceed.Wpf.Toolkit.MaterialControls.MaterialAccentEnum)">
      <summary>
        <para>Returns the foreground brush corresponding to the specified material color palette.</para>
      </summary>
      <param name="color">A MaterialAccentEnum value
representing the material color palette.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate">
      <summary>This structure may represent an animation's Duration (TimeSpan) or Speed (double).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.#ctor(System.TimeSpan)">
      <summary>Creates an AnimationRate representing a Duration (TimeSpan).</summary>
      <param name="duration">The TimeSpan that will serve as the value of the AnimationRate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.#ctor(System.Double)">
      <summary>Creates an AnimationRate representing a Speed (double).</summary>
      <param name="speed">The double that will serve as the Speed value of the AnimationRate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Add(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Adds the specified AnimationRate to this instance.</summary>
      <returns>An AnimationRate that represents the value of this instance plus the value of animationRate.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Compare(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Compares one AnimationRate value to another.</summary>
      <returns>A negative value, zero or a positive value, respectively, if t1 is less than, equal or greater than t2.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Plus(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Returns the specified instance of AnimationRate.</summary>
      <returns>Returns animationRate.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Subtract(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Subtracts the specified AnimationRate from this instance.</summary>
      <returns>An AnimationRate whose value is the result of the value of this instance minus the value of animationRate.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.ToString">
      <summary>Creates a string representation of this AnimationRate.</summary>
      <returns>A string representation of this AnimationRate.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Equals(System.Object)">
      <summary>Indicates whether the specified Object is equal to this AnimationRate.</summary>
      <returns>true if value is an AnimationRate and is equal to this instance; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Equals(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether the specified AnimationRate is equal to this AnimationRate.</summary>
      <returns>true if animationRate is equal to this instance; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Equals(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether the specified AnimationRates are equal.</summary>
      <returns>true if t1 equals t2; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Addition(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Adds two AnimationRates together.</summary>
      <returns>If both AnimationRates have values of the same type, then this returns an AnimationRate representing the sum of those two values; otherwise 0 (zero).</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Equality(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether two AnimationRates are equal.</summary>
      <returns>true if both of the AnimationRates have values and those values are equal or if both AnimationRates represent null; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_GreaterThan(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether one AnimationRate is greater than another.</summary>
      <returns>true if both t1 and t2 have values and the value of t1 is greater than the value of t2; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_GreaterThanOrEqual(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether one AnimationRate is greater than or equal to another.</summary>
      <returns>true if both t1 and t2 have values and the value of t1 is greater than or equal to the value of t2; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Inequality(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether two AnimationRates are not equal.</summary>
      <returns>true if exactly one of t1 and t2 represents a value or if they both represent values and those values are not equal; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_LessThan(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether one AnimationRate is less than another.</summary>
      <returns>true if both t1 and t2 have values and the value of t1 is less than the value of t2; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_LessThanOrEqual(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Indicates whether one AnimationRate is less than or equal to another.</summary>
      <returns>true if both t1 and t2 have values and the value of t1 is less than or equal to the value of t2; otherwise false.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Subtraction(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Subracts one AnimationRate from another.</summary>
      <returns>If both AnimationRates have values then this returns an AnimationRate representing the value of the second subtracted from the first; otherwise 0 (zero).</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_UnaryPlus(Xceed.Wpf.Toolkit.Media.Animation.AnimationRate)">
      <summary>Returns the specified instance of AnimationRate.</summary>
      <returns>Returns animationRate.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Implicit(System.TimeSpan)~Xceed.Wpf.Toolkit.Media.Animation.AnimationRate">
      <summary>Implicitly creates an AnimationRate from a TimeSpan.</summary>
      <param name="duration">The TimeSpan that will serve as the value of the AnimationRate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Implicit(System.Double)~Xceed.Wpf.Toolkit.Media.Animation.AnimationRate">
      <summary>Implicitly creates an AnimationRate from a double.</summary>
      <param name="speed">The double that will serve as the Speed value of the AnimationRate.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.op_Implicit(System.Int32)~Xceed.Wpf.Toolkit.Media.Animation.AnimationRate">
      <summary>Implicitly creates an AnimationRate from an int.</summary>
      <param name="speed">The int that will serve as the Speed value of the AnimationRate.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Default">
      <summary>Indicates an unset AnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Duration">
      <summary>Returns the TimeSpan value that this AnimationRate represents.</summary>
      <exception caption="" cref="T:System.InvalidOperationException">Thrown if this AnimationRate represents a Speed.</exception>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.HasDuration">
      <summary>Indicates whether this AnimationRate is a TimeSpan value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.HasSpeed">
      <summary>Indicates whether this AnimationRate is a Speed value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.AnimationRate.Speed">
      <summary>Returns the Speed value that this AnimationRate represents.</summary>
      <exception caption="" cref="T:System.InvalidOperationException">Thrown if this AnimationRate represents a Speed.</exception>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.AnimationRateConverter">
      <summary>Provides a type converter to convert AnimationRate to and from other representations.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.IterativeEquation`1">
      <summary>This class contains a delegate which will eventually point to the actual implementation of the equation.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.IterativeEquationConverter">
      <summary>The converter used to convert IterativeEquation to a specific PennerEquation defined in the PennerEquations class based on a string. This comes in really handy
when we are creating the "IterativeDoubleAnimation" in markup. All we need to do is set the "Equation" property on the IterativeDoubleAnimation to a string
corresponding to a PennerEquation from the PennerEquations class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.PennerEquation">
      <summary>This is a type of IterativeEquation which animates double values.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations">
      <summary>This class contains a rich set of pre-defined PennerEquations and their implementations. Any of the PennerEquations can be used as the equation for an
IterativeEquation.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRateConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>CanConvertFrom - Returns whether or not this class can convert from a given type</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRateConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>TypeConverter method override.</summary>
      <returns>true if conversion is possible</returns>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">Type to convert to</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRateConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>ConvertFrom</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.AnimationRateConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>TypeConverter method implementation.</summary>
      <returns>converted value</returns>
      <param name="context">ITypeDescriptorContext</param>
      <param name="cultureInfo">current culture (see CLR specs)</param>
      <param name="value">value to convert from</param>
      <param name="destinationType">Type to convert to</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.IterativeEquation`1.Evaluate(System.TimeSpan,`0,`0,System.TimeSpan)">
      <summary>This method will invoke a delegate which in turn points to a method with the actual implementation of the equation.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Media.Animation.PennerEquation.Evaluate(System.TimeSpan,System.Double,System.Double,System.TimeSpan)">
      <summary>This method will invoke a delegate which in turn points to a method with the actual implementation of the equation. If we need to create a custom animation one
of the methods that needs to be implemented/overrided is GetCurrentValueCore. When a PennerEquation is set as the "Equation" property of a custom animation
like IterativeDoubleAnimation, this method is called from the GetCurrentValueCore method of the custom animation.</summary>
      <param name="currentTime">current time of the animation clock within its current iteration</param>
      <param name="from">begining value for the animation</param>
      <param name="to">ending value for the animation</param>
      <param name="duration">The Duration property specifies the simple duration for a Timeline. The simple duration is the length of time that it takes to complete a single forward
iteration of the time segment.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BackEaseIn">
      <summary>Easing equation for a back easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BackEaseInOut">
      <summary>Easing equation for a back easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BackEaseOut">
      <summary>Easing equation for a back easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BounceEaseIn">
      <summary>Easing equation for a bounce easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BounceEaseInOut">
      <summary>Easing equation for a bounce easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.BounceEaseOut">
      <summary>Easing equation for a bounce easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CircEaseIn">
      <summary>Easing equation for a circular easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CircEaseInOut">
      <summary>Easing equation for a circular easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CircEaseOut">
      <summary>Easing equation for a circular easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CubicEaseIn">
      <summary>Easing equation for a cubic easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CubicEaseInOut">
      <summary>Easing equation for a cubic easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.CubicEaseOut">
      <summary>Easing equation for a cubic easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ElasticEaseIn">
      <summary>Easing equation for an elastic easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ElasticEaseInOut">
      <summary>Easing equation for an elastic easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ElasticEaseOut">
      <summary>Easing equation for an elastic easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ExpoEaseIn">
      <summary>Easing equation for an exponential easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ExpoEaseInOut">
      <summary>Easing equation for an exponential easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.ExpoEaseOut">
      <summary>Easing equation for an exponential easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.Linear">
      <summary>Linear equation with no easing.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuadEaseIn">
      <summary>Easing equation for a quadratic easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuadEaseInOut">
      <summary>Easing equation for a quadratic easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuadEaseOut">
      <summary>Easing equation for a quadratic easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuartEaseIn">
      <summary>Easing equation for a quartic easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuartEaseInOut">
      <summary>Easing equation for a quartic easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuartEaseOut">
      <summary>Easing equation for a quartic easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuintEaseIn">
      <summary>Easing equation for a quintic easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuintEaseInOut">
      <summary>Easing equation for a quintic easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.QuintEaseOut">
      <summary>Easing equation for a quintic easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.SineEaseIn">
      <summary>Easing equation for a sinusoidal easing in: accelerating from zero velocity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.SineEaseInOut">
      <summary>Easing equation for a sinusoidal easing in/out: acceleration until halfway, then deceleration.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Media.Animation.PennerEquations.SineEaseOut">
      <summary>Easing equation for a sinusoidal easing out: decelerating from zero velocity.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.OverlapBehaviorKind">
      <summary>Identifies options for the behavior of overlapping elements in an AnimatedTimelinePanel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.OverlapBehaviorKind.Stack">
      <summary>Elements are stacked in the direction perpindicular to the orientation of the timeline</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.OverlapBehaviorKind.Stretch">
      <summary>Items are stretched in the direction perpendicular to the orientation of the timeline. If conflicts occur, the available space is divided between any
conflicting items</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.OverlapBehaviorKind.Hide">
      <summary>Items are hidden when a conflict occurs</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.OverlapBehaviorKind.None">
      <summary>Elements are placed on top of one another</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackLength">
      <summary>StackLength is the type used for the Length property of a StackDefinition (used by StackedStackPanel).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.#ctor(System.Double)">
      <summary>Constructor, initializes the StackLength as absolute value in pixels.</summary>
      <exception caption="" cref="T:System.ArgumentException">
            If pixels parameter is double.NaN
            or pixels parameter is double.NegativeInfinity
            or pixels parameter is double.PositiveInfinity.
            </exception>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.GetHashCode">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.ToString">
      <summary>Returns the string representation of this object.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.Equals(System.Object)">
      <summary>Compares this instance of StackLength with another object.</summary>
      <returns>
        <c>true</c>if this StackLength instance has the same value and unit type as oCompare.</returns>
      <param name="oCompare">Reference to an object for comparison.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.Equals(Xceed.Wpf.Toolkit.Panels.StackLength)">
      <summary>Compares this instance of StackLength with another instance.</summary>
      <returns>
        <c>true</c>if this StackLength instance has the same value as stackLength.</returns>
      <param name="stackLength">Stack length instance to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.op_Equality(Xceed.Wpf.Toolkit.Panels.StackLength,Xceed.Wpf.Toolkit.Panels.StackLength)">
      <summary>Overloaded operator, compares 2 StackLength's.</summary>
      <returns>true if specified StackLengths have same value</returns>
      <param name="sl1">first StackLength to compare.</param>
      <param name="sl2">second StackLength to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLength.op_Inequality(Xceed.Wpf.Toolkit.Panels.StackLength,Xceed.Wpf.Toolkit.Panels.StackLength)">
      <summary>Overloaded operator, compares 2 StackLength's.</summary>
      <returns>true if specified StackLengths have either different value or unit type.</returns>
      <param name="sl1">first StackLength to compare.</param>
      <param name="sl2">second StackLength to compare.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.Auto">
      <summary>Returns initialized Auto StackLength value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.Default">
      <summary>Returns initialized Default StackLength value. This means that the stack's length will be determined by the DefaultStackLength value on the owning
StackedStackPanel (which is Auto, by default).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.IsAbsolute">
      <summary>Returns <c>true</c> if this StackLength instance holds an absolute (pixel) value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.IsAuto">
      <summary>Returns <c>true</c> if this StackLength instance is automatic (not specified).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.IsDefault">
      <summary>Returns <c>true</c> if this StackLength instance is determined by the DefaultStackLength property on the owning StackedStackPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackLength.Value">
      <summary>Returns value part of this StackLength instance.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel">
      <summary>Defines an area where items are positioned on a timeline.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.AnimationPanel">
      <summary>This base class for all "switchable" panels. The actual arrange animation engine is built into this class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.AnimatorConverter">
      <summary>The AnimatorConverter class allows common Animators to be specified in XAML using a simple string. For example:
<code>
                &lt;b:Canvas LayoutAnimator="BackEaseIn" /&gt;
            
</code></summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.Animators">
      <summary>A set of prebuilt animators which can be used to animate children in an AnimationPanel or SwitchPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel">
      <summary>This panel stretches the children in the orientation direction so that they completely fill the panel area.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.CameraPanel">
      <summary>CameraPanel lays out its children in a 3D like space. You can give the children a 3D location and set the camera position for the panel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.Canvas">
      <summary>Exactly like WPF's native Canvas panel, except this panel can animate its children and be used inside a SwitchPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.Carousel">
      <summary>Arranges items in a carousel, imitating a 3D layout without CPU-taxing true 3D</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildEnteredEventArgs">
      <summary>Event arguments for ChildEntered event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildEnteringEventArgs">
      <summary>Event arguments for ChildEntering event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildExitedEventArgs">
      <summary>Event arguments for ChildExited event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildExitingEventArgs">
      <summary>Event arguments for ChildExiting event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ColumnDefinition">
      <summary>Defines column-specific properties that apply to Xceed.Wpf.Blendables.Windows.Panels.Grid elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ColumnDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of Xceed.Wpf.Blendables.Windows.Panels.ColumnDefinition objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.DefinitionBase">
      <summary>Defines the functionality required to support a shared-size group that is used by the Xceed.Wpf.Blendables.Windows.Panels.ColumnDefinitionCollection and
Xceed.Wpf.Blendables.Windows.Panels.RowDefinitionCollection classes. This is an abstract class.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.DockPanel">
      <summary>Exactly like WPF's native DockPanel panel, except this panel can animate its children and be used inside a SwitchPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.DoubleAnimator">
      <summary>Creates an animator which uses a given equation to animate a child's placement.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.Grid">
      <summary>Exactly like WPF's native Grid panel, except this panel can animate its children and be used inside a SwitchPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.IterativeAnimator">
      <summary>Allow base classes to define animmations for the child elements in an AnimationPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.PanelBase">
      <summary>Abstract base class of the panels.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.PerspectivePanel">
      <summary>The panel will lay out every element in a Perspective manner, Each subsequent item size will be scaled down The decay of size can be specified as a DP.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.RadialCanvas">
      <summary>Lays out its children in a cicle based on panel size and/or properties set.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.RandomPanel">
      <summary>This panel layouts out its children with a random location and size.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.RelativeCanvas">
      <summary>A Panel which is similar to Canvas but it lays out its children relative to the panel's height and width.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.RowDefinition">
      <summary>Defines row-specific properties that apply to Xceed.Wpf.Blendables.Windows.Panels.Grid elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.RowDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of Xceed.Wpf.Blendables.Windows.Panels.RowDefinition objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackDefinition">
      <summary>Defines stack-specific properties that apply to Xceed.Wpf.Blendables.Windows.Panels.StackedStackPanel elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackDefinitionCollection">
      <summary>Provides access to an ordered, strongly typed collection of Xceed.Wpf.Blendables.Windows.Panels.StackDefinition objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackedStackPanel">
      <summary>Lays out children in a series of stacked stackpanels.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackLengthConverter">
      <summary>Converts a string to a StackLength. Useful for setting a StackLength in XAML.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.StackPanel">
      <summary>Exactly like WPF's native StackPanel, except this panel can animate its children and be used inside SwitchPanel.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.SwitchPanel">
      <summary>Allows you to switch between panels with the same children on the fly with animation support.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.SwitchPresenter">
      <summary>SwitchPresenter is used within the DataTemplate of a content control to denote the place in the control's visual tree (control template) where the content is
to be added.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.WrapPanel">
      <summary>A Panel that wraps its children's content.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.GetDate(System.Windows.DependencyObject)">
      <summary>Gets the attached Date property from a control item.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.GetDateEnd(System.Windows.DependencyObject)">
      <summary>Gets the DateEnd attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.SetDate(System.Windows.DependencyObject,System.DateTime)">
      <summary>Sets the attached Date property for a control item.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.SetDateEnd(System.Windows.DependencyObject,System.DateTime)">
      <summary>Sets the DateEnd attached dependency property</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.BeginDate">
      <summary>Indicates the date corresponding to the beginning of the TimelinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.EndDate">
      <summary>Indicates the date corresponding to the end of the AnimatedTimelinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.Orientation">
      <summary>Indicates the date corresponding to the beginning of the AnimatedTimelinePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.OverlapBehavior">
      <summary>Gets or sets the OverlapBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.BeginDateProperty">
      <summary>Identifies the BeginDate dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.DateEndProperty">
      <summary>Identifies the DateEnd dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.DateProperty">
      <summary>Identifies the Date attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.EndDateProperty">
      <summary>Identifies the EndDate dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.OrientationProperty">
      <summary>Identifies the Orientation dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimatedTimelinePanel.OverlapBehaviorProperty">
      <summary>Identifies the OverlapBehavior dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.GetEnterFrom(System.Windows.DependencyObject)">
      <summary>Gets the EnterFrom property. This dependency property indicates the location from which a child will enter the panel when it is first arranged. If set on a
child of the animation panel, it provides for an "animate in" effect.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.GetExitTo(System.Windows.DependencyObject)">
      <summary>Gets the ExitTo property. This dependency property indicates the location to which a child will exit the panel when it is removed. If set on a child of the
animation panel, it provides for an "animate out" effect.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnNotifyVisualChildAdded(System.Windows.UIElement)">
      <summary>Executes when a visual child is added directly to the panel or added to the SwitchParent of the panel.</summary>
      <param name="child">The child that was added</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnNotifyVisualChildRemoved(System.Windows.UIElement)">
      <summary>Executes when a visual child is removed directly from the panel or removed from the SwitchParent of the panel.</summary>
      <param name="child">The child that was removed</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnSwitchLayoutActivated">
      <summary>Executes when an animation panel becomes the active layout panel for a SwitchPanel.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnSwitchLayoutDeactivated">
      <summary>Executes when an animation panel is no longer the active layout panel for a SwitchPanel.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SetEnterFrom(System.Windows.DependencyObject,System.Nullable{System.Windows.Rect})">
      <summary>Sets the EnterFrom property. This dependency property indicates the location from which a child will enter the panel when it is first arranged. If set on a
child of the animation panel, it provides for an "animate in" effect.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SetExitTo(System.Windows.DependencyObject,System.Nullable{System.Windows.Rect})">
      <summary>Sets the ExitTo property. This dependency property indicates the location to which a child will exit the panel when it is removed. If set on a child of the
animation panel, it provides for an "animate out" effect.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SetSwitchParent(Xceed.Wpf.Toolkit.Panels.SwitchPanel)">
      <summary>Provides a secure method for setting the SwitchParent property. This dependency property indicates the parent SwitchPanel (if the current SwitchablePanel is a
member of a Layouts collection).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnSwitchParentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SwitchParent property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.OnSwitchTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SwitchTemplate property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseAnimationBegunEvent">
      <summary>A helper method to raise the AnimationBegun event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseAnimationCompletedEvent">
      <summary>A helper method to raise the AnimationCompleted event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseChildEnteredEvent(System.Windows.UIElement,System.Windows.Rect)">
      <summary>A helper method to raise the ChildEntered event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseChildEnteringEvent(System.Windows.UIElement,System.Nullable{System.Windows.Rect},System.Windows.Rect)">
      <summary>A helper method to raise the ChildEntering event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseChildExitedEvent(System.Windows.UIElement)">
      <summary>A helper method to raise the ChildExited event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseChildExitingEvent(System.Windows.UIElement,System.Nullable{System.Windows.Rect},System.Windows.Rect)">
      <summary>A helper method to raise the ChildExiting event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseSwitchLayoutActivatedEvent">
      <summary>A helper method to raise the SwitchLayoutActivated event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimationPanel.RaiseSwitchLayoutDeactivatedEvent">
      <summary>A helper method to raise the SwitchLayoutDeactivated event.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildrensParent">
      <summary>Gets the children's true visual parent. If SwitchParent is set then it returns SwitchPanel otherwise it returns this.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.DefaultAnimationRate">
      <summary>Gets or sets the DefaultAnimationRate property. This dependency property indicates the duration or speed at which other animations will if they set their
respective AnimationRate properties to AnimationRate.Default. This property can be used to set a single animation rate to be used for EnterAnimationRate,
ExitAnimationRate, LayoutAnimationRate, SwitchAnimationRate, and TemplateAnimationRate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.DefaultAnimator">
      <summary>Gets or sets the EnterAnimator property. This dependency property indicates which iterative layout animator will be used to animate children when they are
first added to a panel. This provides for an "animate in" effect. If you'd like to use the same animator for several layouts within a SwitchPanel, you can set
the EnterAnimator property directly on the owning SwitchPanel. Otherwise, setting this property on an animation panel will override the value of the owning
SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.EnterAnimationRate">
      <summary>Gets or sets the EnterAnimationRate property. This dependency property indicates the duration or speed at which "enter" animations occur within the panel. If
null is specified and the panel belongs to the Layouts collection of a SwitchPanel, then the EnterAnimationRate property of the SwitchPanel will be used. If
null is specified and the panel is being used standalone, then a default speed of 1 will be used. To prevent animations within the panel, you can explicitly
set the speed property to 0 or simply set the IsAnimated property to false.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.EnterAnimator">
      <summary>Gets or sets the EnterAnimator property. This dependency property indicates which iterative layout animator will be used to animate children when they are
first added to a panel. This provides for an "animate in" effect. If you'd like to use the same animator for several layouts within a SwitchPanel, you can set
the EnterAnimator property directly on the owning SwitchPanel. Otherwise, setting this property on an animation panel will override the value of the owning
SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ExitAnimationRate">
      <summary>Gets or sets the ExitAnimationRate property. This dependency property indicates the duration or speed at which "exit" animations occur within the panel. If
null is specified and the panel belongs to the Layouts collection of a SwitchPanel, then the ExitAnimationRate property of the SwitchPanel will be used. If
null is specified and the panel is being used standalone, then a default speed of 1 will be used. To prevent animations within the panel, you can explicitly
set the speed property to 0 or simply set the IsAnimated property to false.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ExitAnimator">
      <summary>Gets or sets the ExitAnimator property. This dependency property indicates which iterative layout animator will be used to animate children when they are
removed from a panel. This provides for an "animate out" effect. If you'd like to use the same animator for several layouts within a SwitchPanel, you can set
the ExitAnimator property directly on the owning SwitchPanel. Otherwise, setting this property on an animation panel will override the value of the owning
SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.LayoutAnimationRate">
      <summary>Gets or sets the LayoutAnimationRate property. This dependency property indicates the duration or speed at which animations occur within the panel. If null is
specified and the panel belongs to the Layouts collection of a SwitchPanel, then the LayoutAnimationRate property of the SwitchPanel will be used. If null is
specified and the panel is being used standalone, then a default speed of 1 will be used. To prevent animations within the panel, you can explicitly set the
speed property to 0 or simply set the IsAnimated property to false.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.LayoutAnimator">
      <summary>Gets or sets the LayoutAnimator property. This dependency property indicates which iterative layout animator will be used to animate children whenever a layout
pass arranges the children to a new location. If the LayoutAnimator property is null, then a linear animator will be used for layout animations. To prevent
layout animations, you can set the IsAnimated property to false. If you'd like to use the same animator for several layouts within a SwitchPanel, you can set
the LayoutAnimator property directly on the owning SwitchPanel. Otherwise, setting this property on an animation panel will override the value of the owning
SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchAnimationRate">
      <summary>Gets or sets the SwitchAnimationRate property. This dependency property indicates the duration or speed at which "switch" animations occur within the panel. If
null is specified and the panel belongs to the Layouts collection of a SwitchPanel, then the SwitchAnimationRate property of the SwitchPanel will be used. If
UnsetValue is specified and the panel is being used standalone, then a default speed of 1 will be used. To prevent animations within the panel, you can
explicitly set the speed property to 0 or simply set the IsAnimated property to false. !!! fix these descriptions</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchAnimator">
      <summary>Gets or sets the SwitchAnimator property. This dependency property indicates the animator that will be used for layout switches when the AnimationPanel belongs
to the Layouts collection of a SwitchPanel. If the SwitchAnimator property is null, then the LayoutAnimator will be used for both layout animations and switch
animations. To prevent switch animations, you can set the AreLayoutSwitchesAnimated property on the owning SwitchPanel to false. If you'd like to use the same
animator for all layout switches, you can set the SwitchAnimator property on the owning SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchParent">
      <summary>Gets the SwitchParent property. This dependency property indicates the parent SwitchPanel (if the current SwitchablePanel is a member of a Layouts collection).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchTemplate">
      <summary>Gets or sets the SwitchTemplate property. This dependency property indicates the DataTemplate that should be used for SwitchPresenter elements within the
SwitchParent's visual tree while the panel is the active layout of the SwitchParent.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.TemplateAnimationRate">
      <summary>Gets or sets the TemplateAnimationRate property. This dependency property indicates the duration or speed at which ID'd elements within a SwitchTemplate are
animated during a template switch. If null is specified and the panel belongs to the Layouts collection of a SwitchPanel, then the TemplateAnimationRate
property of the SwitchPanel will be used. If UnsetValue is specified and the panel is being used standalone, then a default speed of 1 will be used. To prevent
animations within the panel, you can explicitly set the speed property to 0 or simply set the IsAnimated property to false.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AnimationPanel.TemplateAnimator">
      <summary>Gets or sets the TemplateAnimator property. This dependency property indicates the animator that will be used for layout switches when the AnimationPanel
belongs to the Layouts collection of a SwitchPanel. If the TemplateAnimator property is null, then the LayoutAnimator will be used for both layout animations
and switch animations. To prevent switch animations, you can set the AreLayoutSwitchesAnimated property on the owning SwitchPanel to false. If you'd like to
use the same animator for all layout switches, you can set the TemplateAnimator property on the owning SwitchPanel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.AnimationBegunEvent">
      <summary>AnimationBegun Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.AnimationCompletedEvent">
      <summary>AnimationCompleted Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildEnteredEvent">
      <summary>ChildEntered Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildEnteringEvent">
      <summary>ChildEntering Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildExitedEvent">
      <summary>ChildExited Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildExitingEvent">
      <summary>ChildExiting Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.DefaultAnimationRateProperty">
      <summary>DefaultAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.DefaultAnimatorProperty">
      <summary>DefaultAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.EnterAnimationRateProperty">
      <summary>EnterAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.EnterAnimatorProperty">
      <summary>EnterAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.EnterFromProperty">
      <summary>EnterFrom Attached Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ExitAnimationRateProperty">
      <summary>ExitAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ExitAnimatorProperty">
      <summary>ExitAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ExitToProperty">
      <summary>ExitTo Attached Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.LayoutAnimationRateProperty">
      <summary>LayoutAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.LayoutAnimatorProperty">
      <summary>LayoutAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchAnimationRateProperty">
      <summary>SwitchAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchAnimatorProperty">
      <summary>SwitchAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchLayoutActivatedEvent">
      <summary>SwitchLayoutActivated Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchLayoutDeactivatedEvent">
      <summary>SwitchLayoutDeactivated Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchTemplateProperty">
      <summary>SwitchTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.TemplateAnimationRateProperty">
      <summary>TemplateAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AnimationPanel.TemplateAnimatorProperty">
      <summary>TemplateAnimator Dependency Property</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.AnimationBegun">
      <summary>Occurs when a layout animation begins within an AnimationPanel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.AnimationCompleted">
      <summary>Occurs when a layout animation completes within an AnimationPanel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildEntered">
      <summary>Occurs when a child enter animation completes. If no enter animation is used, then this event occurse immediately after the child is added to the panel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildEntering">
      <summary>Occurs when a child is first added to the panel. Set the EnterFrom property if you would like an "animate in" effect where the child is animated from the
EnterFrom Rect to the ArrangeRect. If EnterFrom is null, the child will simply be arranged at the ArrangeRect location.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildExited">
      <summary>Occurs when a child exit animation completes. If no ExitTo rect has been specified, this event is raised immediately after the InitiateChildExit command
executes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.ChildExiting">
      <summary>Occurs when a child is about to be removed from the panel. Set the ExitTo property if you would like an "animate out" effect where the child is animated from
the ArrangeRect to the ExitTo Rect. Set the Cancel property to true to prevent the exit operation entirely.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchLayoutActivated">
      <summary>Occurs when an animation panel becomes the active layout panel for a SwitchPanel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.AnimationPanel.SwitchLayoutDeactivated">
      <summary>Occurs when an AnimationPanel that was the active layout panel for a SwitchPanel is no longer the active layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Tests if converter can convert from an object of a given type. AnimatorConverter only converts from strings</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Test is converter can convert an object of a given type. AnimatorConverter only converts to IterativeAnimator and DoubleAnimator.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AnimatorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts string name animator to actual animator object, IterativeAnimator.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BackEaseIn">
      <summary>A layout animator which uses the BackEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BackEaseInOut">
      <summary>A layout animator which uses the BackEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BackEaseOut">
      <summary>A layout animator which uses the BackEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BounceEaseIn">
      <summary>A layout animator which uses the BounceEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BounceEaseInOut">
      <summary>A layout animator which uses the BounceEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.BounceEaseOut">
      <summary>A layout animator which uses the BounceEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CircEaseIn">
      <summary>A layout animator which uses the CircEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CircEaseInOut">
      <summary>A layout animator which uses the CircEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CircEaseOut">
      <summary>A layout animator which uses the CircEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CubicEaseIn">
      <summary>A layout animator which uses the CubicEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CubicEaseInOut">
      <summary>A layout animator which uses the CubicEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.CubicEaseOut">
      <summary>A layout animator which uses the CubicEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ElasticEaseIn">
      <summary>A layout animator which uses the ElasticEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ElasticEaseInOut">
      <summary>A layout animator which uses the ElasticEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ElasticEaseOut">
      <summary>A layout animator which uses the ElasticEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ExpoEaseIn">
      <summary>A layout animator which uses the ExpoEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ExpoEaseInOut">
      <summary>A layout animator which uses the ExpoEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.ExpoEaseOut">
      <summary>A layout animator which uses the ExpoEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.Linear">
      <summary>Linear equation with no easing.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuadEaseIn">
      <summary>A layout animator which uses the QuadEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuadEaseInOut">
      <summary>A layout animator which uses the QuadEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuadEaseOut">
      <summary>A layout animator which uses the QuadEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuartEaseIn">
      <summary>A layout animator which uses the QuartEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuartEaseInOut">
      <summary>A layout animator which uses the QuartEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuartEaseOut">
      <summary>A layout animator which uses the QuartEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuintEaseIn">
      <summary>A layout animator which uses the QuintEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuintEaseInOut">
      <summary>A layout animator which uses the QuintEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.QuintEaseOut">
      <summary>A layout animator which uses the QuintEaseOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.SineEaseIn">
      <summary>A layout animator which uses the SineEaseIn easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.SineEaseInOut">
      <summary>A layout animator which uses the SineEaseInOut easing equation to position elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Animators.SineEaseOut">
      <summary>A layout animator which uses the SineEaseOut easing equation to position elements.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange the children based on the orientation and factor value</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measure each element and find out the factor to layout each child in an evenly manner to stretch across the Orientation of the panel</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.GapRatio">
      <summary>Gets or sets the GapRatio property. This dependency property indicates the size of the gap between items as a ratio to the item size, itself.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.IsChildOrderReversed">
      <summary>Gets or sets the IsChildOrderReversed property. This dependency property indicates whether the children are laid out from left to right (or top to bottom for a
vertical orientation), as a normal stack panel is, or whether the stack is inverted and laid out from right to left (or bottom to top for a vertical
orientation).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.Orientation">
      <summary>Gets or sets the Orientation property. This dependency property indicates the orientation direction in which items are arranged in the panel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.GapRatioProperty">
      <summary>GapRatio Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.IsStackReversedProperty">
      <summary>IsChildOrderReversed Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.AutoStretchStackPanel.OrientationProperty">
      <summary>Orientation Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the panel's children to give a psuedo 3D effect.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.GetDepth(System.Windows.DependencyObject)">
      <summary>Gets Depth attached property on dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.GetLeft(System.Windows.DependencyObject)">
      <summary>Gets Left attached property on dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.GetTop(System.Windows.DependencyObject)">
      <summary>Get Top attached property on dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the panels children.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.SetDepth(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets Depth attached property on dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.SetLeft(System.Windows.DependencyObject,System.Double)">
      <summary>Sets Left attached property on dependency object</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.CameraPanel.SetTop(System.Windows.DependencyObject,System.Double)">
      <summary>Sets Top attached property on dependency object.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraX">
      <summary>Sets the camera's X or left value</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraY">
      <summary>Sets the camera's Y or top value</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraZ">
      <summary>Sets the camera's Z or depth value</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.CameraPanel.ZScaleFactor">
      <summary>Sets the ZScaleFactor value</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraXProperty">
      <summary>Identifies the CameraPanels 's CameraX Dependancy Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraYProperty">
      <summary>Identifies the CameraPanels 's CameraY Dependancy Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.CameraZProperty">
      <summary>Identitfies the CameraPanel's CameraZ Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.DepthProperty">
      <summary>The Depth Attached property determines the Z axis for 3d space. The ZIndex property of the UIElement directly maps to value of the Depth.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.LeftProperty">
      <summary>Left attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.TopProperty">
      <summary>Top attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.CameraPanel.ZScaleFactorProperty">
      <summary>Identitfies the CameraPanel's ZScaleFactor Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the canvas's children using the same algorithm that is used by the native Canvas class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.GetBottom(System.Windows.DependencyObject)">
      <summary>Gets the Bottom property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.GetLeft(System.Windows.DependencyObject)">
      <summary>Gets the Left property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.GetRight(System.Windows.DependencyObject)">
      <summary>Gets the Right property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.GetTop(System.Windows.DependencyObject)">
      <summary>Gets the Top property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the canvas's children using the same algorithm that is used by the native Canvas class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.SetBottom(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the Bottom property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.SetLeft(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the Left property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.SetRight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the Right property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Canvas.SetTop(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the Top property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange children inside carousel</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.CenterChild(System.Windows.UIElement,System.TimeSpan,System.Boolean)">
      <summary>Moves child to the front center of the carousel.</summary>
      <param name="child">Child to animation</param>
      <param name="animationDuration">Length of animation</param>
      <param name="perQuarterTurn">True, if duration be per quarter turn, otherwise duration the total turn to center the child.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.GetChildHasScaleTransform(System.Windows.DependencyObject)">
      <summary>Gets or sets the ChildHasScaleTransform property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.GetChildOffset(System.Windows.DependencyObject)">
      <summary>Gets or sets the ChildOffset property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.GetChildScale(System.Windows.DependencyObject)">
      <summary>Gets or sets the ChildScale property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.GetChildZIndex(System.Windows.DependencyObject)">
      <summary>Gets or sets the ChildZIndex property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measure children inside carousel</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.ReorderChildrenAroundChild(System.Windows.UIElement)">
      <summary>This function will reorder the children inside the panel based on the given child.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.SetCenteredChild(System.Windows.UIElement)">
      <summary>Provides a protected method for setting the CenteredChild property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.SetRadius(System.Double)">
      <summary>Provides a protected method for setting the Radius property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.StopAnimation">
      <summary>Stop any active animation</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnAngularExtentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AngularExtent property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnAngularOffsetChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AngularOffset property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnAreChildrenOrderedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AreChildrenOrdered property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnAreChildrenScaledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AreChildrenScaled property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnDistantChildScaleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DistantChildScale property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnMaximumAngularSeparationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MaximumAngularSeparation property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnMaximumRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MaximumRadius property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnMinimumAngularSeparationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MinimumAngularSeparation property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnMinimumRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MinimumRadius property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Orientation property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Carousel.OnTiltChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Tilt property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.AngularExtent">
      <summary>Gets or sets the AngularExtent property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.AngularOffset">
      <summary>Gets or sets the AngularOffset property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.AreChildrenOrdered">
      <summary>Gets or sets the AreChildrenOrdered property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.AreChildrenScaled">
      <summary>Gets or sets the AreChildrenScaled property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.CenteredChild">
      <summary>Gets the value of the CenteredChild property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.DistantChildScale">
      <summary>Gets or sets the DistantChildScale property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.MaximumAngularSeparation">
      <summary>Gets or sets the MaximumAngularSeparation property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.MaximumRadius">
      <summary>Gets or sets the MaximumRadius property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.MinimumAngularSeparation">
      <summary>Gets or sets the MinimumAngularSeparation property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.MinimumRadius">
      <summary>Gets or sets the MinimumRadius property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.Orientation">
      <summary>Gets or sets the Orientation property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.Radius">
      <summary>Gets the value of the Radius property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Carousel.Tilt">
      <summary>Gets or sets the Tilt property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.AngularExtentProperty">
      <summary>AngularExtent Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.AngularOffsetProperty">
      <summary>AngularOffset Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.AreChildrenOrderedProperty">
      <summary>AreChildrenOrdered Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.AreChildrenScaledProperty">
      <summary>AreChildrenScaled Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.DistantChildScaleProperty">
      <summary>DistantChildScale Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.MaximumAngularSeparationProperty">
      <summary>MaximumAngularSeparation Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.MaximumRadiusProperty">
      <summary>MaximumRadius Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.MinimumAngularSeparationProperty">
      <summary>MinimumAngularSeparation Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.MinimumRadiusProperty">
      <summary>MinimumRadius Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.OrientationProperty">
      <summary>Orientation Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Carousel.TiltProperty">
      <summary>Tilt Dependency Property</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildEnteredEventArgs.ArrangeRect">
      <summary>Gets the current arrange rectangle of the child</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildEnteredEventArgs.Child">
      <summary>Gets the child who entered</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildEnteringEventArgs.ArrangeRect">
      <summary>Gets the current arrange rectangle of the child</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildEnteringEventArgs.Child">
      <summary>Gets the child who entering</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildEnteringEventArgs.EnterFrom">
      <summary>Gets the rectangle of where to enter from</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildExitedEventArgs.Child">
      <summary>Get the child that exited</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildExitingEventArgs.ArrangeRect">
      <summary>Gets the current arrange rect for the child</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildExitingEventArgs.Child">
      <summary>Gets the child who is exiting</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ChildExitingEventArgs.ExitTo">
      <summary>Gets the rectangle to exit to</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.MaxWidth">
      <summary>Gets or sets the MaxWidth property. This dependency property indicates the maximum width for the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.MinWidth">
      <summary>Gets or sets the MinWidth property. This dependency property indicates the minimum width for the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.Width">
      <summary>Gets or sets the Width property. This dependency property indicates the width of the column.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.MaxWidthProperty">
      <summary>MaxWidth Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.MinWidthProperty">
      <summary>MinWidth Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.ColumnDefinition.WidthProperty">
      <summary>Width Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DefinitionBase.OnPrivateSharedSizeScopeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the PrivateSharedSizeScope property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DefinitionBase.OnSharedSizeGroupChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SharedSizeGroup property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.DefinitionBase.SharedSizeGroup">
      <summary>Gets or sets the SharedSizeGroup property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.DefinitionBase.SharedSizeGroupProperty">
      <summary>SharedSizeGroup Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DockPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the DockPanel's children using the same algorithm that is used by the native DockPanel class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DockPanel.GetDock(System.Windows.DependencyObject)">
      <summary>Gets the Dock property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DockPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the DockPanel's children using the same algorithm that is used by the native DockPanel class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DockPanel.SetDock(System.Windows.DependencyObject,System.Windows.Controls.Dock)">
      <summary>Sets the Dock property</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.DockPanel.LastChildFill">
      <summary>Gets or sets the LastChildFill property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.DockPanel.LastChildFillProperty">
      <summary>Defines the LastChildFillProperty</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DoubleAnimator.#ctor(Xceed.Wpf.Toolkit.Media.Animation.IterativeEquation{System.Double})">
      <summary>Initalizes with the given animation equation.</summary>
      <param name="equation">Provides an equation on how to animate the values.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DoubleAnimator.GetInitialChildPlacement(System.Windows.UIElement,System.Windows.Rect,System.Windows.Rect,Xceed.Wpf.Toolkit.Panels.AnimationPanel,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate@,System.Object@,System.Boolean@)">
      <summary>Provides the intial placement in the animation sequence.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.DoubleAnimator.GetNextChildPlacement(System.Windows.UIElement,System.TimeSpan,System.Windows.Rect,System.Windows.Rect,Xceed.Wpf.Toolkit.Panels.AnimationPanel,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,System.Object@,System.Boolean@)">
      <summary>Provides the next placement in the animation sequence.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the grid's children using the same algorithm that is used by the native Grid class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.GetColumn(System.Windows.DependencyObject)">
      <summary>Gets the Column property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.GetColumnSpan(System.Windows.DependencyObject)">
      <summary>Gets the ColumnSpan property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.GetRow(System.Windows.DependencyObject)">
      <summary>Gets the Row property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.GetRowSpan(System.Windows.DependencyObject)">
      <summary>Gets the RowSpan property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the grid's children using the same algorithm that is used by the native Grid class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.SetColumn(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the Column property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.SetColumnSpan(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the ColumnSpan property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.SetRow(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the Row property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.SetRowSpan(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the RowSpan property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.Grid.OnShowGridLinesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ShowGridLines property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.Grid.ShowGridLines">
      <summary>Gets or sets the ShowGridLines property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.Grid.ShowGridLinesProperty">
      <summary>ShowGridLines Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.IterativeAnimator.GetNextChildPlacement(System.Windows.UIElement,System.TimeSpan,System.Windows.Rect,System.Windows.Rect,Xceed.Wpf.Toolkit.Panels.AnimationPanel,Xceed.Wpf.Toolkit.Media.Animation.AnimationRate,System.Object@,System.Boolean@)">
      <summary>Called iteratively while a child is animating to its target placement rect. Each iteration should result in a new placement rect until the target placement is
reached.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange override</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ActiveChildIndex">
      <summary>Gets or sets the ActiveChildIndex property. This dependency property indicates ....</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AnchorX">
      <summary>Gets or sets the X anchor of the PerspectivePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AnchorY">
      <summary>Gets or sets the Y anchor of the PerspectivePanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AngleOfTwist">
      <summary>Gets or sets the AngleOfTwist property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.DecayConstant">
      <summary>Gets or sets the DecayConstant property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ScaleFactorX">
      <summary>Gets or sets the ScaleFactorX property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ScaleFactorY">
      <summary>Gets or sets the ScaleFactorY property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ShiftX">
      <summary>Gets or sets the ShiftX property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ShiftY">
      <summary>Gets or sets the ShiftY property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ActiveChildIndexProperty">
      <summary>ActiveChildIndex Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AnchorXProperty">
      <summary>AnchorX dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AnchorYProperty">
      <summary>AnchorY dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.AngleOfTwistProperty">
      <summary>DecayConstant Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.DecayConstantProperty">
      <summary>DecayConstant Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.GoBackward">
      <summary>GoBackward routed command.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.GoForeward">
      <summary>GoForeward routed command.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ScaleFactorXProperty">
      <summary>ScaleFactorX Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ScaleFactorYProperty">
      <summary>ScaleFactorY Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ShiftXProperty">
      <summary>ShiftX Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.PerspectivePanel.ShiftYProperty">
      <summary>ShiftY Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange based on the given radius and Angle on each child</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.GetAngle(System.Windows.DependencyObject)">
      <summary>Gets Angle attached property. Angle property is ignored in layout if IsAutoArrange is True.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.GetPinPoint(System.Windows.DependencyObject)">
      <summary>Gets the PinPoint attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.GetRadius(System.Windows.DependencyObject)">
      <summary>Gets Radius attached property. Radius distance from the Center property value. Radius property is ignored in layout if IsAutoArrange is True.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measure the children with Positive infinity height and width.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.SetAngle(System.Windows.DependencyObject,System.Double)">
      <summary>Sets Angle attached property. Angle property is ignored in layout if IsAutoArrange is True.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.SetPinPoint(System.Windows.DependencyObject,System.Windows.Point)">
      <summary>Sets the PinPoint attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RadialCanvas.SetRadius(System.Windows.DependencyObject,System.Double)">
      <summary>Sets Radius attached property. Radius distance from the Center property value. Radius property is ignored in layout if IsAutoArrange is True.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RadialCanvas.Center">
      <summary>Gets or sets a relative center for the radial. Valid values are 0 to 1.0 where .5 means center of the panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RadialCanvas.IsAutoArrange">
      <summary>Gets or sets the IsAutoArrange property. This dependency property indicates if angles are automaticaly computed based on number of children.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RadialCanvas.AngleProperty">
      <summary>Defines the Angle attached property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RadialCanvas.CenterProperty">
      <summary>Defines Center dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RadialCanvas.IsAutoArrangeProperty">
      <summary>IsAutoArrange Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RadialCanvas.PinPointProperty">
      <summary>Identifies the PinPoint dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RandomPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange children in random locations and sizes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RandomPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measure the children with Positive infinity height and width.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RandomPanel.MaximumHeight">
      <summary>Gets or sets the MaximumHeight property. This dependency property indicates maximum height of a child.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RandomPanel.MaximumWidth">
      <summary>Gets or sets the MaximumWidth property. This dependency property indicates the maximum width of a child.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RandomPanel.MinimumHeight">
      <summary>Gets or sets the MinimumHeight property. This dependency property indicates th minimum height of a child.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RandomPanel.MinimumWidth">
      <summary>Gets or sets the MinimumWidth property. This dependency property indicates the minimum width of a child</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RandomPanel.Seed">
      <summary>A number used to seed the Random object that generates the random numbers for the panel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RandomPanel.MaximumHeightProperty">
      <summary>MaximumHeight Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RandomPanel.MaximumWidthProperty">
      <summary>MaximumWidth Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RandomPanel.MinimumHeightProperty">
      <summary>MinimumHeight Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RandomPanel.MinimumWidthProperty">
      <summary>MinimumWidth Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RandomPanel.SeedProperty">
      <summary>DependencyProperty for Seed</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arrange children based on their set relative position and size.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.GetLeft(System.Windows.DependencyObject)">
      <summary>Gets the Left attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.GetPinPoint(System.Windows.DependencyObject)">
      <summary>Gets the PinPoint attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.GetRelativeHeight(System.Windows.DependencyObject)">
      <summary>Gets the RelativeHeight attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.GetRelativeWidth(System.Windows.DependencyObject)">
      <summary>Gets the RelativeWidth attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.GetTop(System.Windows.DependencyObject)">
      <summary>Gets the Top attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measure the children with Positive infinity height and width.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.SetLeft(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the Left attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.SetPinPoint(System.Windows.DependencyObject,System.Windows.Point)">
      <summary>Sets the PinPoint attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.SetRelativeHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the RelativeHeight attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.SetRelativeWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the RelativeWidth attached dependency property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.SetTop(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the PinPoint attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.LeftProperty">
      <summary>Identifies the <strong>Left</strong> attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.PinPointProperty">
      <summary>Identifies the <strong>PinPoint</strong> attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.RelativeHeightProperty">
      <summary>Identifies the <strong>RelativeHeight</strong> attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.RelativeWidthProperty">
      <summary>Identifies the <strong>RelativeWidth</strong> attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RelativeCanvas.TopProperty">
      <summary>Identifies the <strong>Top</strong> attached dependency property</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RowDefinition.ActualHeight">
      <summary>Get the actual height of the row</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RowDefinition.Height">
      <summary>Gets or sets the Height property. This dependency property indicates the height of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RowDefinition.MaxHeight">
      <summary>Gets or sets the MaxHeight property. This dependency property indicates the maximum height for the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RowDefinition.MinHeight">
      <summary>Gets or sets the MinHeight property. This dependency property indicates the minimum height for the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.RowDefinition.Offset">
      <summary>Gets the offset of the row</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RowDefinition.HeightProperty">
      <summary>Height Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RowDefinition.MaxHeightProperty">
      <summary>MaxHeight Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.RowDefinition.MinHeightProperty">
      <summary>MinHeight Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackDefinition.SetScrollOffset(System.Double)">
      <summary>Provides a secure method for setting the ScrollOffset property. This dependency property indicates the scrolled offset of the corresponding stack.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackDefinition.OnLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Length property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackDefinition.OnMaxLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MaxLength property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackDefinition.OnMinLengthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MinLength property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollDown">
      <summary>Gets or sets the CanScrollDown property. This dependency property indicates that the LineDown and PageDown commands are available.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollLeft">
      <summary>Gets or sets the CanScrollLeft property. This dependency property indicates that the LineLeft and PageLeft commands are available.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollRight">
      <summary>Gets or sets the CanScrollRight property. This dependency property indicates that the LineRight and PageRight commands are available.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollUp">
      <summary>Gets or sets the CanScrollUp property. This dependency property indicates that the LineUp and PageUp commands are available.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.Length">
      <summary>Gets or sets the Length property. This dependency property indicates the size of a given stack within a StackedStackPanel. For a horizontally oriented
StackedStackPanel, this would be the width for a given stack. For a vertically oriented StackedStackPanel, this would be the height for a given stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.MaxLength">
      <summary>Gets or sets the MaxLength property. This dependency property indicates the maximum size of a given stack in a StackedStackPanel. For a horizontally oriented
StackedStackPanel, this would be the maximum stack width for a given stack. For a vertically oriented StackedStackPanel, this would be the maximum stack height
for a given stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.MinLength">
      <summary>Gets or sets the MinLength property. This dependency property indicates the minimum size of a given stack in a StackedStackPanel. For a horizontally oriented
StackedStackPanel, this would be the minimum stack width for a given stack. For a vertically oriented StackedStackPanel, this would be the minimum stack height
for a given stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackDefinition.ScrollOffset">
      <summary>Gets the ScrollOffset property. This dependency property indicates the scrolled offset of the corresponding stack.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollDownProperty">
      <summary>CanScrollDown Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollLeftProperty">
      <summary>CanScrollLeft Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollRightProperty">
      <summary>CanScrollRight Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.CanScrollUpProperty">
      <summary>CanScrollUp Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.LengthProperty">
      <summary>Length Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.LineDownCommand">
      <summary>The LineDown command executes the LineDown method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.LineLeftCommand">
      <summary>The LineLeft command executes the LineLeft method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.LineRightCommand">
      <summary>The LineRight command executes the LineRight method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.LineUpCommand">
      <summary>The LineUp command executes the LineUp method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.MaxLengthProperty">
      <summary>MaxLength Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.MinLengthProperty">
      <summary>MinLength Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.PageDownCommand">
      <summary>The PageDown command executes the PageDown method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.PageLeftCommand">
      <summary>The PageLeft command executes the PageLeft method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.PageRightCommand">
      <summary>The PageRight command executes the PageRight method on the target StackDefinition.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackDefinition.PageUpCommand">
      <summary>The PageUp command executes the PageUp method on the target StackDefinition.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.GetStack(System.Windows.DependencyObject)">
      <summary>Gets the Stack property. This dependency property indicates the index of the stack in which the element will be arranged.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.SetStack(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the Stack property. This dependency property indicates the index of the stack in which the element will be arranged.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.DefaultStackLength">
      <summary>Gets or sets the DefaultStackLength property. This dependency property indicates the default Length to use for stacks that do not specify an explicit length or
Auto. The default value is Auto.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.Orientation">
      <summary>Gets or sets the Orientation property. This dependency property indicates the direction in which children are stacked (vertically or horizontally).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.DefaultStackLengthProperty">
      <summary>DefaultStackLength Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.OrientationProperty">
      <summary>Orientation Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackedStackPanel.StackProperty">
      <summary>Stack Attached Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Checks whether or not this class can convert from a given type.</summary>
      <returns>
        <c>true</c> if thie converter can convert from the provided type, <c>false</c> otherwise.</returns>
      <param name="typeDescriptorContext">The ITypeDescriptorContext for this call.</param>
      <param name="sourceType">The Type being queried for support.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Checks whether or not this class can convert to a given type.</summary>
      <returns>
        <c>true</c> if this converter can convert to the provided type, <c>false</c> otherwise.</returns>
      <param name="typeDescriptorContext">The ITypeDescriptorContext for this call.</param>
      <param name="destinationType">The Type being queried for support.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert to a StackLength from the given object.</summary>
      <exception caption="" cref="T:System.ArgumentNullException">
            An ArgumentNullException is thrown if the example object is null.
            
            An ArgumentException is thrown if the example object is not null 
            and is not a valid type which can be converted to a StackLength.
            </exception>
      <returns>The StackLength instance which was constructed.</returns>
      <param name="typeDescriptorContext">The ITypeDescriptorContext for this call.</param>
      <param name="cultureInfo">The CultureInfo which is respected when converting.</param>
      <param name="source">The object to convert to a StackLength.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a StackLength instance to the given type.</summary>
      <exception caption="" cref="T:System.ArgumentNullException">
            An ArgumentNullException is thrown if the example object is null.
            
            An ArgumentException is thrown if the object is not null and is not a StackLength,
            or if the destinationType isn't one of the valid destination types.
            </exception>
      <returns>The object which was constructed.</returns>
      <param name="typeDescriptorContext">The ITypeDescriptorContext for this call.</param>
      <param name="cultureInfo">The CultureInfo which is respected when converting.</param>
      <param name="value">The StackLength to convert.</param>
      <param name="destinationType">The type to which to convert the StackLength instance.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the StackPanel's children using the same algorithm that is used by the native StackPanel class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.StackPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the StackPanel's children using the same algorithm that is used by the native StackPanel class</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.StackPanel.Orientation">
      <summary>Gets or sets the Orientation property. This dependency property indicates the direction in which children are stacked (vertically or horizontally).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.StackPanel.OrientationProperty">
      <summary>Orientation Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SetActiveLayout(Xceed.Wpf.Toolkit.Panels.AnimationPanel)">
      <summary>Provides a secure method for setting the ActiveLayout property. This dependency property indicates which animation panel is currently controlling layout for
the SwitchPanel.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SetActiveSwitchTemplate(System.Windows.DataTemplate)">
      <summary>Provides a secure method for setting the ActiveSwitchTemplate property. This dependency property indicates which switch template should be used by
SwitchPresenter descendants.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SetLayouts(System.Collections.ObjectModel.ObservableCollection{Xceed.Wpf.Toolkit.Panels.AnimationPanel})">
      <summary>Provides a secure method for setting the Layouts property. This dependency property contains a collection of SwitchablePanel objects that represent the
different layouts available within the SwitchPanel.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.OnActiveLayoutChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ActiveLayout property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.OnActiveLayoutIndexChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ActiveLayoutIndex property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.OnActiveSwitchTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ActiveSwitchTemplate property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.OnLayoutsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Layouts property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.OnSwitchTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SwitchTemplate property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.RaiseActiveLayoutChangedEvent">
      <summary>A helper method to raise the ActiveLayoutChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.RaiseSwitchAnimationBegunEvent">
      <summary>A helper method to raise the SwitchAnimationBegun event.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPanel.RaiseSwitchAnimationCompletedEvent">
      <summary>A helper method to raise the SwitchAnimationCompleted event.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveLayout">
      <summary>Gets the ActiveLayout property. This dependency property indicates which animation panel is currently controlling layout for the SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveLayoutIndex">
      <summary>Gets or sets the ActiveLayoutIndex property. This dependency property indicates the index of the current SwitchablePanel within the Layouts collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveSwitchTemplate">
      <summary>Gets the ActiveSwitchTemplate property. This dependency property indicates which switch template should be used by SwitchPresenter descendants.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.AreLayoutSwitchesAnimated">
      <summary>Gets or sets the AreLayoutSwitchesAnimated property. This dependency property indicates whether transitions between panels are animated.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.DefaultAnimationRate">
      <summary>Gets or sets the DefaultAnimationRate property. This dependency property indicates the duration or speed at which other animations will occur for panels within
the layouts collection that set their respective AnimationRate properties to AnimationRate.Default. This property can be used to set a single animation rate to
be used for EnterAnimationRate, ExitAnimationRate, LayoutAnimationRate, SwitchAnimationRate, and TemplateAnimationRate.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.DefaultAnimator">
      <summary>Gets or sets the DefaultAnimator property. This dependency property indicates the default animator that will be used by panels within the Layouts collection
that do not explicitly specify their own DefaultAnimator value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.EnterAnimationRate">
      <summary>Gets or sets the EnterAnimationRate property. This dependency property indicates the default animation rate that will be used by panels within the Layouts
collection that do not explicitly specify their own EnterAnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.EnterAnimator">
      <summary>Gets or sets the EnterAnimator property. This dependency property indicates the default animator that will be used by panels within the Layouts collection that
do not explicitly specify their own EnterAnimator value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ExitAnimationRate">
      <summary>Gets or sets the ExitAnimationRate property. This dependency property indicates the default animation rate that will be used by panels within the Layouts
collection that do not explicitly specify their own ExitAnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ExitAnimator">
      <summary>Gets or sets the ExitAnimator property. This dependency property indicates the default animator that will be used by panels within the Layouts collection that
do not explicitly specify their own ExitAnimator value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.LayoutAnimationRate">
      <summary>Gets or sets the LayoutAnimationRate property. This dependency property indicates the default animation rate that will be used by panels within the Layouts
collection that do not explicitly specify their own LayoutAnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.LayoutAnimator">
      <summary>Gets or sets the LayoutAnimator property. This dependency property indicates the default layout animator that will be used by panels within the Layouts
collection that do not explicitly specify their own LayoutAnimator value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.Layouts">
      <summary>Gets the Layouts property. This dependency property contains a collection of SwitchablePanel objects that represent the different layouts available within the
SwitchPanel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationRate">
      <summary>Gets or sets the SwitchAnimationRate property. This dependency property indicates the default animation rate that will be used by panels within the Layouts
collection that do not explicitly specify their own SwitchAnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimator">
      <summary>Gets or sets the SwitchAnimator property. This dependency property indicates the default switch animator that will be used by panels within the Layouts
collection that do not explicitly specify their own SwitchAnimator value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchTemplate">
      <summary>Gets or sets the SwitchTemplate property. This dependency property indicates the switch template that should be used by any SwitchPresenter descendants.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.TemplateAnimationRate">
      <summary>Gets or sets the TemplateAnimationRate property. This dependency property indicates the default animation rate that will be used by panels within the Layouts
collection that do not explicitly specify their own TemplateAnimationRate value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.SwitchPanel.TemplateAnimator">
      <summary>Gets or sets the TemplateAnimator property. This dependency property indicates the default switch animator that will be used by panels within the Layouts
collection that do not explicitly specify their own TemplateAnimator value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveLayoutChangedEvent">
      <summary>ActiveLayoutChanged Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveLayoutIndexProperty">
      <summary>ActiveLayoutIndex Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.AreLayoutSwitchesAnimatedProperty">
      <summary>AreLayoutSwitchesAnimated Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.DefaultAnimationRateProperty">
      <summary>DefaultAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.DefaultAnimatorProperty">
      <summary>DefaultAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.EnterAnimationRateProperty">
      <summary>EnterAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.EnterAnimatorProperty">
      <summary>EnterAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ExitAnimationRateProperty">
      <summary>ExitAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ExitAnimatorProperty">
      <summary>ExitAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.LayoutAnimationRateProperty">
      <summary>LayoutAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.LayoutAnimatorProperty">
      <summary>LayoutAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationBegunEvent">
      <summary>SwitchAnimationBegun Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationCompletedEvent">
      <summary>SwitchAnimationCompleted Routed Event</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationRateProperty">
      <summary>SwitchAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimatorProperty">
      <summary>SwitchAnimator Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchTemplateProperty">
      <summary>SwitchTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.TemplateAnimationRateProperty">
      <summary>TemplateAnimationRate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchPanel.TemplateAnimatorProperty">
      <summary>TemplateAnimator Dependency Property</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.SwitchPanel.ActiveLayoutChanged">
      <summary>Occurs when the current layout changes for the SwitchPanel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationBegun">
      <summary>Occurs when a layout switch animation begins for a SwitchPanel.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Panels.SwitchPanel.SwitchAnimationCompleted">
      <summary>Occurs when a layout switch animation completes for a SwitchPanel.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchPresenter.OnSwitchParentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SwitchParent property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchTemplate.GetID(System.Windows.DependencyObject)">
      <summary>Gets the ID property. This dependency property indicates the ID for a UIElement within a data template that is used as the SwitchTemplate of a SwitchPanel.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.SwitchTemplate.SetID(System.Windows.DependencyObject,System.String)">
      <summary>Sets the ID property. This dependency property indicates the ID for a UIElement within a data template that is used as the SwitchTemplate of a SwitchPanel.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.SwitchTemplate.IDProperty">
      <summary>ID Attached Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.WrapPanel.ArrangeChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Arranges the WrapPanel's children using the same algorithm that is used by the native WrapPanel class</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Panels.WrapPanel.MeasureChildrenOverride(System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>Measures the WrapPanel's children using the same algorithm that is used by the native WrapPanel class</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.WrapPanel.IsChildOrderReversed">
      <summary>Gets or sets the IsChildOrderReversed property. This dependency property indicates whether the children are laid out from left to right (or top to bottom for a
vertical orientation), as a normal stack panel is, or whether the stack is inverted and laid out from right to left (or bottom to top for a vertical
orientation).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.WrapPanel.ItemHeight">
      <summary>Gets or sets ItemWidth dependency property that specifies the height of all items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.WrapPanel.ItemWidth">
      <summary>Gets or sets ItemWidth dependency property that specifies the width of all items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Panels.WrapPanel.Orientation">
      <summary>Gets or sets Orientation dependency property that specifies the direction of item layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.WrapPanel.IsStackReversedProperty">
      <summary>IsChildOrderReversed Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.WrapPanel.ItemHeightProperty">
      <summary>ItemHeight dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.WrapPanel.ItemWidthProperty">
      <summary>ItemWidth dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Panels.WrapPanel.OrientationProperty">
      <summary>Orientation dependency property</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildEnteredEventHandler">
      <summary>Defines the handler for ChildEntered event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildEnteringEventHandler">
      <summary>Defines the handler for the ChildEntering event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildExitedEventHandler">
      <summary>Defines the handler for the ChildExited event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Panels.ChildExitingEventHandler">
      <summary>Defines handler for ChildExiting event</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.InputBase">
      <summary>Base class of controls that receive input.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventArgs">
      <summary>Provides information used in the ItemSelectionChanged routed
event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector">
      <summary>
        <span id="BugEvents">Represents a Selector class with the "Select All" option.</span>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.SelectAllSelectorItem">
      <summary>
        <span id="BugEvents">Represents the "Select All" item as a SelectorItem control.</span>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.Selector">
      <summary>Represents a selector class from which others are derived (CheckComboBox and CheckListBox).</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.SelectorItem">
      <summary>Represents an item in the Selector-based control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.ShapeBase">
      <summary>Base class of the Pie shape.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1">
      <summary>Base class of controls providing an up-down spinner.</summary>
      <typeparam name="T">The type for this class.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox">
      <summary>Base class of MaskedTextBox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.WindowContainer">
      <summary>Represents the container class for WindowControl-derived classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.WindowControl">
      <summary>Base class of the ChildWindow and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.MessageBox.html">MessageBox</see> classes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.DateTimePickerBase.IsOpen">
      <summary>Gets or sets a value indicating whether the <strong>DateTimePicker</strong> is open.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.DateTimePickerBase.ShowDropDownButton">
      <summary>Gets or sets a value indicating whether the drop-down button of the <strong>DateTimePicker</strong> should be displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.DateTimePickerBase.IsOpenProperty">
      <summary>Identifies the IsOpen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.DateTimePickerBase.ShowDropDownButtonProperty">
      <summary>Identifies the ShowDropDownButton dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.DateTimeUpDownBase`1.CurrentDateTimePart">
      <summary>
        <font size="2">Gets/Sets the current Date/Time part that will be changed when using the Up/Down buttons (or Up/Down keys). This value must match a valid
DateTime part on the DateTimeUpDownBase. This property will be modified when a new DateTimePart is selected via the mouse or keyboard. Default is
DateTimePart.Other.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.DateTimeUpDownBase`1.Step">
      <summary>
        <font size="2">Gets/sets the step to use when incrementing/decrementing a DateTimeUpDown or TimeSpanUpDown with Up/Down buttons or Up/Down keys. Default is
1.</font>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.InputBase.OnCultureInfoChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
      <summary>Called when CultureInfo changes.</summary>
      <param name="oldValue">The old CultureInfo value.</param>
      <param name="newValue">The new CultureInfo value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.InputBase.OnTextChanged(System.String,System.String)">
      <summary>Called when the text of the input control changes.</summary>
      <param name="oldValue">The old string value.</param>
      <param name="newValue">The new string value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.AllowTextInput">
      <summary>
        <para>Determines if the editable part of the control can be edited. The editable part does not include buttons or spinners, it is typically the text part.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.CultureInfo">
      <summary>Gets or sets the CultureInfo of the input control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.IsReadOnly">
      <summary>Gets or sets a value indicating whether the input control is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.Text">
      <summary>
        <para>Gets or sets the formated string representation of the value of the input control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.TextAlignment">
      <summary>Gets or sets the alignment of the text.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.Watermark">
      <summary>Gets or sets the watermark of the input control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.InputBase.WatermarkTemplate">
      <summary>Gets or sets the DataTemplate of the watermark.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.CultureInfoProperty">
      <summary>Identifies the CultureInfo dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.TextAlignmentProperty">
      <summary>Identifies the TextAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.TextProperty">
      <summary>Identifies the Text dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.WatermarkProperty">
      <summary>Identifies the Watermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.InputBase.WatermarkTemplateProperty">
      <summary>Identifies the WatermarkTemplate dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the ItemSelectionChangedEventArgs class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the ItemSelectionChangedEventArgs class.</span>
        </span>
      </param>
      <param name="source">An alternate source that will be reported when the event is handled. This pre-populates the Source property.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventArgs.IsSelected">
      <summary>Gets a value indicating whether the item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventArgs.Item">
      <summary>Gets the item that has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.#ctor">
      <summary>Initializes a new instance of the SelectAllSelector class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.SelectAll">
      <summary>Selects all the items.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.UnSelectAll">
      <summary>Unselects all the items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.IsSelectAllActive">
      <summary>
        <span id="BugEvents">Gets or sets if the "Select All" option is visible as a SelectorItem.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.SelectAllContent">
      <summary>
        <span id="BugEvents">Gets or sets the content of the "Select All" SelectorItem. Default is "Select All".</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.IsSelectAllActiveProperty">
      <summary>Identifies the IsSelectAllActive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.SelectAllSelector.SelectAllContentProperty">
      <summary>Identifies the SelectAllContent dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.SelectAllSelectorItem.#ctor">
      <summary>Initializes a new instance of the SelectAllSelectorItem class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.#ctor">
      <summary>Initializes a new instance of the Selector class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>
        <span>
          <span>The element that is used to display the given item.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.GetItemValue(System.Object)">
      <summary>Retrieves the value of the passed item.</summary>
      <returns>The value of <em>item</em>.</returns>
      <param name="item">The item whose value will be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <returns>
        <strong>true</strong> if the item is (or is eligible to be) its own container; false, otherwise.</returns>
      <param name="item">
        <span>
          <span>The item to check.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.OnItemSelectionChanged(Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventArgs)">
      <summary>Called when the IsSelected property of a SelectorItem has been
modified.</summary>
      <param name="args">An ItemSelectionChangedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the ItemsSource property changes.</summary>
      <param name="oldValue">Old value of the ItemsSource property.</param>
      <param name="newValue">New value of the ItemsSource property.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">Element used to display the specified item.</param>
      <param name="item">
        <span>
          <span>Specified item.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.ResolveItemByValue(System.String)">
      <summary>Retrieves the item in ItemsSource corresponding to the sub-string representing that item in SelectedValue.</summary>
      <returns>The item in ItemsSource corresponding to the sub-string representing that item in SelectedValue.</returns>
      <param name="value">The sub-string representation of an item in SelectedValue.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.Selector.OnSelectedValueChanged(System.String,System.String)">
      <summary>Called when SelectedValue changes.</summary>
      <param name="oldValue">The old string value of SelectedValue.</param>
      <param name="newValue">The new string value of SelectedValue.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.Command">
      <summary>Gets or sets the command to execute when an item is checked/unchecked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.Delimiter">
      <summary>Gets or sets the separator used by SelectedValue between the selected
items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedItem">
      <summary>Gets or sets the last checked or unchecked item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedItems">
      <summary>Gets the collection of checked items.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedItemsOverride">
      <summary>
        <para>Gets or sets a <span id="BugEvents">custom IList of selected items.</span></para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedMemberPath">
      <summary>Gets or sets a path to a value on the source object used to determine whether an item is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedValue">
      <summary>Gets or sets a string containing the selected items separated by the value of Delimiter (ex., "Item1, Item2, Item3").</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.Selector.ValueMemberPath">
      <summary>Gets or sets a path to a value on the source object representing the value to use.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.CommandProperty">
      <summary>Identifies the Command dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.DelimiterProperty">
      <summary>Identifies the Delimiter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.ItemSelectionChangedEvent">
      <summary>Identifies the ItemSelectionChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedEvent">
      <summary>Identifies the Selected routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedItemsOverrideProperty">
      <summary>Identifies the SelectedItemsOverride dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedMemberPathProperty">
      <summary>Identifies the SelectedMemberPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.SelectedValueProperty">
      <summary>Identifies the SelectedValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.UnSelectedEvent">
      <summary>Identifies the Unselected routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.Selector.ValueMemberPathProperty">
      <summary>Identifies the ValueMemberPath dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.Selector.ItemSelectionChanged">
      <summary>Raised when the item selection changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.SelectorItem.#ctor">
      <summary>Initializes a new instance of the Selector class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.SelectorItem.IsSelected">
      <summary>Gets or sets a value indicating whether the SelectorItem is selected.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.SelectorItem.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.SelectorItem.SelectedEvent">
      <summary>Identifies the Selected routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.SelectorItem.UnselectedEvent">
      <summary>Identifies the Unselected routed event.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ShapeBase.DefiningGeometry">
      <summary>Gets the geometry.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.CommitInput">
      <summary>Commits input made in the control.</summary>
      <returns>
        <strong>true</strong> if the input is successfully committed; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ConvertTextToValue(System.String)">
      <summary>Converts the formatted text to a value.</summary>
      <returns>The converted text.</returns>
      <param name="text">The formatted text.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ConvertValueToText">
      <summary>Converts the value to formatted text.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>Sets the focus to TextBox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnCultureInfoChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
      <summary>Called when the CultureInfo property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnDecrement">
      <summary>Called by OnSpin when the spin direction is SpinDirection.Decrease.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnIncrement">
      <summary>Called by OnSpin when the spin direction is SpinDirection.Increase.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnInitialized(System.EventArgs)">
      <summary>Called when the Initialized event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Called when the KeyDown event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnReadOnlyChanged(System.Boolean,System.Boolean)">
      <summary>Called when the ReadOnly property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnSpin(Xceed.Wpf.Toolkit.SpinEventArgs)">
      <summary>Called when Spinner.Spin is raised.</summary>
      <param name="e">Spin event information.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnTextChanged(System.String,System.String)">
      <summary>Called when when Text changes.</summary>
      <param name="oldValue">The old string value of Text.</param>
      <param name="newValue">The new string value of Text.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.SetValidSpinDirection">
      <summary>Sets the valid spin directions.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.SyncTextAndValueProperties">
      <summary>Synchronizes the Text and Value properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnCoerceValue(System.Object)">
      <summary>Called when the value is coerced.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.OnValueChanged(`0,`0)">
      <summary>Called when Value changes.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.SyncTextAndValueProperties(System.Boolean,System.String)">
      <summary>Synchronizes the Text and Value properties.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.AllowSpin">
      <summary>Gets or sets a value indicating whether increment/decrement operations via the keyboard, button spinners, or mouse wheel can be performed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ButtonSpinnerLocation">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 14px Verdana, Arial, Helvetica, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(251,251,251); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets/Sets the location of the Up/Down buttons (either on the left or on the right) of numericUpDown controls.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.DefaultValue">
      <summary>Gets or sets the default value of the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.MouseWheelActiveTrigger">
      <summary>
        <para>Gets or sets a value indicating when the mouse wheel event should affect the value.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ShowButtonSpinner">
      <summary>Gets or sets a value indicating whether the button spinners are visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.Spinner">
      <summary>Gets or sets the Spinner of this control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.TextBox">
      <summary>Gets or sets the control's TextBox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.UpdateValueOnEnterKey">
      <summary>Gets or sets a value indicating whether the synchronization between "Value" and "Text" should be done only on the Enter key press (and lost focus).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.Value">
      <summary>Gets or sets the value of the control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.AllowSpinProperty">
      <summary>Identifies the AllowSpin dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.DefaultValueProperty">
      <summary>Identifies the DefaultValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.MouseWheelActiveTriggerProperty">
      <summary>Identifies the MouseWheelActiveTrigger dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ShowButtonSpinnerProperty">
      <summary>Identifies the ShowButtonSpinner dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ValueChangedEvent">
      <summary>Identifies the ValueChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.InputValidationError">
      <summary>Raised when there is a validation error.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.Spinned">
      <summary>
        <font size="2">Raised when an Increment/Decrement action is initiated (Mouse click on ButtonSpinners, keyboard Up/Down keys pressed, mouse-wheel
activated).</font>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.UpDownBase`1.ValueChanged">
      <summary>Invoked when Value changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.#ctor">
      <summary>Initializes a new instance.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.BeepOnError">
      <summary>Gets or sets whether a beep sound will be played on error.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.FormatProvider">
      <summary>Gets or sets the format provider.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.HasParsingError">
      <summary>Gets whether the control has a parsing error.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.HasValidationError">
      <summary>Gets whether the control has a validation error.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.IsValueOutOfRange">
      <summary>Gets whether the control's value is out of range.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.MaxValue">
      <summary>Gets or sets the maximum value of the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.MinValue">
      <summary>Gets or sets the minimum value of the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.NullValue">
      <summary>Gets or sets the null value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.Value">
      <summary>Gets or sets the control's value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.ValueDataType">
      <summary>Gets or sets the Type of the value.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.BeepOnErrorProperty">
      <summary>Identifies the BeepOnError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.FormatProviderProperty">
      <summary>Identifies the FormatProvider dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.HasParsingErrorProperty">
      <summary>Identifies the HasParsingError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.IsValueOutOfRangeProperty">
      <summary>Identifies the IsValueOutOfRange dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.MaxValueProperty">
      <summary>Identifies the MaxValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.MinValueProperty">
      <summary>Identifies the MinValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.NullValueProperty">
      <summary>Identifies the NullValue dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.ValueDataTypeProperty">
      <summary>Identifies the ValueDataType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.QueryTextFromValue">
      <summary>Raised when an attempt is made to convert the specified value into its string representation.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.ValueRangeTextBox.QueryValueFromText">
      <summary>Raised when an attempt is made to extract a value from the specified text.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowContainer.#ctor">
      <summary>Initializes a new instance of the WindowContainer class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowContainer.MeasureOverride(System.Windows.Size)">
      <summary>Measures the size in layout required for child elements and determines a size for the WindowContainer.</summary>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
      <param name="constraint">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever
content is available.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowContainer.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Register or unregister to children events</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowContainer.OnModalBackgroundBrushChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
      <summary>Called when ModalBackgroundBrush has changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowContainer.ModalBackgroundBrush">
      <summary>Get or sets the background used when a modal window is shown.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.#ctor">
      <summary>Initializes a new instance of the WindowControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnApplyTemplate">
      <summary>Called when the template is applied.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnCoerceCloseButtonVisibility(System.Windows.Visibility)">
      <summary>Called when the CloseButtonVisibility value is being
re-evaluated, or coercion is specifically requested.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnCoerceResizeMode(System.Windows.ResizeMode)">
      <summary>Called when the ResizeMode value is being re-evaluated, or coercion
is specifically requested</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnCoerceWindowStyle(System.Windows.WindowStyle)">
      <summary>Called when the WindowStyle value is being re-evaluated, or
coercion is specifically requested</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnLeftPropertyChanged(System.Double,System.Double)">
      <summary>Called when the Left property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnTopPropertyChanged(System.Double,System.Double)">
      <summary>Called when the Top property changes</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Primitives.WindowControl.OnWindowStyleChanged(System.Windows.WindowStyle,System.Windows.WindowStyle)">
      <summary>Called when the WindowStyle property changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.Caption">
      <summary>Gets or sets the control's caption.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionFontSize">
      <summary>Gets or sets the font size of the WindowControl caption. Default is 15.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionForeground">
      <summary>Gets or sets the caption foreground.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionIcon">
      <summary>Gets or sets the caption icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionShadowBrush">
      <summary>Gets or sets the brush of the caption's shadow.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonStyle">
      <summary>Gets or sets the Close button's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonVisibility">
      <summary>Gets or sets the visibility of the Close button.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.IsActive">
      <summary>Gets or sets whether the control is active.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.IsMaximized">
      <summary>Gets or sets whether the control is maximized.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.Left">
      <summary>Gets or sets the left side of the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.MaximizeButtonStyle">
      <summary>Gets or sets the Maximize button's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.MinimizeButtonStyle">
      <summary>Gets or sets the Minimize button's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.ResizeMode">
      <summary>Gets or sets the resize mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.RestoreButtonStyle">
      <summary>Gets or sets the Restore button's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.Top">
      <summary>Gets or sets the top side of the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBackground">
      <summary>Gets or sets the window's background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBorderBrush">
      <summary>Gets or sets the window's border brush.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBorderThickness">
      <summary>Gets or sets the window's border thickness.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowInactiveBackground">
      <summary>Gets or sets the window's inactive background.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowOpacity">
      <summary>Gets or sets the window's opacity.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowStyle">
      <summary>Gets or sets the window's style.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowThickness">
      <summary>Gets or sets the window's thickness.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionForegroundProperty">
      <summary>Identifies the CaptionForeground property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionIconProperty">
      <summary>Identifies the CaptionIcon property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CaptionProperty">
      <summary>Identifies the Caption property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonClickedEvent">
      <summary>Identifies the CloseButtonClicked event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonStyleProperty">
      <summary>Identifies the CloseButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonVisibilityProperty">
      <summary>Identifies the CloseButtonVisibility dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.DefaultCloseButtonStyleKey">
      <summary>Identifies the DefaultCloseButtonStyle resource key.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.DefaultMaximizeButtonStyleKey">
      <summary>Identifies the DefaultMaximizeButtonStyle resource key.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.DefaultMinimizeButtonStyleKey">
      <summary>Identifies the DefaultMinimizeButtonStyle resource key.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.DefaultRestoreButtonStyleKey">
      <summary>Identifies the DefaultRestoreButtonStyle resource key.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderDragDeltaEvent">
      <summary>Identifies the HeaderDragDelta routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderIconClickedEvent">
      <summary>Identifies the HeaderIconClicked routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderIconDoubleClickedEvent">
      <summary>Identifies the HeaderIconDoubleClicked routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseLeftButtonClickedEvent">
      <summary>Identifies the HeaderMouseLeftButtonClicked
routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseLeftButtonDoubleClickedEvent">
      <summary>Identifies the HeaderMouseLeftButtonDoubleClicked routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseRightButtonClickedEvent">
      <summary>Identifies the HeaderMouseRightButtonClicked
routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.IsActiveProperty">
      <summary>Identifies the IsActive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.IsMaximizedProperty">
      <summary>Identifies the IsMaximized dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.LeftProperty">
      <summary>Identifies the Left dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.MaximizeButtonClickedEvent">
      <summary>Identifies the MaximizeButtonClicked routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.MaximizeButtonStyleProperty">
      <summary>Identifies the MaximizeButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.MinimizeButtonClickedEvent">
      <summary>Identifies the MinimizeButtonClicked routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.MinimizeButtonStyleProperty">
      <summary>Identifies the MinimizeButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.ResizeModeProperty">
      <summary>Identifies the ResizeMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.RestoreButtonStyleProperty">
      <summary>Identifies the RestoreButtonStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.TopProperty">
      <summary>Identifies the Top dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBackgroundProperty">
      <summary>Identifies the WindowBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBorderBrushProperty">
      <summary>Identifies the WindowBorderBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowBorderThicknessProperty">
      <summary>Identifies the WindowBorderThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowInactiveBackgroundProperty">
      <summary>Identifies the WindowInactiveBackground dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowOpacityProperty">
      <summary>Identifies the WindowOpacity dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowResizeThumbDragEvent">
      <summary>Identifies the WindowResizeThumbDrag routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowStyleProperty">
      <summary>Identifies the WindowStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowThicknessProperty">
      <summary>Identifies the WindowThickness dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.Activated">
      <summary>Raised when the property IsActive becomes True.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.CloseButtonClicked">
      <summary>Raised when the Close button is clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderDragDelta">
      <summary>Occurs as the mouse changes position when a header has logical focus and mouse capture.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderIconClicked">
      <summary>Raised when the header icon is clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderIconDoubleClicked">
      <summary>Raised when the header icon is double-clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseLeftButtonClicked">
      <summary>Raised when the header is clicked using the left mouse button.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseLeftButtonDoubleClicked">
      <summary>Raised when the header is double-clicked using the left mouse button.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.HeaderMouseRightButtonClicked">
      <summary>Raised when the header is clicked using the right mouse button.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.MaximizeButtonClicked">
      <summary>Raised when the Maximize button is clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.MinimizeButtonClicked">
      <summary>Raised when the Minimize button is clicked.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Primitives.WindowControl.WindowResizeThumbDrag">
      <summary>Raised when the window resize thumb is dragged.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Primitives.ItemSelectionChangedEventHandler">
      <summary>Represents the method that will handle the ItemSelectionChanged routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.CategoryGroupStyleSelector">
      <summary>
        <font size="2">This class will return the style to use for Category groups in the PropertyGrid. The possible returned styles are identified by the class
properties.</font>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem">
      <summary>Used when properties are provided using a list source of items (e.g., Properties or PropertiesSource).</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorBoundDefinition">
      <summary>Base class for various editor definitions of the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorByteUpDownDefinition">
      <summary>
        <para>Allows use of a byte up-down editor in the PropertyGrid.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorCheckBoxDefinition">
      <summary>Allows use of a checkbox editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorColorPickerDefinition">
      <summary>Allows use of a color picker editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorComboBoxDefinition">
      <summary>Allows use of a combobox editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorDateTimeUpDownDefinition">
      <summary>Allows use of a date-time up-down editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorDecimalUpDownDefinition">
      <summary>Allows use of a decimal up-down editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionBase">
      <summary>Base class of the "editor definitions."</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionCollection">
      <summary>Represents a collection of EditorDefinition instances.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorDoubleUpDownDefinition">
      <summary>Allows use of a double up-down editor in the PropertyGrid.

<para></para></summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorIntegerUpDownDefinition">
      <summary>Allows use of an integer up-down editor in the PropertyGrid.

<para></para></summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorLongUpDownDefinition">
      <summary>Allows use of a long up-down editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2">
      <summary>Base class of the numeric up-down definition classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorShortUpDownDefinition">
      <summary>Allows use of a short up-down editor in the PropertyGrid.

<para>See EditorDefinitionBase for details.</para></summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorSingleUpDownDefinition">
      <summary>Allows use of a single up-down editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorTemplateDefinition">
      <summary>Allows an editor definition to be specified.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorTextDefinition">
      <summary>Allows use of a text editor in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.EditorUpDownDefinitionBase`2">
      <summary>Base class of the up-down editor definition classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.IsPropertyBrowsableArgs">
      <summary>
        <font size="2">Provides informations related to the visibility of a propertyItem in a PropertyGrid.</font>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.IsPropertyExpandableArgs">
      <summary>Provides informations related to the expandable status of a propertyItem in a PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyArgs">
      <summary>A RoutedEventArgs with a PropertyDescriptor property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinition">
      <summary>Represents a property definition for use in an EditorDefinition.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionBase">
      <summary>Base class of PropertyDefinition.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionBaseCollection`1">
      <summary>Base class of the PropertyDefinitionCollection and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionCollection.html">EditorDefinitionCollection</see> classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionCollection">
      <summary>Represents a collection containing PropertyDefinitions instances.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid">
      <summary>
        <para>Represents a control that allows users to inspect and edit the properties of an object.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem">
      <summary>Represents a property in PropertyItemCollection.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase">
      <summary>Base class of CustomPropertyItem.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemCollection">
      <summary>Represents a collection of PropertyItem instances.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventArgs">
      <summary>Represents event data for the ClearPropertyItem and
<see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid~PreparePropertyItem_EV.html">PreparePropertyItem</see> events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemsControl">
      <summary>This Control is intended to be used in the template of the PropertyItemBase and PropertyGrid classes to contain the sub-children properties.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyValueChangedEventArgs">
      <summary>Provides information related to changes to property values.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.TargetPropertyType">
      <summary>This class is intended to provide the "Type" target for property definitions or editor definitions when using Property Element Syntax.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.CategoryDefinition.#ctor">
      <summary>Initializes a new instance of the <strong>CategoryDefinition</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryDefinition.DisplayOrder">
      <summary>Gets or sets a value representing the display order of the category.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryDefinition.IsBrowsable">
      <summary>Gets or sets a value indicating whether the category and its properties will be shown in the property grid. (NOTE: This is a PLUS feature only).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryDefinition.IsExpanded">
      <summary>Gets or sets if a category is expanded when loading the PropertyGrid with this category.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryDefinition.Name">
      <summary>Gets or sets the name of the category.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryGroupStyleSelector.ItemGroupStyle">
      <summary>
        <font size="2">Gets/Sets the style to use when the default Category ("Misc") doesn't exists or when there is more than one category.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CategoryGroupStyleSelector.SingleDefaultCategoryItemGroupStyle">
      <summary>
        <font size="2">Gets/Sets the style to use when only the default category ("Misc") exists.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.Category">
      <summary>Gets or sets a value representing the name of the category.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.CategoryOrder">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px &amp;quot;Segoe UI&amp;quot;, Verdana, Arial; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets a value representing the order in which the category containing this property will appear in the PropertyGrid relative to the other categories when the <strong>PropertyGrid</strong>
is set to <strong>Categorized</strong> mode.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.IsCategoryExpanded">
      <summary>Gets or sets a value indicating whether the category is expanded.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.PropertyOrder">
      <summary>
        <span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px &amp;quot;Segoe UI&amp;quot;, Verdana, Arial; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
Gets or sets a value representing the order in which this property will appear in its Category section relative to the other properties in that category when
the <strong>PropertyGrid</strong> is set to <strong>Categorized</strong> mode.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.Value">
      <summary>Gets or sets the an object that represents the value of the property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.CategoryProperty">
      <summary>Identifies the Category dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.PropertyOrderProperty">
      <summary>Identifies the PropertyOrder dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.CustomPropertyItem.ValueProperty">
      <summary>Identifies the Value dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.EditorBoundDefinition.Binding">
      <summary>Gets or sets the Binding that will be used to privide the value for the editor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.EditorColorPickerDefinition.ShowTabHeaders">
      <summary>Gets or sets a value indicating if the TabItems displaying the standard color palette and the color canvas, are visible in the popup.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorColorPickerDefinition.ShowTabHeadersProperty">
      <summary>Identifies the ShowTabHeaders dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionCollection.#ctor">
      <summary>Initializes a new instance of the EditorDefinitionCollection class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.UpdateValueOnEnterKey">
      <summary>Gets or sets a value indicating whether the synchronization between "Value" and "Text" will only be done on an Enter key press or a lostFocus.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.AutoSelectBehaviorProperty">
      <summary>Identifies the AutoSelectBehavior
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.ClipValueToMinMaxProperty">
      <summary>Identifies the ClipValueToMinMax
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.FormatStringProperty">
      <summary>Identifies the FormatString dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.IncrementProperty">
      <summary>Identifies the Increment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.MaximumProperty">
      <summary>Identifies the Maximum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.MinimumProperty">
      <summary>Identifies the Minimum dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.ParsingNumberStyleProperty">
      <summary>Identifies the ParsingNumberStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.EditorNumericUpDownDefinitionBase`2.UpdateValueOnEnterKeyProperty">
      <summary>Identifies the UpdateValueOnEnterKey dependency
property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.IsPropertyBrowsableArgs.IsBrowsable">
      <summary>
        <font size="2">Gets or sets if the PropertyItem will be visible or not.</font>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.IsPropertyExpandableArgs.IsExpandable">
      <summary>Gets or sets if the PropertyItem will be expandable or not.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyArgs.PropertyDescriptor">
      <summary>Gets the PropertyDescriptor of the PropertyItem to obtain informations in order to set the propertyItem as browsable or expandable.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinition.#ctor">
      <summary>Initializes a new instance of the PropertyDefinition class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionBase.PropertyDefinitions">
      <summary>Gets or sets the Collection of PropertyDefinition to specify which sub-PropertyItems should be shown in the PropertyGrid.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionCollection.#ctor">
      <summary>Initializes a new instance of the PropertyDefinitionCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.#ctor">
      <summary>Initializes a new instance of the PropertyGrid class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AddClearPropertyItemHandler(System.Windows.UIElement,Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventHandler)">
      <summary>Adds a handler for the ClearPropertyItem attached event</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AddPreparePropertyItemHandler(System.Windows.UIElement,Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventHandler)">
      <summary>Adds a handler for the PreparePropertyItem attached event.</summary>
      <param name="element">The element to attach the handler.</param>
      <param name="handler">The handler for the event.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CollapseAllCategories">
      <summary>Collapses all categories in the PropertyGrid.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CollapseAllProperties">
      <summary>Collapse all the PropertyItems and their sub-PropertyItems.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CollapseCategory(System.String)">
      <summary>Collapses the specified property in the PropertyGrid.</summary>
      <param name="groupName">A string representing the name of the category to collapse.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CollapseProperty(System.String)">
      <summary>Collapse the PropertyItem( or the sub-PropertyItem) with the specific propertyName.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CreateFilter(System.String)">
      <summary>Override this call to control the filter applied based on the text input.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ExpandAllCategories">
      <summary>Expands all categories in the PropertyGrid.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ExpandAllProperties">
      <summary>Expand all the PropertyItems and their sub-PropertyItems.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ExpandCategory(System.String)">
      <summary>Expands the specified property in the PropertyGrid.</summary>
      <param name="groupName">A string representing the name of the category to expand.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ExpandProperty(System.String)">
      <summary>Expand the PropertyItem( or the sub-PropertyItem) with the specific propertyName.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.GetCategories">
      <summary>Gets a list containing all the category names.</summary>
      <returns>A list containing all the category names.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.GetCollapsedCategories">
      <summary>Gets a list containing the names of the categories that are collapsed.</summary>
      <returns>A list containing the names of the categories that are collapsed.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.GetExpandedCategories">
      <summary>Gets a list containing the names of the categories that are expanded.</summary>
      <returns>A list containing the names of the categories that are expanded.</returns>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.GetScrollPosition">
      <summary>Returns a value that contains the vertical offset of the PropertyGrid's ScrollViewer.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsCategoryCollapsed(System.String)">
      <summary>Gets if the specified category is collapsed.</summary>
      <returns>
        <strong>true</strong> if the specified category is collapsed, otherwise <strong>false</strong>.</returns>
      <param name="categoryName">The name of the category.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsCategoryExpanded(System.String)">
      <summary>Gets if the specified category is expanded.</summary>
      <returns>
        <strong>true</strong> if the specified category is expanded, otherwise <strong>false</strong>.</returns>
      <param name="categoryName">The name of the category.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnEditorDefinitionsChanged">
      <summary>Called when EditorDefinitions changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Overridden to allow the control to respond to the Enter key.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the PropertyChanged event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnPropertyDefinitionsChanged">
      <summary>Called when PropertyDefinitions changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.RemoveClearPropertyItemHandler(System.Windows.UIElement,Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventHandler)">
      <summary>Removes a handler for the ClearPropertyItem attached event</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.RemovePreparePropertyItemHandler(System.Windows.UIElement,Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventHandler)">
      <summary>Removes a handler for the PreparePropertyItem attached event.</summary>
      <param name="element">The element to attach the handler.</param>
      <param name="handler">The handler for the event.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ScrollToBottom">
      <summary>Scrolls vertically to the end of the PropertyGrid's ScrollViewer.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ScrollToPosition(System.Double)">
      <summary>Scrolls the PropertyGrid's scrollViewer to the specified vertical offset position.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ScrollToTop">
      <summary>Scrolls vertically to the beginning of the PropertyGrid's ScrollViewer.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectNameChanged(System.String,System.String)">
      <summary>Called when SelectedObjectName changes.</summary>
      <param name="oldValue">The old string value of SelectedObjectName.</param>
      <param name="newValue">The new string value of SelectedObjectName.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.Update">
      <summary>Updates all property values in the PropertyGrid with the data from the SelectedObject or <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid~SelectedObjects.html">SelectedObjects</see>.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnEditorDefinitionsChanged(Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionCollection,Xceed.Wpf.Toolkit.PropertyGrid.EditorDefinitionCollection)">
      <summary>Called when EditorDefinitions changes.</summary>
      <param name="oldValue">The old EditorDefinitionCollection value.</param>
      <param name="newValue">The new EditorDefinitionCollection value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnFilterChanged(System.String,System.String)">
      <summary>Called when Filter changes.</summary>
      <param name="oldValue">The old string value of Filter.</param>
      <param name="newValue">The new string value of Filter.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnIsCategorizedChanged(System.Boolean,System.Boolean)">
      <summary>Called when IsCategorized changes.</summary>
      <param name="oldValue">The old bool value of IsCategorized.</param>
      <param name="newValue">The new bool value of IsCategorized.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnNameColumnWidthChanged(System.Double,System.Double)">
      <summary>Called when NameColumnWidth changes.</summary>
      <param name="oldValue">The old double value.</param>
      <param name="newValue">The new double value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnPropertyContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>Called when PropertyContainerStyle has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnPropertyDefinitionsChanged(Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionCollection,Xceed.Wpf.Toolkit.PropertyGrid.PropertyDefinitionCollection)">
      <summary>Called when PropertyDefinitions changes.</summary>
      <param name="oldValue">The old PropertyDefinitionCollection value.</param>
      <param name="newValue">The new PropertyDefinitionCollection value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnSelectedObjectChanged(System.Object,System.Object)">
      <summary>Called when SelectedObject changes.</summary>
      <param name="oldValue">The old value of SelectedObject.</param>
      <param name="newValue">The new value of SelectedObject.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnSelectedObjectTypeChanged(System.Type,System.Type)">
      <summary>Called when SelectedObjectType changes.</summary>
      <param name="oldValue">The old SelectedObjectType value.</param>
      <param name="newValue">The new SelectedObjectType value.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.OnSelectedPropertyItemChanged(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase,Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase)">
      <summary>Called when SelectedPropertyItem has changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AdvancedOptionsMenu">
      <summary>Gets or sets the contextual menu to use when the advanced menu button is clicked.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AutoGenerateProperties">
      <summary>Gets or sets a value indicating whether the PropertyGrid will generate all properties for a given object.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CategoryGroupDescription">
      <summary>
        <para>Gets or sets the GroupDescription to be applied on the source items in order to define the groups when the PropertyGrid is Categorized.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CategoryGroupHeaderTemplate">
      <summary>Gets or sets the DataTemplate to use to define the category headers when the propertyGrid is categorized.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.DefaultEditorDefinition">
      <summary>Gets or sets the default editor definition to use when the property value type is not supported.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.EditorDefinitions">
      <summary>
        <para>Gets or sets a collection of custom editors to use in place of the default editors.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.Filter">
      <summary>Gets or sets the filter used to filter the visible properties in the PropertyGrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.FilterWatermark">
      <summary>Gets or sets the watermark used in the filter field.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.HideInheritedProperties">
      <summary>
        <para>Gets or sets a value indicating if the inherited properties of the selected object will be hidden.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsCategorized">
      <summary>Gets or sets a value indicating whether the properties displayed in the PropertyGrid are categorized.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsExpandingNonPrimitiveTypes">
      <summary>Gets or sets if the non-primitive types properties will be expandables to edit their sub-items directly from the PropertyGrid. Default is false.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsMiscCategoryLabelHidden">
      <summary>Gets or sets a value indicating whether the "Misc" category expander should be hidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsReadOnly">
      <summary>Gets or sets a value indicating whether the property grid is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsScrollingToTopAfterRefresh">
      <summary>
        <span id="BugEvents">Gets or sets if the PropertyGrid's vertical scrollViewer will scroll to top following a refresh of the PropertyItems.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsVirtualizing">
      <summary>&lt;P&gt;Gets or sets if the PropertyGrid is using Virtualization.&lt;/P&gt;&lt;innovasys:widget type="Note Box" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="Content"&gt;Using Virtualization will load faster a SelectedObject with a large set of propertyItems, but the scrollbar thumb will
estimate its size and re-adjust upon scrolling.&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.NameColumnWidth">
      <summary>Gets or sets the width of the property name column.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.Properties">
      <summary>Gets the current collection of generated PropertyItem instances.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertiesSource">
      <summary>Gets or sets the items source for the properties of the PropertyGrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyContainerStyle">
      <summary>Gets or sets the style that will be applied to all PropertyItemBase instances displayed in the property grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyDefinitions">
      <summary>
        <para>Gets or sets the collection of PropertyDefinition instances.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyNameBinding">
      <summary>Gets or sets the Binding to be used on the property's underlying item to get the name of the property to display</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyNameLeftPadding">
      <summary>Gets or sets the left padding of each propertyItem name in the PropertyGrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyValueBinding">
      <summary>Gets or sets the Binding to be used on the property's underlying item to get the value of the property to display.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObject">
      <summary>Gets or sets the current object the PropertyGrid is inspecting,</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectName">
      <summary>Gets or sets the name of the SelectedObject.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjects">
      <summary>Gets the currently selected objects the PropertyGrid is inspecting,</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectsOverride">
      <summary>Gets or sets the list of selected objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectType">
      <summary>Gets or sets the Type of the SelectedObject.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectTypeName">
      <summary>Gets or sets the name of the Type of the SelectedObject.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedProperty">
      <summary>Gets or sets the selected property or returns null if the selection is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedPropertyItem">
      <summary>Gets the selected PropertyItem.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowAdvancedOptions">
      <summary>Gets or sets a value indicating whether the advanced options button next to the properties is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowDescriptionByTooltip">
      <summary>Gets/Sets if the Description of the PropertyItem will be displayed as a tooltip on the PART_Name of the PropertyItem. When ShowDescriptionByTooltip is True and
the DescriptionAttribute on the PropertyItem is not null and not empty, it will be displayed as a tooltip.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowHorizontalScrollBar">
      <summary>Gets or sets if the horizontal scroll bar will be visible in the PropertyGrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSearchBox">
      <summary>Gets or sets a value indicating whether the search box is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSortOptions">
      <summary>Gets or sets a value indicating whether the sort options are displayed (Categorized and Alphabetical).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSummary">
      <summary>Gets or sets a value indicating whether the summary pane is shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowTitle">
      <summary>Gets or sets a value indicating whether the PropertyGrid's title is displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AdvancedOptionsMenuProperty">
      <summary>Identifies the AdvancedOptionsMenu dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.AutoGeneratePropertiesProperty">
      <summary>Identifies the AutoGenerateProperties dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CategoryGroupDescriptionProperty">
      <summary>Identifies the CategoryGroupDescription dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.CategoryGroupHeaderTemplateProperty">
      <summary>Identifies the CategoryGroupHeaderTemplate
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.DefaultEditorDefinitionProperty">
      <summary>Identifies the DefaultEditorDefinition dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.EditorDefinitionsProperty">
      <summary>Identifies the EditorDefinitions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.FilterProperty">
      <summary>Identifies the Filter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.FilterWatermarkProperty">
      <summary>Identifies the FilterWatermark dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.HideInheritedPropertiesProperty">
      <summary>Identifies the HideInheritedProperties dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsCategorizedProperty">
      <summary>Identifies the IsCategorized dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsExpandingNonPrimitiveTypesProperty">
      <summary>Identifies the IsExpandingNonPrimitiveTypes
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsMiscCategoryLabelHiddenProperty">
      <summary>Identifies the IsMiscCategoryLabelHidden dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsScrollingToTopAfterRefreshProperty">
      <summary>Identifies the IsScrollingToTopAfterRefresh
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsVirtualizingProperty">
      <summary>Identifies the IsVirtualizing dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.NameColumnWidthProperty">
      <summary>Identifies the NameColumnWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PreparePropertyItemEvent">
      <summary>Identifies the PreparePropertyItem routed event..</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertiesSourceProperty">
      <summary>Identifies the PropertiesSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyContainerStyleProperty">
      <summary>Identifies the PropertyContainerStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyDefinitionsProperty">
      <summary>Identifies the PropertyDefinitions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyNameLeftPaddingProperty">
      <summary>Identifies the PropertyNameLeftPadding dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyValueChangedEvent">
      <summary>Identifies the PropertyValueChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectChangedEvent">
      <summary>Identifies the SelectedObjectChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectNameProperty">
      <summary>Identifies the SelectedObjectName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectProperty">
      <summary>Identifies the SelectedObject dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectsOverrideProperty">
      <summary>Identifies the SelectedObjectsOverride dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectTypeNameProperty">
      <summary>Identifies the SelectedObjectTypeName dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectTypeProperty">
      <summary>Identifies the SelectedObjectType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedPropertyItemChangedEvent">
      <summary>Identifies the SelectedPropertyItemChanged
routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedPropertyItemProperty">
      <summary>Identifies the SelectedPropertyItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedPropertyProperty">
      <summary>Identifies the SelectedProperty dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowAdvancedOptionsProperty">
      <summary>Identifies the ShowAdvancedOptions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowDescriptionByTooltipProperty">
      <summary>Identifies the ShowDescriptionByTooltip dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowHorizontalScrollBarProperty">
      <summary>Identifies the ShowHorizontalScrollBar dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowPreviewProperty">
      <summary>Identifies the ShowPreview dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSearchBoxProperty">
      <summary>Identifies the ShowSearchBox dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSortOptionsProperty">
      <summary>Identifies the ShowSortOptions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowSummaryProperty">
      <summary>Identifies the ShowSummary dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ShowTitleProperty">
      <summary>Identifies the ShowTitle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.UpdateTextBoxSourceOnEnterKeyProperty">
      <summary>Identifies the UpdateTextBoxSourceOnEnterKey
dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.ClearPropertyItem">
      <summary>Raised when an property item is about to be remove from the display in the PropertyGrid.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsPropertyBrowsable">
      <summary>
        <font size="2">Raised for each propertyItem of the PropertyGrid.SelectedObject when someone is registered to this event and want to set individually the
visibility of propertyItems in the PropertyGrid.</font>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.IsPropertyExpandable">
      <summary>Raised for each propertyItem of the PropertyGrid.SelectedObject when someone is registered to this event and want to set individually if propertyItems are
expandables in the PropertyGrid.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PreparePropertyItem">
      <summary>
        <para>Raised when a property item is about to be displayed, either from PropertyItem or PropertyGrid, depending on which one is being expanded.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertiesGenerated">
      <summary>Raised when all the properties of the PropertyGrid are generated.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyChanged">
      <summary>Raised when the value of a property has changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.PropertyValueChanged">
      <summary>Raised when a property's value changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectChanged">
      <summary>Raised when the selected object changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedObjectsOverrideChanged">
      <summary>Raised when the SelectedObjectsOverride property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid.SelectedPropertyItemChanged">
      <summary>Raised when SelectedProperty changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.Instance">
      <summary>Gets this PropertyItem's instance.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.IsInvalid">
      <summary>
        <span id="BugEvents">Gets if the PropertyItem is Invalid.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.IsReadOnly">
      <summary>Gets a value indicating whether the property is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.PropertyDescriptor">
      <summary>Gets or sets the property descriptor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.PropertyName">
      <summary>Gets the name of the property references by the <strong>PropertyItem</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.PropertyType">
      <summary>Gets or sets the type of the property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.IsReadOnlyProperty">
      <summary>Identifies the IsReadOnly dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.DefinitionKey">
      <summary>Get or set the definition key to be used in order to determine the editor used or editor definition for the value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.HighlightedText">
      <summary>Gets or sets the text part to highlight in the Property name of the PropertyItem.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.ParentElement">
      <summary>Gets the parent property grid element of this property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.AdvancedOptionsIconProperty">
      <summary>Identifies the AdvancedOptionsIcon dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.AdvancedOptionsTooltipProperty">
      <summary>Identifies the AdvancedOptionsTooltip dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.DefinitionKeyProperty">
      <summary>Identifies the DefinitionKey dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.DescriptionProperty">
      <summary>Identifies the Description dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.DisplayNameProperty">
      <summary>Identifies the DisplayName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.EditorProperty">
      <summary>Identifies the Editor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.HighlightedTextProperty">
      <summary>Identifies the HighlightedText dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.IsExpandableProperty">
      <summary>Identifies the IsExpandable dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.IsExpandedProperty">
      <summary>Identifies the IsExpanded dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemBase.WillRefreshPropertyGridProperty">
      <summary>Identifies the WillRefreshPropertyGrid dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemCollection.#ctor(System.Collections.ObjectModel.ObservableCollection{Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem})">
      <summary>Initializes a new instance of the PropertyItemCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemCollection.Filter(System.String)">
      <summary>Filters the collection.</summary>
      <param name="text">The filter text.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemCollection.GroupBy(System.String)">
      <summary>Groups the PropertyItem instances using the passed name.</summary>
      <param name="name">A string representing the name of the grouping scheme.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemCollection.SortBy(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Sort the PropertyItem instances using the passed name and sort direction.</summary>
      <param name="name">A name representing the sorting scheme.</param>
      <param name="sortDirection">A ListSortDirection representing the direction to use.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.PropertyValueChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,System.Object,System.Object)">
      <summary>Initializes a new instance of the PropertyValueChangedEventArgs class, using the specified routed event, the source of the changed value, the old value, and
the new value.</summary>
      <param name="routedEvent">The routed event.</param>
      <param name="source">The source of the changed value.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyValueChangedEventArgs.NewValue">
      <summary>Gets or sets the new value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.PropertyValueChangedEventArgs.OldValue">
      <summary>Gets or sets the old value.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.TrimmedTextBlock.HighlightedText">
      <summary>Gets or sets the text part to highlight.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.TrimmedTextBlock.HighlightedBrushProperty">
      <summary>Identifies the HighlightedBrush dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.TrimmedTextBlock.HighlightedTextProperty">
      <summary>Identifies the HighlightedText dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.PropertyGrid.TrimmedTextBlock.IsTextTrimmedProperty">
      <summary>Identifies the IsTextTrimmed dependency property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.IsPropertyBrowsableHandler">
      <summary>
        <font size="2">Represents the method that will handle the IsPropertyBrowsable event.</font>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyItemEventHandler">
      <summary>Represents the method that will handle the ClearPropertyItem and <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyGrid~PreparePropertyItem_EV.html">PreparePropertyItem</see> events.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.PropertyValueChangedEventHandler">
      <summary>Represents the method that will handle the PropertyValueChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.IItemsSource">
      <summary>
        <para>Provides an interface that is implemented by classes when a scenario calls for use of a collection of values represented by a ComboBox for a given
property.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute">
      <summary>
        <para>Represents an attribute that is set on a property to identify the order in which the decorated property's category appears in the PropertyGrid when the
latter is set to Categorized mode.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.DefinitionKeyAttribute">
      <summary>The DefinitionKeyAttribute can be assigned to properties of your selected object to define which EditorDefinition to use for the decorated property. As an
alternative to the Editor attribute, this allows you separate the UI-specific code from your business model code. It can also be used to specify a specific
default editor when a property type does not resolve to a valid editor (e.g., Object).</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.DependsOnAttribute">
      <summary>Takes a list of strings in parameter that represent the names of properties that affect the current property. It is placed over any properties of the
PropertyGrid's selectedObject.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ExpandableObjectAttribute">
      <summary>Represents an attribute that is set on a property to identify it as a complex, expandable property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.Item">
      <summary>Represents an item in ItemCollection.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemCollection">
      <summary>Represents a collection of Item instances.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemsSourceAttribute">
      <summary>Represents an attribute that is set on a property to identify the IItemsSource-derived class that will be used.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.NewItemTypesAttribute">
      <summary>This attribute can decorate the collection properties (i.e., IList) of your selected object in order to control the types that will be allowedto be
instantiated in the CollectionControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.PropertyOrderAttribute">
      <summary>
        <para>Represents an attribute that is set on a property to identify the order in which the decorated property will appear relative to the other properties.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the CategoryOrderAttribute class, specifying the order of the decorated property's category.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute.#ctor">
      <summary>Initializes a new instance of the CategoryOrderAttribute class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the CategoryOrderAttribute class, specifying the order of the decorated property's category.</para>
      </summary>
      <param name="categoryName">The name of the property's category.</param>
      <param name="order">The order of the property.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute.Category">
      <summary>Gets or sets the name of the property's category.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.CategoryOrderAttribute.Order">
      <summary>Gets or sets a value representing the category's relative order.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ExpandableObjectAttribute.#ctor">
      <summary>Initializes a new instance of the ExpandableObjectAttribute class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.Item.#ctor">
      <summary>Initializes a new instance of the Item class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.Item.DisplayName">
      <summary>Gets or sets the display name of the item.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.Item.Value">
      <summary>Gets or sets the value of the item.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemCollection.#ctor">
      <summary>Initializes a new instance of the ItemCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemCollection.Add">
      <summary>Adds an object to the ItemCollection.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemCollection.Add(System.Object)">
      <summary>Adds an object to the ItemCollection.</summary>
      <param name="value">The value to add.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemCollection.Add(System.Object,System.String)">
      <summary>Adds an object to the ItemCollection, specifying it display name.</summary>
      <param name="value">The value to add.</param>
      <param name="displayName">The display name of the item to use.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemsSourceAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the ItemsSourceAttribute class using the specified Type.</summary>
      <param name="type">The Type to use.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemsSourceAttribute.Type">
      <summary>Gets or sets the type to use.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.PropertyOrderAttribute.#ctor">
      <summary>Initializes a new instance of the PropertyOrderAttribute class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Attributes.PropertyOrderAttribute.Order">
      <summary>Gets or sets the order of the property.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Commands.PropertyGridCommands">
      <summary>Represents commands related to PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Commands.PropertyItemCommands">
      <summary>Represents commands related to PropertyItem.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Commands.PropertyGridCommands.#ctor">
      <summary>Initializes a new instance of the PropertyGridCommands class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Commands.PropertyGridCommands.ClearFilter">
      <summary>Gets the ClearFilter routed command.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Commands.PropertyItemCommands.ResetValue">
      <summary>Gets the ResetValue routed command.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Converters.CommonPropertyConverter">
      <summary>Ensures that the same value is assigned to a common property shared by each selected object and displays, in the PropertyGrid, whether the property is
identical for each of those objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Converters.EditorTimeSpanConverter">
      <summary>Converts a TimeSpan value to a DateTime value.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Converters.ExpandableObjectMarginConverter">
      <summary>Converts the level of a given child in an expandable object to a Thickness struct to accomodate that child.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Converters.ExpandableObjectMarginConverter.#ctor">
      <summary>Initializes a new instance of the ExpandableObjectMarginConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Converters.ExpandableObjectMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.</summary>
      <returns>The converted value.</returns>
      <param name="value">The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source (a child
level).</span></param>
      <param name="targetType">The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ITypeEditor">
      <summary>Provides an interface that is implemented by TypeEditor and custom editors classes/controls.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ITypeEditor.ResolveEditor(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the editor of the passed PropertyItem.</summary>
      <returns>A FrameworkElement representing the returned editor.</returns>
      <param name="propertyItem">The PropertyItem whose editor will be resolved.</param>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ByteUpDownEditor">
      <summary>Represents the built-in ByteUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CheckBoxEditor">
      <summary>Represents the built-in CheckBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CollectionEditor">
      <summary>Represents the built-in Collection editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ColorEditor">
      <summary>Represents the built-in <strong>ColorPicker</strong> editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ComboBoxEditor">
      <summary>Represents the built-in ComboBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DateTimeUpDownEditor">
      <summary>Represents the built-in DateTimeUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DecimalUpDownEditor">
      <summary>Represents the built-in DecimalUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DoubleUpDownEditor">
      <summary>Represents the built-in DoubleUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.EnumComboBoxEditor">
      <summary>Represents the built-in EnumComboBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.FileEditor">
      <summary>Represents the built-in <strong>FilePicker</strong> editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.FontComboBoxEditor">
      <summary>Represents the built-in FontComboBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.IntegerUpDownEditor">
      <summary>Represents the built-in IntegerUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ItemsSourceAttributeEditor">
      <summary>Represents the built-in ItemsSourceAttribute editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.LongUpDownEditor">
      <summary>Represents the built-in LongUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.MaskedTextBoxEditor">
      <summary>Represents the built-in MaskedTextBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.NumericUpDownEditor`2">
      <summary>Represents a base class for numeric up/down editors.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PrimitiveTypeCollectionEditor">
      <summary>Represents the built-in PrimitiveTypeCollection editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorByteUpDown">
      <summary>Represents the built-in ByteUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorCheckBox">
      <summary>Represents the built-in CheckBox editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorCollectionControl">
      <summary>Represents the built-in CollectionControl editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorColorPicker">
      <summary>Represents the built-in ColorPicker editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorComboBox">
      <summary>Represents the built-in ComboBox editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorDateTimeUpDown">
      <summary>Represents the built-in DateTimeUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorDecimalUpDown">
      <summary>Represents the built-in DecimalUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorDoubleUpDown">
      <summary>Represents the built-in DoubleUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorFilePicker">
      <summary>Represents the built-in FilePicker editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorIntegerUpDown">
      <summary>Represents the built-in IntegerUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorLongUpDown">
      <summary>Represents the built-in LongUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorMaskedTextBox">
      <summary>Represents the built-in MaskedTextBox editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorPrimitiveTypeCollectionControl">
      <summary>Represents the built-in PrimitiveTypeCollectionControl editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorSByteUpDown">
      <summary>Represents the built-in SByteUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorShortUpDown">
      <summary>Represents the built-in ShortUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorSingleUpDown">
      <summary>Represents the built-in SingleUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorTextBlock">
      <summary>Represents the built-in TextBlock editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorTextBox">
      <summary>Represents the built-in TextBox editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorTimeSpanUpDown">
      <summary>Represents the built-in TimeSpanUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorUIntegerUpDown">
      <summary>Represents the built-in UIntegerUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorULongUpDown">
      <summary>Represents the built-in ULongUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PropertyGridEditorUShortUpDown">
      <summary>Represents the built-in UShortUpDown editor used in the PropertyGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ShortUpDownEditor">
      <summary>Represents the built-in ShortUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.SingleUpDownEditor">
      <summary>Represents the built-in SingleUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.SourceComboBoxEditor">
      <summary>Represents the built-in SourceComboBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBlockEditor">
      <summary>Represents the built-in TextBlock editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBoxEditor">
      <summary>Represents the built-in TextBox editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TimeSpanUpDownEditor">
      <summary>Represents the built-in TimeSpanUpDown editor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1">
      <summary>
        <para>Represents a generic type definition of the base editor class of the built-in PropertyGrid editors.</para>
      </summary>
      <typeparam name="T">The type of element the editor is capable of editing..</typeparam>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.PropertyGrid.Editors.UpDownEditor`2">
      <summary>Represents a base class for up/down editors.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CheckBoxEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CheckBoxEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CheckBoxEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.CollectionEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ColorEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ColorEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ColorEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ComboBoxEditor.CreateItemsSource(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>
        <span class="st">Creates a collection used to generate a list for the content of the editor using the PropertyType of the passed <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.html">PropertyItem</see>.</span>
      </summary>
      <returns>The created list.</returns>
      <param name="propertyItem">The PropertyItem whose PropertyType will be used to determine the list that is created.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ComboBoxEditor.ResolveValueBinding(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the binding of the value property of the passed PropertyItem. The
PropertyItem whose value property binding will be resolved.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ComboBoxEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DateTimeUpDownEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DateTimeUpDownEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DecimalUpDownEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DecimalUpDownEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DoubleUpDownEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.DoubleUpDownEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.EnumComboBoxEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.EnumComboBoxEditor.CreateItemsSource(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>
        <span class="st">Creates a collection used to generate a list for the content of the editor using the PropertyType of the passed <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.html">PropertyItem</see>.</span>
      </summary>
      <returns>The created list.</returns>
      <param name="propertyItem">The PropertyItem whose PropertyType will be used to determine the list that is created.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.FontComboBoxEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.FontComboBoxEditor.CreateItemsSource(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>
        <span class="st">Creates a collection used to generate a list for the content of the editor using the PropertyType of the passed <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem.html">PropertyItem</see>.</span>
      </summary>
      <returns>The created list.</returns>
      <param name="propertyItem">The PropertyItem whose PropertyType will be used to determine the list that is created.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.IntegerUpDownEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.IntegerUpDownEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ItemsSourceAttributeEditor.#ctor(Xceed.Wpf.Toolkit.PropertyGrid.Attributes.ItemsSourceAttribute)">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ItemsSourceAttributeEditor.ResolveValueBinding(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the binding of the value property of the passed PropertyItem.</summary>
      <param name="propertyItem">The PropertyItem whose value property binding will be resolved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ItemsSourceAttributeEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.ItemsSourceAttributeEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PrimitiveTypeCollectionEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PrimitiveTypeCollectionEditor.ResolveValueBinding(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the binding of the value property of the passed PropertyItem.</summary>
      <param name="propertyItem">The PropertyItem whose value property binding will be resolved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PrimitiveTypeCollectionEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.PrimitiveTypeCollectionEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBlockEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBlockEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBlockEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBoxEditor.#ctor">
      <summary>Initializes a new instance of the CheckBoxEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBoxEditor.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TextBoxEditor.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.CreateValueConverter">
      <summary>Creates a value converter for the TypeEditor.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.ResolveEditor(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the editor of the passed PropertyItem.</summary>
      <returns>
        <para>A FrameworkElement representing the returned editor.</para>
      </returns>
      <param name="propertyItem">The PropertyItem whose editor will be resolved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.ResolveValueBinding(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Resolves the binding of the value property of the passed PropertyItem.</summary>
      <param name="propertyItem">The PropertyItem whose value property binding will be resolved.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.SetControlProperties(Xceed.Wpf.Toolkit.PropertyGrid.PropertyItem)">
      <summary>Sets the properties of the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.SetValueDependencyProperty">
      <summary>Sets the value dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.Editor">
      <summary>Gets or sets the editor of the TypeEditor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.PropertyGrid.Editors.TypeEditor`1.ValueProperty">
      <summary>Gets or sets the value property of the TypeEditor.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Themes.ResourceKeys">
      <summary>Represents the resource keys of the toolkit.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonDisabledOuterBorderKey">
      <summary>Key that references a disabled button's outer border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonFocusedBackgroundKey">
      <summary>Key that references a focused button's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonFocusedInnerBorderKey">
      <summary>Key that references a focused button's inner border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonFocusedOuterBorderKey">
      <summary>Key that references a focused button's outer border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonInnerBorderDisabledKey">
      <summary>Key that references a disabled button's inner border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonMouseOverBackgroundKey">
      <summary>Key that references a moused-over button's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonMouseOverInnerBorderKey">
      <summary>Key that references a moused-over button's inner border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonMouseOverOuterBorderKey">
      <summary>Key that references a moused-over button's outer border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonNormalBackgroundKey">
      <summary>Key that references a normal button's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonNormalInnerBorderKey">
      <summary>Key that references a normal button's inner border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonNormalOuterBorderKey">
      <summary>Key that references a normal button's outer border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonPressedBackgroundKey">
      <summary>Key that references a pressed button's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonPressedInnerBorderKey">
      <summary>Key that references a pressed button's inner border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ButtonPressedOuterBorderKey">
      <summary>Key that references a pressed button's outer border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlDisabledBackgroundKey">
      <summary>Key that references a disabled control's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlFocusedBorderKey">
      <summary>Key that references a focused control's border brush</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlMouseOverBorderKey">
      <summary>Key that references a moused-over control's border brush</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlNormalBackgroundKey">
      <summary>Key that references a normal control's background brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlNormalBorderKey">
      <summary>Key that references a normal control's border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.ControlSelectedBorderKey">
      <summary>Key that references a selected control's border brush.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.GlyphDisabledForegroundKey">
      <summary>Key that references a disabled glyph's foreground.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.GlyphNormalForegroundKey">
      <summary>Key that references a normal glyph's foreground.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.SpinButtonCornerRadiusKey">
      <summary>Key that references a spin button's corner radius.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Themes.ResourceKeys.SpinnerButtonStyleKey">
      <summary>Key that references a spinner button's style.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind">
      <summary>Identifies how content is positioned within a Zoombox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Absolute">
      <summary>Content is positioned absolutely according to the Position and Scale properties of the ZoomboxView.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Fit">
      <summary>Content is scaled to fit within the bounds of the Zoombox and positioned according to the HorizontalContentAlignment and VerticalContentAlignment properties of
the Zoombox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Fill">
      <summary>Content is scaled to fill the bounds of the Zoombox and positioned according to the HorizontalContentAlignment and VerticalContentAlignment properties of the
Zoombox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Center">
      <summary>Content is centered within the Zoombox. The scale of the content is not changed.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Empty">
      <summary>Content is not altered in any way.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewKind.Region">
      <summary>Content is scaled and positioned to view a particular rectangular region identified by the Region property of the ZoomboxView. The region is positioned
according to the HorizontalContentAlignment and VerticalContentAlignment properties of the Zoombox.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStackMode">
      <summary>Identitifes the way the ViewStack of a Zoombox control is maintained.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStackMode.Auto">
      <summary>ViewStack is auto-generated based on user interaction. Each view selected by the user at runtime is added to the stack. Views may also be added and/or altered
programmatically.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStackMode.Default">
      <summary>Zoombox control will select either Auto or Manual at runtime based on the value of the ViewStackSource property. If ViewStackSource is null, an Auto stack will
be maintained. If ViewStackSource is not null, a Manual stack will be used and the views within the view stack will be generated based on the items in the
ViewStackSource collection.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStackMode.Disabled">
      <summary>ViewStack is not maintained at all for the Zoombox. In this case, the ViewStack property of the Zoombox will return null and an attempt to add views within
markup will result in an exception stating that the ViewStack property is readonly.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStackMode.Manual">
      <summary>ViewStack is supplied manually at design time or programmatically at runtime and does not change based on user interaction.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.Zoombox">
      <summary>Defines an area with zoom and pan functionality for its contents.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxCursors">
      <summary>Sets zoom cursors for Zoombox controls.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView">
      <summary>Represents a view state (scale and position) of a Zoombox control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs">
      <summary>Provides event arguments for a view changed event in a Zoombox control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewConverter">
      <summary>Provides the ability to convert a number (as a scale), a point (as a position), or a rectangle into a Zoombox view.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewException">
      <summary>The exception that is thrown when an invalid attempt is made to set the current view in a Zoombox control.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay">
      <summary>Represents the viewfinder used by Zoombox controls.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack">
      <summary>Represents a stack of views for a Zoombox control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.#ctor">
      <summary>Initializes a new instance of the Zoombox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.GetViewFinderVisibility(System.Windows.DependencyObject)">
      <summary>Gets the ViewFinderVisibility attached dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.MeasureOverride(System.Windows.Size)">
      <summary>Overridden to measure the control and its content. We pass an infinite size when measuring the child to allow it to be whatever size it wants.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnApplyTemplate">
      <summary>Overridden to give us an opportunity to initialize the control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnContentChanged(System.Object,System.Object)">
      <summary>Overridden to validate that the Content property is a UIElement and to store a reference for easy access. The VisualBrush of the view finder display panel is
also updated when the content changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Called when the control gets keyboard focus .</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnInitialized(System.EventArgs)">
      <summary>Called when the Zoombox is initialised.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Overridden to allow the control to respond to keyboard events. These are used for navigation and panning.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Overridden to allow the control to respond to keyboard events. These are used for navigation and panning.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse click events for the Back and Forward mouse buttons. These are used for navigation through the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Overridden to allow the control to respond to keyboard events. These are used for navigation and panning.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Overridden to allow the control to respond to keyboard events. These are used for navigation and panning.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse events for the left mouse button. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse events for the left mouse button. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Overridden to allow the control to respond to mouse move events. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Overridden to allow the control to respond to mouse wheel events. These are used for zooming.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Overridden to allow the control to respond to keyboard events. These are used for navigation and panning.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse click events for the Back and Forward mouse buttons. These are used for navigation through the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse events for the left mouse button. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Overridden to allow the control to respond to mouse events for the left mouse button. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Overridden to allow the control to respond to mouse move events. These are used for selecting a zoom region and for dragging (panning).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Overridden to allow the control to respond to mouse wheel events. These are used for zooming.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Called to render the zoombox to the screen.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.SetViewFinderVisibility(System.Windows.DependencyObject,System.Windows.Visibility)">
      <summary>Sets the ViewFinderVisibility attached dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Zoom">
      <summary>Scales the content by a given percentage relative to the point identified by the ZoomOrigin property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo">
      <summary>Scales the content to a specific scale value relative to the ZoomOrigin.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CenterContent">
      <summary>Centers the content within the Zoombox control without changing its scale.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.FillToBounds">
      <summary>Scales the content to completely fill the bounds of the Zoombox control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.FitToBounds">
      <summary>Scales the content to fit within the bounds of the Zoombox control.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.GoBack">
      <summary>Navigates to the previous view on the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.GoForward">
      <summary>Navigates to the next view on the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.GoHome">
      <summary>Navigates to the first view on the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.RefocusView">
      <summary>Refocuses the view currently selected within the view stack (the view identified by the ViewStackIndex property).</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Zoom(System.Double)">
      <summary>Scales the content by a given percentage relative to the point identified by the ZoomOrigin property.</summary>
      <param name="percentage">The percentage amount by which to scale the content. A positive percentage value will cause the content to scale up (zoom in) and a negative percentage value
will cause the content to scale down (zoom out). A value of -20.0, for example, will cause the content to scale down (zoom out) 20%.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Zoom(System.Double,System.Windows.Point)">
      <summary>Scales the content by a given percentage relative to a supplied point.</summary>
      <param name="percentage">The percentage amount by which to scale the content. A positive percentage value will cause the content to scale up (zoom in) and a negative percentage value
will cause the content to scale down (zoom out). A value of -20.0, for example, will cause the content to scale down (zoom out) 20%.</param>
      <param name="relativeTo">The point that will serve as the anchor for the zoom operation. It will remain stationary as the content scales around it. The supplied point must be specified
in the coordinate space of the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo(System.Windows.Point)">
      <summary>Pans the content to the given position without changing its scale.</summary>
      <param name="position">The desired top-left point of the content. This position is expressed in the coordinate space of the Zoombox control, not the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo(System.Windows.Rect)">
      <summary>Zooms the content to a given region.</summary>
      <param name="region">The desired rectangular region. This Rect is specified in the coordinate space of the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo(System.Double)">
      <summary>Zooms the content to the given scale value relative to the point identified by the ZoomOrigin property.</summary>
      <param name="scale">The scale factor for the content. A value of 1 represents the actual content size. A value greater than 1 will cause the content to zoom in (scale up) and a
value less than 1 will cause it to zoom out (scale down).</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo(System.Double,System.Windows.Point)">
      <summary>Zooms the content to a specific scale value relative to the given point.</summary>
      <param name="scale">The scale factor for the content. A value of 1 represents the actual content size. A value greater than 1 will cause the content to zoom in (scale up) and a
value less than 1 will cause it to zoom out (scale down).</param>
      <param name="relativeTo">The point that will serve as the anchor for the zoom operation. It will remain stationary as the content scales around it. The supplied point must be specified
in the coordinate space of the content.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomTo(Xceed.Wpf.Toolkit.Zoombox.ZoomboxView)">
      <summary>Zooms the content to a specific view.</summary>
      <param name="view">Identifies the view that will be focused.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationAccelerationRatio">
      <summary>Gets or sets the acceleration ratio used for scale and pan animations.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationDecelerationRatio">
      <summary>Gets or sets the deceleration ratio used for scale and pan animations.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationDuration">
      <summary>Gets or sets the duration used for scale and pan animations.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreDragModifiersActive">
      <summary>Gets whether the keys in the DragModifiers collection are currently pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreRelativeZoomModifiersActive">
      <summary>Gets whether the keys in the RelativeZoomModifiers collection are currently pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreZoomModifiersActive">
      <summary>Gets whether the keys in the ZoomModifiers collection are currently pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreZoomToSelectionModifiersActive">
      <summary>Gets whether the keys in the ZoomToSelectionModifiers collection are currently pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AutoWrapContentWithViewbox">
      <summary>Gets or sets whether the content of the Zoombox is wrapped in a Viewbox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentView">
      <summary>Gets the current view for the Zoombox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentViewIndex">
      <summary>Gets the index of the current view (see CurrentView) within the Zoombox
control's view stack (see the <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Zoombox.Zoombox~ViewStack.html">ViewStack</see>).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.DragModifiers">
      <summary>Gets or sets keys that must be pressed to pan the content by dragging it.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.DragOnPreview">
      <summary>Gets or sets whether the Zoombox responds to tunneled mouse events to pan the content via a mouse drag.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.EffectiveViewStackMode">
      <summary>Gets the mode that is currently in effect for the view stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.HasBackStack">
      <summary>Gets whether there are views on the back side of the view stack (see ViewStack).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.HasForwardStack">
      <summary>Gets whether there are views on the forward side of the view stack (see ViewStack).</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsAnimated">
      <summary>Gets or sets whether transitions between views (scale and pan operations) are animated.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsDraggingContent">
      <summary>Gets whether the content is currently being panned via a drag operation.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsSelectingRegion">
      <summary>Gets whether a zoom region is currently being selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsUsingScrollBars">
      <summary>Gets or sets a boolean value that specifies whether the Zoombox's scrollbars are enabled to move the content of the Zoombox when it is zoomed.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.KeepContentInBounds">
      <summary>Gets or sets if we should keep the content in bounds.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.MaxScale">
      <summary>Gets or sets the maximum scale factor (or zoom level) that can be applied to the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.MinScale">
      <summary>Gets or sets the minimum scale factor (or zoom level) that can be applied to the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.NavigateOnPreview">
      <summary>Gets or sets whether the Zoombox responds to tunneled mouse events (PreviewMouseDown) to navigate through the view stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanDistance">
      <summary>Gets or sets how many pixels the content will pan using the PanLeft, <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Zoombox.Zoombox~PanRight.html">PanUp</see>, <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Zoombox.Zoombox~PanRight.html">PanRight</see>, or <see cref="Xceed.Wpf.Toolkit~Xceed.Wpf.Toolkit.Zoombox.Zoombox~PanDown.html">PanDown</see> Zoombox commands.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Position">
      <summary>Gets or sets the top-left point of the content within the Zoombox control.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.RelativeZoomModifiers">
      <summary>Gets or sets keys that must be pressed to zoom the content relative to the current mouse position using the mouse wheel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Scale">
      <summary>Gets or sets the scale factor (or zoom level) for the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewFinder">
      <summary>Gets or sets a reference to the view finder element within the visual tree of the Zoombox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Viewport">
      <summary>Gets the portion of the content that is visible in the Zoombox. The viewport is expressed in the coordinate space of the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStack">
      <summary>Gets the view stack for the Zoombox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackCount">
      <summary>Gets the number of views in the view stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackIndex">
      <summary>Gets or sets the index of the selected view within the view stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackMode">
      <summary>Gets or sets the mode for the view stack.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackSource">
      <summary>Gets or sets an IEnumerable value representing a collection used to generate a view stack for the Zoombox.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomModifiers">
      <summary>Gets or sets keys that must be pressed to zoom the content relative to its ZoomOrigin using the mouse wheel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOn">
      <summary>Gets or sets what the zoombox should zoom on.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOnPreview">
      <summary>Gets or sets whether the Zoombox responds to tunneled mouse events (PreviewMouseWheel) to zoom the content via the mouse wheel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOrigin">
      <summary>Gets or sets the relative position within the content around which Zoom operations occur by default.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomPercentage">
      <summary>Gets or sets how much the content will zoom when using the ZoomIn or ZoomOut commands or when zooming via the mouse wheel.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomToSelectionModifiers">
      <summary>Gets or sets keys that must be pressed to select and zoom to a location of the content using the mouse.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationAccelerationRatioProperty">
      <summary>Identifies the AnimationAccelerationRatio dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationBeginningEvent">
      <summary>See AnimationBeginning.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationCompletedEvent">
      <summary>See AnimationCompleted.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationDecelerationRatioProperty">
      <summary>Identifies the AnimationDecelerationRatio dependency property<br />
Syntax</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationDurationProperty">
      <summary>Identifies the AnimationDuration dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreDragModifiersActiveProperty">
      <summary>Identifies the AreDragModifiersActive read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreRelativeZoomModifiersActiveProperty">
      <summary>Identifies the AreRelativeZoomModifiersActive read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreZoomModifiersActiveProperty">
      <summary>Identifies the AreZoomModifiersActive read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AreZoomToSelectionModifiersActiveProperty">
      <summary>Identifies the AreZoomToSelectionModifiersActive read-only dependency pProperty</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AutoWrapContentWithViewboxProperty">
      <summary>Identiifes the AutoWrapContentWithViewbox dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Back">
      <summary>Navigates to the previous view on the view stack.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Center">
      <summary>Centers the content within the Zoombox control without changing its scale.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentViewChangedEvent">
      <summary>See CurrentViewChanged.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentViewIndexProperty">
      <summary>Identifies the CurrentViewIndex dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentViewProperty">
      <summary>Identifies the CurrentView dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.DragModifiersProperty">
      <summary>Identifies the DragModifiers dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.DragOnPreviewProperty">
      <summary>Identifies the DragOnPreview dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.EffectiveViewStackModeProperty">
      <summary>Identifies the EffectiveViewStackMode read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Fill">
      <summary>Scales the content to completely fill the bounds of the Zoombox control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Fit">
      <summary>Scales the content to fit within the bounds of the Zoombox control.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Forward">
      <summary>Navigates to the next view on the view stack.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.HasBackStackProperty">
      <summary>Identifies the HasBackStack dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.HasForwardStackProperty">
      <summary>Identifies the HasForwardStack dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Home">
      <summary>Navigates to the first view on the view stack.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsAnimatedProperty">
      <summary>Identifies the IsAnimated dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsDraggingContentProperty">
      <summary>Identifies the IsDraggingContent read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.IsSelectingRegionProperty">
      <summary>Identifies the IsSelectingRegion read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.KeepContentInBoundsProperty">
      <summary>Identifies the ZoomboxBoundsMode dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.MaxScaleProperty">
      <summary>Identifies the MaxScale dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.MinScaleProperty">
      <summary>Identifies the MinScale dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.NavigateOnPreviewProperty">
      <summary>Identifies the NavigateOnPreview dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanDistanceProperty">
      <summary>Identifies the PanDistance dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanDown">
      <summary>Pans the content down. The number of pixels by which the content is panned is determined by the PanDistance property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanLeft">
      <summary>Pans the content to the left. The number of pixels by which the content is panned is determined by the PanDistance property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanRight">
      <summary>Pans the content to the right. The number of pixels by which the content is panned is determined by the PanDistance property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PanUp">
      <summary>Pans the content up. The number of pixels by which the content is panned is determined by the PanDistance property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.PositionProperty">
      <summary>Identifies the Position dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Refocus">
      <summary>Refocuses the view currently selected within the view stack (the view identified by the ViewStackIndex property).</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.RelativeZoomModifiersProperty">
      <summary>Identifies the RelativeZoomModifiers dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ScaleProperty">
      <summary>Identifies the Scale dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewFinderProperty">
      <summary>Identifies the ViewFinder read-only dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewFinderVisibilityProperty">
      <summary>Identifies the ViewFinderVisibility attached dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewportProperty">
      <summary>Idenfities the Viewport dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackCountProperty">
      <summary>Identifies the ViewStackCount dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackIndexChangedEvent">
      <summary>See ViewStackIndexChanged.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackIndexProperty">
      <summary>Identifies the ViewStackIndex dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackModeProperty">
      <summary>Identifies the ViewStackMode dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackSourceProperty">
      <summary>Identifies the ViewStackSource dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomIn">
      <summary>Scales the content up. The percentage by which the content is scaled is determined by the ZoomPercentage property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomModifiersProperty">
      <summary>Identifies the ZoomModifiers dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOnPreviewProperty">
      <summary>Identifies the ZoomOnPreview dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOnProperty">
      <summary>Identifies the ZoomOnProperty dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOriginProperty">
      <summary>Identifies the ZoomOrigin dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomOut">
      <summary>Scales the content down. The percentage by which the content is scaled is determined by the ZoomPercentage property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomPercentageProperty">
      <summary>Identifies the ZoomPercentage dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ZoomToSelectionModifiersProperty">
      <summary>Identifies the ZoomToSelectionModifiers dependency property</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationBeginning">
      <summary>Fires when the transition animation is about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Zoombox.Zoombox.AnimationCompleted">
      <summary>Fires when the transition animation completes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Zoombox.Zoombox.CurrentViewChanged">
      <summary>Fires when the CurrentView property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Zoombox.Zoombox.Scroll">
      <summary>
        <font size="2">Will be raised when IsUsingScrollBars property is true and the vertical or horizontal zoombox scrollbar is moved.</font>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.Toolkit.Zoombox.Zoombox.ViewStackIndexChanged">
      <summary>Fires when the ViewStackIndex property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxCursors.#ctor">
      <summary>Initializes a new instance of the ZoomboxCursors class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxCursors.Zoom">
      <summary>Gets the zoom cursor.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxCursors.ZoomRelative">
      <summary>Gets the relative zoom cursor.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Double)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Double,System.Windows.Point)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the ZoomboxView class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Center">
      <summary>Gets a ZoomboxView with a Center type of view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Empty">
      <summary>Gets a ZoomboxView with an Empty type of view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Fill">
      <summary>Gets a ZoomboxView with a Fill type of view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Fit">
      <summary>Gets a ZoomboxView with a Fit type of view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Position">
      <summary>Gets the Zoombox view position.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Region">
      <summary>Gets or sets the visible rectangular region of the view</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.Scale">
      <summary>Gets the Zoombox view scale.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxView.ViewKind">
      <summary>Gets how the content is positioned within the Zoombox.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs.#ctor(Xceed.Wpf.Toolkit.Zoombox.ZoomboxView,Xceed.Wpf.Toolkit.Zoombox.ZoomboxView,System.Int32,System.Int32)">
      <summary>Intializes a new instance of the ZoomboxViewChangedEventArgs class.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs.IsNewViewFromStack">
      <summary>Specifies whether the event is related to the new view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs.IsOldViewFromStack">
      <summary>Specifies whether the event is related to the old view.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs.NewViewStackIndex">
      <summary>Specifies the index of the new view</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventArgs.OldViewStackIndex">
      <summary>Specifies the index of the old view.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewConverter.#ctor">
      <summary>Initializes a new instance of the XYZ class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewException.#ctor(System.String)">
      <summary>Initializes a new instance of the XYZ class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.#ctor">
      <summary>Initializes a new instance of the XYZ class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and sizes the viewfinder.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.MeasureOverride(System.Windows.Size)">
      <summary>Remeasures the viewfinder.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the viewfinder.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.Background">
      <summary>Gets or sets the Background property.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ShadowBrush">
      <summary>Identifies the brush that is used to draw a shadow over the non-visible portion of the content. (The portion that is outside of the viewport.)</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportBrush">
      <summary>Identifies the brush that is used to draw a the visible portion of the content. (The portion that is within the viewport.)</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportPen">
      <summary>Identifies the pen that is used to draw the viewport rectangle within the view finder.</summary>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportRect">
      <summary>Identifies a rectangle within the view finder display element that corresponds to the content that is visible within the Zoombox.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.BackgroundProperty">
      <summary>Identifies the Background dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ContentBoundsProperty">
      <summary>Identifies the ContentBounds dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ShadowBrushProperty">
      <summary>Identifies the ShadowBrush dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportBrushProperty">
      <summary>Identifies the ViewportBrush dependency property</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportPenProperty">
      <summary>Identifies the ViewportPen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.ViewportRectProperty">
      <summary>Identifies the ViewportRect dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewFinderDisplay.VisualBrushProperty">
      <summary>Identifies the VisualBrush dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.#ctor(Xceed.Wpf.Toolkit.Zoombox.Zoombox)">
      <summary>Initializes a new instance of the XYZ class.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.ClearItems">
      <summary>Clears the view stack.</summary>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.InsertItem(System.Int32,Xceed.Wpf.Toolkit.Zoombox.ZoomboxView)">
      <summary>Inserts a view into the view stack.</summary>
      <param name="index">The index in which to insert the view</param>
      <param name="view">The view to insert.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.RemoveItem(System.Int32)">
      <summary>Removes an item from the view stack.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.SetItem(System.Int32,Xceed.Wpf.Toolkit.Zoombox.ZoomboxView)">
      <summary>Modifies a view currently on the stack.</summary>
      <param name="index">The index of the view to modify.</param>
      <param name="view">The new view.</param>
    </member>
    <member name="P:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewStack.SelectedView">
      <summary>The currently selected view within the stack.</summary>
    </member>
    <member name="T:Xceed.Wpf.Toolkit.Zoombox.ZoomboxViewChangedEventHandler">
      <summary>Fired when a Zoombox view changes.</summary>
    </member>
  </members>
</doc>