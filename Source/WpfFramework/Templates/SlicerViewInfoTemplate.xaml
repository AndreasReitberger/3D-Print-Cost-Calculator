<UserControl x:Class="WpfFramework.Templates.SlicerViewInfoTemplate"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:CSMSControls="clr-namespace:WpfFramework.Controls"
             xmlns:Models="clr-namespace:WpfFramework.Models.Slicer"
             xmlns:converters="clr-namespace:WpfFramework.Converters"
             xmlns:validators="clr-namespace:WpfFramework.Validators"
             xmlns:localization="clr-namespace:WpfFramework.Resources.Localization"
             
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Models:Slicer}"
             d:DesignHeight="100" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:DecimalHoursToTimeSpanConverter x:Key="DecimalHoursToTimeSpanConverter" />
        <!-- Rectangle -->
        <Style TargetType="{x:Type Rectangle}" x:Key="RectangleTemplate">
            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- Rectangle FDM -->
        <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource RectangleTemplate}" x:Key="RectangleFDM">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Printer.Type}" Value="FDM" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Printer.hasHeatbed}" Value="False" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- Label -->
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}" x:Key="LabelTemplate">
            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- Label FDM -->
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelTemplate}" x:Key="LabelFDM">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Printer.Type}" Value="FDM" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Printer.hasHeatbed}" Value="False" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- TextBlock -->
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlock}" x:Key="TextBlockTemplate">
            <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- TextBlock FDM-->
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockTemplate}" x:Key="TextBlockFDM">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Printer.Type}" Value="FDM" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Printer.hasHeatbed}" Value="False" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Printer Offline -->
        <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}" x:Key="PrinterGroupBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Printer.Online}" Value="0" >
                    <Setter Property="Background" Value="Red" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Printer.Online}" Value="1" >
                    <Setter Property="Background" Value="LimeGreen" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!-- Checkbox -->
        <CheckBox Grid.Column="0" Grid.Row="0" Content="" IsEnabled="False"
            IsChecked="{Binding Selected}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="13,16"/>
        <!-- Icon -->
        <Rectangle Grid.Column="1" Margin="10">
            <Rectangle.OpacityMask>
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved, can not bind to (networkManager:SettingsViewInfo.Icon) -->
                <VisualBrush Stretch="Uniform" Visual="{Binding Icon}" />
            </Rectangle.OpacityMask>
            <Rectangle.Style>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <!-- Slicer Name -->
        <TextBlock Grid.Column="2" Text="{Binding Name}" Margin="5,16,0,15" VerticalAlignment="Center" HorizontalAlignment="Left">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!-- Slicer Path -->
        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Slicer.InstallationPath}" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="3">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="10" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <!-- Buttons -->
        <DockPanel Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" LastChildFill="False">
            <!-- Delete Button -->
            <Button Margin="5" VerticalAlignment="Top" Height="38" Width="45" DockPanel.Dock="Right"
                    Command="{Binding DataContext.DeleteSlicerFromTemplateCommand, 
                        RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" 
                        CommandParameter="{Binding Slicer}" 
                        >
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Delete}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                </Button.Content>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
                        <Setter Property="IsEnabled" Value="True" />
                        <!--
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=nudMachineHoursPerYear, Path=(Validation.HasError)}" Value="False" />
                                <Condition Binding="{Binding ElementName=nudUsefulYears, Path=(Validation.HasError)}" Value="False" />
                                <Condition Binding="{Binding ElementName=nudInterests, Path=(Validation.HasError)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                    -->
                    </Style>
                </Button.Style>
            </Button>
            <!-- Edit Button -->
            <Button Margin="5" VerticalAlignment="Top" Height="38" Width="45" Style="{StaticResource ImageButton}" DockPanel.Dock="Right"
                        Command="{Binding DataContext.EditSlicerCommand, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Slicer}" 
                        Grid.ColumnSpan="1" Grid.Row="3" Grid.Column="1"
                        >
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=CircleEditOutline}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>

                    </Grid>
                </Button.Content>
            </Button>
            <!-- Run Slicer -->
            <Button Margin="5,5,5,0" VerticalAlignment="Top" Height="38" DockPanel.Dock="Right"
                Style="{StaticResource ImageWithTextButton}" 
                Command="{Binding DataContext.RunSlicerFromTemplateCommand, 
                    RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}" 
                    CommandParameter="{Binding Slicer}" 
                >
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInApp}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.RunSlicer}" TextAlignment="Center" Margin="10,5" />
                    </Grid>
                </Button.Content>
            </Button>
        </DockPanel>
    </Grid>
</UserControl>
