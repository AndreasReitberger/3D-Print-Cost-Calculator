<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Wpf.DataGrid</name>
  </assembly>
  <members>
    <member name="T:Xceed.Wpf.DataGrid.ICustomVirtualizingPanel">
      <summary>Provides an interface that is implemented by virtualizing panels to allow their child elements to be brought into view.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ICustomVirtualizingPanel.BringIntoView(System.Int32)">
      <summary>Brings the element at the specified index into view.</summary>
      <param name="index">The zero-based index of the element to bring into view.</param>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditorDisplayConditions">
      <summary>Value representing under what conditions cell editors are displayed.<!--DXMETADATA end --></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.None">
      <summary>A cell's editor is displayed only when the cell is being edited.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.RowIsBeingEdited">
      <summary>All the cell editors in a row are displayed when one of the cells in a row is being edited.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.MouseOverCell">
      <summary>A cell's editor is displayed when the mouse passes over a cell.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.MouseOverRow">
      <summary>All the cell editors in a row are displayed when the mouse passes over a row.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.RowIsCurrent">
      <summary>All the cell editors in a row are displayed when the row is current.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.CellIsCurrent">
      <summary>A cell's editor is displayed when it is current.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorDisplayConditions.Always">
      <summary>
        <para>Cell editors are always displayed.</para>
        <para>
          <strong>Including this value when setting the CellEditorDisplayConditions property will have a significant negative impact on performance.</strong>
        </para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnWidthUnitType">
      <summary>Value indicating the type of value a ColumnWidth objects contains.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnWidthUnitType.Pixel">
      <summary>The value is expressed as a pixel.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnWidthUnitType.Star">
      <summary>The value is expressed as a weighted proportion in regards to the available space</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CommitMode">
      <summary>Value representing when the CommitItems event of the
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> or <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizationCollectionViewSource</see> will be raised.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CommitMode.PageReleasedFromMemory">
      <summary>The <strong>CommitItems</strong> event will only be raised for a page that was modified when it is about to be released from memory.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CommitMode.EditCommitted">
      <summary>The <strong>CommitItems</strong> event is raised for each item as soon as its edit process ends.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ConnectionLineAlignment">
      <summary>Value representing the alignment of the lines that connect the elements in a StaircasePanel together.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ConnectionLineAlignment.RightToBottom">
      <summary>The lines are aligned right to bottom.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ConnectionLineAlignment.LeftToBottom">
      <summary>The lines are aligned left to bottom.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ConnectionLineAlignment.RightToTop">
      <summary>The lines are aligned right to top.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ConnectionLineAlignment.LeftToTop">
      <summary>The lines are aligned left to top.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ConnectionLineAlignment.CenterToCenter">
      <summary>The lines are aligned center to center.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridConnectionState">
      <summary>Value representing the connection state when bound to a data source through a virtualizing data-grid collection view.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridConnectionState.Idle">
      <summary>The connection is idle.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridConnectionState.Loading">
      <summary>The data is being loaded.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridConnectionState.Committing">
      <summary>The data is being committed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridConnectionState.Error">
      <summary>The connection is in error.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridUpdateSourceTrigger">
      <summary>Value representing the moment when data is to be written to the underlying data source.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridUpdateSourceTrigger.RowEndingEdit">
      <summary>The source is updated when a row exits edit mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridUpdateSourceTrigger.CellEndingEdit">
      <summary>The source is updated when a cell exits edit mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridUpdateSourceTrigger.CellContentChanged">
      <summary>The source is updated when the content of a cell is changed. <strong>Using this value will cause the source to be updated at every key stroke.</strong></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorAction">
      <summary>Value representing the action to take when an error occurs while deleting a selected item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorAction.Abort">
      <summary>The entire delete operation is aborted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorAction.Retry">
      <summary>Another attempt is made to delete the item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorAction.Skip">
      <summary>The item is skipped.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DistinctValuesConstraint">
      <summary>Value representing the constraint applied to the distinct values when <strong>automatically</strong> filtering data items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DistinctValuesConstraint.All">
      <summary>No constraint is applied to the data items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DistinctValuesConstraint.Filtered">
      <summary>Distinct values are constrained to the currently filtered list of values.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DistinctValuesUpdateMode">
      <summary>Value representing when distinct values used by auto-filtering are updated.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DistinctValuesUpdateMode.Manual">
      <summary>Distinct values are manually updated.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DistinctValuesUpdateMode.Auto">
      <summary>Distinct values are automatically updated.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.EditTriggers">
      <summary>Value indicating what triggers will cause cells to enter edit mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.None">
      <summary>No special triggers will cause cells to enter edit mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.BeginEditCommand">
      <summary>Cells will enter edit mode when the Edit Command (default F2) is sent to the containing DataRow.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.ClickOnCurrentCell">
      <summary>The current cell will enter edit mode when it is clicked.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.SingleClick">
      <summary>Cells will enter edit mode when it is clicked.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.CellIsCurrent">
      <summary>A cell will enter edit mode when it becomes current.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.ActivationGesture">
      <summary>Cells will enter edit mode when the user performs the appropriate activation gesture for the current cell's editor.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.EditTriggers.RowIsCurrent">
      <summary>All cells in a row will enter edit mode when the row becomes current.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ItemScrollingBehavior">
      <summary>Value indicating how the data items in a grid are scrolled.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ItemScrollingBehavior.Deferred">
      <summary>The data items are not scrolled until the scroll thumb is released.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ItemScrollingBehavior.Immediate">
      <summary>The data items are scrolled immediately as the thumb is dragged.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.NavigationBehavior">
      <summary>Value indicating how the focus navigates from one element to another in a grid.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.NavigationBehavior.None">
      <summary>
        <para>Navigation is not permitted in a grid. Elements cannot receive the focus.</para>
        <para>The CurrentItem and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridControl~SelectedItem.html">SelectedItem</see>/<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridControl~SelectedItems.html">SelectedItems</see> properties must be set to a null reference (<b>Nothing</b> in Visual Basic) in order to reset them when the
<strong>NavigationBehavior</strong> property is set to <strong>None</strong>.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.NavigationBehavior.RowOnly">
      <summary>Navigation is row based. Cells will never receive the focus.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.NavigationBehavior.CellOnly">
      <summary>Navigation is cell based.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.NavigationBehavior.RowOrCell">
      <summary>Navigation is row based <strong>unless</strong> a cell in a row is clicked. If a cell is clicked, then navigation from cell to cell within the row is
permitted. Once the focus is moved out of the row, navigation returns to row based.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.PagingBehavior">
      <summary>Value representing the paging behavior of a grid when the page-up and page-down buttons are pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PagingBehavior.TopToBottom">
      <summary>The grid pages from top to bottom.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PagingBehavior.LeftToRight">
      <summary>The grid pages from left to right.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.PrimaryAxis">
      <summary>Value representing which axis of a DataRow must be completely visible in order to determine
which <strong>DataRow</strong> will receive the focus when the page-up or page-down buttons are pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PrimaryAxis.Vertical">
      <summary>The vertical axis must be completely visible (see item 3 in the image below).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PrimaryAxis.Horizontal">
      <summary>The horizontal axis ust be completely visible (see item 2 in the image below).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PrimaryAxis.Both">
      <summary>Both the vertical and horizontal axes must be completely visible (see item 1 in the image below).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.PrimaryAxis.None">
      <summary>Neither the vertical nor horizontal axes must be completely visible (see item 4 in the image below).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ScrollOrientation">
      <summary>Value representing the scroll bar orientation for the <strong>Scroll</strong> event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ScrollOrientation.None">
      <summary>No scroll bars.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ScrollOrientation.Horizontal">
      <summary>The horizontal scroll bar.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ScrollOrientation.Vertical">
      <summary>The vertical scroll bar.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionUnit">
      <summary>Value representing the type of unit used for selections in the datagrid.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionUnit.Row">
      <summary>Rows will be used when performing selections in the datagrid.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionUnit.Cell">
      <summary>Cells will be used when performing selections in the datagrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SortDirection">
      <summary>Value representing the direction in which a column's values are sorted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SortDirection.None">
      <summary>The column is not sorted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SortDirection.Ascending">
      <summary>The column's values are sorted in an ascending direction.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SortDirection.Descending">
      <summary>The column's values are sorted in a descending direction.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnWidth">
      <summary>Structure that represents the width of a column.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderFooterItem">
      <summary>Structure that represents a container created from a template in the header or footer sections of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionCellRange">
      <summary>Structure that represents a range of cells.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionRange">
      <summary>Structure that represents a range of data items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.#ctor(System.Double)">
      <summary>Initializes a new instance of the <strong>ColumnWidth</strong> structure using the specified absolute value in pixels.</summary>
      <param name="pixels">A <strong>double</strong> representing the number of device-independant pixels (96 pixels-per-inch) to use.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.#ctor(System.Double,Xceed.Wpf.DataGrid.ColumnWidthUnitType)">
      <summary>Initializes a new instance of the <strong>ColumnWidth</strong> structure using the specified absolute value in the provided ColumnWidthUnitType.</summary>
      <param name="value">The initial value contained by this instance.</param>
      <param name="type">A ColumnWidthUnitType representing the type of <em>value</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.GetHashCode">
      <summary>Retrieves the hash code for the <strong>ColumnWidth</strong> structure.</summary>
      <returns>A value representing the hash code for the current <strong>ColumnWidth</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.ToString">
      <summary>Returns a string representation of the <strong>ColumnWidth</strong> structure.</summary>
      <returns>The string representation of the current <strong>ColumnWidth</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.Equals(System.Object)">
      <summary>Determines if the specified object is equal to the current <strong>ColumnWidth</strong> instance.</summary>
      <returns>
        <strong>true</strong> if the specified object has the same value and ColumnWidthUnitType as the current instance; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare with the current <strong>ColumnWidth</strong> instance.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.Equals(Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Determines if the specified <strong>ColumnWidth</strong> is equal to the current <strong>ColumnWidth</strong> instance.</summary>
      <returns>
        <strong>true</strong> if the specified <strong>ColumnWidth</strong> has the same value and ColumnWidthUnitType as the current instance; <strong>false</strong> otherwise.</returns>
      <param name="columnWidth">The <strong>ColumnWidth</strong> to compare with the current <strong>ColumnWidth</strong> instance.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Equality(Xceed.Wpf.DataGrid.ColumnWidth,Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Compares two (2) <strong>ColumnWidth</strong> structures for equality.</summary>
      <returns>
        <strong>true</strong> if the instances have the same value and ColumnWidthUnitType; <strong>false</strong> otherwise.</returns>
      <param name="columnWidth1">The first <strong>ColumnWidth</strong> instance to compare.</param>
      <param name="columnWidth2">The second <strong>ColumnWidth</strong> instance ot compare.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Inequality(Xceed.Wpf.DataGrid.ColumnWidth,Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Compares two (2) <strong>ColumnWidth</strong> structures for inequality.</summary>
      <returns>
        <strong>true</strong> if the instances <strong>do not have</strong> the same value and ColumnWidthUnitType; <strong>false</strong> otherwise.</returns>
      <param name="columnWidth1">The first <strong>ColumnWidth</strong> instance to compare.</param>
      <param name="columnWidth2">The second <strong>ColumnWidth</strong> instance ot compare.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Implicit(Xceed.Wpf.DataGrid.ColumnWidth)~System.Double">
      <summary>Converts the specified <strong>ColumnWidth</strong> structure value to a <strong>double</strong> structure.</summary>
      <returns>A <strong>double</strong> representing the absolute value in pixels of the provided <strong>ColumnWidth</strong> structure.</returns>
      <param name="columnWidth">The <strong>ColumnWidth</strong> to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Implicit(System.Double)~Xceed.Wpf.DataGrid.ColumnWidth">
      <summary>Converts the specified <strong>double</strong> value to a <strong>ColumnWidth</strong> structure.</summary>
      <returns>A <strong>ColumnWidth</strong> structure containing the provided absolute value in pixels.</returns>
      <param name="columnWidth">The <strong>double</strong> to convert.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnWidth.UnitType">
      <summary>Gets the ColumnWidthUnitType used by the <strong>ColumnWidth</strong> structure.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnWidth.Value">
      <summary>Gets a <strong>double</strong> that represents the value of the <strong>ColumnWidth</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Indicates whether the GroupHeaderFooterItem instances are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
      <param name="item1">The first GroupHeaderFooterItem to compare.</param>
      <param name="item2">The second GroupHeaderFooterItem to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Indicates whether this instance and a specified GroupHeaderFooterItem are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
      <param name="item">The GroupHeaderFooterItem to compare to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.op_Equality(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Tests if the two GroupHeaderFooterItem instances are equivalent.</summary>
      <returns>
        <strong>true</strong> if both items are equal; <strong>false</strong> otherwise.</returns>
      <param name="item1">The first GroupHeaderFooterItem to test for equality.</param>
      <param name="item2">The second GroupHeaderFooterItem to test for equality.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.op_Inequality(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Tests if the two GroupHeaderFooterItem instances are different.</summary>
      <returns>
        <strong>true</strong> it the items are different; <strong>false</strong> otherwise.</returns>
      <param name="item1">The first GroupHeaderFooterItem to test for inequality.</param>
      <param name="item2">The second GroupHeaderFooterItem to test for inequality.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Group">
      <summary>Retrieves the group to which the item belongs.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Template">
      <summary>Retrieves the template that was used to create the item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Empty">
      <summary>Retrieves an empty <strong>GroupHeaderFooterItem</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided data item and column indexes.</summary>
      <param name="itemIndex">The item index to use.</param>
      <param name="columnIndex">The column index to use.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the start and end of the provided data item and column indexes.</summary>
      <param name="itemStartIndex">The index of the data item at the start of the range.</param>
      <param name="columnStartIndex">The index of the column at the start of the range.</param>
      <param name="itemEndIndex">The index of the data item at the end of the range.</param>
      <param name="columnEndIndex">The index of the column at the end of the range.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided SelectionRange structures.</summary>
      <param name="itemRange">A SelectionRange object representing the item range.</param>
      <param name="columnRange">A SelectionRange object representing the column range.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Exclude(Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Excludes a range of cells from the selection.</summary>
      <returns>A list of SelectionCellRange structures representing the new range.</returns>
      <param name="cellRangeToExclude">A SelectionCellRange instance representing the cells to exclude from the selection.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Intersect(Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Returns the intersection of the passed SelectionCellRange and the caller.</summary>
      <returns>A SelectionCellRange object representing the intersection of <em>range</em> and the caller.</returns>
      <param name="range">The SelectionCellRange instance used to find the intersection.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.op_Equality(Xceed.Wpf.DataGrid.SelectionCellRange,Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Tests if the two SelectionCellRange instances are equivalent.</summary>
      <param name="range1">The first %SelectionCellRange: <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid~ <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid.SelectionCellRange% to test for equality.</param>
      <param name="range2">The second %SelectionCellRange: <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid~ <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid.SelectionCellRange% to test for equality.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.op_Inequality(Xceed.Wpf.DataGrid.SelectionCellRange,Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Tests if the two SelectionCellRange instances are different.</summary>
      <param name="range1">The first %SelectionCellRange: <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid~ <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid.SelectionCellRange% to test for inequality.</param>
      <param name="range2">The second %SelectionCellRange: <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid~ <span id="dxMisspelled" class="dxMisspelled" word="Xceed">Xceed</span>. <span id="dxMisspelled" class="dxMisspelled" word="Wpf">Wpf</span>.DataGrid.SelectionCellRange% to test for inequality.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.ColumnRange">
      <summary>Gets or sets the column range of the selection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.IsEmpty">
      <summary>A boolean value indicating whether the cell range selection is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.ItemRange">
      <summary>Gets or sets the data item range of the selection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.Length">
      <summary>Gets the number of items in the selection.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionCellRange.Empty">
      <summary>Retrieves an empty <strong>SelectionCellRange</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided start and end indexes.</summary>
      <param name="startIndex">The start index to use.</param>
      <param name="endIndex">The end index to use.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided index.</summary>
      <param name="index">The index to use.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.CompareTo(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Compares the passed SelectionRange to the caller.</summary>
      <returns>-1 if the caller is less than <em>other,</em> 1 if the caller is greater than <em>other,</em> or 0 if caller and <em>other</em> are identical.</returns>
      <param name="other">A SelectionRange with which the caller will be compared.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Exclude(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Excludes a range of data items from the selection.</summary>
      <returns>
        <para>A list of SelectionRange structures representing the new range.</para>
      </returns>
      <param name="rangeToExclude">A SelectionRange structure representing the data items to exclude</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetIndexFromItemOffset(System.Int32)">
      <summary>Returns the index by using the passed item offset.</summary>
      <returns>The index.</returns>
      <param name="itemOffset">The item offset.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetOffsetFromItemIndex(System.Int32)">
      <summary>Returns item offset by using the passed the index.</summary>
      <returns>The item offset.</returns>
      <param name="itemIndex">The index.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Intersect(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Returns the intersection of the passed SelectionRange and the caller.</summary>
      <returns>A SelectionRange object representing the intersection of <em>range</em> and the caller.</returns>
      <param name="range">The SelectionRange instance used to find the intersection.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_Equality(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the two SelectionRange instances are equivalent.</summary>
      <returns>
        <strong>true</strong> if the two SelectionRange instances are equivalent; <strong>false</strong>
otherwise.</returns>
      <param name="range1">The first SelectionRange to test for equality.</param>
      <param name="range2">The second SelectionRange to test for equality.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_GreaterThan(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the first SelectionRange instance is greater than the second.</summary>
      <returns>
        <strong>true</strong> if the first SelectionRange instance is greater than the second;
<strong>false</strong> otherwise.</returns>
      <param name="range1">The first SelectionRange instance.</param>
      <param name="range2">The second SelectionRange instance.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_Inequality(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the two SelectionRange instances are different.</summary>
      <returns>
        <strong>true</strong> if the two SelectionRange instances are different; <strong>false</strong>
otherwise.</returns>
      <param name="range1">The first SelectionRange to test for inequality.</param>
      <param name="range2">The second SelectionRange to test for inequality.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_LessThan(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the first SelectionRange instance is greater than the second.</summary>
      <param name="range1">The first SelectionRange instance.</param>
      <param name="range2">The second SelectionRange instance.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.EndIndex">
      <summary>Gets or sets the end index of the selection range.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.IsEmpty">
      <summary>Gets a boolean value indicating whether the selection range is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.Length">
      <summary>Gets the length of the selection range.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.StartIndex">
      <summary>Gets or sets the start index of the selection range.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionRange.Empty">
      <summary>Retrieves an empty <strong>SelectionCellRange</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ActivationGesture">
      <summary>Represents a key or text gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ActivationGestureCollection">
      <summary>Represents a dynamic ActivationGesture collection that provides notifications when
items are added, removed, or when the collection is refreshed.<!--DXMETADATA end --></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AsyncCommitInfo">
      <summary>Received in the <strong>CommitItems</strong> event to provide information on the virtualized items to allow those that have been modified to be committed to
the underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AsyncQueryInfo">
      <summary>Received in the QueryItems event to provide the
information necessary to retrieve the next batch of items. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CancelRoutedEventArgs">
      <summary>Provides information and event data on a cancelable routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Cell">
      <summary>Represents a cell in a grid, which is a <strong>ContentControl</strong> used to display the value of a property in a data item.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellCollection">
      <summary>Represents a dynamic cell collection that provides notifications when items are added, removed, or when the collection is refreshed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellContentPresenter">
      <summary>Displays the content of a cell.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditor">
      <summary>Contains the information required to display the template that will be used to edit the content of a cell as well as the activation gestures that activation
the template.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditorContext">
      <summary>Class that provides information on a cell editor's parent column and associated foreign key configuration.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidatingEventArgs">
      <summary>Provides information on the value to be validated.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationContext">
      <summary>The validation context in which the cell content is validated. The validation context contains the cell and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.CellValidationContext~DataItem.html">data item</see> relative to the content being validated.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationError">
      <summary>Represents the error that is provided when the value of a cell fails the UI-level validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs">
      <summary>Provides information on the CellValidationError that occurred during the
validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions">
      <summary>Class that exposes methods that extend the functionality provided by the <strong>CollectionViewGroup</strong> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Column">
      <summary>Represents a column, which defines information on how the Cells it
contains are displayed and their content edited.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnBase">
      <summary>Base class that represents a column and from which the Column and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.UnboundColumn.html">UnboundColumn</see> classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnCollection">
      <summary>Represents a dynamic column collection that provides notifications when items are added, removed, or when the whole collection is
refreshed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnManagerCell">
      <summary>Specialization of the Cell class that can be used to rearrange, sort, and group the columns in a
grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnManagerRow">
      <summary>Specialization of the Row class that contains a collection of <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ColumnManagerCell.html">ColumnManagerCells</see> that can be used to manipulate the columns in a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CommitItemsEventArgs">
      <summary>Provides information about the virtualized items during the CommitItems event. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataCell">
      <summary>Specialization of the Cell class that represents a cell contained in a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataRow.html">DataRow</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridBindingInfo">
      <summary>Class that creates and wraps a binding that is used by a column to retrieve and validate its values.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCheckBox">
      <summary>Represents a control used to edit and display boolean values. This class should be used rather than the system provided <strong>CheckBox</strong> control which
causes issues with focus when used within a focus scope (e.g., <strong>DataGridControl</strong>).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionView">
      <summary>The <strong><font color="black">DataGridCollectionView</font></strong> class allows any collection that implements the <strong>IEnumerable</strong> interface
to be grouped, sorted, and filtered.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewBase">
      <summary>
        <para>Base class for the DataGridCollectionView and
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see>
classes.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewSource">
      <summary>Represents the XAML proxy of the DataGridCollectionView class and exposes the
most commonly used members of the <strong>DataGridCollectionView</strong> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase">
      <summary>
        <para>Base class for the DataGridCollectionViewSource and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizingCollectionViewSource</see> classes, which represent the
XAML proxies of the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridCollectionView.html">DataGridCollectionView</see> and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> classes and expose their most commonly
used members.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCommands">
      <summary>Provides a set of commands that can be used to accomplish various actions.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs">
      <summary>Provides information on the new item that is about to be committed in the CommittingNewItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridContext">
      <summary>Class that the provides contextual information on, and access to, items contained in a grid or detail.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridControl">
      <summary>Represents the Xceed DataGrid for WPF control, which allows data to be displayed and edited, regardless of its layout.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs">
      <summary>Provides information that can be used to create a new item in the CreatingNewItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs">
      <summary>Provides information related to changes made to the current visual row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs">
      <summary>Provides information related to changes about to be made to the current visual row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridDatePicker">
      <summary>Represents a control used to edit and display dates.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridException">
      <summary>Exception that is thrown when a DataGrid-specific exception occurs.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridFocusException">
      <summary>Exception that is thrown when a focus-related exception is thrown.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription">
      <summary>Class that provides descriptive information about a foreign key or enumeration.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridGroupDescription">
      <summary>Class that describes the grouping of items using a property name as the criteria.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridGroupInfo">
      <summary>Class that provides the information required to created groups when using a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridInternalException">
      <summary>Exception that is thrown when an unexpected datagrid-specific exception occurs.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs">
      <summary>Provides information for cancelable events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemEventArgs">
      <summary>Provides information for events that manipulate items.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs">
      <summary>
        <para>Provides information for events that can be handled completely in an event handler.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemProperty">
      <summary>Represents the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyBase">
      <summary>Base class that represents the characteristics of a property for an item in a datagrid collection view and from which the DataGridItemProperty and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.html">DataGridUnboundItemProperty</see> classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection">
      <summary>Contains a collection of DataGridItemProperty objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs">
      <summary>Provides information when a value is about to be committed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyDictionary">
      <summary>Gets a dictionary of datagrid item properties.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs">
      <summary>Provides information when a value is required. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs">
      <summary>Provides information on an item that was removed from a collection view.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemsHost">
      <summary>
        <para>Base class whose derived classes are used in DataGridControl templates as a
replacement for the <strong>ItemsPresenter</strong> and that will contain the data items as well as the items contained in <strong>non-fixed</strong> header
and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs">
      <summary>Provides information on the new item that is about to be removed in the RemovingItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs">
      <summary>Provides information on the items that were selected/unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs">
      <summary>Provides information on the items that are being selected/unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty">
      <summary>Represents an "unbound" item property whose values can be appended to a data item.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView">
      <summary>The DataGridVirtualizingCollectionView class and its XAML proxy,
the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizingCollectionViewSource</see> class, provide
support for data virtualization. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase">
      <summary>Base class that provides support for data virtualization, and from which the DataGridVirtualizingCollectionView and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.html">DataGridVirtualizingQueryableCollectionView</see> classes derive. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource">
      <summary>The DataGridVirtualizingCollectionViewSource class is the
XAML proxy of the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> class, which
provides support for data virtualization. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase">
      <summary>Gets or sets a value representing when the CommitItems event will be raised. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel">
      <summary>
        <para>Arranges and virtualizes the content of a DataGridControl.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView">
      <summary>The <strong>DataGridVirtualizingQueryableCollectionView</strong> class and its XAML proxy, the DataGridVirtualizingQueryableCollectionViewSource class,
provide support for <strong>IQueryable</strong> data sources.
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource">
      <summary>The DataGridVirtualizingQueryableCollectionView class and
its XAML proxy, the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.html">DataGridVirtualizingQueryableCollectionViewSource</see> class,
provide support for <strong>IQueryable</strong> data sources. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataRow">
      <summary>Specialization of the Row that represents a row that contains a collection of <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataCell.html">DataCells</see>. <strong>DataRows</strong> are the visual representation of the data items that are
displayed in a grid's viewport.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter">
      <summary>
        <para>Represents a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription">
      <summary>
        <para>Represents a <strong>DataTable</strong> foreign key constraint.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DefaultDetailConfiguration">
      <summary>Class that provides configuration information that will be applied to all the details in a grid <strong>and any descendant details</strong> when an explicit
detail configuration is not provided for a specific detail relation. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs">
      <summary>Provides information on the selected item and the error that occurred while it was being deleted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DetailIndicator">
      <summary>Control that provides a visual representation of the number of detail levels in a grid and/or detail. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group based on the column field names provided by the FieldNameGroupConfigurationIndictors it contains.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem">
      <summary>Indicates the group configuration to apply
to the groups that are created by the values of the column with the specified <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem~FieldName.html">field name</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ForeignKeyConfiguration">
      <summary>
        <para>Represents the visual representation of a foreign key description.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ForeignKeyConverter">
      <summary>
        <para>Represents a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Group">
      <summary>Represents the run-time realization of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupByControl">
      <summary>Represents a control that displays information about how the data items in a grid or detail are grouped and sorted as well as allows the end user to change how
the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupByItem">
      <summary>Represents an item in a GroupByControl that corresponds to a column in a grid or detail
by whose values the data items are grouped.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupConfiguration">
      <summary>Class that provides configuration information for a corresponding group description.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupExtensions">
      <summary>Class that exposes methods that extend the functionality provided by the Group class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderControl">
      <summary>Represents the control used as a Group header, which is used to expand and collapsed its
associated group as well as display information on the group's content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate">
      <summary>Class that represents an item in the header or footer sections of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelDescription">
      <summary>Represents a description of each group level, which provides complementary information on the group descriptions that were added through the
<strong>CollectionViewSource.GroupDescriptions</strong> property.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelDescriptionCollection">
      <summary>Contains a collection of GroupLevelDescription objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelIndicator">
      <summary>Control that provides a visual representation of the number of group levels in a grid and/or detail.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane">
      <summary>The <strong>GroupLevelIndicatorPane</strong> class represents a control that contains group-level indicators that indicate the group-level in which an item is located.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNameCountPair">
      <summary>Represents a pair consisting of a group name and its corresponding item count. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationButton">
      <summary>Represents a button that is displayed when the mouse pointer hovers over a group name in the group header.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationControl">
      <summary>Represents a control that is displayed when the mouse pointer hovers over a group name in the group header.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationControlItem">
      <summary>Represents an item in a GroupNavigationControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByControl">
      <summary>Represents a control that displays hierarchical information about how the data items in a grid and any of its child details are grouped and sorted as well as
allows the end user to change how the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode">
      <summary>Represents a control that displays information in a HierarchicalGroupByControl about how the data items in a grid or detail are grouped
and sorted as well as allows the end user to change how the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByItem">
      <summary>
        <para>Represents an item in a HierarchicalGroupByControlNode that
corresponds to a column in a grid or detail by whose values the data items are grouped.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane">
      <summary>
        <para>The <strong>HierarchicalGroupLevelIndicatorPane</strong> class represents a control that contains group-level-indicator panes and detail-level indicators
that indicate the group and detail levels in which an item is located.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.KeyActivationGesture">
      <summary>Represents a key gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group based on the group levels provided by the LevelGroupConfigurationSelectorItems it contains.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem">
      <summary>Indicates the group configuration to apply to
the groups of the specified <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem~Level.html">group level</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs">
      <summary>Provides information on a distinct value extracted from the underlying data source and allows a new one to be provided in its stead. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs">
      <summary>Provides the information required when requesting details for an EntityDetailDescription. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryGroupsEventArgs">
      <summary>Provides the information necessary to create groups in a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryItemCountEventArgs">
      <summary>Provides information on the DataGridVirtualizingCollectionView to
which the grid is bound including the number of items that it should contain. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryItemsEventArgs">
      <summary>Provides information on the DataGridVirtualizingCollectionView to
which the grid is bound including the items that have been fetched from the underlying data source. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Row">
      <summary>Represents any type of row in a grid. The DataRow and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.InsertionRow.html">InsertionRow</see> class derive from this class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowSelector">
      <summary>Represents a control used to select a row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowSelectorPane">
      <summary>Represents the <em>Canvas</em> in which the RowSelectors are painted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationError">
      <summary>Represents the error that is provided when the value of a cell fails the binding-level validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs">
      <summary>Provides information on the RowValidationError that occurred during the validation
process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ScrollTip">
      <summary>Represents a content control that displays the value of one or more cells in the first visible row when a grid is scrolled.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionInfo">
      <summary>Provides information in the SelectionChanged event about the items
that were selected and/or unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.StaircasePanel">
      <summary>Represents a panel whose child elements are laid out in a staircase pattern.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.TextInputActivationGesture">
      <summary>Represents a text input gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.UnboundColumn">
      <summary>Represents a column that can be used to display non-data related information such as a label or controls that allow some sort of action to be carried out
(e.g., a button to open a window in which the current item can be edited).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.VirtualizedItemInfo">
      <summary>Class that provides information on a data item including its old and new values as well as its index in a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection">
      <summary>Contains a collection of old values for a VirtualizedItemInfo. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ActivationGestureCollection.#ctor">
      <summary>Initializes a new instance of the ActivationGestureCollection class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.AsyncState">
      <summary>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.Error">
      <summary>Gets or sets a user-defined object that qualifies or contains information about an error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.VirtualizedItemInfos">
      <summary>Gets an array of VirtualizedItemInfo objects representing the items that are about
to be released from memory.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AsyncQueryInfo.EndQuery(System.Object[])">
      <summary>Called to provide new items.</summary>
      <param name="items">The new items.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.AsyncState">
      <summary>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.Error">
      <summary>Gets or sets a user-defined object that qualifies or contains information about an error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.RequestedItemCount">
      <summary>Gets or sets a value representing the number of new items that should be returned.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.ShouldAbort">
      <summary>Gets a value indicating whether the operation should be aborted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.StartIndex">
      <summary>Gets or sets a value indicating the index in the data source at which to start retrieving the new items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor(System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class, using the supplied routed event identifier.</summary>
      <param name="routedEvent">The identifier for the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class, using the supplied routed event identifier and providing the opportunity to
declare a different source for the event.</summary>
      <param name="routedEvent">The identifier for the routed event.</param>
      <param name="source">An alternate source that will be reported when the event is handled. This pre-populates the <strong>Source</strong> property.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.Cancel">
      <summary>Gets or sets a value that allows the routed event to be canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.AddContentBinding(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>
        <span id="BugEvents">
          <span id="BugEvents">When overridden in a derived class, a</span>dds a binding on the Content of the cell.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.BeginEdit">
      <summary>Signals the beginning of the edit process and places the cell in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.CancelEdit">
      <summary>Cancels the edit process. Any modifications made to the cell's content will be lost.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.ClearContainer">
      <summary>Clears the content of the cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetCellEditor">
      <summary>Retrieves the cell editor that is used, or that will be used, to edit the content of the cell.</summary>
      <returns>The CellEditor that is used, or that will be used, to edit the content of the cell. If the
parent column's <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Column~CellEditor.html">CellEditor</see> property is a null reference (<b>Nothing</b> in Visual Basic), a new instance of the appropriate
cell editor will be created.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetCellEditorContext(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>CellEditorContext</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>CellEditorContext</strong> property value for the dependency object.</returns>
      <param name="obj">The dependency object form which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetFittedWidth">
      <summary>Retrieves the fitted width of the cell, in device-independent units (1/96th inch per unit).</summary>
      <returns>A value representing the fitted width of the cell, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetIsCellFocusScope(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>IsCellFocusScope</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>IsCellFocusScope</strong> property value for the dependency object. By default, <strong>false</strong>.</returns>
      <param name="obj">The dependency object form which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.Initialize(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Initializes the cell specifying its parent DataGridControl, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Row.html">Row</see>, and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Column.html">Column</see>.</summary>
      <param name="dataGridContext">A reference to the cell's DataGridContext.</param>
      <param name="parentRow">A reference to the cell's parent Row.</param>
      <param name="parentColumn">A reference to the cell's parent Column.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.InitializeCore(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Called after the Initialize method to allow custom initialization.</summary>
      <param name="dataGridContext">A reference to the cell's DataGridContext.</param>
      <param name="parentRow">A reference to the cell's parent Row.</param>
      <param name="parentColumn">A reference to the cell's parent Row.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnApplyTemplate">
      <summary>Builds the visual tree for the element.On</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditBeginning(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditBeginning event, which signals that the edit process is about to
begin.</summary>
      <param name="e">A CancelRoutedEventArgs that contains the event data and that can prevent the
edit process from beginning.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditBegun">
      <summary>Raises the EditBegun event, which signals that the edit process has begun.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditCanceled">
      <summary>Raises the EditCanceled event, which signals that the edit process has been
canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditCanceling">
      <summary>Raises the EditCanceling event, which signals that the edit process is being
canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditEnded">
      <summary>Raises the EditEnded event, which signals that the edit process has ended.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditEnding(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditEnding event, which signals that the edit process is about to end.</summary>
      <param name="e">A CancelRoutedEventArgs that contains the event data and that can prevent the
edit process from ending.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewKeyDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewTextInput</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>TextCompositionEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnPropertyChanged">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnValidationErrorChanging(Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs)">
      <summary>Invoked when an unhandled <strong>ValidationErrorChanging</strong> attached event reaches this element in its route.</summary>
      <param name="e">A CellValidationErrorRoutedEventArgs<font color="black">that
contains the event data.</font></param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PostInitialize">
      <summary>Concludes the initialization of the cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for
the <em>item</em>.</summary>
      <param name="dataGridContext">
        <list type="termdef">
          <item>
            <description>A reference to the DataGridContext in which to
    prepare the container.</description>
          </item>
        </list>
      </param>
      <param name="item">The item for which to prepare the container.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>Cell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view or <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~Theme.html">theme</see> modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.RemoveContentBinding">
      <summary>
        <span id="BugEvents">When overridden in a derived class, removes the binding on the Content of the cell.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.SetIsCellFocusScope(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <strong>IsCellFocusScope</strong> attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The needed boolean value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.ToString">
      <summary>Returns the string representation of this <strong>Cell</strong> instance.</summary>
      <returns>The string representation of this <strong>Cell</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.EndEdit">
      <summary>Signals the end of the edit process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
      <returns>The parent cell of the <em>child</em>.</returns>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent cell.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(Xceed.Wpf.DataGrid.DataGridContext,System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
      <returns>The parent cell of the <em>child</em>.</returns>
      <param name="dataGridContext">The DataGridContext to which the <em>child</em> belongs.</param>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent cell.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(Xceed.Wpf.DataGrid.DataGridControl,System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
      <param name="dataGridControl">The DataGridControl to which the <em>child</em> belongs.</param>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent cell.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CanBeRecycled">
      <summary>When overridden in a derived class, gets a value indicating whether the cell can be recycled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cell when its content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CellValidationRules">
      <summary>Gets the list of CellValidationRules against which a cell's content
is validated before the cell exists edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CoercedContentTemplate">
      <summary>Gets the template that is currently being used.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CurrentBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell becomes current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CurrentForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell becomes current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.FieldName">
      <summary>Gets or sets the field name of the parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.HasAliveContentBinding">
      <summary>
        <para>When overridden in a derived class, gets a value indicating whether the Content property is currently the target of a binding.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.HasValidationError">
      <summary>Gets a value indicating whether the cell's content failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.InactiveSelectionBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell is selected but inactive.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.InactiveSelectionForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell is selected but inactive.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsBeingEdited">
      <summary>Gets a value indicating whether the cell is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsCellEditorDisplayed">
      <summary>Gets a value indicating whether the cell's editor is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsCurrent">
      <summary>Gets a value indicating whether the cell is the current cell.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsDirty">
      <summary>Gets a value indicating whether the content of the cell has been modified since it entered edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsSelected">
      <summary>Gets a value indicating whether the cell is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsValidationErrorRestrictive">
      <summary>Gets a value indicating whether the validation rule that failed prevents the focus from moving to another row until the error is fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.OverrideColumnCellContentTemplate">
      <summary>Gets a value indicating whether the cell inherits the template provided by the parent column's CellContentTemplate property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ParentColumn">
      <summary>Gets the cell's parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ParentRow">
      <summary>Gets the cell's parent row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ReadOnly">
      <summary>Gets or sets a value indicating whether the cell is readonly.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.SelectionBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell is selected and active.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.SelectionForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell is selected and active</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ValidationError">
      <summary>Gets or sets information about the validation rule that failed the validation process.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CellEditorContextProperty">
      <summary>Identifies the CellEditorContext attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CoercedContentTemplateProperty">
      <summary>Identifies the CoercedContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CurrentBackgroundProperty">
      <summary>Identifies the CurrentBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CurrentForegroundProperty">
      <summary>Identifies the CurrentForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditBeginningEvent">
      <summary>Identifies the EditBeginning routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditBegunEvent">
      <summary>Identifies the EditBegun routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditCanceledEvent">
      <summary>Identifies the EditCanceled routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditCancelingEvent">
      <summary>Identifies the EditCanceling routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditEndedEvent">
      <summary>Identifies the EditEnded routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditEndingEvent">
      <summary>Identifies the EditEnding routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.InactiveSelectionBackgroundProperty">
      <summary>Identifies the InactiveSelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.InactiveSelectionForegroundProperty">
      <summary>Identifies the InactiveSelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsCellFocusScopeProperty">
      <summary>Identifies the <strong>IsCellFocusScope</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsDirtyProperty">
      <summary>Identifies the IsDirty dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsValidationErrorRestrictiveProperty">
      <summary>Identifies the IsValidationErrorRestrictive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentCellProperty">
      <summary>Identifies the <strong>ParentCell</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentColumnProperty">
      <summary>Identifies the ParentColumn dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentRowProperty">
      <summary>Identifies the ParentRow dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.SelectionBackgroundProperty">
      <summary>Identifies the SelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.SelectionForegroundProperty">
      <summary>Identifies the SelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ValidationErrorChangingEvent">
      <summary>Identifies the ValidationErrorChanging routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ValidationErrorProperty">
      <summary>Identifies the ValidationError dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditBeginning">
      <summary>Raised when the BeginEdit method has been called to signal that the edit process is
about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditBegun">
      <summary>Raised after the EditBeginning event to signal that the edit process has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditCanceled">
      <summary>Raised after the EditCanceling event to signal that the edit process has been
canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditCanceling">
      <summary>Raised when the CancelEdit method has been called to signal that the edit process is
being canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditEnded">
      <summary>Raised after the EditEnding event to signal that the edit process has ended.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditEnding">
      <summary>Raised when the EndEdit method has been called to signal that the edit process is about
to end.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.ValidationErrorChanging">
      <summary>Raised when the value of the ValidationError property is about to change.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.#ctor">
      <summary>Initializes a new instance of the CellCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.#ctor">
      <summary>Initializes a new instance of the <strong>CellCollection</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.ClearItems">
      <summary>Removes all cells from the collection.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to remove a cell when the row is contained by a DataGridControl.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.Cell)">
      <summary>Inserts a cell at the specified index.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to insert a cell when the row is contained by a DataGridControl.item is $$NULL$$.</exception>
      <param name="index">The zero-based index at which to insert <em>item</em>.</param>
      <param name="item">The cell to insert. Cannot be a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.RemoveItem(System.Int32)">
      <summary>Removes the cell at the specified index.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to remove a cell when the row is contained by a DataGridControl.index is less than zero or equal to or greater than count.</exception>
      <param name="index">The zero-based index of the cell to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.Cell)">
      <summary>Replaces an existing cell with the specified <em>item</em>.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to replace a cell when the row is contained by a DataGridControl.</exception>
      <param name="index">The zero-based index of the cell to replace.</param>
      <param name="item">The new cell that will replace the existing cell at the specified <em>index</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellContentPresenter.EndInit">
      <summary>
        <para>Signals the object that initialization is complete.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.#ctor">
      <summary>Initializes a new instance of the CellEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>CellEditor</strong> class.</summary>
      <returns>The new <strong>CellEditor</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.GetHasError(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the value being edited by the cell editor is in error.</summary>
      <returns>
        <strong>true</strong> if the value being edited by the cell editor is in error; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.SetHasError(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the value being edited by the cell editor is in error.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if the value being edited by the cell editor is in error; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.ActivationGestures">
      <summary>Retrieves a collection of the activation gestures supported by the cell editor.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.CheckBoxEditor">
      <summary>Gets a static instance of a CheckBox control that will be used by default for cells that have
boolean content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.DatePickerEditor">
      <summary>Gets a static instance of a DatePicker control that will be used by default for cells that
have date-time content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.EditTemplate">
      <summary>Gets or sets the data template that will be used to edit the content of a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.TextBoxEditor">
      <summary>Gets a static instance of a AutoSelectorTextBox control that will be used by default
for cells that have text content.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.ActivationGesturesProperty">
      <summary>Identifies the ActivationGestures dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.EditTemplateProperty">
      <summary>Identifies the EditTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.HasErrorProperty">
      <summary>Identifies the <strong>HasError</strong> attached property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditorContext.ForeignKeyConfiguration">
      <summary>Gets the ForeignKeyConfiguration of the cell editor's parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditorContext.ParentColumn">
      <summary>Gets the cell editor's parent column.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorContext.ForeignKeyConfigurationProperty">
      <summary>Identifies the ForeignKeyConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorContext.ParentColumnProperty">
      <summary>Identifies the ParentColumn dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidatingEventArgs.#ctor(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Initializes a new instance of the CellValidatingEventArgs class specifying the
value to validate as well as the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.CellValidationContext.html">validation context</see>.</summary>
      <param name="value">The value to validate.</param>
      <param name="culture">The <strong>CultureInfo</strong> for the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Context">
      <summary>Gets the validation context of the value to validate. The validation context
includes both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Culture">
      <summary>Gets the <strong>CultureInfo</strong> for the value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Result">
      <summary>Represents the result returned by a validation rule's <strong>Validate</strong> method that indicates whether the value passed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Value">
      <summary>Gets the value to validated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationContext.#ctor(System.Object,Xceed.Wpf.DataGrid.Cell)">
      <summary>Initializes a new instance of the CellValidationContext class specifying the
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</summary>
      <param name="dataItem">The data item from which the value to be validated has been retrieved.</param>
      <param name="cell">The cell in which the value to be validated is contained.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationContext.Cell">
      <summary>Gets the cell in which the value to be validated is contained.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationContext.DataItem">
      <summary>Gets the data item from which the value to be validated has been retrieved.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationError.#ctor(Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule,Xceed.Wpf.DataGrid.Cell,System.Object,System.Exception)">
      <summary>Initializes a new instance of the CellValidationError class specifying various
information on the validation rule that caused the caused the value to fail the validation process.</summary>
      <param name="ruleInError">
        <para>The CellValidationRule that
contains the validation rule that failed.</para>
      </param>
      <param name="cellInError">The cell whose value failed the validation process.</param>
      <param name="errorContent">An object containing the content to display when an error occurs.</param>
      <param name="exception">The exception that was raised when the value failed the validation process. Can be a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.CellInError">
      <summary>Gets the cell whose value failed the UI-level validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.ErrorContent">
      <summary>Gets an object containing the error content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.Exception">
      <summary>Gets the exception that was raised when the value failed the UI-level validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.RuleInError">
      <summary>Gets the CellValidationRule that caused the value to fail the
UI-level validation process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred.</summary>
      <param name="cellValidationError">The CellValidationError that occurred.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred and using the supplied routed event identifier.</summary>
      <param name="routedEvent">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The identifier for the routed event.</span>
      </param>
      <param name="cellValidationError">The CellValidationError that occurred.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred and using the supplied routed event identifier and
providing the opportunity to declare a different source for the event.</summary>
      <param name="routedEvent">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The identifier for the routed event.</span>
      </param>
      <param name="source">
        <span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 11px Verdana; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0" class="Apple-style-span">An alternate source that will be reported when the event is handled. This pre-populates the <strong>Source</strong> property.</span>
      </param>
      <param name="cellValidationError">The CellValidationError that occurred.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.CellValidationError">
      <summary>Gets the CellValidationError that occurred during the validation process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions.GetItemCount(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the item count for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>The item count.</returns>
      <param name="collectionViewGroup">The <strong>CollectionViewGroup</strong> for which to retrieve the item count.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions.GetItems(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the items for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>An IList&lt;object&gt; containing the items in the <strong>CollectionViewGroup</strong>.</returns>
      <param name="collectionViewGroup">The <strong>CollectionViewGroup</strong> whose items are to be retrieved.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.AllowGroup">
      <summary>Gets or sets a value indicating if the values in the column can be grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.AllowSort">
      <summary>Gets or sets a value indicating if the values in the column can be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.DisplayMemberBindingInfo">
      <summary>Gets or sets the binding information between a column and its corresponding field in the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.ForeignKeyConfiguration">
      <summary>Gets or sets a ForeignKeyConfiguration through which the visual representation
of a foreign key description can be configured.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Column.ForeignKeyConfigurationProperty">
      <summary>Identifies the ForeignKeyConfiguration dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.GetFittedWidth">
      <summary>Retrieves the fitted width of the column, in device-independent units (1/96th inch per unit).</summary>
      <returns>The fitted width of the column, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.ToString">
      <summary>Returns the string representation of the column.</summary>
      <returns>The string representation of the column.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event using the specified
<strong>PropertyChangedEventArgs</strong>.</summary>
      <param name="e">A <strong>PropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.ActualWidth">
      <summary>Gets the actual width of the column considering the Width, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ColumnBase~MinWidth.html">MinWidth</see>, and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ColumnBase~MaxWidth.html">MaxWidth</see> properties.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AllowGroup">
      <summary>Gets or sets a value indicating whether the data items in a grid can be grouped according to the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AllowSort">
      <summary>Gets or sets a value indicating whether the data items in a grid can be sorted according to the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CanBeCurrentWhenReadOnly">
      <summary>Gets or sets a value indicating whether cells in the column can receive focus when the parent column's ReadOnly property is set to <strong>true</strong>. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the cells' content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different CellContentTemplate based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellEditor">
      <summary>Gets or sets the CellEditor that contains the information required to display the template
that will be used to edit the content of the cells contained in the column as well as the activation gestures that activate the template.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells contained in the column are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the column when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellHorizontalContentAlignment">
      <summary>Gets or sets a value representing the horizontal content alignment of cells contained in the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellValidationRules">
      <summary>Gets the list of CellValidationRules against which the content of
the cells contained in the column are validated before they exist edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellVerticalContentAlignment">
      <summary>Gets or sets a value representing the vertical content alignment of cells contained in the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.DataGridControl">
      <summary>Gets the column's parent data-grid control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.FieldName">
      <summary>Gets or sets the <strong>case-sensitive</strong> field name that uniquely identifies the column in a grid's column collection.</summary>
      <exception caption="" cref="System.InvalidOperationException">Thrown when a column's FieldName property is set after the column has been added to a grid's column collection.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups that are created from the values of this column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupDescription">
      <summary>Gets or sets the group description that is used whenever groups are created according to the values of this column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplate">
      <summary>Gets or sets the template that will be used by a group to display its value when the group
is created according the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different GroupValueTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.HasFixedWidth">
      <summary>Gets a value indicating whether the column has a fixed width.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in the column failed
the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Index">
      <summary>Gets the index of the column in a grid's Column collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsFirstVisible">
      <summary>Gets a value indicating whether the column is the first visible column in a grid's.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsLastVisible">
      <summary>Gets a value indicating whether the column is the last visible column in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsMainColumn">
      <summary>Gets or sets a value indicating whether the column is a grid's main (primary) column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.MaxWidth">
      <summary>Gets or sets the maximum width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.MinWidth">
      <summary>Gets or sets the minimum width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.OverrideReadOnlyForInsertion">
      <summary>Gets or sets a value indicating whether an InsertionRow can be edited regardless of the
value of the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ColumnBase~ReadOnly.html">ReadOnly</see> property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.ReadOnly">
      <summary>Gets or sets a value indicating whether the content of the cells in the column can be edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.SortDirection">
      <summary>Gets a value indicating the direction in which the values contained in the column are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.SortIndex">
      <summary>Gets the sort index of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TextTrimming">
      <summary>Gets or sets a value that indicates the text trimming behavior to employ when <strong>textual</strong> content overflows the content area.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TextWrapping">
      <summary>Gets or sets a value indicating how <strong>textual</strong> content should be wrapped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Title">
      <summary>Gets or sets the data displayed in a column's corresponding ColumnManagerCell and/or
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.GroupByItem.html">GroupByItem</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the Title's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Visible">
      <summary>Gets or sets a value indicating whether the column is visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.VisiblePosition">
      <summary>Gets or sets the visible position of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Width">
      <summary>Gets or sets the width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.ActualWidthProperty">
      <summary>Identifies the ActualWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CanBeCurrentWhenReadOnlyProperty">
      <summary>Identifies the CanBeCurrentWhenReadOnlyProperty dependency
property. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateProperty">
      <summary>Identifies the CellContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateSelectorProperty">
      <summary>Identifies the CellContentTemplateSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellEditorDisplayConditionsProperty">
      <summary>Identifies the CellEditorDisplayConditions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellEditorProperty">
      <summary>Identifies the CellEditor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellHorizontalContentAlignmentProperty">
      <summary>Identifies the CellHorizontalContentAlignment dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellVerticalContentAlignmentProperty">
      <summary>Identifies the CellVerticalContentAlignment dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.FieldNameProperty">
      <summary>Identifies the FieldName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupConfigurationProperty">
      <summary>Identifies the GroupConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupDescriptionProperty">
      <summary>Identifies the GroupDescription dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateProperty">
      <summary>Identifies the GroupValueTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateSelectorProperty">
      <summary>Identifies the GroupValueTemplateSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.HasFixedWidthProperty">
      <summary>Identifies the HasFixedWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.IsFirstVisibleProperty">
      <summary>Identifies the IsFirstVisible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.IsLastVisibleProperty">
      <summary>Identifies the IsLastVisible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.MaxWidthProperty">
      <summary>Identifies the MaxWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.MinWidthProperty">
      <summary>Identifies the MinWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.OverrideReadOnlyForInsertionProperty">
      <summary>Identifies the OverrideReadOnlyForInsertion dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.SortDirectionProperty">
      <summary>Identifies the SortDirection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.SortIndexProperty">
      <summary>Identifies the SortIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TextTrimmingProperty">
      <summary>Identifies the TextTrimming dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateProperty">
      <summary>Identifies the TitleTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateSelectorProperty">
      <summary>Identifies the TitleTemplateSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.VisiblePositionProperty">
      <summary>Identifies the VisiblePosition dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.WidthProperty">
      <summary>Identifies the Width dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.ColumnBase.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnCollection.MainColumn">
      <summary>Gets or sets a grid's main (primary) column.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.ClearContainer">
      <summary>Clears the content of the column-manager cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>ColumnManagerCell</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>ColumnManagerCell</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCature</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for
the <em>item</em>.</summary>
      <param name="dataGridContext">A reference to the DataGridContext in which to prepare
the container</param>
      <param name="item">The item for which to prepare the container.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ColumnManagerCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerCell.IsBeingDragged">
      <summary>Gets a value if the ColumnManagerCell is currently being dragged.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerCell.IsPressed">
      <summary>Gets a value indicating whether the ColumnManagerCell is currently pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerCell.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerCell.IsPressedProperty">
      <summary>Identifies the IsPressed dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Create a new Cell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
      <param name="column">A reference to a Column object representing the cell's parent column.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise. By default, all ColumnManagerCells will return <strong>true</strong>.</returns>
      <param name="cell">A reference to the Cell whose type to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>ColumnManagerRow</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>ColumnManagerRow</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewMouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ColumnManagerRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnReorder">
      <summary>Gets or sets a value indicating whether the end user can reorder the columns' visible positions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnResize">
      <summary>Gets or sets a value indicating whether the end user can resize the width of the columns in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowSort">
      <summary>Gets or sets a value indicating whether the end user can sort columns.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnReorderProperty">
      <summary>Identifies the AllowColumnReorder dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnResizeProperty">
      <summary>Identifies the AllowColumnResize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CommitItemsEventArgs.AsyncCommitInfo">
      <summary>Gets an AsyncCommitInfo that provides information on the virtualized items to allow
those that have been modified to be committed to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CommitItemsEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to which the grid is
bound.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.#ctor">
      <summary>Initializes a new instance of the DataCell class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the DataCell class specifying the parent column's <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Column~FieldName.html">field name</see> and the cell's content.</summary>
      <param name="fieldName">A string representing the parent column's field name.</param>
      <param name="content">The content of the cell.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DataCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view or
theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridBindingInfo.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridBindingInfo</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.BindsDirectlyToSource">
      <summary>Gets or sets a value indicating whether the Path is evaluated relative to the
data item or the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.Converter">
      <summary>Gets or sets the convert that will be used to convert the value returned by the binding.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ConverterCulture">
      <summary>Gets or sets the <strong>CultureInfo</strong> in which the values returned by the Converter will be evaluated.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ConverterParameter">
      <summary>Gets or sets the parameter that will be passed to the Converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ElementName">
      <summary>Gets or sets the name of the element that will be used as the binding source object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.FallbackValue">
      <summary>Gets or sets the value that will be used when the binding is unable to return a value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.NotifyOnSourceUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding target to the binding source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ReadOnly">
      <summary>Gets or sets a value indicate whether the binding is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.UpdateSourceExceptionFilter">
      <summary>Gets or sets a callback that can be handled to provide custom logic for when an exception is thrown by the binding engine during the update of the binding
source value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ValidationRules">
      <summary>Gets a collection of rules that will be used to validate user input.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.XPath">
      <summary>Gets or sets the <strong>XPath</strong> query that returns the value to use on the XML binding source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCheckBox.IsChecked">
      <summary>Gets or sets a value indicating if the checkbox is checked.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCheckBox.IsThreeState">
      <summary>Gets or sets a value indicating if the checkbox can be in an undetermined state: neither checked or unchecked.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCheckBox.Checked">
      <summary>Raised when the checkbox is checked.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCheckBox.Indeterminate">
      <summary>Raised when the checkbox is in an indeterminate state: neither checked or unchecked.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCheckBox.Unchecked">
      <summary>Raised when the checkbox is unchecked.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor">
      <summary>Initializes a new instance of the DataGridCollectionView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection?which must implement the <strong>IEnumerable</strong>
interface?around which the <strong>DataGridCollectionView</strong> will be created.</summary>
      <param name="collection">A reference to a collection which implements the <strong>IEnumerable</strong> interface.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection?which must implement the <strong>IEnumerable</strong>
interface?around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in the collection or added
through the SourceItems property.</summary>
      <param name="collection">A reference to a collection which implements the <strong>IEnumerable</strong> interface.</param>
      <param name="itemType">The type of the items contained in the collection or added through the SourceItems property.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection?which must implement the <strong>IEnumerable</strong>
interface?around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in the collection or added
through the SourceItems property, as well as indicating whether
item properties and detail descriptions are to be automatically created.</summary>
      <param name="collection">A reference to a collection which implements the <strong>IEnumerable</strong> interface.</param>
      <param name="itemType">The type of the items contained in the collection or added through the SourceItems property.</param>
      <param name="autoCreateItemProperties">
        <strong>true</strong> if item properties are to be automatically created; <strong>false</strong> otherwise.</param>
      <param name="autoCreateDetailDescriptions">
        <strong>true</strong> if detail descriptions are to be automatically created; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection?which must implement the <strong>IEnumerable</strong>
interface?around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in the collection or added
through the SourceItems property, as well as indicating whether
item properties, detail descriptions, and foreign key descriptions are to be automatically created.</summary>
      <param name="collection">A reference to a collection which implements the <strong>IEnumerable</strong> interface.</param>
      <param name="itemType">The type of the items contained in the collection or added through the SourceItems property.</param>
      <param name="autoCreateItemProperties">
        <strong>true</strong> if item properties are to be automatically created; <strong>false</strong> otherwise.</param>
      <param name="autoCreateDetailDescriptions">
        <strong>true</strong> if detail descriptions are to be automatically created; <strong>false</strong> otherwise.</param>
      <param name="autoCreateForeignKeyDescriptions">
        <strong>true</strong> if foreign key descriptions are to be automatically created; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.Contains(System.Object)">
      <summary>Returns a value indicating whether the specified item exists in the collection.</summary>
      <returns>
        <strong>true</strong> if the item exists in the collection; <strong>false</strong> otherwise.</returns>
      <param name="item">The item to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.GetEnumerator">
      <summary>Retrieves an object that can be used to enumerate the items in the view.</summary>
      <returns>An <strong>IEnumerator</strong> that can be used to enumerate the items in the view.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified index in the view.</summary>
      <returns>The item at the specified <em>index</em>.</returns>
      <param name="index">The zero-based index at which to retrieve the item.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.IndexOf(System.Object)">
      <summary>Returns the zero-based index of the specified item.</summary>
      <returns>The zero-based index of <em>item</em>. If the item is not found, -1 is returned.</returns>
      <param name="item">The item whose index to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index as the new CurrentItem.</summary>
      <param name="position">The zero-based index at which to set the new CurrentItem.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index from the underlying data source.</summary>
      <exception caption="DataGridException" cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridException">RemoveAt was canceled.</exception>
      <param name="index">The zero-based index at which to remove the item from the underlying data source.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.AllowNew">
      <summary>Gets a value indicating whether new items can be added to the collection through the AddNew method.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.Count">
      <summary>Gets the number of items in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.IsEmpty">
      <summary>Gets a value indicating whether the <strong>filtered</strong> view is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.SourceCollection">
      <summary>Gets the underlying un-filtered collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.SourceItems">
      <summary>Gets the items that are contained in the SourceCollection.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AddNew">
      <summary>Adds a new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
      <returns>A reference to the item that was added to the list.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelEdit">
      <summary>Cancels the edit process.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelNew">
      <summary>Discards the new item added through a call to the AddNew method
before it is committed.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommitEdit">
      <summary>Commits the modifications made to the item in the underlying data source that is being edited.</summary>
      <exception caption="DataGridException" cref="">CommitEdit was canceled.When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommitNew">
      <summary>Commits the new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <strong>IDisposable</strong> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditItem(System.Object)">
      <summary>Edits the specified item in the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled.</exception>
      <param name="item">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item to edit.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item as the new CurrentItem.</summary>
      <param name="item">The item to set as the new CurrentItem.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToLast">
      <summary>Sets the last item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToNext">
      <summary>Sets the next item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToPrevious">
      <summary>Sets the previous item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.PassesFilter(System.Object)">
      <summary>Returns a value indicating whether the specified item in the underlying data source passes the filtering criteria, and is therefore included in the view.</summary>
      <returns>&lt;<strong>true</strong> if the item is to be included in the view; <strong>false</strong> otherwise.</returns>
      <param name="item">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item that is to be included in the view?if it passes the filtering criteria.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Refresh">
      <summary>Recreates the view.</summary>
      <returns>
        <para style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 8px">
          <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
When <strong>Refresh</strong> is called, the view will be cleared and reconstructed from the items in the underlying source. If the items were provided
directly through the <strong>Items</strong> collection, they will not be touched nor will the view be cleared.</span>
        </para>
        <para style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 8px">Once the view has been refreshed, any sorting, grouping, or filtering criteria that were applied to the view
will be re-applied.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Remove(System.Object)">
      <exception caption="DataGridException" cref="">Remove was canceled.</exception>
      <param name="item">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item to remove from the underlying data source.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index from the underlying data source.</summary>
      <exception caption="DataGridException" cref="">RemoveAt was canceled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
Raises the <strong>CollectionChanged</strong>event.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoCreateForeignKeyDescriptions">
      <summary>Gets a value indicating whether the foreign key descriptions are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoCreateItemProperties">
      <summary>Gets a value indicating whether the item properties are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanAddNew">
      <summary>Gets a value indicating whether a new item can be added to the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanCancelEdit">
      <summary>Gets a value indicating whether the collection can discard pending changes and restore the original values of an edited object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanFilter">
      <summary>Gets a value indicating whether the view supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanGroup">
      <summary>Gets a value indicating whether the view can be grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanRemove">
      <summary>Gets a value indicating whether an item can be removed from the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanSort">
      <summary>Gets a value indicating whether the view can be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Culture">
      <summary>Gets or sets the culture to use during sorting.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentAddItem">
      <summary>Gets the item that is currently being added to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentEditItem">
      <summary>Gets the item in the underlying data source that is currently being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentItem">
      <summary>Gets the view's current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentPosition">
      <summary>Gets the position of the CurrentItem within the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Filter">
      <summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.GroupDescriptions">
      <summary>Gets a collection of <strong>GroupDescription</strong> objects that describe how the items in the collection are grouped in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Groups">
      <summary>Gets the runtime groups that are created based on the GroupDescriptions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsAddingNew">
      <summary>Gets a value indicating whether an add transaction is in progress.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsCurrentAfterLast">
      <summary>Gets a value indicating whether the CurrentItem is beyond the
end of the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsCurrentBeforeFirst">
      <summary>Gets a value indicating whether the CurrentItem is before the
beginning of the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsEditingItem">
      <summary>Gets a value indicating whether an item in the underlying data source is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemProperties">
      <summary>Gets the DataGridItemProperty objects that determine the characteristics of the
items contained in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemType">
      <summary>Gets the type of the items contained in the collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NeedsRefresh">
      <summary>Gets a value that indicates whether this view needs to be refreshed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.SortDescriptions">
      <summary>Gets a collection of <strong>SortDescription</strong> objects that describe how the items in the collection are sorted in the view.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.BeginningEdit">
      <summary>Raised when the EditItem method has been called to signal that the
edit process of an item in the underlying data source is about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelingEdit">
      <summary>Raised when the CancelEdit &gt;method has been called to signal
that the edit process of an item in the underlying data source is about to be canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelingNewItem">
      <summary>Raised when the CancelNew method has been called to signal that
the insertion process of a new item is about to be canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommittingEdit">
      <summary>Raised when the CommitEdit method has been called to signal that
modifications made to an item in the underlying data source are about to be committed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommittingNewItem">
      <summary>Raised when the CommitNew method has been called to signal that a
new item is about to be committed to the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CreatingNewItem">
      <summary>Raised when the AddNew method has been called to signal that a new
item is about to be created.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditBegun">
      <summary>Raised after the BeginningEdit event to signal that the
edit process of an item in the underlying data source has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditCanceled">
      <summary>Raised after the CancelingEdit event to signal that the
edit process of an item in the underlying data source has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditCommitted">
      <summary>Raised after the CommittingEdit event to signal that the
modifications made to an item in the underlying data source have been committed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.InitializingNewItem">
      <summary>Raised after the CreatingNewItem event to allow the new
item to be initialized.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemRemoved">
      <summary>Raised after the RemovingItem event to signal that an item
has been removed from the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCanceled">
      <summary>Raised after the CancelingNewItem event to signal that
the insertion process of a new item has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCommitted">
      <summary>Raised after the CommittingNewItem event to signal
that a new item has been committed to the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCreated">
      <summary>Raised after the CreatingNewItem and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridCollectionViewBase~InitializingNewItem_EV.html">InitializingNewItem</see> events to signal that a new item has
been created.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.RemovingItem">
      <summary>Raised when the Remove ora
href="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridCollectionViewBase~RemoveAt.html"&gt;RemoveAt methods have been called to signal that an item is about to
be removed from the underlying data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Raised when the <strong>CollectionViewType</strong> property is changed.</summary>
      <param name="oldCollectionViewType">The old value of the <strong>CollectionViewType</strong> property.</param>
      <param name="newCollectionViewType">The new value of the <strong>CollectionViewType</strong> property.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Raised when the <strong>CollectionViewType</strong> property is changed.</summary>
      <param name="oldCollectionViewType">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The old value of the <strong>CollectionViewType</strong> property.</span>
      </param>
      <param name="newCollectionViewType">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The new value of the <strong>CollectionViewType</strong> property.</span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateForeignKeyDescriptions">
      <summary>Gets a value indicating whether the foreign key descriptions are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DefaultCalculateDistinctValues">
      <summary>Get or sets the default value of the CalculateDistinctValues property when a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridItemProperty.html">DataGridItemProperty</see> has not explicitly set its value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DistinctValuesUpdateMode">
      <summary>
        <para>Gets or sets the mode that indicates when distinct values used by auto-filtering should be updated.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.Source">
      <summary>Gets or sets the collection from which the view is created.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateForeignKeyDescriptionsProperty">
      <summary>Identifies the AutoCreateForeignKeyDescriptions dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateItemPropertiesProperty">
      <summary>Identifies the AutoCreateItemProperties
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DefaultCalculateDistinctValuesProperty">
      <summary>Identifies the DefaultCalculateDisctinctValues dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DistinctValuesConstraintProperty">
      <summary>Identifies the DistinctValuesConstraint
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DistinctValuesUpdateModeProperty">
      <summary>Identifies the DistinctValuesUpdateMode
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.ItemTypeProperty">
      <summary>Identifies the ItemType dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DistinctValuesRefreshNeeded">
      <summary>Raised when the distinct values need to be refreshed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ApplyFilter">
      <summary>Represents the <strong>ApplyFilter</strong> command, which requests that filter criteria be applied. By default, Enter.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.BeginEdit">
      <summary>Represents the <strong>BeginEdit</strong> command, which requests that the row enter edit mode. By default, <em>F2</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CancelEdit">
      <summary>Represents the <strong>CancelEdit</strong> command, which requests that row exit edit mode and any changes be discarded. By default, <em>Escape</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ClearFilter">
      <summary>Represents the <strong>ClearFilter</strong> command, which requests that any and all filter criteria be cleared.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CollapseDetails">
      <summary>Represents the <strong>CollapseDetails</strong> command, which requests that the associated detail and its possible child details be collapsed. By default, the
<em>Left arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CollapseGroup">
      <summary>Represents the <strong>CollapseGroup</strong> command, which requests that the associated group
be collapsed. By default, the <em>Left arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.EndEdit">
      <summary>Represents the <strong>EndEdit</strong> command, which requests that the row exit edit mode. By default, <em>Enter</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ExpandDetails">
      <summary>Represents the <strong>ExpandDetails</strong> command, which requests that the associated detail and its possible child details be expanded. By default, the
<em>Right arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ExpandGroup">
      <summary>Represents the <strong>ExpandGroup</strong> command, which requests that the associated group be
expanded. By default, the <em>Right arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.Refresh">
      <summary>Represents the <strong>Refresh</strong> command, which requests that the items in the grid be refreshed. By default, F5.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ToggleDetailExpansion">
      <summary>Represents the <strong>ToggleDetailExpansion</strong> command, which requests that the associated detail and its possible child details be collapsed if the
root detail is expanded, and expanded if the root detail is collapsed. By default, <em>Space</em> or double-clicking the left mouse button. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ToggleGroupExpansion">
      <summary>Represents the <strong>ToggleGroupExpansion</strong> command, which requests that the associated group be collapsed if it is expanded, and expanded if it is collapsed. By default, <em>Space</em> or
double-clicking the left mouse button.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCommittingNewItemEventArgs</strong> class specifying the new item, the collection view to which it is to be
added, and a value indicating whether the process is to be canceled.</summary>
      <param name="collectionView">The DataGridCollectionView to which the item is to be committed.</param>
      <param name="item">The new item.</param>
      <param name="cancel">
        <strong>true</strong> if the process is to be canceled; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.Index">
      <summary>Gets or sets the index at which the item is to be inserted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.NewCount">
      <summary>Gets or sets the new item count.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.AreDetailsExpanded(System.Object)">
      <summary>Retrieves a value indicating whether the details for the specified data item are expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified data item is not part of the current context.</exception>
      <returns>
        <strong>true</strong> if the details of the specified data item are expanded; <strong>false</strong> if they are collapsed. Cannot be a null reference (<b>Nothing</b> in Visual Basic).</returns>
      <param name="dataItem">The data item to query.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.CancelEdit">
      <summary>Cancels the edit process of the item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.CollapseGroup">
      <summary>Collapses the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.EndEdit">
      <summary>Ends the edit process of the item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ExpandGroup">
      <summary>Expands the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified group is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetChildContexts">
      <summary>Retrieves the child DataGridContexts of the context.</summary>
      <returns>An <strong>IEnumerable</strong> that contains the child DataGridContexts of the
context. Can be empty if the context does not have child contexts.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetContainerFromItem(System.Object)">
      <summary>Retrieves the container of the specified item.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container of the specified item. Can be a null reference (<b>Nothing</b> in Visual Basic) if the item belongs to the context but does not have a
container.</returns>
      <param name="item">An item in the context whose container to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetGroupFromCollectionViewGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the group for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>A reference to <strong>CollectionViewGroup</strong>'s corresponding Group.</returns>
      <param name="collectionViewGroup">The <strong>CollectionViewGroup</strong> whose corresponding Group is to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetItemFromContainer(System.Windows.DependencyObject)">
      <summary>Retrieves an item for the specified container.</summary>
      <returns>The item for the specified <em>container.</em></returns>
      <param name="container">A <strong>DependencyObject</strong> representing the container of an item in the context.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetParentGroupFromItem(System.Object)">
      <summary>Retrieves the parent group for the specified item.</summary>
      <returns>A <strong>CollectionViewGroup</strong> representing the parent group of the specified item. Can be a null reference (<b>Nothing</b> in Visual Basic) if the item is part of the context but does not
have parent group.</returns>
      <param name="item">The item whose parent group is to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.IsGroupExpanded">
      <summary>Retrieves a value indicating whether the specified group is expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context. </exception>
      <returns>
        <strong>true</strong> if the group is expanded; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.OnPropertyChanged">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ToggleGroupExpansion(System.Windows.Data.CollectionViewGroup)">
      <summary>Toggles the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context.</exception>
      <param name="group">A <strong>CollectionViewGroup</strong> representing the group whose state is to be toggled. A collapsed group will be expanded and an expanded group will be
collapsed.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.BeginEdit">
      <summary>Places the context's current item in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.BeginEdit(System.Object)">
      <summary>Places the specified item in edit mode.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not part of the current context.</exception>
      <param name="item">The item to place in edit mode.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetChildContext(System.Object,System.String)">
      <summary>Retrieves the child DataGridContext created from the detail configuration that has the
specified relation name.</summary>
      <returns>The child DataGridContext of the specified <em>parentItem</em>.</returns>
      <param name="parentItem">The item whose child DataGridContext is to be retrieved. Cannot be a null reference (<b>Nothing</b> in Visual Basic).</param>
      <param name="relationName">A string representing the relation name of the DetailConfiguration that is the
source of the child context.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.AllowDetailToggle">
      <summary>Gets a value indicating whether the end user can toggle the expansion state of details in the context. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Columns">
      <summary>Gets a list of the columns contained in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentColumn">
      <summary>Gets or sets the context's current column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentItem">
      <summary>Gets or sets the context's current data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentItemIndex">
      <summary>Gets or sets the index of the context's current data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DataGridControl">
      <summary>Gets the context's parent DataGridControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DefaultGroupConfiguration">
      <summary>Gets the default configuration that will be used by any groups in the context for which an explicit group configuration is not provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DistinctValues">
      <summary>Gets a dictionary that contains a list of the context's DataGridItemProperty
objects with their corresponding distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.NotSupportedException">The ICollection&lt;&gt;, IEnumerable&lt;&gt;, and IEnumerable interfaces are not supported. Only IDictionary members can be used.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Footers">
      <summary>Gets a collection that contains the items that are located in the footer section of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.GroupConfigurationSelector">
      <summary>Gets a group-configuration selector that will be used to select the appropriate configuration for a group in the context based on its information and/or
content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.GroupLevelDescriptions">
      <summary>Gets a collection of GroupLevelDescription objects that contain information on
each group level contained in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.HasDetails">
      <summary>Gets a value indicating whether the context has details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Headers">
      <summary>Gets a collection that contains the items that are located in the header section of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.IsCurrent">
      <summary>Gets a value indicating whether the context is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ItemContainerStyle">
      <summary>Gets the style that is applied to the container element (DataRow) generated for each item in
the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ItemContainerStyleSelector">
      <summary>Gets a style selector that selects the appropriate style to apply to each generated container element (DataRow) in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Items">
      <summary>Gets the collection view that was used to generate the content of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.MaxGroupLevels">
      <summary>Gets a value indicating the maximum number of group levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.MaxSortLevels">
      <summary>
        <br />
Gets a value indicating the maximum number of sort levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ParentDataGridContext">
      <summary>Gets the context's parent DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ParentItem">
      <summary>
        <para>This property is not used in the toolkit version of the datagrid control.</para>
        <para>Gets the parent data item to which the context belongs</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedCellRanges">
      <summary>Gets the cell ranges selected in the data context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedItemRanges">
      <summary>Gets the data item ranges selected in the data context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedItems">
      <summary>Gets a collection of data items that are currently selected in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.VisibleColumns">
      <summary>Gets a list of the columns in the context whose Visible property is
<strong>true</strong>, ordered according to their <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Column~VisiblePosition.html">VisiblePosition</see>.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridContext.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.#ctor">
      <summary>Initializes a new instance of the DataGrid class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.AreDetailsExpanded(System.Object)">
      <summary>Retrieves a value indicating whether the details for the specified <strong>master</strong> data item are expanded. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master data item.</exception>
      <returns>
        <strong>true</strong> if the details of the master data item are expanded; <strong>false</strong> if they are collapsed;</returns>
      <param name="dataItem">The <strong>master</strong> data item to query. Cannot be a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BringItemIntoView(System.Object)">
      <summary>Brings the specified item into view.</summary>
      <returns>
        <strong>true</strong> if the specified element was brought into view; <strong>false</strong> otherwise.</returns>
      <param name="item">The item to bring into view.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CancelEdit">
      <summary>Cancels the edit process of master item being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not a master item.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <para>Reverts the effects of PrepareContainerForItemOverride.</para>
      </summary>
      <param name="element">The container element.</param>
      <param name="item">The item.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CollapseGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Collapses the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
      <param name="group">A <strong>CollectionViewGroup</strong> representing the <strong>master</strong> group to collapse.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.EndEdit">
      <summary>Ends the edit process of the master item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not a master item.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExpandGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Expands the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
      <param name="group">A <strong>CollectionViewGroup</strong> representing the <strong>master</strong> group to expand.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetChildContexts">
      <summary>Retrieves the child DataGridContexts of the grid.</summary>
      <returns>An <strong>IEnumerable</strong> that contains the child DataGridContexts of the grid.
Can be empty if the grid does not have child contexts.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainer(System.Windows.DependencyObject)">
      <summary>Retrieves the container for the specified <strong>DependencyObject</strong>.</summary>
      <returns>A <strong>FrameworkElement</strong> object representing the container.</returns>
      <param name="obj">A <strong>DependencyObject</strong> representing the item whose container is to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainerFromItem(System.Object)">
      <summary>Retrieves a container of the specified item.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is neither a master data item nor an item located in the headers or footers of a grid or master group.</exception>
      <returns>A <strong>DependencyObject</strong> representing the container of the specified master item. Can be a null reference (<b>Nothing</b> in Visual Basic) if the item belongs to the context but does not
have a container.</returns>
      <param name="item">The item whose container to retrieve. The item can correspond to a master data item or an item in the headers or footers of the grid or master group. Items
located in the fixed headers or footers of the grid or in a detail will return throw an exception.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetDataGridContext(System.Windows.DependencyObject)">
      <summary>Retrieves the DataGridContext for the specified <strong>DependencyObject</strong>.</summary>
      <returns>A reference to the item's DataGridContext.</returns>
      <param name="obj">A <strong>DependencyObject</strong> representing the item whose DataGridContext is to
be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetGroupFromCollectionViewGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the group for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>A reference to <strong>CollectionViewGroup</strong>'s corresponding Group.</returns>
      <param name="collectionViewGroup">The <strong>CollectionViewGroup</strong> whose corresponding Group is to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetHasExpandedDetails(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether a container (DataRow) has one or more expanded details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <returns>
        <strong>true</strong> if the container has one or more expanded details; <strong>false</strong> if the container does not have expanded details.</returns>
      <param name="obj">A <strong>DependencyObjecy</strong> representing the container (DataRow) to query.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetIsFixedFootersHost(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed footers through the
FixedFooters property.</para>
      </summary>
      <returns>
        <strong>true</strong> if a panel is used as the fixed-footers host; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The panel identified as the host that will contain all elements added to the grid's fixed footers through the FixedFooters property.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetIsFixedHeadersHost(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed headers through the
FixedHeaders property.</para>
      </summary>
      <returns>
        <strong>true</strong> if a panel is used as the fixed-headers host; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The panel identified as the host that will contain all elements added to the grid's fixed headers through the FixedHeaders property.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetItemFromContainer(System.Windows.DependencyObject)">
      <summary>Retrieves an item for the specified container.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified container is neither for a master data item nor for an item located in the headers or footers of a grid or master group.</exception>
      <returns>The item for the specified <em>container</em>.</returns>
      <param name="container">A <strong>DependencyObject</strong> representing the container of the item to retrieve. Only the container of a master data item or an item in the headers or
footers of the grid or master group can be specified. Containers located in the fixed headers or footers of the grid or in a detail will throw an exception.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetParentGroupFromItem(System.Object)">
      <summary>Retrieves the parent group for the specified item.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is neither a master data item nor an item located in the headers or footers of a grid or master group.</exception>
      <returns>A <strong>CollectionViewGroup</strong> representing the parent group of the specified item. Can be a null reference (<b>Nothing</b> in Visual Basic) if the item exists but does not have a parent
group.</returns>
      <param name="item">
        <para>The item whose parent group is to be retrieved. The item can correspond to a master data item or an item in the headers or footers of a master group.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetStatContext(System.Windows.DependencyObject)">
      <summary>Gets the context from which a statistical function retrieves the values needed to calculate its result, and that exposes the results as properties that have
the same names as the functions' ResultPropertyName properties. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <returns>An object representing the context from which a statistical function retrieves the values needed to calculate its result, and that exposes the results as
properties that have the same names as the functions' ResultPropertyName properties.</returns>
      <param name="obj">The element whose statistical context to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.IsGroupExpanded(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves a value indicating whether the specified <strong>master</strong> group is expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
      <returns>
        <strong>true</strong> if the group is expanded; <strong>false</strong> otherwise.</returns>
      <param name="group">A <strong>CollectionViewGroup</strong> representing the <strong>master</strong> group whose state to query.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <strong>ItemContainer</strong>.</summary>
      <returns>
        <strong>true</strong> if the item is its own <strong>ItemContainer</strong><font color="black">; <strong>false</strong> otherwise.</font></returns>
      <param name="item">
        <para>Specified item.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCollapseGroupExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Collapses the group when the command is executed.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An ExecutedRoutedEventsArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCopyExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Occurs when the Copy command is executed.</summary>
      <param name="sender">
        <para>The source of the event.</para>
      </param>
      <param name="e">
        <para>An ExecutedRoutedEventsArgs that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>DataGridControl</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>DataGridControl</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCurrentChanged(Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs)">
      <summary>Raises the CurrentChanged event.</summary>
      <param name="e">A DataGridCurrentChangedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCurrentChanging(Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs)">
      <summary>Raises the CurrentChanging event.</summary>
      <param name="e">A DataGridCurrentChangingEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnDeleteExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <para>Occurs when when the Delete command is executed.</para>
      </summary>
      <param name="sender">
        <para>The source of the event.</para>
      </param>
      <param name="e">
        <para>An ExecutedRoutedEventsArgs that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnDeletingSelectedItemError(Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs)">
      <summary>Raises the DeletingSelectedItemError event.</summary>
      <param name="e">A DeletingSelectedItemErrorRoutedEventArgs that contains the
event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnDeletingSelectedItems(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the DeletingSelectedItems event.</summary>
      <param name="e">A CancelRoutedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnExpandGroupExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>Expands the group when the command is executed.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An ExecutedRoutedEventsArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
      <param name="e">A <strong>DependencyPropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
        <para>Reports a change to the <strong>ItemsSource</strong><font color="black">property.</font></para>
      </summary>
      <param name="oldValue">Old value of the <strong>ItemsSource</strong> property.</param>
      <param name="newValue">
        <para>New value of the <strong>ItemsSource</strong> property.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled <strong>KeyDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Raises the <strong>MouseLeave</strong> event.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>MouseLeftButtonDown</strong> event.</summary>
      <param name="e">A <strong>MouseLeftButtonDown</strong> event that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="e">A <strong>PropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewGotKeyboardFocus</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>KeyboardFocusChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewMouseDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>PreviewMouseUp</strong> event.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnRefreshExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <para>Occurs when the Refresh command is executed.</para>
      </summary>
      <param name="sender">
        <para>The source of the event.</para>
      </param>
      <param name="e">
        <para>An ExecutedRoutedEventsArgs that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectedItemsDeleted">
      <summary>Raises the SelectedItemsDeleted event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectionChanged(Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs)">
      <summary>Raises the SelectionChanged event.</summary>
      <param name="e">A DataGridSelectionChangedEventsArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectionChanging(Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs)">
      <summary>Raises the SelectionChangingevent.</summary>
      <param name="e">A DataGridSelectionChangingEventArgsthat contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnToggleGroupExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <para>Toggles the group (expands or collapses it as necessary) when the command is executed.</para>
      </summary>
      <param name="sender">
        <para>The source of the event.</para>
      </param>
      <param name="e">
        <para>An ExecutedRoutedEventsArgs that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified <em>element</em> to display the specified <em>item</em>.</summary>
      <param name="element">
        <para>Element used to display the specified item.</para>
      </param>
      <param name="item">
        <para>Specified item.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.SetIsFixedFootersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <para>Sets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed footers through the
FixedFooters property.</para>
      </summary>
      <param name="obj">
        <para>The panel identified as the host that will contain all elements added to the grid's fixed footers through the FixedFooters property.</para>
      </param>
      <param name="value">
        <strong>true</strong> to identify a a panel as the fixed-footers host; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.SetIsFixedHeadersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <para>Sets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed headers through the
FixedHeaders property.</para>
      </summary>
      <param name="obj">
        <para>The panel identified as the host that will contain all elements added to the grid's fixed headers through the FixedHeaders property.</para>
      </param>
      <param name="value">
        <strong>true</strong> to identify a a panel as the fixed-headers host; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ToggleGroupExpansion(System.Windows.Data.CollectionViewGroup)">
      <summary>Toggles the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
      <param name="group">A <strong>CollectionViewGroup</strong> representing the <strong>master</strong> group whose state is to be toggled. A collapsed group will be expanded and an
expanded group will be collapsed.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginEdit">
      <summary>Places the grid's current item in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginEdit(System.Object)">
      <summary>Places the specified <strong>master</strong> item in edit mode.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master item.</exception>
      <param name="item">
        <para>The <strong>master</strong> item to place in edit mode.</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AllowDetailToggle">
      <summary>Gets or sets a value indicating whether the end user can toggle the expansion state of the grid's immediate child details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AllowDrag">
      <summary>Gets or sets a value indicating whether selected rows can be dragged to a target host, such as Excel, in order to copy the data directly without performing an
explicit copy/paste.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateColumns">
      <summary>
        <para>Gets or sets a value indicating whether columns should automatically be created when the
grid is bound to an <strong>ItemsSource</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateForeignKeyConfigurations">
      <summary>
        <para>Gets or sets a value indicating whether the foreign key configurations are automatically created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the grid when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ClipboardExporters">
      <summary>Gets a collection of clipboard exporters (see Remarks).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.Columns">
      <summary>Gets a list of the columns contained in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ConnectionError">
      <summary>Gets the connection error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ConnectionState">
      <summary>Gets the connection state of the underlying virtualized collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentColumn">
      <summary>
        <para>Gets or sets the grid's current <strong>master</strong>column.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentContext">
      <summary>Gets the context in which the global current item is located.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentItem">
      <summary>Gets or sets the grid's current <strong>master</strong> data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultCellEditors">
      <summary>Gets a list of CellEditors that will be used, by default, for cells of the associated data
type if none is explicitly provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultDetailConfiguration">
      <summary>Gets or sets the detail configuration that will be applied to the child details of the grid <strong>and any descendant details</strong> when an explicit detail
configuration is not provided for a specific detail relation. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultGroupConfiguration">
      <summary>Gets or sets the default configuration that will be applied to any groups in the grid for which an explicit group configuration is not provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DeferInitialLayoutPass">
      <summary>Gets or sets a value indicating whether the datagrid should defer rendering itself until after the owner Window (and the other controls in it) has completed
its layout pass.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.EditTriggers">
      <summary>Gets or sets a value indicating what triggers will cause cells to enter edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalCurrentColumn">
      <summary>Gets the column that is current in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalCurrentItem">
      <summary>Gets the data item that is current in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalSelectedItems">
      <summary>Gets the data items that are selected in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GroupConfigurationSelector">
      <summary>Gets or sets a group-configuration selector that will be used to select the appropriate configuration for a master group based on its information and/or
content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GroupLevelDescriptions">
      <summary>Gets a collection of GroupLevelDescription objects that contain information on
each group level contained in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HandlesScrolling">
      <summary>Gets a value indicating whether the grid supports scrolling.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in the grid failed the
validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HideSelection">
      <summary>
        <para>Gets or sets a value indicating whether the selected rows should
remain highlighted when the grid loses focus.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsBeingEdited">
      <summary>Gets a value indicating whether a row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsCopyCommandEnabled">
      <summary>Gets or sets a value indicating whether the selected items in the grid can be copied when the CTRL-C keys are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsDeleteCommandEnabled">
      <summary>Gets or sets a value indicating whether the selected items in the grid can be deleted when the DELETE key is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsRefreshCommandEnabled">
      <summary>Gets or sets a value indicating whether the items in the grid are refreshed when the F5 key is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemScrollingBehavior">
      <summary>Gets or sets a value indicating how the data items in the grid are scrolled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsPrimaryAxis">
      <summary>Gets or sets a value representing which axis of a DataRow must be completely visible in order to determine
which <strong>DataRow</strong> will receive the focus when the page-up or page-down buttons are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceName">
      <summary>Gets or sets the name of the grid's items source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceNameTemplate">
      <summary>Gets or sets the template that is used to display the name of the grid's items source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.MaxGroupLevels">
      <summary>Gets or sets a value indicating the maximum number of group levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.MaxSortLevels">
      <summary>Gets or sets a value indicating the maximum number of sort levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.NavigationBehavior">
      <summary>Gets or sets a value indicating how the focus navigates from one element to another in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.PagingBehavior">
      <summary>Gets or sets a value representing the paging behavior of the grid when the page-up and page-down buttons are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ReadOnly">
      <summary>Gets or sets a value indicating whether the values of the cells contained in the grid can be edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedCellRanges">
      <summary>
        <para>Gets the cell ranges selected in the datagrid control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedContexts">
      <summary>Gets the contexts in which items are selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedIndex">
      <summary>
        <para>Gets or sets the index of the currently selected <strong>data item</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItem">
      <summary>Gets or sets the selected <strong>data item</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemRanges">
      <summary>
        <para>Gets a collection of the data item ranges selected in the datagrid control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItems">
      <summary>Gets a collection of the data items that are currently selected in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectionMode">
      <summary>
        <para>Gets or sets a value indicating how data items in the grid are selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectionUnit">
      <summary>Gets or sets a value indicating which type of unit (cell or row) is used for selections in the datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeCurrent">
      <summary>Gets or sets a value indicating whether the grid's current item is synchronized with the collection view's current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeSelectionWithCurrent">
      <summary>Gets or sets a value indicating whether the current item is always selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.UpdateSourceTrigger">
      <summary>Gets or sets a value representing the moment when data is to be written to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.View">
      <summary>Gets or sets the view applied to the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.VisibleColumns">
      <summary>Gets a list of the columns whose Visible property is <strong>true</strong>, ordered
according to their <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Column~VisiblePosition.html">VisiblePositions</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AllowDetailToggleProperty">
      <summary>Identifies the AllowDetailToggle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AllowDragProperty">
      <summary>Identifies the AllowDrag dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateColumnsProperty">
      <summary>Identifies the AutoCreateColumns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateForeignKeyConfigurationsProperty">
      <summary>Identifies the AutoCreateForeignKeyConfigurations
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CellEditorDisplayConditionsProperty">
      <summary>Identifies the CellEditorDisplayConditions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ColumnsProperty">
      <summary>Identifies the Columns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ConnectionErrorProperty">
      <summary>Identifies the ConnectionError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ConnectionStateProperty">
      <summary>Identifies the ConnectionState dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ContainerProperty">
      <summary>Identifies the <strong>Container</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CurrentChangedEvent">
      <summary>Identifies the CurrentChanging routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CurrentChangingEvent">
      <summary>Identifies the CurrentChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DataGridContextProperty">
      <summary>Identifies the <strong>DataGridContext</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DefaultDetailConfigurationProperty">
      <summary>Identifies the DefaultDetailConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DefaultGroupConfigurationProperty">
      <summary>Identifies the DefaultGroupConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DeferInitialLayoutPassProperty">
      <summary>Identifies the DeferInitialLayoutPass dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemErrorEvent">
      <summary>Identifies the DeletingSelectedItemError routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemsEvent">
      <summary>Identifies the DeletingSelectedItems routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.EditTriggersProperty">
      <summary>Identifies the EditTriggers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.GroupConfigurationSelectorProperty">
      <summary>Identifies the GroupConfigurationSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.GroupLevelDescriptionsProperty">
      <summary>Identifies the GroupLevelDescriptions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HasExpandedDetailsProperty">
      <summary>Identifies the <strong>HasExpandedDetails</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HideSelectionProperty">
      <summary>Identifies the HideSelection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsCopyCommandEnabledProperty">
      <summary>Identifies the IsCopyCommandEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsDeleteCommandEnabledProperty">
      <summary>Identifies the IsDeleteCommandEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsFixedFootersHostProperty">
      <summary>Identifies the <strong>IsFixedFootersHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsFixedHeadersHostProperty">
      <summary>Identifies the <strong>IsFixedHeadersHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsRefreshCommandEnabledProperty">
      <summary>Identifies the IsRefreshCommandEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemScrollingBehaviorProperty">
      <summary>Identifies the ItemScrollingBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemsPrimaryAxisProperty">
      <summary>Identifies the ItemsPrimaryAxis dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceNameTemplateProperty">
      <summary>Identifies the ItemsSourceNameTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.MaxGroupLevelsProperty">
      <summary>Identifies the MaxGroupLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.MaxSortLevelsProperty">
      <summary>Identifies the MaxSortLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.NavigationBehaviorProperty">
      <summary>Identifies the NavigationBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.PagingBehaviorProperty">
      <summary>Identifies the PagingBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ParentDataGridControlProperty">
      <summary>Identifies the <em>ParentDataGridControl</em> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedCellRangesProperty">
      <summary>Identifies the SelectedCellRanges dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemRangesProperty">
      <summary>Identifies the SelectedRanges dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsDeletedEvent">
      <summary>Identifies the SelectedItemsDeleted routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsProperty">
      <summary>Identifies the SelectedItems dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionChangedEvent">
      <summary>Identifies the SelectionChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionChangingEvent">
      <summary>Identifies the SelectionChangingEvent routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionUnitProperty">
      <summary>Identifies the SelectionUnit dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.StatContextProperty">
      <summary>Identifies the <strong>StatContext</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeCurrentProperty">
      <summary>Identifies the SynchronizeCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeSelectionWithCurrentProperty">
      <summary>Identifies the SynchronizeSelectionWithCurrent
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.UpdateSourceTriggerProperty">
      <summary>Identifies the UpdateSourceTrigger dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ViewProperty">
      <summary>Identifies the View dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.VisibleColumnsProperty">
      <summary>Identifies the VisibleColumns dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.CurrentChanged">
      <summary>Raised after the current visual row (any type that can be current) has been changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.CurrentChanging">
      <summary>Raised when the current visual row (any type that can be current) is about to change.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemError">
      <summary>Raised when an error occurs while attempting to delete a selected item.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItems">
      <summary>Raised before the delete command is executed to signal that the selected items are about to be deleted.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceChangeCompleted">
      <summary>Raised after the items-source change has completed to notify that the items are loaded and accessible.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsDeleted">
      <summary>Raised when the delete command has been executed to signal that the selected items have been deleted.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectionChanged">
      <summary>Raised after the selected items have changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectionChanging">
      <summary>Raised when the selected items are being changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCreatingNewItemEventArgs</strong> class specify the collection view to which the item will potentially be
added and allowing the process to be canceled.</summary>
      <param name="collectionView">The DataGridCollectionView to which the item will
potentially be added.</param>
      <param name="newItem">The new item to add to the <em>collectionView</em>. Will be a null reference (<b>Nothing</b> in Visual Basic) by default (see Remarks).</param>
      <param name="cancel">
        <strong>true</strong> to cancel the creation of the new item; <strong>false</strong> to let the process continue.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.CollectionView">
      <summary>Gets the DataGridCollectionView to which the item
will potentially be added.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own processing.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.NewItem">
      <summary>Gets or sets the new item to add to the CollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.NewCurrent">
      <summary>Gets the new current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.NewDataGridContext">
      <summary>Gets the new DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.OldCurrent">
      <summary>Gets the old current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.OldDataGridContext">
      <summary>Gets the old DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.IsCancelable">
      <summary>Gets a value indicating whether the current visual row change is cancelable.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.NewCurrent">
      <summary>Gets the new current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.NewDataGridContext">
      <summary>Gets the new DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.OldCurrent">
      <summary>Gets the old current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.OldDataGridContext">
      <summary>Gets the old DataGridContext.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridDatePicker.InputValidationError">
      <summary>Raised when there is an input validation error.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor">
      <summary>Initializes a new instance of the DataGridException class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.String)">
      <summary>Initializes a new instance of the DataGridException class with the specified error
message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the DataGridException class with the specified error
message and inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that initially caused the current exception the be thrown.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the DataGridException class with serialized data.</summary>
      <param name="info">The <strong>SerializationInfo</strong> that holds the <span class="dxMisspelled" id="dxMisspelled" word="serialized">serialized</span> object data about the
exception being thrown.</param>
      <param name="context">The <strong>StreamingContext</strong> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with the specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with the specified error message and inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that initially caused the current exception the be thrown.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with serialized data.</summary>
      <param name="info">The <strong>SerializationInfo</strong> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <strong>StreamingContext</strong> that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ForeignKeyConverter">
      <summary>Gets or sets a foreign key converter, which allows custom key/value mappings to be provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ItemsSource">
      <summary>Gets or sets the source from which the values to be displayed are retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ValuePath">
      <summary>Gets or sets the path in the ItemsSource that contains the
values to be displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ForeignKeyConverterProperty">
      <summary>Identifies the ForeignKeyConverter dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ValuePathProperty">
      <summary>Identifies the ValuePath dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridGroupDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the the <strong>DataGridGroupDescription</strong> class specifying the name of the property that is used to group the items.</summary>
      <param name="propertyName">The name of the property that is used to group that items.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.GetPropertyValue(System.Object)">
      <summary>Retrieves the property value for the specified <em>item</em>.</summary>
      <returns>An object representing the property value for the specified <em>item</em>.</returns>
      <param name="item">The item for which to retrieve the property value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Retrieves the group name for the specified <em>item</em>.</summary>
      <returns>An object representing the group name for the specified <em>item</em>.</returns>
      <param name="item">The item whose group name is to be retrieved.</param>
      <param name="level">A zero-based value representing the group level.</param>
      <param name="culture">The <strong>System.Globalization.CultureInfo</strong> to supply to the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Returns a value indicating whether the group name and the item name match, which means that the item belongs to the group.</summary>
      <returns>
        <strong>true</strong> if the names match?indicating that the item belongs to the group; <strong>false</strong> otherwise.</returns>
      <param name="groupName">An object representing the name of the <strong>group</strong> to verify.</param>
      <param name="itemName">An object representing the name of the <strong>item</strong> to verify.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups created by this group description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group an item belongs to.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.SortComparer">
      <summary>Gets or sets the data comparer that will be used to sort the groups in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.GroupDescription">
      <summary>Gets the <strong>GroupDescription</strong> that matches the current <strong>DataGridGroupInfo</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.PropertyName">
      <summary>Gets the property name of the parent group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.Value">
      <summary>Gets the value of the parent group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor">
      <summary>Initializes a new instance of the DataGridInternalException class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.String)">
      <summary>Initializes a new instance of the DataGridInternalException class with the
specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the DataGridInternalException class with the
specified inner exception.</summary>
      <param name="innerException">The exception that initially caused the current exception to be thrown.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the DataGridInternalException class with the
specified error message and inner exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that initially caused the current exception to be thrown.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the DataGridInternalException class with
serialized data.</summary>
      <param name="info">The <strong>SerializationInfo</strong> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <strong>StreamingContext</strong> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemCancelEventArgs</strong> class specifying the item, the collection view to which it is to be added or
removed, and a value indicating whether the process is to be canceled.</para>
      </summary>
      <param name="collectionView">The DataGridCollectionView to which the item will
potentially be added or removed.</param>
      <param name="item">The item to add to or removed from the <em>collectionView</em>.</param>
      <param name="cancel">
        <strong>true</strong> to cancel the addition or removal of the item; <strong>false</strong> to let the process continue.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the process is to be canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemEventArgs</strong> class specifying the item and the collection view to which it is to be added or
removed.</para>
      </summary>
      <param name="collectionView">The DataGridCollectionView to which the item will
potentially be added or removed.</param>
      <param name="item">The item to add to or removed from the <em>collectionView</em>.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemEventArgs.CollectionView">
      <summary>Gets the DataGridCollectionView to which the item
will potentially be added or removed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemEventArgs.Item">
      <summary>Gets the item to add to or remove from the CollectionView.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemHandledEventArgs</strong> class specifying the item and the collection view to which it is to be added
or removed.</para>
      </summary>
      <param name="collectionView">The DataGridCollectionView to which the item will
potentially be added or removed.</param>
      <param name="item">The item to add to or removed from the <em>collectionView</em>.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own processing.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, and its data type.</para>
      </summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="valuePath">A string representing the path to access the value of a property for an item in a <strong>DataGridCollectionView</strong>.</param>
      <param name="dataType">The property's data type.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value and X paths, and its data type</summary>
      <param name="name">
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name, data type, value, and X paths.</para>
      </param>
      <param name="valueXPath">The <font color="black"><span class="keyword">XPath</span> query that returns the value on the XML binding source to use</font></param>
      <param name="valuePath">The path to the binding source property.</param>
      <param name="dataType">The type of the data as it is to be represented by the item property.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.Type,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, its data type, and
indicating whether it is read-only.</summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="valuePath">A string representing the path to access the value of a property for an item in a <strong>DataGridCollectionView</strong>.</param>
      <param name="dataType">The property's data type.</param>
      <param name="isReadOnly">
        <strong>true</strong> if the <strong>DataGridItemProperty</strong> is read-only; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.String,System.Type,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value and X paths, its data type, and
indicating whether it is read-only</summary>
      <param name="name">
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name, data type, value, and X paths.</para>
      </param>
      <param name="valueXPath">The <font color="black"><span class="keyword">XPath</span> query that returns the value on the XML binding source to use</font></param>
      <param name="valuePath">The path to the binding source property.</param>
      <param name="dataType">The type of the data as it is to be represented by the item property.</param>
      <param name="isReadOnly">
        <strong>true</strong> if the <strong>DataGridItemProperty</strong> is read-only; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the <strong>PropertyDescriptor</strong> that determines the
characteristics of a property for an item in a DataGridCollectionView.</summary>
      <param name="propertyDescriptor">The <strong>PropertyDescriptor</strong> that determines the characteristics of a property for an item in a DataGridCollectionView.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property and its value path.</para>
      </summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="dataType">The property's data type.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, and indicating whether it
is readonly.</para>
      </summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="dataType">The property's data type.</param>
      <param name="isReadOnly">
        <strong>true</strong> if the <strong>DataGridItemProperty</strong> is readonly; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type,System.Boolean,System.Nullable{System.Boolean})">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, indicating whether it is
read only, and if the corresponding cell can be edited when a new item is being inserted.</para>
      </summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="dataType">The property's data type.</param>
      <param name="isReadOnly">
        <strong>true</strong> if the <strong>DataGridItemProperty</strong> is readonly; <strong>false</strong> otherwise.</param>
      <param name="overrideReadOnlyForInsertion">
        <strong>true</strong> if the corresponding cell can be edited when a new item is being inserted, regardless of the value of the IsReadOnly property, <strong>false</strong> if the value of the
<strong>IsReadOnly</strong> property is respected.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name and the <strong>PropertyDescriptor</strong> that determines
the characteristics of a property for an item in a DataGridCollectionView.</summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="propertyDescriptor">The <strong>PropertyDescriptor</strong> that determines the characteristics of a property for an item in a DataGridCollectionView.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.GetValueCore(System.Object)">
      <summary>Retrieves the value of the specified component.</summary>
      <returns>The retrieved value.</returns>
      <param name="component">The object for which to retrieve a value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.SetValueCore(System.Object,System.Object)">
      <summary>Sets the value for the specified component.</summary>
      <param name="component">The object for which to provide a value.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.IsAutoCreated">
      <summary>Gets a value indicating whether the <strong>DataGridItemProperty</strong> was automatically created (see AutoCreateItemProperties property).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.PropertyDescriptor">
      <summary>Gets or sets the <strong>PropertyDescriptor</strong> that determines the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.ValuePath">
      <summary>Gets or sets the path to access the value of a property for an item in a <strong>DataGridCollectionView</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.ValueXPath">
      <summary>Gets or sets the <font color="black"><span class="keyword">XPath</span> query that returns the value on the XML binding source to use</font></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GetValue(System.Object)">
      <summary>Retrieves the current value of the property for the specified component.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The current value for the property for the specified <em>component</em>.</span>
      </returns>
      <param name="component">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An object representing the component from which the current value of the property is retrieved.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GetValueCore(System.Object)">
      <summary>Retrieves the value of the specified component.</summary>
      <returns>The retrieved value.</returns>
      <param name="component">The object for which to retrieve a value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Initialize(System.String,System.String,System.Type,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name and title of the property, its value path, indicating
whether it is read only, if the corresponding cell can be edited when a new item is being inserted, and if it represents a sub relationship.</para>
      </summary>
      <param name="name">A string representing the name of a property in a DataGridCollectionView.</param>
      <param name="title">A string representing the title of the item property.</param>
      <param name="dataType">The property's data type.</param>
      <param name="isReadOnly">
        <strong>true</strong> if the <strong>DataGridItemProperty</strong> is readonly; <strong>false</strong> otherwise.</param>
      <param name="overrideReadOnlyForInsertion">
        <strong>true</strong> if the corresponding cell can be edited when a new item is being inserted, regardless of the value of the IsReadOnly property, <strong>false</strong> if the value of the
<strong>IsReadOnly</strong> property is respected.</param>
      <param name="isASubRelationship">
        <strong>true</strong> if the item property represents a sub relationship; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SetValue(System.Object,System.Object)">
      <summary>Sets the current value of the property for the specified component.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The current value for the property for the specified <em>component</em>.</span>
      </returns>
      <param name="component">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An object representing the component from which the current value of the property is retrieved.</span>
      </param>
      <param name="value">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The current value for the property for the specified <em>component</em>.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SetValueCore(System.Object,System.Object)">
      <summary>Sets the value for the specified component.</summary>
      <param name="component">The object for which to provide a value.</param>
      <param name="value">The new value.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.CalculateDistinctValues">
      <summary>Gets or sets a value indicating whether distinct values are to be calculated for the property. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Converter">
      <summary>Gets or sets the converter to convert values to and from the corresponding field in the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DataType">
      <summary>Gets or sets the property's data type.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DistinctValuesEqualityComparer">
      <summary>Gets or sets the <strong>IEqualityComparer</strong> that is used to compare the equality of the item property's distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DistinctValuesSortComparer">
      <summary>Gets or sets the <strong>IComparer</strong> that is used to sort the item property's distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ForeignKeyDescription">
      <summary>Gets or set the DataGridForeignKeyDescription that represents a foreign
key constraint or enumeration.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GroupSortStatResultComparer">
      <summary>Gets or sets the <strong>IComparer</strong> used when sorting groups by the result of a statistical function.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GroupSortStatResultPropertyName">
      <summary>Gets or sets the result property name of the statistical
function by whose values the <strong>groups</strong> will be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.IsReadOnly">
      <summary>Gets or sets a value indicating whether the property is readonly.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.MaxDistinctValues">
      <summary>Gets or sets a value indicating the maximum number of distinct values to calculate. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Name">
      <summary>Gets or sets the name of a property in a DataGridCollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.OverrideReadOnlyForInsertion">
      <summary>Gets or sets a value indicating whether the value of the IsReadOnly property is ignored when new data items are inserted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SortComparer">
      <summary>Gets or sets the custom data comparer that will be used to sort the values of the data-grid item property's associated column. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Title">
      <summary>Gets or sets the property's title.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.QueryDistinctValue">
      <summary>Raised to allow custom distinct values to be provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.Item(System.String)">
      <summary>Gets the DataGridItemProperty object that has the specified name.</summary>
      <param name="name">A string representing the name of the DataGridItemProperty object to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <strong>DataGridItemPropertyCommittingValueEventArgs</strong> class.</summary>
      <param name="item">The item whose <em>value</em> is being committed.</param>
      <param name="value">The value to commit.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.Item">
      <summary>Gets the item whose value is being committed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.Value">
      <summary>Gets the value being committed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>DataGridItemPropertyQueryValueEventArgs</strong> class specifying the item property for which a value is required.</summary>
      <param name="item">The item property for which a value is required.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.Item">
      <summary>Gets the item property for which a value is required.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.Value">
      <summary>Gets or sets the value for the item property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemRemovedEventArgs</strong> class specifying the item and the collection view from which it was
removed.</para>
      </summary>
      <param name="collectionView">The DataGridCollectionView to which the item was
removed.</param>
      <param name="item">The item that was removed.</param>
      <param name="index">The zero-based index at which the item was removed.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs.Index">
      <summary>Gets the index at which the item was removed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.CreateChildCollection">
      <summary>Creates an empty list of <strong>UIElements</strong> that will contain the containers that are generated for data items and items contained in non-fixed header
and footer sections.</summary>
      <returns>An empty <strong>IList&lt;UIElement</strong>&gt; collection that will contain the containers that are generated for data items and items contained in the
non-fixed header and footer sections.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.GetVisualChild(System.Int32)">
      <summary>Gets the index of a visual child element.</summary>
      <returns>The visual child element at the specified <em>index</em>.</returns>
      <param name="index">The zero-based index of the visual child element to return.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Down key event.</summary>
      <param name="e">
        <para>A <strong>KeyEventArgs</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleEndKey(System.Windows.Input.KeyEventArgs)">
      <summary>
        <para>Handles the End key event.</para>
      </summary>
      <param name="e">
        <para>A <strong>KeyEventArgs</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleHomeKey(System.Windows.Input.KeyEventArgs)">
      <summary>
        <para>Handles the Home key event.</para>
      </summary>
      <param name="e">
        <para>A <strong>KeyEventArgs</strong> that contains the event data.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleLeftKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Left key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePageDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the PageDown key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePageUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the PageUp key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Down key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewEndKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview End key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewHomeKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Home key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewLeftKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Left key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewPageDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview PageDown key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewPageUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview PageUp key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewRightKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Right key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewSystemKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview System key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewTabKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Tab key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Up key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleRightKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Right key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleSystemKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the System key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleTabKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Tab key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Up key event.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnContainersRemoved(System.Collections.Generic.IList{System.Windows.DependencyObject})">
      <summary>Indicates that containers in the CustomItemContainerGenerator will no longer be used/recycled
and can be removed from the items host.</summary>
      <param name="removedContainers">A list of the containers that will no longer be used/recycled and that can be removed from the items host.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsAdded">
      <summary>Indicates that items have been added to the data source or through the expansion of groups or details and need to be added to the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsRemoved">
      <summary>Indicates that items have been removed from the data source or through the collapse of groups or details and need to be removed to the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsReset">
      <summary>Indicates that the data source was reset and that the items host should clear its children.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a key is pressed.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a key is pressed.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.Children">
      <summary>Gets the child <strong>UIElements</strong> contained in the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.CustomItemContainerGenerator">
      <summary>Gets the CustomItemContainerGenerator that creates the containers for
the data items as well as the items located in the <strong>non-fixed</strong> header and footer sections of a grid, its groups, and its details.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.LogicalChildren">
      <summary>Gets an enumerator for logical child elements of this element</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.ParentDataGridControl">
      <summary>Gets the parent DataGridControl of the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.VisualChildrenCount">
      <summary>Gets the number of visual child elements within this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridRemovingItemEventArgs</strong> class specifying the item, the collection view from which it is to be removed,
and a value indicating whether the process is to be canceled.</summary>
      <param name="collectionView">The DataGridCollectionView from which the item is to be removed.</param>
      <param name="item">The item about to be removed.</param>
      <param name="index">The zero-based index at which the item is to be removed.</param>
      <param name="cancel">
        <strong>true</strong> if the process is to be canceled; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs.Index">
      <summary>Gets the index at which the item is to be removed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs.SelectionInfos">
      <summary>Gets a a list of SelectionInfo objects, which provide information on the items that were
selected/unselected on a per-<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see> basis.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs.IsCancelable">
      <summary>Gets a boolean value indicating whether the selection change can be canceled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs.SelectionInfos">
      <summary>Gets a list of SelectionInfo objects, which provide information on the items that are
being selected/unselected on a per-<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see> basis.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridUnboundItemProperty</strong> class.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property and its data type.</para>
      </summary>
      <param name="name">
        <para>Initializes a new instance of the <strong>DataGridUnboundItemProperty</strong> class specifying the name, data type, value, and X paths.</para>
      </param>
      <param name="dataType">
        <para>The type of the data as it is to be represented by the item property.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its data type, and indicating whether it
is read only.</para>
      </summary>
      <param name="name">
        <para>Initializes a new instance of the <strong>DataGridUnboundItemProperty</strong> class specifying the name, data type, value, and X paths.</para>
      </param>
      <param name="dataType">
        <para>The type of the data as it is to be represented by the item property.</para>
      </param>
      <param name="isReadOnly">
        <para>
          <b>true if the</b>
          <b>DataGridUnboundItemProperty</b> is read-only; <b>false</b> otherwise.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its data type, indicating whether it is
read only, and if the corresponding cell can be edited when a new item is being inserted.</para>
      </summary>
      <param name="name">
        <para>Initializes a new instance of the <strong>DataGridUnboundItemProperty</strong> class specifying the name, data type, value, and X paths.</para>
      </param>
      <param name="dataType">
        <para>The type of the data as it is to be represented by the item property.</para>
      </param>
      <param name="isReadOnly">
        <para>
          <b>true if the</b>
          <b>DataGridUnboundItemProperty</b> is read-only; <b>false</b> otherwise.</para>
      </param>
      <param name="overrideReadOnlyForInsertion">
        <para>
          <b>true if the corresponding cell can be edited when a new item is being inserted, regardless of the value of the</b>IsReadOnly property, <b>false</b> if the
value of the <b>IsReadOnly</b> property is respected.</para>
      </param>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.CommittingValue">
      <summary>
        <br />
Raised for each data item to allow the unbound value to be committed, if required.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.QueryValue">
      <summary>Raised for each data item in the underlying data source and allows unbound values to be provided for each item through the Value property received in the
event arguments.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the type of the items it will contain.</summary>
      <param name="itemType">
        <list type="termdef">
          <item>
            <description>The type of the items contained in the collection.</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Type,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the type of the items it will contain, if item properties
should be automatically created, the page size, and the maximum realized item count.</summary>
      <param name="itemType">
        <list type="termdef">
          <item>
            <description>The type of the items contained in the collection.</description>
          </item>
        </list>
      </param>
      <param name="autoCreateItemProperties">
        <list type="termdef">
          <item>
            <description>
              <strong>true</strong> if item properties are to be automatically created; <strong>false</strong> otherwise.</description>
          </item>
        </list>
      </param>
      <param name="pageSize">The number of items that are contained in each page of data that is loaded in memory.</param>
      <param name="maxRealizedItemCount">The maximum amount of items that can be loaded in memory.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the <strong>DataTable</strong> to use as the source schema.</summary>
      <param name="sourceSchema">A reference to the <strong>DataTable</strong> used as the source schema.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the <strong>DataTable</strong> to use as the source schema, if
item properties should be automatically created, the page size, and the maximum realized item count.</summary>
      <param name="sourceSchema">A reference to the <strong>DataTable</strong> used as the source schema.</param>
      <param name="autoCreateItemProperties">
        <list type="termdef">
          <item>
            <description>
              <strong>true</strong> if item properties are to be automatically created; <strong>false</strong> otherwise.</description>
          </item>
        </list>
      </param>
      <param name="pageSize">The number of items that are contained in each page of data that is loaded in memory.</param>
      <param name="maxRealizedItemCount">The maximum amount of items that can be loaded in memory.</param>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.AbortQueryItems">
      <summary>Raised when a QueryItems event has been raised for a
page of data that is no longer needed and whose corresponding <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.AsyncQueryInfo.html">AsyncQueryInfo</see> object's
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.AsyncQueryInfo~EndQuery.html">EndQuery</see> method has not yet been called, allowing the pending operation to be
canceled and preventing useless processing on the data server.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryGroups">
      <summary>Raised to allow the data items contained in a virtualized collection view to be grouped using the information provided by the QueryGroupsEventsArgs received in the event parameters.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryItemCount">
      <summary>Raised every time the grid is loaded or refreshed or its state changes (e.g., new sorting or filtering criteria are applied), the total number of records in
the underlying data source must be provided, taking into account any filters that are currently applied to the items. <strong>This event must be
handled.</strong></summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryItems">
      <summary>Raised whenever new records are required, allowing the next batch of records to be fetched from the data source and provided to the grid. <strong>This event
must be handled</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitAll">
      <summary>Raises the CommitItems event for each page with
modified data even if those pages are not being released from memory.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitNew">
      <summary>Commits the new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.Contains(System.Object)">
      <summary>Returns a value indicating whether the specified item exists in the collection.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
          <strong>true</strong> if the item exists in the collection; <strong>false</strong> otherwise.</span>
      </returns>
      <param name="item">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item to verify.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.GetEnumerator">
      <summary>Retrieves an object that can be used to enumerate the items in the view.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An <strong>IEnumerator</strong> that can be used to enumerate the items in the view.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified index in the view.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item at the specified <em>index</em>.</span>
      </returns>
      <param name="index">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The zero-based index at which to retrieve the item.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.IndexOf(System.Object)">
      <summary>Returns the zero-based index of the specified item.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The zero-based index of <em>item</em>. If the item is not found, -1 is returned.</span>
      </returns>
      <param name="item">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item whose index to retrieve.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index as the new CurrentItem.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
          <strong>true</strong>if the new current item in within the view; <strong>false</strong>otherwise.</span>
      </returns>
      <param name="position">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The index at which to set the new <span class="Apple-converted-space">CurrentItem</span>.</span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CanFilter">
      <summary>Gets a value indicating whether the view supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CanGroup">
      <summary>Gets a value indicating whether the view supports grouping.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitMode">
      <summary>Gets or sets a value representing when the CommitItems event will be raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.ConnectionError">
      <summary>Gets the connection error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.ConnectionState">
      <summary>Gets the connection state of the underlying virtualized collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.Count">
      <summary>Gets the number of items in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CurrentItem">
      <summary>Gets the current item in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.IsEmpty">
      <summary>Gets a value indicating whether the <strong>filtered</strong> view is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.MaxRealizedItemCount">
      <summary>Gets a value representing the maximum amount of items that can be loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.PageSize">
      <summary>Gets a value representing the number of items that are contained in each page of data that is loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.PreemptivePageQueryRatio">
      <summary>Gets or sets a value representing the percentage from the start or the end of a page that, when accessed, will cause the previous or next page to be queried
and the items loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.SourceCollection">
      <summary>Gets the underlying un-filtered collection.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitItems">
      <summary>Raised when a page of data that contains edited items is about to be released from memory. <strong>This event must be handled when dealing with an editable
grid</strong>.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.QueryGroups">
      <summary>Raised to allow the data items contained in a virtualized collection view to be grouped using the information provided by the QueryGroupsEventsArgs received in the event parameters.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitMode">
      <summary>Gets or sets a value representing when the CommitItems event will be raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.MaxRealizedItemCount">
      <summary>Gets a value representing the maximum amount of items that can be loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PageSize">
      <summary>Gets a value representing the number of items that are contained in each page of data that is loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PreemptivePageQueryRatio">
      <summary>Gets or sets a value representing the percentage from the start or the end of a page that, when accessed, will cause the previous or next page to be queried
and the items loaded in memory.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitModeProperty">
      <summary>Identifies the CommitMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.MaxRealizedItemCountProperty">
      <summary>Identifies the MaxRealizedItemCount
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PageSizeProperty">
      <summary>Identifies the PageSize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PreemptivePageQueryRatioProperty">
      <summary>Identifies the PreemptivePageQueryRatio dependency
property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitItems">
      <summary>Raised when a page of data that contains edited items is about to be released from memory. <strong>This event must be handled when dealing with an editable
grid</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.GetItemIndex(System.Windows.DependencyObject)">
      <summary>Gets the index of an item contained in the <strong>DataGridVirtualizingPanel</strong>.</summary>
      <returns>The zero-based index of the index.</returns>
      <param name="obj">The item whose index to retrieve.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the panel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <strong>Items</strong> collection associated with the panel's containing DataGridControl is changed.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="args">An <strong>ItemsChangedEventargs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.SetItemIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the index of an item contained in the <strong>DataGridVirtualizingPanel</strong>.</summary>
      <param name="obj">The item whose index to set</param>
      <param name="value">The zero-based index of the item.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.CustomItemContainerGenerator">
      <summary>Gets the <strong>ItemContainerGenerator</strong> associated with this control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.ItemCount">
      <summary>Gets a count of <strong>all</strong> the immediate child elements contained in the panel.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.ItemIndexProperty">
      <summary>Identifies the <strong>ItemIndex</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor(System.Linq.IQueryable)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> specifying the <strong>IQueryable</strong> source that will
provide the data items.</summary>
      <param name="queryableSource">The <strong>IQueryable</strong> source that will provide the data items.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor(System.Linq.IQueryable,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> specifying the <strong>IQueryable</strong> source, if item
properties should be automatically created, the page size, and the maximum realized item count.</summary>
      <param name="queryableSource">The <strong>IQueryable</strong> source that will provide the data items.</param>
      <param name="autoCreateItemProperties">
        <list type="termdef">
          <item>
            <description>
              <strong>true</strong> if item properties are to be automatically created; <strong>false</strong> otherwise.</description>
          </item>
        </list>
      </param>
      <param name="pageSize">The number of items that are contained in each page of data that is loaded in memory.</param>
      <param name="maxRealizedItemCount">The maximum amount of items that can be loaded in memory.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.QueryableSource">
      <summary>Gets the queryable source that will provide the data items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.QueryableSource">
      <summary>Gets the queryable source that will provide the data items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.QueryableSourceProperty">
      <summary>Identifies the QueryableSource
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.BeginEditCore">
      <summary>Called after the BeginEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.CancelEditCore">
      <summary>Called after the CancelEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.ClearContainer">
      <summary>Clears the content of the <strong>DataRow</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Create a new Cell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
      <param name="column">A reference to a Column object representing the cell's parent column.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.EndEditCore">
      <summary>Called after the EndEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise. By default, all DataCells will return <strong>true</strong>.</returns>
      <param name="cell">A reference to the Cell whose type to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for
the <em>item</em>.</summary>
      <param name="dataGridContext">A reference to the DataGridContext in which to prepare
the container.</param>
      <param name="item">The item for which to prepare the container.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DataRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view or
theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.SetDataContext(System.Object)">
      <summary>Sets the data context of the <strong>DataRow</strong>.</summary>
      <param name="item">The data context.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.#ctor">
      <summary>Initializes a new instance of the <strong>ForeignKeyConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.GetKeyFromValue(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>Retrieves the key for the specified value.</summary>
      <param name="value">The value for which the corresponding key is to be retrieved.</param>
      <param name="configuration">The ForeignKeyConfiguration that is used to display the value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.GetValueFromKey">
      <summary>Retrieves the value for the specified key.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.#ctor">
      <summary>Initializes a new instance of the <strong>DataTableForeignKeyDescription</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.ForeignKeyConstraint">
      <summary>Gets or sets a <strong>ForeignKeyConstraint</strong> representing a foreign key constraint defined in a <strong>DataTable</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.ForeignKeyConstraintProperty">
      <summary>Identifies the ForeignKeyConstraint dependency
property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.AllowDetailToggle">
      <summary>Gets or sets a value indicating whether the end user can toggle the expansion state of the child details of the details to which the default configuration is
applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DefaultGroupConfiguration">
      <summary>Gets or sets the configuration that will be applied to groups without an explicit group configuration in the details to which the default configuration is
applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DetailIndicatorStyle">
      <summary>Gets or sets the style that will be applied to the detail indicators of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.Footers">
      <summary>Gets a collection that contains the items that are located in the footer sections of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.GroupConfigurationSelector">
      <summary>Gets or sets a group-configuration selector that will be used to select the appropriate configuration for a group based on its information and/or content for
the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.Headers">
      <summary>Gets a collection containing the items in the header sections of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.IsDeleteCommandEnabled">
      <summary>Gets or sets a value indicating whether the delete command is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers (DataRow) of the data items in
the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers (DataRow) of the data items in the detail to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxGroupLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of group levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxSortLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of sort levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.UseDefaultHeadersFooters">
      <summary>Gets or sets a value indicating whether the default headers and footers are automatically added to the header and footer sections of the details to which
default the configuration is applied.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.AllowDetailToggleProperty">
      <summary>Identifies the AllowDetailToggle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DefaultGroupConfigurationProperty">
      <summary>Identifies the DefaultGroupConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DetailIndicatorStyleProperty">
      <summary>Identifies the DetailIndicatorStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.GroupConfigurationSelectorProperty">
      <summary>Identifies the GroupConfigurationSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.IsDeleteCommandEnabledProperty">
      <summary>Identifies the IsDeleteCommandEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxGroupLevelsProperty">
      <summary>Identifies the MaxGroupLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxSortLevelsProperty">
      <summary>Identifies the MaxSortLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that occurred while
attempting to delete it.</summary>
      <param name="item">The item being deleted.</param>
      <param name="exception">The exception that occurred while attempting to delete the <em>item</em>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception,System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that occurred while
attempting to delete it and using the supplied routed event identifier.</summary>
      <param name="item">The item being deleted.</param>
      <param name="exception">The exception that occurred while attempting to delete the <em>item</em>.</param>
      <param name="routedEvent">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The identifier for the routed event.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception,System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that occurred while
attempting to delete it and using the supplied routed event identifier and providing the opportunity to declare a differnent source for the event.</summary>
      <param name="item">The item being deleted.</param>
      <param name="exception">The exception that occurred while attempting to delete the <em>item</em>.</param>
      <param name="routedEvent">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The identifier for the routed event.</span>
      </param>
      <param name="source">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An alternate source that will be reported when the event is handled. This pre-populates the <strong>Source</strong> property</span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Action">
      <summary>Gets or sets the action to take when an error occurs while attempting to delete an item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Exception">
      <summary>Gets the exception that occurred while attempting to delete the <em>item</em>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Item">
      <summary>Gets the item being deleted.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailIndicator.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DetailIndicator</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector.#ctor">
      <summary>Initializes a new instance of the <strong>FieldNameGroupConfigurationSelector</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector.SelectorItems">
      <summary>Gets the FieldNameGroupConfigurationIndictors contained in
this group-configuration selector.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.#ctor">
      <summary>Initializes a new instance of the <strong>FieldNameGroupConfigurationSelectorItem</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.FieldName">
      <summary>Gets or sets the field name of the column whose values were used to create the groups to which the group configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups that are created by the values of the column with the specified field name</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.IsSealed">
      <summary>Gets a value indicating whether this group-configuration indicator has been sealed (i.e., it has been added to a FieldNameGroupConfigurationSelectorItemCollection).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.DisplayMemberPath">
      <summary>Gets or sets a path to a value on the source object to serve as the visual representation of the object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ForeignKeyConverter">
      <summary>
        <para>Gets or sets a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers ( DataRow) of the data items in the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers ( DataRow) of the data items in the detail to which the configuration is
applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemsSource">
      <summary>Gets or sets the source from which the values to be displayed are retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ValuePath">
      <summary>Gets or sets the path to the value on the source object that corresponds to the "key"</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.DisplayMemberPathProperty">
      <summary>Identifies the DisplayMemberPath dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ForeignKeyConverterProperty">
      <summary>Identifies the ForeignKeyConverter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ValuePathProperty">
      <summary>Identifies the ValuePath dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ForeignKeyConverter.GetKeyFromValue(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>Retrieves the key for the specified value.</summary>
      <param name="value">
        <para>The value for which the corresponding key is to be retrieved.</para>
      </param>
      <param name="configuration">
        <para>The ForeignKeyConfiguration that is used
to display the value.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ForeignKeyConverter.GetValueFromKey">
      <summary>
        <para>Retrieves the value for the specified key.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.GroupConfiguration">
      <summary>Gets the GroupConfiguration from which the group was created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.IsBottomLevel">
      <summary>Gets a value indicating whether the group is in the last group level of the group hierarchy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.IsExpanded">
      <summary>Gets or sets a value indicating whether the group is expanded.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ItemCount">
      <summary>Gets the number of data items contained in the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Level">
      <summary>Gets a value indicating the level of the group within the group hierarchy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ParentGroups">
      <summary>Gets a reference to the parent groups of the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.SiblingGroups">
      <summary>Gets a reference to the sibling groups of the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Title">
      <summary>Gets the data displayed in a group's associated GroupHeaderControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.TitleTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the Title's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.TitleTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Value">
      <summary>Gets an object representing the value which caused the group to be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ValueTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the group's Value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ValueTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different ValueTemplate based on custom logic.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Group.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.GetContainerForItemOverride">
      <summary>Creates or identifies the container that is used to display an item in a grid or detail.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container that is used to display an item in a grid or detail.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
        <br />
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupByControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.AllowGroupingModification">
      <summary>Gets or sets a value indicating whether modifications to groups in the corresponding grid or detail can be made by the end user through the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.AllowSort">
      <summary>Gets or sets a value indicating whether the sort direction of the columns in the corresponding grid or detail can be modified by the end user through the
group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the group-by items in the group-by control together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineOffset">
      <summary>Gets or sets the offset at which to begin and end drawing the connection lines between the group-by items in the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLinePen">
      <summary>Gets or sets the pen that is used to draw the connection lines that connect the group-by items in the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the group-by control when it does not contain group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.StairHeight">
      <summary>Gets or sets the vertical spacing between the tops of two consecutive group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.StairSpacing">
      <summary>Gets or sets the horizontal spacing between the right of a first group-by item and the left of the next group-by item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModification dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCapture</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupByItem</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view
or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event with the specified event arguments.</summary>
      <param name="e">A <strong>PropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByItem.IsBeingDragged">
      <summary>Gets a value indicating whether the group-by item is being dragged.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByItem.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupByItem.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupConfiguration.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>GroupConfiguration</strong>.</summary>
      <returns>A reference to the new <strong>GroupConfiguration</strong> object.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.Footers">
      <summary>Gets a collection that contains the items that are located if the footer sections of the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.GroupLevelIndicatorStyle">
      <summary>Gets or sets the style that will be applied to the group-level indicators in the
groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.Headers">
      <summary>Gets a collection that contains the items that are located if the header sections of the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.InitiallyExpanded">
      <summary>Gets or sets the default expansion state of the groups to which the configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers ( DataRow) of the data items in the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers ( DataRow) of the data items in the groups to which the configuration is
applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.UseDefaultHeadersFooters">
      <summary>Gets a value indicating whether the default header and footers items are automatically added to the header and footer sections of the groups to which the
configuration is applied.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.GroupLevelIndicatorStyleProperty">
      <summary>Identifies the GroupLevelIndicatorStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.InitiallyExpandedProperty">
      <summary>Identifies the InitiallyExpanded dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupConfigurationSelector.SelectGroupConfiguration(System.Int32,System.Windows.Data.CollectionViewGroup,System.ComponentModel.GroupDescription)">
      <summary>Selects the appropriate group configuration based on the specified information.</summary>
      <returns>The GroupConfiguration that will be applied to the group. Can be a null reference (<b>Nothing</b> in Visual Basic) if the
selector does not have a group configuration that corresponds to the specified information.</returns>
      <param name="groupLevel">The zero-based level of the group.</param>
      <param name="collectionViewGroup">
        <para>The <strong>CollectionViewGroup</strong> that represents the group. Can be a null reference (<b>Nothing</b> in Visual Basic) if an item located in the headers or footers of a grid queries the
selector for a group configuration (see Remarks).</para>
      </param>
      <param name="groupDescription">The <strong>GroupDescription</strong> from which the group was created.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupExtensions.GetItems(Xceed.Wpf.DataGrid.Group)">
      <summary>Retrieves the items for the specified Group.</summary>
      <param name="group">The Group whose items are to be retrieved.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.ClearContainer">
      <summary>Clears the content of the group-header control.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>GroupHeaderControl</strong> instance.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The <strong>AutomationPeer</strong> for this <strong>GroupHeaderControl</strong> instance.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
      <param name="e">A <strong>DependencyPropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for
the <em>item</em>.</summary>
      <param name="dataGridContext">The item's DataGridContext .</param>
      <param name="item">The item for which to prepare the container</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupHeaderControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderControl.Group">
      <summary>Gets the <strong>GroupHeaderControl's</strong> associated Group.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupHeaderControl.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.#ctor">
      <summary>Initializes a new instance of the <strong>GroupHeaderFooterItemTemplate</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.Template">
      <summary>Gets or sets the template that is used by the <strong>GroupHeaderFooterItemTemplate</strong> to create its items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.VisibleWhenCollapsed">
      <summary>Gets or sets a value indicating whether the items created by the <strong>GroupHeaderFooterItemTemplate</strong> remain visible when their parent groups are
collapsed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.FieldName">
      <summary>Gets the field name of the column by which the data items are grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.Title">
      <summary>Gets the data displayed in the associated GroupHeaderControls of the groups
contained in this level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.TitleTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the Title's
content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.TitleTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the group's value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different ValueTemplate based on custom logic.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupLevelDescription.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the GroupLevelDescriptionCollection
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicator.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupLevelIndicator</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetGroupLevel(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the group-level for which the group-level-indicator pane is displayed.</para>
      </summary>
      <returns>
        <para>A zero-based value indicating the group-level for which the group-level-indicator pane is displayed.</para>
      </returns>
      <param name="obj">The element from which to retrieve the property value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetShowIndicators(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the group-level indicators contained in the group-level-indicator pane are shown.</summary>
      <returns>
        <strong>true</strong> if group-level indicators are shown; <strong>false</strong> otherwise.</returns>
      <param name="obj">The element from which to retrieve the property value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetShowVerticalBorder(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the vertical borders of the group-level-indicator pane are displayed.</summary>
      <returns>
        <strong>true</strong> if the vertical borders of the group-level-indicator pane are displayed; <strong>false</strong> otherwise.</returns>
      <param name="obj">The element from which to retrieve the property value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <returns>The size of the control.</returns>
      <param name="availableSize">
        <para>Measurement constraints, a control cannot return a size larger than the constraint.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises the <strong>PropertyChanged</strong> event.</summary>
      <param name="e">A <strong>DependencyPropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetGroupLevel(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the group-level for which the group-level-indicator pane is displayed.</summary>
      <param name="obj">The element to which to assign the property value.</param>
      <param name="value">A zero-based value indicating the group-level for which the group-level-indicator pane is displayed.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetShowIndicators(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the group-level indicators contained in the group-level-indicator pane are shown.</summary>
      <param name="obj">The element to which to assign the property value.</param>
      <param name="value">
        <strong>true</strong> if group-level indicators are shown; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetShowVerticalBorder(System.Windows.DependencyObject,System.Boolean)">
      <summary>Gets a value indicating whether the vertical borders of the group-level-indicator pane are displayed.</summary>
      <param name="obj">The element to which to assign the property value.</param>
      <param name="value">
        <strong>true</strong> if the vertical borders of the group-level-indicator pane are displayed; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.CurrentIndicatorCount">
      <summary>Gets a value indicating the number of child indicators contained in the <strong>GroupLevelIndicatorPane</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.Indented">
      <summary>Gets or sets a value indicating whether the group-level indicator pane is indented.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IsLeaf">
      <summary>Gets a value indicating whether the <strong>GroupLevelIndicatorPane</strong> displays group-level indicatorsfor the context of the item in which it is
contained.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.CurrentIndicatorCountProperty">
      <summary>Identifies the CurrentIndicatorCount dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GroupLevelProperty">
      <summary>Identifies the <strong>GroupLevel</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IndentedProperty">
      <summary>
        <para align="left">Identifies the Indented dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IsLeafProperty">
      <summary>Identifies the IsLeaf dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.ShowIndicatorsProperty">
      <summary>Identifies the <strong>ShowIndicators</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.ShowVerticalBorderProperty">
      <summary>Identifies the <strong>ShowVerticalBorder</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupNameCountPair.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the <strong>GroupNameCountPair</strong> class specifying the group name and item count.</summary>
      <param name="name">
        <para>The name of the group.</para>
      </param>
      <param name="itemCount">The item count</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNameCountPair.ItemCount">
      <summary>Gets the number of items contained in the corresponding group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNameCountPair.Name">
      <summary>Gets the name of the corresponding group.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationButton.NavigateToGroup">
      <summary>Represents the <strong>NavigateToGroup</strong> command, which requests that clicked group header be brought to the top of the viewport.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupNavigationControl.OnApplyTemplate">
      <summary>Builds the visual tree for this element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.Group">
      <summary>Gets or sets the group of the <strong>GroupNavigationControl</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplate">
      <summary>Gets or set the <strong>DataTemplate</strong> used <font color="black">to display each</font> main item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> which provides custom logic for choosing a template used to display each main item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MaxDropDownHeight">
      <summary>Gets or sets the maximum height of the group navigation control's drop-down menu, in pixels.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.GroupProperty">
      <summary>Identifies the Group dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateProperty">
      <summary>Identifies the MainItemTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateSelectorProperty">
      <summary>Identifies the MainItemTemplateSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControlItem.Group">
      <summary>Gets or sets the group of the <strong>GroupNavigationControlItem</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControlItem.GroupProperty">
      <summary>Identifies the Group dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.HasGroups">
      <summary>Gets a value indicating whether the hierarchical group-by control contains group-by items, which display information about the groups that exist in the
corresponding grid or detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the group-by control when it does not contain group-by items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModification
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.GetContainerForItemOverride">
      <summary>Creates or identifies the container that is used to display an item in a detail.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container that is used to display an item in a detail.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <strong>ItemContainer</strong>.</summary>
      <returns>
        <strong>true</strong> if the item is (or is eligible to be) its own <strong>ItemContainer</strong>; <strong>false</strong> otherwise.</returns>
      <param name="item">The item to query.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified container to display the <em>item</em>.</summary>
      <param name="element">The container that will be used to display the specified <em>item</em>.</param>
      <param name="item">The item whose container is to be prepared.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByControlNode</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowGroupingModification">
      <summary>Gets or sets a value indicating whether modifications to groups in the corresponding grid or detail can be made by the end user through the hierarchical
group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowSort">
      <summary>Gets or sets a value indicating whether the sort direction of the columns in the corresponding grid or detail can be modified by the end user through the
hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the group-by items in the hierarchical group-by control node together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineOffset">
      <summary>Gets or sets the offset at which to begin and end drawing the connection lines between the group-by items in the hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLinePen">
      <summary>Gets or sets the pen that is used to draw the connection lines that connect the group-by items in the hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the hierarchical group-by control node when it does not contain hierarchical group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.Title">
      <summary>Gets or sets the title of the hierarchical group-by control node.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModication
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.StairSpacingProperty">
      <summary>Identifies the <em>StairSpacing</em> dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnApplyTemplate">
      <summary>Builds the group-by item's visual tree.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCaptured</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByItem</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event with the specified
<strong>PropertyChangedEventArgs</strong>.</summary>
      <param name="e">A <strong>PropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.IsBeingDragged">
      <summary>Gets a value indicating whether the group-by item is being dragged.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.SortDirection">
      <summary>Gets a value indicating the direction in which the values of the corresponding column are sorted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <returns>The size of the control.</returns>
      <param name="availableSize">
        <para>Measurement constraints, a control cannot return a size larger than the constraint.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane.OnApplyTemplate">
      <summary>Builds the visual tree for this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.#ctor">
      <summary>Initializes a new instance of the KeyActivationGesture class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>KeyActivationGestures</strong> class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.IsActivationKey(System.Windows.Input.Key,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
      <summary>Retrieves a value indicating whether the specified <em>key</em> is a supported activation key for this gesture.</summary>
      <returns>
        <strong>true</strong> if the key is a supported activation key for this gesture; <strong>false</strong> otherwise.</returns>
      <param name="key">The key to verify.</param>
      <param name="systemKey">A <em><strong>System.Windows.Input.Key</strong></em> valuerepresenting the key to verify</param>
      <param name="modifiers">Any modifier keys (ALT, SHIFT, or CTRL).</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.Key">
      <summary>Gets or sets the key to verify.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.Modifiers">
      <summary>Gets or sets any modifier keys (ALT, SHIFT, or CTRL).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.SystemKey">
      <summary>Gets or sets the key to verify.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.KeyProperty">
      <summary>Identifies the Key dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.ModifiersProperty">
      <summary>Identifies the Modifiers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.SystemKeyProperty">
      <summary>Identifies the SystemKey dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector.#ctor">
      <summary>Initializes a new instance of the <strong>LevelGroupConfigurationSelector</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector.SelectorItems">
      <summary>Gets the LevelGroupConfigurationSelectorItems contained in this
group-configuration selector.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.#ctor">
      <summary>Initializes a new instance of the <strong>LevelGroupConfigurationIndicator</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups of the specified level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.IsSealed">
      <summary>Gets a value indicating whether this group-configuration indicator has been sealed (i.e., it has been added to a LevelGroupConfigurationSelector).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.Level">
      <summary>Get or sets the level of the groups to which the group
configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs.DataSourceValue">
      <summary>Gets the original distinct value extracted from the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs.DistinctValue">
      <summary>Gets or sets the custom distinct value that replaces the one originally extracted from the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs.Handled">
      <summary>Gets or sets a value indicating if the event was handled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs.ParentItem">
      <summary>Gets the parent item for which details are to be retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupDescription">
      <summary>Gets the child group description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupNameCountPairs">
      <summary>Gets a list of GroupNameCountPair objects that represent the groups and the order
in which they are displayed in the virtualized collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupPropertyName">
      <summary>Gets the name of the item property that should be queried in order to find its distinct values and their count taking into account the parent groups, which can
be retrieved through the GroupPath
property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildSortDirection">
      <summary>Gets the direction in which child groups are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.CollectionView">
      <summary>Gets the containing virtualized collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.GroupPath">
      <summary>Gets a read only collection of DataGridGroupInfo objects, which provide information
on the parent groups.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to which the grid is
bound.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.Count">
      <summary>Gets or sets the number of items contained in the collection
view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.GroupPath">
      <summary>
        <para>Gets a read only collection of DataGridGroupInfo objects, which provide
information on the parent groups.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.AsyncQueryInfo">
      <summary>Gets an AsyncQueryInfo that provides the information necessary to retrieve the next
batch of items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to which the grid is
bound.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.GroupPath">
      <summary>
        <para>Gets a read only collection of DataGridGroupInfo objects, which provide
information on the parent groups.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.BeginEdit">
      <summary>Places the row in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.BeginEditCore">
      <summary>
        <para>Called after the BeginEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CancelEdit">
      <summary>Cancels the edit process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CancelEditCore">
      <summary>
        <para>Called after the CancelEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.ClearContainer">
      <summary>Clears the content of the <strong>Row</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <returns>A reference to the newly created Cell.</returns>
      <param name="column">A reference to a Column object representing the cell's parent column.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.EndEdit">
      <summary>Ends the edit process and allows the row to exit edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.EndEditCore">
      <summary>
        <para>Called after the EndEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row. This method is abstract.</summary>
      <returns>Classes that override this method should return <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise.</returns>
      <param name="cell">A reference to the Cell whose type to verify.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this row.</summary>
      <returns>The <strong>AutomationPeer</strong> for this row.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditBeginning(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditBeginning event, which signals that the edit process is about to
begin.</summary>
      <param name="e">A CancelRoutedEventArgs that contains the event data and that can prevent the
edit process from beginning.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditBegun">
      <summary>Raises the EditBegun event, which signals that the edit process has begun.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditCanceled">
      <summary>Raises the EditCanceled event, which signals that the edit process has been
canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditCanceling">
      <summary>Raises the EditCanceling event, which signals that the edit process is being
canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditEnded">
      <summary>Raises the EditEnded event, which signals that the edit process has ended.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditEnding(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditEnding event, which signals that the edit process is about to end.</summary>
      <param name="e">A CancelRoutedEventArgs that contains the event data and that can prevent the
edit process from ending.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>GotKeyboardFocus</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>KeyboardFocusChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
      <param name="e">A <strong>DependencyPropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnValidationErrorChanging(Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs)">
      <summary>Invoked when an unhandled <strong>ValidationErrorChanging</strong> attached event reaches this element in its route.</summary>
      <param name="e">A RowValidationErrorRoutedEventArgs that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
      <param name="dataGridContext">A reference to the DataGridContextShippin in which to prepare the container.</param>
      <param name="item">The item for which to prepare the container.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>Row</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view or theme
modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent row.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(Xceed.Wpf.DataGrid.DataGridContext,System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
      <param name="dataGridContext">The DataGridContext to which <em>child</em> belongs.</param>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent row.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(Xceed.Wpf.DataGrid.DataGridControl,System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
      <param name="dataGridControl">
        <para align="left">The DataGridControl to which <em>child</em> belongs.</para>
      </param>
      <param name="child">The <strong>DependencyObject</strong> for which to find the parent row.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the row when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.Cells">
      <summary>Gets a collection of the cells contained in the row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.EditTriggers">
      <summary>Gets or sets a value indicating what triggers will cause cells to enter edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in the row failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.InactiveSelectionBackground">
      <summary>Get or sets the background of the selected rows when a grid does not
have the focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.InactiveSelectionForeground">
      <summary>Get or sets the foreground of the selected rows when a grid does not
have the focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsBeingEdited">
      <summary>Gets a value indicating whether the row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsCurrent">
      <summary>Gets a value indicating whether the row is the current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsDirty">
      <summary>Gets a value indicating whether the content of one of the cells in the row has been modified.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsSelected">
      <summary>Gets a value indicating whether the row is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsValidationErrorRestrictive">
      <summary>Gets or sets a value indicating whether the validation rule that failed prevents the focus from moving to another row until the error is fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.NavigationBehavior">
      <summary>Gets or sets a value indicating how the focus navigates from one element to another in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.ReadOnly">
      <summary>Gets or sets a value indicating whether the row is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.SelectionBackground">
      <summary>Get or sets the background of the selected rows when a grid is focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.SelectionForeground">
      <summary>Get or sets the foreground of the selected rows when a grid is focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.ValidationError">
      <summary>Gets or sets information about the validation rule that failed the validation process.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.CellsProperty">
      <summary>Identifies the Cells dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditBeginningEvent">
      <summary>Identifies the EditBeginning routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditBegunEvent">
      <summary>Identifies the EditBegun routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditCanceledEvent">
      <summary>Identifies the EditCanceled routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditCancelingEvent">
      <summary>Identifies the EditCanceling routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditEndedEvent">
      <summary>Identifies the EditEnded routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditEndingEvent">
      <summary>Identifies the EditEnding routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditTriggersProperty">
      <summary>Identifies the EditTriggers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.InactiveSelectionBackgroundProperty">
      <summary>Identifies the InactiveSelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.InactiveSelectionForegroundProperty">
      <summary>Identifies the InactiveSelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsDirtyProperty">
      <summary>Identifies the IsDirty dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsValidationErrorRestrictiveProperty">
      <summary>Identifies the IsValidationErrorRestrictive dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.NavigationBehaviorProperty">
      <summary>Identifies the NavigationBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.SelectionBackgroundProperty">
      <summary>Identifies the SelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.SelectionForegroundProperty">
      <summary>Identifies the SelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ValidationErrorChangingEvent">
      <summary>Identifies the ValidationErrorChanging routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ValidationErrorProperty">
      <summary>Identifies the ValidationError dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditBeginning">
      <summary>Raised when the BeginEdit method has been called to signal that the edit process is
about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditBegun">
      <summary>Raised after the EditBeginning event to signal that the edit process has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditCanceled">
      <summary>Raised after the EditCanceling event to signal that the edit process has been
canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditCanceling">
      <summary>Raised when the CancelEdit method has been called to signal that the edit process is
being canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditEnded">
      <summary>Raised after the EditEnding event to signal that the edit process has ended.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditEnding">
      <summary>Raised when the EndEdit method has been called to signal that the edit process is about to
end.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.ValidationErrorChanging">
      <summary>Raised when the value of the ValidationError property is about to change.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.GetRowSelectorStyle(System.Windows.DependencyObject)">
      <summary>Gets the style that will be applied to row selectors.</summary>
      <returns>The <strong>Style</strong> that will be applied to row selectors.</returns>
      <param name="obj">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The dependency object from which the property value is read.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.GetVisible(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the row selectors are visible.</summary>
      <returns>
        <strong>true</strong> if the row selectors are visible; <strong>false</strong> otherwise. By default, <strong>true</strong>.</returns>
      <param name="d">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The dependency object from which the property value is read.</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCapture</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseButtonEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>MouseEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this element has been updated. The specific dependency property that changed is reported in
the arguments parameter.<br />
Raises the PropertyChanged event.</summary>
      <param name="e">A <strong>DependencyPropertyChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.SetRowSelectorStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>Sets the style that will be applied to row selectors.</summary>
      <param name="obj">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The dependency object to which the attached property is written.</span>
      </param>
      <param name="value">The <strong>Style</strong> that will be applied to row selectors.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.SetVisible(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the row selectors are visible.</summary>
      <param name="d">
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The dependency object to which the attached property is written.</span>
      </param>
      <param name="value">
        <strong>true</strong> if the row selectors are visible; <strong>false</strong> otherwise. By default, <strong>true</strong>.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.ContainerRect">
      <summary>Gets the row selector's container <strong>Rect.</strong></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.HasValidationError">
      <summary>Gets a value indicating whether the row selector's associated row has a validation error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsBeingEdited">
      <summary>Gets or sets a value indicating whether the row selector's associated data item is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsCurrent">
      <summary>Gets or sets a value indicating whether the row selector's associated row is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsPressed">
      <summary>Gets or sets a value indicating whether the <strong>RowSelector</strong> is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.ItemIndex">
      <summary>Gets the index of the <strong>RowSelector's</strong> associated data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.Orientation">
      <summary>Gets or sets the orientation of the <strong>RowSelector</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.RowType">
      <summary>Gets the type of the row associated with the row selector.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.ContainerRectProperty">
      <summary>Identifies the ContainerRect dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsPressedProperty">
      <summary>Identifies the IsPressed dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.ItemIndexProperty">
      <summary>Identifies the ItemIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.RowSelectorStyleProperty">
      <summary>Identifies the RowSelectorStyle attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.RowTypeProperty">
      <summary>Identifies the RowType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.VisibleProperty">
      <summary>Identifies the Visible attached property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.RowSelector.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelectorPane.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the contents of a row-selector pane.</summary>
      <returns>The size of the row-selector pane.</returns>
      <param name="finalSize">The <strong>Size</strong> this element uses to arrange its child elements.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelectorPane.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the <strong>ArrangeOverride</strong> pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
      <param name="availableSize">An upper limit <strong>Size</strong> that should not be exceeded.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelectorPane.Orientation">
      <summary>Gets or sets the orientation of the <strong>RowSelectorPane</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelectorPane.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationError.#ctor(System.Windows.Controls.ValidationRule,Xceed.Wpf.DataGrid.Row,System.Object,System.Exception)">
      <summary>Initializes a new instance of the RowValidationError class specifying various
information on the validation rule that caused the caused the value to fail the validation process.</summary>
      <param name="ruleInError">
        <para>The CellValidationRule that
contains the validation rule that failed.</para>
      </param>
      <param name="rowInError">
        <para>The row whose value(s) failed the validation process.</para>
      </param>
      <param name="errorContent">
        <para>An object containing the content to display when an error occurs.</para>
      </param>
      <param name="exception">
        <para>The exception that was raised when the value failed the validation process. Can be a null reference (<b>Nothing</b> in Visual Basic).</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.ErrorContent">
      <summary>
        <para>Gets an object containing the error content.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.Exception">
      <summary>
        <para>Gets the exception that was raised when the value failed the binding-level validation process.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.RowInError">
      <summary>
        <para>Gets the row whose value(s) failed the binding-level validation process.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.RuleInError">
      <summary>
        <para>Gets the validation rule that caused the value to fail the binding-level validation process.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred.</summary>
      <param name="rowValidationError">The RowValidationError that occurred</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred and using the supplied routed event identifier.</summary>
      <param name="routedEvent">The identifier for the routed event.</param>
      <param name="rowValidationError">The RowValidationError that occurred</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred and using the supplied routed event identifier and
providing the opportunity to declare a different source for the event.</summary>
      <param name="routedEvent">The identifier for the routed event.</param>
      <param name="source">An alternate source that will be reported when the event is handled. This pre-populates the <strong>Source</strong> property.</param>
      <param name="rowValidationError">The RowValidationError that occurred</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.RowValidationError">
      <summary>Gets the RowValidationError that occurred</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ScrollTip.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ScrollTip.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ScrollTip</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style (view or
theme modifications) changes.</summary>
      <param name="view">The view from which to retrieve the current style key.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedCellRanges">
      <summary>Gets a list of the cell ranges that were added to the SelectedItems
collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedItemRanges">
      <summary>Gets a list of the data item ranges that were added to the SelectedItems
collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedItems">
      <summary>Gets a list of the items that were added to the SelectedItems
collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.DataGridContext">
      <summary>Gets the context from which items were selected and/or unselected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedCellRanges">
      <summary>Gets a list of the cell ranges that were removed from the SelectedItems
collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedItemRanges">
      <summary>Gets a list of the data item ranges that were removed from the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedItems">
      <summary>Gets a list of the items that were removed from the SelectedItems
collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <strong>StaircasePanel</strong> element.</summary>
      <returns>The <strong>Size</strong> that represents the arranged size of this <strong>StaircasePanel</strong> element and its children.</returns>
      <param name="finalSize">The <strong>Size</strong> that this element should use to arrange its child elements.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <strong>StaircasePanel</strong> in anticipation of arranging them during the ArrangeOverride pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
      <param name="availableSize">An upper limit <strong>Size</strong> that should not be exceeded.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>Suspends layout behavior when a child element is resized.</summary>
      <param name="child">The child element that is being resized.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the content of a <strong>DrawingContext</strong> object during the render pass of a <strong>StaircasePanel</strong> element.</summary>
      <param name="drawingContext">The <strong>DrawingContext</strong> object to draw.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Invoked when the <strong>VisualCollection</strong> of a visual object is modified.</summary>
      <param name="visualAdded">The <strong>Visual</strong> that was added to the collection.</param>
      <param name="visualRemoved">The <strong>Visual</strong> that was removed from the collection.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the elements in the <strong>StaircasePanel</strong> together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineOffset">
      <summary>Gets or sets a value representing the offset at which to being and end drawing the connection lines between the elements in the
<strong>StaircasePanel</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLinePen">
      <summary>Gets or sets the <strong>Pen</strong> that is used to draw the connection lines that connect the elements in the <strong>StaircasePanel</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.StairHeight">
      <summary>Gets or sets the vertical spacing between the tops of two consecutive elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.StairSpacing">
      <summary>Gets or sets the horizontal spacing between the right of a first element and the left of the next element.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.TextInputActivationGesture.#ctor">
      <summary>Initializes a new instance of the TextInputActivationGesture class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.TextInputActivationGesture.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>TextInputActivationGesture</strong> class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.UnboundColumn.#ctor">
      <summary>Initializes a new instance of the <strong>UnboundColumn</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.UnboundColumn.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <strong>UnboundColumn</strong> class specifying its field name and title.</summary>
      <param name="fieldName">
        <para>A string representing the field name of the column.</para>
      </param>
      <param name="title">A string representing the title of the column.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.UnboundColumn.ReadOnly">
      <summary>Gets or sets a value indicating whether the column is read only.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.UnboundColumn.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.DataItem">
      <summary>Gets a data item in its current modified state.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.Index">
      <summary>Gets the index of the data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.OldValues">
      <summary>Gets the values of the data item as they were before they were modified.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <strong>ICollection</strong> to an <strong>Array</strong>, starting at a particular <strong>Array</strong> index.</summary>
      <param name="array">
        <para>The one-dimensional <strong>Array</strong> that is the destination of the elements copied from <strong>ICollection</strong>. The <strong>Array</strong> must
have zero-based indexing.</para>
      </param>
      <param name="index">
        <para>The zero-based index in <span class="parameter">array</span> at which copying begins.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <strong>IEnumerator</strong> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Count">
      <summary>Gets the number of elements contained in the <strong>ICollection</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <strong>ICollection</strong> is thread-safe.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Item(System.Int32)">
      <summary>Gets the item at the specified index.</summary>
      <param name="index">The zero-based index at which to retrieve the item.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Item(System.String)">
      <summary>Gets the item with the specified name.</summary>
      <param name="name">A string representing the name of the item.</param>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CancelRoutedEventHandler">
      <summary>Represents the method that will handle cancelable routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventHandler">
      <summary>Represents the method that will handle the Cell.ValidationErrorChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventHandler">
      <summary>Represents the method that will handle the CurrentChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventHandler">
      <summary>Represents the method that will handle the CurrentChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventHandler">
      <summary>Represents the method that will handle the SelectionChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventHandler">
      <summary>Represents the method that will handle the SelectionChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventHandler">
      <summary>Represents the method that will handle the DeletingSelectedItemError event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventHandler">
      <summary>Represents the method that will handle the Row.ValidationErrorChanging
event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents">
      <summary>Class that provides the attached events and methods that allow a class to subscribe to or unsubscribe from these attached events on a specific object.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer">
      <summary>Exposes "Cell" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer">
      <summary>Exposes "ColumnManagerCell" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer">
      <summary>Exposes "ColumnManagerRow" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.ComboBoxAutomationPeer">
      <summary>The AutomationPeer class used for ComboBoxes in the DataGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer">
      <summary>Exposes "DataGridContext" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer">
      <summary>Exposes "DataGridControl" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer">
      <summary>Exposes "DataGridGroup" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.GenericAutomationPeer">
      <summary>The AutomationPeer class used to set the default Names, class names and AutomationIds in the DataGrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.RowAutomationPeer">
      <summary>Exposes "Cell" types to UI Automation.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryAutomationIdForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Subscribes to the QueryAutomationIdForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryAutomationIdForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Subscribes to the QueryAutomationIdForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryHelpTextForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Subscribes to the QueryHelpTextForDetail
routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryHelpTextForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Subscribes to the QueryHelpTextForGroup
routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemStatusForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Subscribes to the QueryItemStatusForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemStatusForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Subscribes to the QueryItemStatusForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemTypeForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Subscribes to the QueryItemTypeForDetail
routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemTypeForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Subscribes to the QueryItemTypeForGroup
routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryNameForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Subscribes to the QueryNameForDetail routed
event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryNameForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Subscribes to the QueryNameForGroup routed
event.</summary>
      <param name="d">The dependency object for which the routed event handler is added.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryAutomationIdForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Unsubscribes from the QueryAutomationIdForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryAutomationIdForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Unsubscribes from the QueryAutomationIdForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryHelpTextForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Unsubscribes from the QueryHelpTextForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryHelpTextForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Unsubscribes from the QueryHelpTextForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemStatusForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemStatusForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemStatusForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemStatusForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemTypeForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemTypeForDetail routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemTypeForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemTypeForGroup routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryNameForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Unsubscribes from the QueryNameForDetail
routed event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryNameForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Unsubscribes from the QueryNameForGroup routed
event.</summary>
      <param name="d">The dependency object for which the routed event handler is removed.</param>
      <param name="handler">The method that will handle the routed event.</param>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryAutomationIdForDetailEvent">
      <summary>
        <para>Occurs before the AutomationID for a detail is retrieved.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryAutomationIdForGroupEvent">
      <summary>Occurs before the AutomationID for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryHelpTextForDetailEvent">
      <summary>Occurs before the help text for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryHelpTextForGroupEvent">
      <summary>Occurs before the help text for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemStatusForDetailEvent">
      <summary>Occurs before the item status for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemStatusForGroupEvent">
      <summary>Occurs before the item status for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemTypeForDetailEvent">
      <summary>Occurs before the item type for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemTypeForGroupEvent">
      <summary>Occurs before the item type for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryNameForDetailEvent">
      <summary>Occurs before the name of a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryNameForGroupEvent">
      <summary>Occurs before the name of a group is retrieved.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Cell)">
      <summary>Initializes a new instance of the <strong>CellAutomationPeer</strong> class specifying the owner.</summary>
      <param name="owner">
        <span>
          <span>The element associated with this automation peer.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.#ctor(Xceed.Wpf.DataGrid.ColumnManagerCell)">
      <summary>Initializes a new instance of the <strong>ColumnManagerCellAutomationPeer</strong> class specifying the owner.</summary>
      <param name="owner">
        <span>
          <span>The element associated with this automation peer.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer.#ctor(Xceed.Wpf.DataGrid.ColumnManagerRow)">
      <summary>Initializes a new instance of the <strong>ColumnManagerRowAutomationPeer</strong> class specifying the owner.</summary>
      <param name="owner">
        <span>
          <span>The element associated with this automation peer.</span>
        </span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.#ctor(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Initializes a new instance of the <strong>DataGridContextAutomationPeer</strong> class specifying the DataGridControl, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see>, parent item, and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DetailConfiguration.html">DetailConfiguration</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.DataGridContext">
      <summary>Gets the associated DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.#ctor(Xceed.Wpf.DataGrid.DataGridControl)">
      <summary>Initializes a new instance of the <strong>DataGridControlAutomationPeer</strong> class specifying the owner.</summary>
      <param name="owner">The DataGridControl owner.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Group)">
      <summary>Initializes a new instance of the <strong>DataGridGroupAutomationPeer</strong> class specifying the UI group owner and DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryAutomationIdRoutedeventArgs</strong> class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the <strong>QueryAutomationIdRoutedeventArgs</strong> class</span>
        </span>
      </param>
      <param name="source">
        <span>
          <span>An alternate source that will be reported when the event is handled. This pre-populates the <span>Source</span>
property.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs.AutomationId">
      <summary>Gets or sets the AutomationId.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryHelpTextRoutedEventArgs</strong> class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the <strong>QueryHelpTextRoutedEventArgs</strong> class</span>
        </span>
      </param>
      <param name="source">
        <span>
          <span>An alternate source that will be reported when the event is handled. This pre-populates the <span>Source</span>
property.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs.HelpText">
      <summary>Gets or sets the help text.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryItemStatusRoutedEventArgs</strong> class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the <strong>QueryItemStatusRoutedEventArgs</strong> class</span>
        </span>
      </param>
      <param name="source">
        <span>
          <span>An alternate source that will be reported when the event is handled. This pre-populates the <span>Source</span>
property.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs.ItemStatus">
      <summary>Gets or sets the item status.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryItemTypeRoutedEventArgs</strong> class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the <strong>QueryItemTypeRoutedEventArgs</strong> class</span>
        </span>
      </param>
      <param name="source">
        <span>
          <span>An alternate source that will be reported when the event is handled. This pre-populates the <span>Source</span>
property.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs.ItemType">
      <summary>Gets or sets the item type.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryNameRoutedEventArgs</strong> class.</summary>
      <param name="routedEvent">
        <span>
          <span>The routed event identifier for this instance of the <strong>QueryItemTypeRoutedEventArgs</strong> class</span>
        </span>
      </param>
      <param name="source">
        <span>
          <span>An alternate source that will be reported when the event is handled. This pre-populates the <span>Source</span>
property.</span>
        </span>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs.Name">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.RowAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Row)">
      <summary>Initializes a new instance of the <strong>RowAutomationPeer</strong> class.</summary>
      <param name="owner">
        <span>
          <span>The element associated with this automation peer.</span>
        </span>
      </param>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryAutomationIdForDetailEvent / <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryAutomationIdForGroupEvent.html">QueryAutomationIdForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryHelpTextForDetailEvent / <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryHelpTextForGroupEvent.html">QueryHelpTextForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryItemStatusForDetailEvent / <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryItemStatusForGroupEvent.html">QueryItemStatusForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryItemTypeForDetailEvent / <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryItemTypeForGroupEvent.html">QueryItemTypeForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryNameForDetailEvent / <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryNameForGroupEvent.html">QueryNameForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox">
      <summary>ComboBox control that displays data in columns using Xceed's DataGridControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.#ctor">
      <summary>Initializes a new instance of the MultiColumnComboBox class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>Updates the selections in the drop-down.</summary>
      <param name="e">An EventArgs that contains the event data..</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled <strong>KeyDown</strong> attached event reaches this element in its route.</summary>
      <param name="e">A <strong>KeyEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Called when the selection in the dropdown changes.</summary>
      <param name="e">A SelectionChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.AutoCreateColumns">
      <summary>
        <para>Gets or sets a value indicating whether columns should automatically be created when the control is bound to an <strong>ItemsSource</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.Columns">
      <summary>
        <span id="BugEvents">Gets a list of columns to display in the control.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.DataGridStyle">
      <summary>
        <span id="BugEvents">Gets or sets the style to apply to the DataGridControl that will
be displayed in the dropdown list.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.ShowColumnHeaders">
      <summary>
        <span id="BugEvents">Gets or sets whether the column headers (ColumnManagerRow) will be displayed at the top of the datagrid control.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.ShowGroupByControl">
      <summary>
        <span id="BugEvents">Gets or sets whether the GroupByControl will be displayed at the top of the datagrid.</span>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.AutoCreateColumnsProperty">
      <summary>Identifies the AutoCreateColumns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.DataGridStyleProperty">
      <summary>Identifies the DataGridStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.DefaultDataGridStyleResourceKey">
      <summary>ResourceKey referencing the default style applied to the underlying DataGrid.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.ShowColumnHeadersProperty">
      <summary>Identifies the ShowColumnHeaders dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Controls.MultiColumnComboBox.ShowGroupByControlProperty">
      <summary>Identifies the ShowGroupByControl dependency property.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides">
      <summary>Value representing the sides of a <strong>Thickness</strong> structure.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides.Left">
      <summary>The left <strong>Thickness</strong> side.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides.Top">
      <summary>The top <strong>Thickness</strong> side.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides.Right">
      <summary>The right <strong>Thickness</strong> side.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides.Bottom">
      <summary>The bottom <strong>Thickness</strong> side.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides.All">
      <summary>All the <strong>Thickness</strong> sides.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter">
      <summary>Converter used to convert to and from a ColumnWidth structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.CurrencyConverter">
      <summary>Converters that converts <strong>decimal</strong> and <strong>double</strong> values to and from a currency-formatted string.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter">
      <summary>Converts a an empty string to <strong>true</strong>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter">
      <summary>Converter used to determine if a value is greater than zero.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter">
      <summary>Converter used to covert a value to a boolean value indicating whether it is odd or even.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter">
      <summary>Represents a value converter used to add the value of the parameter to the value of <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Converters.IntAdditionConverter~Convert.html">object</see>. This converter applies only to <strong>Int32</strong> values.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter">
      <summary>Represents a converter that inverses a boolean value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter">
      <summary>Represents a value converter used to convert <strong>Int32</strong> values into percentages.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter">
      <summary>Represents a converter that can be used to format the multimodal result of a Mode
statistical function. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter">
      <summary>Represents a value converter used to convert <strong>Double</strong> values to their opposite negative or positive value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter">
      <summary>Represents a value converter used to convert a null reference (<b>Nothing</b> in Visual Basic) to a boolean value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.SourceDataConverter">
      <summary>Converts a value of a field in a source to the target type.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.StringFormatConverter">
      <summary>Represents a converter that converts a value to a string using composite formatting</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ThicknessConverter">
      <summary>Represents a converter used to convert a <strong>Double</strong> to a <strong>Thickness</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter">
      <summary>Converter that determines if a type is assignable from the type of the value to convert.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter">
      <summary>Converts a <strong>Type</strong> to a <strong>Visibility</strong> value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter">
      <summary>Converts a value to a masked text string.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retrieves a value indicating whether the specified type can be converted to a ColumnWidth
structure, using the provided context.</summary>
      <returns>
        <strong>true</strong> if the specified <em>sourceType</em> can be converted to a ColumnWidth structure; <strong>false</strong> otherwise.</returns>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides the format context to use.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retrieves a value indicating whether the converter can convert a ColumnWidth structure to
the specified type, using the provided context.</summary>
      <returns>
        <strong>true</strong> if a ColumnWidth structure can be converted to the specified
<em>destinationType</em>; <strong>false</strong> otherwise.</returns>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides the format context to use.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified type to a ColumnWidth structure, using the provided context and
culture information.</summary>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides the format context to use.</param>
      <param name="culture">The <strong>CultureInfo</strong> to use.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given ColumnWidth structure to the specified type, using the provided context
and culture information.</summary>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides the format context to use.</param>
      <param name="culture">The <strong>CultureInfo</strong> to use.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.#ctor">
      <summary>Initializes a new instance of the <strong>CurrencyConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <strong>decimal</strong> or <strong>double</strong> value to a currency-formatted string.</summary>
      <param name="value">
        <para>The <strong>decimal</strong> or <strong>double</strong> value to convert.</para>
      </param>
      <param name="targetType">
        <para>string</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a currency-formatted string to a <strong>double</strong>.</summary>
      <param name="value">The currency-formatted string to convert.</param>
      <param name="targetType">
        <strong>double</strong>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>EmptyStringToBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an empty or null string to a boolean value.</summary>
      <returns>
        <strong>true</strong> if the string is empty or null.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.#ctor">
      <summary>Initializes a new instance of the <strong>GreaterThanZeroConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified value to a boolean value indicating whether it is greater than zero.</summary>
      <returns>
        <strong>true</strong> if the value is greater than zero; <strong>false</strong> otherwise.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>GreaterThanZeroConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.#ctor">
      <summary>Initializes a new instance of the <strong>IndexToOddConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified value to a boolean value indicating whether it is odd or not.</summary>
      <returns>
        <strong>true</strong> if <em>value</em> is odd; <strong>false</strong> if it is even.</returns>
      <param name="value">The Int32 value to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>IndexToOddConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.Singleton">
      <summary>Gets a static instance of <strong>IndexToOddConverter</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.#ctor">
      <summary>Initializes a new instance of the IntAdditionConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Int32</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
      <param name="value">The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source.</span></param>
      <param name="targetType">The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Int32</strong> values.</summary>
      <returns>The converted value.</returns>
      <param name="value">
        <para>The value that is produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span>.</para>
      </param>
      <param name="targetType">
        <para>The type to convert to.</para>
      </param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>InverseBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the boolean value.</summary>
      <param name="value">The boolean value to convert.</param>
      <param name="targetType">Boolean.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted boolean value.</summary>
      <param name="value">
        <para>The boolean value that is produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span>.</para>
      </param>
      <param name="targetType">Boolean.</param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.#ctor">
      <summary>Initializes a new instance of the LevelToOpacityConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method can only
convert <strong>Int32</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
      <param name="value">The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source.</span></param>
      <param name="targetType">
        <para>The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</para>
      </param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Double</strong> values.</summary>
      <returns>The converted value.</returns>
      <param name="value">The value that is produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span>.</param>
      <param name="targetType">
        <para>The type to convert to.</para>
      </param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.#ctor">
      <summary>Initializes a new instance of the <strong>MultimodalResultConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an array of multimodal results to a comma-separated string (default).</summary>
      <returns>A comma-separated string representing the multimodal result. The separator can be modified by setting the Separator property.</returns>
      <param name="value">The array of multimodal results to convert.</param>
      <param name="targetType">
        <para>The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</para>
      </param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>MultimodalResultConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.Separator">
      <summary>Gets or sets the separator that will delimit each result in a multimodal result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.#ctor">
      <summary>Initializes a new instance of the NegativeDoubleConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Double</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
      <param name="value">
        <para>The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>.</para>
      </param>
      <param name="targetType">
        <para>The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</para>
      </param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Double</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
      <param name="value">The value that is produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span>.</param>
      <param name="targetType">
        <para>The type to convert to.</para>
      </param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the NullToBooleanConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.</para>
      </summary>
      <returns>The converted value.</returns>
      <param name="value">
        <para>The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>.</para>
      </param>
      <param name="targetType">
        <para>The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</para>
      </param>
      <param name="parameter">The converter parameter to use. If <strong>true</strong> and <em>value</em> is a null reference (<b>Nothing</b> in Visual Basic), <strong>true</strong> will be returned. If <strong>false</strong> and
<em>value</em> is a null reference (<b>Nothing</b> in Visual Basic), <strong>false</strong> will be returned.</param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.#ctor">
      <summary>Initializes a new instance of the <strong>SourceDataConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <strong>SourceDataConverte</strong> class specifying a value indicating whether the source supports <strong>DBNull</strong>
values.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the <em>sourceValue</em> to the <em>targetType</em> using the provided culture info.</summary>
      <returns>The converted value.</returns>
      <param name="sourceValue">The value in the source.</param>
      <param name="targetType">The Type to which to convert <em>sourceValue</em>.</param>
      <param name="targetCulture">The <strong>CultureInfo</strong> to use when converting the value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the target<em>Value</em> to the source<em>Type</em> using the provided culture info.</summary>
      <returns>The converted value.</returns>
      <param name="targetValue">The target value.</param>
      <param name="sourceType">The <strong>Type</strong> to which to convert <em>targetValue</em>.</param>
      <param name="targetCulture">The <strong>CultureInfo</strong> to use when converting the value.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.SourceSupportsDBNull">
      <summary>Gets or sets a value indicating whether the source supports <strong>DBNull</strong> values.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.#ctor">
      <summary>Initializes a new instance of the <strong>StringFormatConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value to a string using the specified composite string format.</summary>
      <param name="value">The value to convert.</param>
      <param name="targetType">The target type is ignored by the <strong>StringFormatConverter</strong>.</param>
      <param name="parameter">
        <para>A composite format string. If a FormatProvider has
been provided, it will be used in combination with the format string to convert the <em>value</em> (see also <strong>Composite Formatting</strong> topic in
Windows SDK).</para>
        <para>If <em>parameter</em> is a null reference (<b>Nothing</b> in Visual Basic), <em>value</em> will be returned unmodified.</para>
      </param>
      <param name="culture">The culture info is ignored by the <strong>StringFormatConverter</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>StringFormatConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.FormatProvider">
      <summary>Gets or sets an object used to provide culture-specific formatting information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.#ctor">
      <summary>Initializes a new instance of the ThicknessConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Double</strong> values.</para>
      </summary>
      <returns>The converter value. All sides to the <em>Thickness</em> will have the same value.</returns>
      <param name="value">The value produced by the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>.</param>
      <param name="targetType">
        <para>The type of the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</para>
      </param>
      <param name="parameter">
        <para>The converter parameter to use.</para>
      </param>
      <param name="culture">
        <para>The culture to use in the converter.</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.InverseValue">
      <summary>Gets or sets a value indicating whether the inverse of the converted value is returned by the Convert method.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>TypeToBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Determines if the type specified as a <em>parameter</em> is assignable from the type of the specified <em>value</em>.</summary>
      <returns>
        <strong>true</strong> if the type specified as a <em>parameter</em> is assignable from the type of the specified <em>value; <strong>false</strong>
otherwise.</em></returns>
      <param name="value">The value whose type to verify.</param>
      <param name="parameter">The type to validate.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.Singleton">
      <summary>Gets a static instance of <strong>TypeToBoolean</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.#ctor">
      <summary>Initializes a new instance of the <strong>TypeToVisibilityConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <strong>Type</strong> to a <strong>Visibility</strong> value.</summary>
      <returns>The value of the Visibility property when
<em>value</em> and <em>parameter</em> are the same or when they are not, according to the value of the <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter~SetVisibilityWhenTrue.html">SetVisibilityWhenTrue</see> property.</returns>
      <param name="value">The <strong>Type</strong> to convert.</param>
      <param name="targetType">
        <strong>Visibility</strong>
      </param>
      <param name="parameter">The <strong>Type</strong> to which to compare.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>TypeToVisibilityConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.SetVisibilityWhenTrue">
      <summary>Gets or sets a value indicating whether the value of the Visibility property is set when the types are the same or when
they are different.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.Visibility">
      <summary>Gets or sets the <strong>Visibility</strong> value that will be used.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter.#ctor">
      <summary>Initializes a new instance of the <strong>ValueToMaskedTextConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value to a masked text string.</summary>
      <param name="value">The string to convert.</param>
      <param name="parameter">A string representation of the mask.</param>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension">
      <summary>
        <para>Interprets and creates the binding required between a cell and its <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.CellEditor.html">editor</see> at runtime.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ThemeConverter">
      <summary>Provides a type converter to convert Themes to and from various other representations.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ThemeKey">
      <summary>Represents a key that provides a unique identifier for each style. Each style associates its key with a view, a theme, <strong>and</strong> an element.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension">
      <summary>
        <para>Interprets and creates the binding between an element and the view applied to
a grid.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ViewConverter">
      <summary>Allows for a view and theme to be assigned to the View property of a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridControl.html">DataGridControl</see> through attribute syntax.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.#ctor">
      <summary>Initializes a new instance of the CellEditorBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that is set as the value of the target property for this markup extension.</summary>
      <param name="serviceProvider">Object that can provide services for the markup extension</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.Converter">
      <summary>Gets or sets the converter used by the <strong>CellEditorBindingExtension</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ConverterCulture">
      <summary>
        <para>Gets or sets the culture used by the Converter.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ConverterParameter">
      <summary>
        <para>Gets or sets the parameters used by the Converter.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnSourceUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding target to the binding source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnTargetUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding source to the binding target.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnValidationError">
      <summary>Gets or sets a value indicating whether to provide notification when a validation error occurs.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.#ctor">
      <summary>Initializes a new instance of the ThemeConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert an object in the given source type to a Theme using the specified context.</summary>
      <returns>
        <strong>true</strong> if the conversion can be performed; <strong>false</strong> otherwise.</returns>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides a format context.</param>
      <param name="sourceType">A <strong>Type</strong> that represents the type to convert from.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert the object to the specified type, using the specified context.</summary>
      <returns>
        <strong>true</strong> if the conversion can be performed; <strong>false</strong> otherwise.</returns>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides a format context.</param>
      <param name="destinationType">A <strong>Type</strong> that represents the type to convert to.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value object to a Theme.</summary>
      <returns>An object that represents the converted <em>value</em>.</returns>
      <param name="context">An <strong>ITypeDescriptorContext</strong> that provides a format context.</param>
      <param name="culture">A <strong>CultureInfo</strong> that specifies the culture to which to convert.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor">
      <summary>Initializes a new instance of the ThemeKey class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor(System.Type,System.Type,System.Type)">
      <summary>Initializes a new instance of the ThemeKey specifying the <strong>Type</strong> of the
view, type, and element to which the style applies.</summary>
      <param name="targetViewType">The <strong>Type</strong> of the view to which the style is associated.</param>
      <param name="themeType">The <strong>Type</strong> of the theme to which the style is associated.</param>
      <param name="targetElementType">The <strong>Type</strong> of the element to which the style is associated.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the ThemeKey class specifying the <strong>Type</strong>
of the view and element to which the style applies.</summary>
      <param name="targetViewType">The <strong>Type</strong> of the view to which the style applies.</param>
      <param name="targetElementType">The <strong>Type</strong> of the element to which the style applies.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.Equals(System.Object)">
      <summary>Retrieves a value indicating whether the specified object is the same as the current object.</summary>
      <returns>
        <strong>true</strong> if the specified object is the same as the current object; <strong>false</strong> otherwise.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.Assembly">
      <summary>Gets an assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.TargetElementType">
      <summary>Gets or sets the <strong>Type</strong> of the element to which the style applies.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.TargetViewType">
      <summary>Gets or sets the <strong>Type</strong> of the view to which the style applies.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.ThemeType">
      <summary>Gets or sets the <strong>Type</strong> of the theme to which the style applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor">
      <summary>Initializes a new instance of the ViewBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor">
      <summary>Initializes a new instance of the ViewBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor(System.String)">
      <summary>Initializes a new instance of the ViewBinding class specifying the path to
the binding source property.</summary>
      <param name="path">A string representing the path to the binding source property.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that is set as the value of the target property for this markup extension.</summary>
      <returns>The object value to set on the property where the extension is applied.</returns>
      <param name="serviceProvider">
        <para>Object that can provide services for the markup extension.</para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Converter">
      <summary>Gets or sets the converter to use.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the Converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Path">
      <summary>Gets or sets the path to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span> property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.#ctor">
      <summary>Initializes a new instance of the ViewConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <strong>ViewConverter</strong>, using the specified context.</summary>
      <returns>
        <strong>true</strong> if the object can be converted; <strong>false</strong> otherwise.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type being evaluated for conversion.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <strong>ViewConverter</strong>, using the specified context.</summary>
      <returns>The converted object.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a value to the specified type, using the specified context.</summary>
      <returns>The converted object.</returns>
      <param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
      <param name="culture">Culture specific information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellContentBindingValidationRule">
      <summary>Represents a pass-through CellValidationRule, wrapping a validation
rule that validates a cell content binding.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule">
      <summary>Represents a rule that validates cell-editor content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule">
      <summary>Represents a rule that validates cell-editor content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule">
      <summary>Represents a rule that validates cell content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule">
      <summary>Represents a rule that validates cell content through its <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule~Validating_EV.html">Validating</see> event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule">
      <summary>Represents a pass-through CellValidationRule, wrapping a
multi-purpose <strong>ValidationRule</strong> to expose it as a <strong>CellValidationRule</strong></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule">
      <summary>Represents a validation rule that validates type conversion of values to and from a source.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellContentBindingValidationRule.#ctor(System.Windows.Controls.ValidationRule)">
      <summary>Initializes a new instance of the <strong>CellContentBindingValidationRule</strong> class specifying the <strong>ValidationRule</strong> that will be wrapped
as a CellValidationRule.</summary>
      <param name="validationRule">The <strong>ValidationRule</strong> that will be wrapped as a CellValidationRule.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule.#ctor">
      <summary>Initializes a new instance of the <strong>CellEditorErrorValidationRule</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext,System.Windows.FrameworkElement)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <param name="value">The value to validate.</param>
      <param name="culture">The <strong>CultureInfo</strong> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
      <param name="cellEditor">The cell editor that contains the value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <param name="value">The <strong>CultureInfo</strong> of the value. The value to validate.</param>
      <param name="culture">The <strong>CultureInfo</strong> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext,System.Windows.FrameworkElement)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <param name="value">The value to validate.</param>
      <param name="culture">The <strong>CultureInfo</strong> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
      <param name="cellEditor">The cell editor that contains the value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
      <param name="value">The value to validate.</param>
      <param name="culture">The <strong>CultureInfo</strong> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.#ctor">
      <summary>Initializes a new instance of the EventCellValidationRule
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
      <param name="value">The value to validate</param>
      <param name="culture">The <strong>CultureInfo</strong> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.Validating">
      <summary>Raised after the Validate method to provide
additional validation, or, if no validation has been provided in the <strong>Validate</strong> method, to validate cell content.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.#ctor">
      <summary>Initializes a new instance of the PassthroughCellValidationRule class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.#ctor(System.Windows.Controls.ValidationRule)">
      <summary>Initializes a new instance of the PassthroughCellValidationRule class specifying the
<strong>ValidationRule</strong> that will be wrapped as a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule.html">CellValidationRule</see>.</summary>
      <param name="validationRule">The <strong>ValidationRule</strong> that will be wrapped as a CellValidationRule.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
      <param name="value">The value to validate.</param>
      <param name="culture">The <em><strong>CultureInfo</strong></em> of the value.</param>
      <param name="context">The validation context of the value to validate. The validation context includes
both the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.ValidationRule">
      <summary>Gets or sets the <strong>ValidationRule</strong> to be wrapped as a CellValidationRule.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule.#ctor(System.Boolean,System.Type)">
      <summary>Initializes a new instance of the <strong>SourceDataConverterValidationRule</strong> class specifying whether the source supports <strong>DBNull</strong>
values and the type to which values are to be converted.</summary>
      <param name="sourceSupportDBNull">
        <strong>true</strong> if the source supports <strong>DBNull</strong> values, <strong>false</strong> otherwise.</param>
      <param name="targetType">The <strong>Type</strong> to which values are to be converter.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule.Validate">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ColumnStretchMode">
      <summary>Value indicating how the widths of the columns in a grid are stretched.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ColumnStretchMode.None">
      <summary>The widths of the columns are not stretched.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ColumnStretchMode.First">
      <summary>Only the width of the first column is stretched.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ColumnStretchMode.Last">
      <summary>Only the width of the last column is stretched.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ColumnStretchMode.All">
      <summary>The widths of all the columns are stretched so that they evenly occupy the available space. This value is used in combination with "star" ("*") sizing (see
Column.Width property).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DropMarkOrientation">
      <summary>Value representing the orientation of the drop-mark in the ColumnManagerRow and
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.GroupByControl.html">GroupByControl</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.DropMarkOrientation.Default">
      <summary>The orientation of the drop-mark will be the default orientation depending on a grid's view.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.DropMarkOrientation.Vertical">
      <summary>The drop-mark will have a vertical orientation.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.DropMarkOrientation.Horizontal">
      <summary>The drop-mark will have a horizontal orientation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PassiveLayoutAxis">
      <summary>Value representing on which axis a PassiveLayoutDecorator's size will be
provided by its parent.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PassiveLayoutAxis.Vertical">
      <summary>The height of a PassiveLayoutDecorator will be determined by its parent.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PassiveLayoutAxis.Horizontal">
      <summary>The width of a PassiveLayoutDecorator will be determined by its parent.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PassiveLayoutAxis.Both">
      <summary>The height and width of a PassiveLayoutDecorator will be determined by
its parent.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition">
      <summary>Value representing the position of the DataGridScrollViewer to indicate if
navigation in the fixed header or footer sections is permitted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition.Top">
      <summary>The DataGridScrollViewer is scrolled to the top indicating that navigation
in the fixed header or footer sections is permitted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition.Bottom">
      <summary>The DataGridScrollViewer is scrolled to the bottom indicating that
navigation in the fixed header or footer sections is permitted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition.Left">
      <summary>The DataGridScrollViewer is scrolled to the left indicating that navigation
in the fixed header or footer sections is permitted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition.Right">
      <summary>The DataGridScrollViewer is scrolled to the right indicating that
navigation in the fixed header or footer sections is permitted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition.None">
      <summary>The DataGridScrollViewer is not scrolled to one of its extremities
indicating that navigation in the fixed header or footer sections is not permitted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewPropertyMode">
      <summary>Value that determines how or if the property on which the ViewPropertyAttribute is set can be accessed through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewPropertyMode.None">
      <summary>The property on which the ViewPropertyAttribute is set cannot be accessed
through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewPropertyMode.ViewOnly">
      <summary>The property on which the ViewPropertyAttribute is set will be accessible
through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>. If defined on a table-view property, it will not be
possible to provide an alternate value for <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DetailConfiguration.html">DetailConfigurations</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewPropertyMode.Routed">
      <summary>
        <para>The <strong>attached property</strong> on which the ViewPropertyAttribute is set will be accessible through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see> and will redirect to the appropriate DetailConfigurations for its
value, when applicable.</para>
        <para>If a detail configuration does not explicitly define a value for the property, the view's default property value will be used.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewPropertyMode.RoutedNoFallback">
      <summary>
        <para>The <strong>attached property</strong> on which the ViewPropertyAttribute is set will be accessible through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see> and will redirect to the appropriate DetailConfigurations for its
value, when applicable.</para>
        <para>If a detail configuration does not explicitly define a value for the property, the view's default property value will <strong>NOT</strong> be used.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.AeroNormalColorTheme">
      <summary>
        <para>Represents the Aero normal-color theme.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ClassicSystemColorTheme">
      <summary>Represents the Windows Classic, system-colors theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes">
      <summary>Static class that provides a variety of brushes that were designed to be used as data-grid backgrounds.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer">
      <summary>Represents a scrollable area of a DataGridControl object that can contain other
visible elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.FixedCellPanel">
      <summary>
        <br />
Panel used as the PART_CellsHost template part when a grid is in a table-view layout.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaHomesteadTheme">
      <summary>Represents the Luna Homestead theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaMetallicTheme">
      <summary>Represents the Luna Metallic theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaNormalColorTheme">
      <summary>Represents the Luna normal-color theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator">
      <summary>
        <para>Represents a decorator that, for the specified axis, does not have a desired size but still lays out its child according to the size provided by its
parent.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.RoyaleNormalColorTheme">
      <summary>Represents the Royale normal-color theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer">
      <summary>Represents a synchronized, scrollable area that can contain other visible elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableflowView">
      <summary>Represents a table-view layout in which rows are laid out horizontally as in traditional grid-like styles, but with animated smooth scrolling, sticky group
headers and sticky master-detail master row and headers, full-column animated drag and drop reordering.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost">
      <summary>
        <para>Class used in DataGridControl templates as a replacement for the
<strong>ItemsPresenter</strong> when a grid is in a table-flow view layout and will contain the data items as well as the items contained in
<strong>non-fixed</strong> header and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableView">
      <summary>Represents a table-view layout in which rows are laid out horizontally in a traditional grid-like style.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel">
      <summary>Represents a panel that contains the items located in the header and/or footer sections of a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewItemsHost">
      <summary>
        <para>Class used in DataGridControl templates as a replacement for the
<strong>ItemsPresenter</strong> when a grid is in a table-view layout and that will contain the data items as well as the items contained in
<strong>non-fixed</strong> header and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer">
      <summary>Represents a scrollable area that can contain other visible elements laid out in a tableview.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TargetViewAttribute">
      <summary>Represents an attribute that is set on a theme to identify the views to which it can be applied.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Theme">
      <summary>Base class that represents a theme that can be applied to one or more views.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.UIViewBase">
      <summary>Base class that provides various layout information that applies to all views, <strong>excluding</strong> views that are used when printing.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewBase">
      <summary>Base class that provides various layout information that applies to all views, including views that are used when printing.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute">
      <summary>Identifies how and if a property in a view can be accessed using a ViewBinding (see Remarks).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ZuneNormalColorTheme">
      <summary>Represents the Zune normal-color theme.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.AeroNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the AeroNormalColorTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ClassicSystemColorTheme.#ctor">
      <summary>Initializes a new instance of the ClassicSystemColorTheme class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraBlue">
      <summary>
        <para>Evoking the dancing light shows of Earth?s polar zones, the Aurora Blue background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraPink">
      <summary>
        <para>Evoking the dancing light shows of Earth?s polar zones, the Aurora Pink background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraRed">
      <summary>
        <para>Evoking the dancing light shows of Earth?s polar zones, the Aurora Red background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalBlack">
      <summary>Designed for the black Elemental and Office 2007 themes, this simple yet classy background subtly adds the black color-scheme of Office 2007 to your datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalBlue">
      <summary>Designed for the blue Elemental and Office 2007 themes, this simple yet classy background subtly adds the blue color-scheme of Office 2007 to your datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalSilver">
      <summary>Designed for the silver Elemental and Office 2007 themes, this simple yet classy background subtly adds the silver color-scheme of Office 2007 to your
datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.HorizonBlue">
      <summary>You can see further with Xceed DataGrid for WPF, and this blue horizon background will inspire your end-users to do the same</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.HorizonOrange">
      <summary>You can see further with Xceed DataGrid for WPF, and this orange horizon background will inspire your end-users to do the same</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.NightFog">
      <summary>Add some mysterious nighttime mist to your application with this evocative background.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunBlack">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this not-so-bright and cheery black background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunBlue">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this bright and cheery blue background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunOrange">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this bright and cheery orange background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.Sunrise">
      <summary>Greet your end-users with the sunrise of a new day (or a sunset if they?re working late) when you decorate your application with the yellow Sunrise background.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunriseBlue">
      <summary>Greet your end-users with the sunrise of a new day (or a sunset if they?re working late) when you decorate your application with the blue Sunrise background.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.GetSynchronizedScrollViewerPosition(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>SynchronizedScrollViewerPosition</strong> attached property for the specified dependency object (see Remarks).</summary>
      <returns>
        <para>The SynchronizeScrollViewerPosition value for the dependency
object.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>Top</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the top indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Bottom</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the bottom indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Left</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the left indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Right</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the right indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is not scrolled to one of its extremities indicating that navigation in the fixed header or footer
            sections is not permitted.</description>
          </item>
        </list>
        <para></para>
      </returns>
      <param name="obj">The dependency object from which the property value is read. By default, <strong>SynchronizedScrollViewerPosition.None</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>Called when a change in scrolling state is detected, such as a change in scroll position, <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.-->extent</span>,
or <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="viewport#15796c1c-52cd-4281-ab4c-c67cc4298c11"><!--For controls that display content, the viewport is a virtual window through which all or part of the content is visible. A viewport is typically used to display a particular portion of content when all of the content will not fit in the available display space. Compare to the extent size, which is the total width and height of the content.-->viewport</span>
size.</summary>
      <param name="e">A <strong>ScrollChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.SetSynchronizedScrollViewerPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition)">
      <summary>Sets the value of the <strong>SynchronizedScrollViewerPosition</strong> attached property to the specified dependency object (see Remarks).</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">
        <para>The needed SynchronizedScrollViewerPosition value.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>Top</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the top indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Bottom</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the bottom indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Left</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the left indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Right</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the right indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is not scrolled to one of its extremities indicating that navigation in the fixed header or footer
            sections is not permitted.</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.HorizontalScrollBar">
      <summary>Gets the scroll viewer's horizontal scroll bar.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.VerticalScrollBar">
      <summary>Gets the scroll viewer's vertical scroll bar.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.SynchronizedScrollViewerPositionProperty">
      <summary>Identifies the <strong>SynchronizedScrollViewerPosition</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the child elements of this panel.</summary>
      <returns>The <strong>Size</strong> that represents the arranged size of the panel.</returns>
      <param name="finalSize">The <strong>Size</strong> this element uses to arrange its child elements.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>Creates a new <strong>UIElementCollection</strong>.</summary>
      <returns>An ordered collection of elements that have the specified logical parent.</returns>
      <param name="logicalParent">The logical parent element of the collection to be created.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.GetVisualChild(System.Int32)">
      <summary>Gets a <strong>Visual</strong> child of this panel at the specified index.</summary>
      <returns>A <strong>Visual</strong> child of the parent <strong>Panel</strong> element.</returns>
      <param name="index">The zero-based index position of the <strong>Visual</strong> child.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
      <param name="availableSize">An upper limit <strong>Size</strong> that should not be exceeded.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMinWidth">
      <summary>
        <para>Gets or sets the minimum width that a column in stretch mode can have.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMode">
      <summary>
        <para>Gets or sets a value that indicates which columns are in stretch mode.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedCellCount">
      <summary>Gets or sets the number of cells that are fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedColumnDropMarkPen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical child elements of this panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.VisualChildrenCount">
      <summary>Gets the number of child <strong>Visual</strong> objects in this panel instance.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMinWidthProperty">
      <summary>Identifies the ColumnStretchMinWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchModeProperty">
      <summary>Identifies the ColumnStretchMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedCellCountProperty">
      <summary>Identifies the FixedCellCount dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedColumnDropMarkPenProperty">
      <summary>Identifies the FixedColumnDropMarkPen dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaHomesteadTheme.#ctor">
      <summary>Initializes a new instance of the LunaHomesteadTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaMetallicTheme.#ctor">
      <summary>Initializes a new instance of the LunaMetallicTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the LunaNormalColorTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child element in anticipation of arranging it during the <strong>ArrangeOverride</strong> pass.</summary>
      <param name="availableSize">An upper limit <strong>Size</strong> that should not be exceeded.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.Axis">
      <summary>Gets or sets a value that determines the axis on which the <strong>PassiveLayoutDecorator</strong> will be passive (see Remarks).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.AxisProperty">
      <summary>Identifies the Axis dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.RoyaleNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the RoyaleNormalColorTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>Called when a change in scrolling state is detected, such as a change in scroll position, <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.-->extent</span>,
or <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="viewport#15796c1c-52cd-4281-ab4c-c67cc4298c11"><!--For controls that display content, the viewport is a virtual window through which all or part of the content is visible. A viewport is typically used to display a particular portion of content when all of the content will not fit in the available display space. Compare to the extent size, which is the total width and height of the content.-->viewport</span>
size.</summary>
      <param name="e">A <strong>ScrollChangedEventArgs</strong> that contains the event data.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.ScrollOrientation">
      <summary>Gets or sets the scroll orientation of the <strong>SynchronizedScrollViewer</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.ScrollOrientationProperty">
      <summary>Identifies the ScrollOrientation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreColumnsBeingReordered(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the columns are being reordered.</summary>
      <returns>
        <strong>true</strong> if the columns are being reordered; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreFootersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether footers are sticky.</summary>
      <returns>
        <strong>true</strong> if footers are sticky; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupFootersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether group footers are sticky.</summary>
      <returns>
        <strong>true</strong> if group footers are sticky; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupHeadersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether group headers are sticky.</summary>
      <returns>
        <strong>true</strong> if group headers are sticky; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupsFlattened(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether groups are flattened.</summary>
      <returns>
        <strong>true</strong> if groups are flattened; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreHeadersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether headers are sticky.</summary>
      <returns>
        <strong>true</strong> if headers are sticky; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreParentRowsSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether parent rows are sticky.</summary>
      <returns>
        <strong>true</strong> if parent rows are sticky; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetContainerHeight(System.Windows.DependencyObject)">
      <summary>Gets the container height.</summary>
      <returns>A value representing the container height.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetIsDeferredLoadingEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
      <returns>
        <strong>true</strong> the data rows' actual DataContexts should be assigned immediately; <strong>false</strong> otherwise.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetRowFadeInAnimationDuration(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
      <returns>A double value indicating the duration of the fade-in animation when the background of the scroll bar is clicked. By default, 300d.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetScrollingAnimationDuration(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
      <returns>A double value indicating the duration of the scrolling animation when the background of the scroll bar is clicked. By default, 750d.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreFootersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether footers are sticky.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether footers are sticky.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupFootersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether group footers are sticky.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether group footers are sticky.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupHeadersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether group headers are sticky.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether group headers are sticky.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupsFlattened(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether groups are flattened.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether groups are flattened.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreHeadersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether headers are sticky.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether headers are sticky.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreParentRowsSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether parent rows are sticky.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating whether parent rows are sticky.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetContainerHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the container height.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">The container height.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetIsDeferredLoadingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> the data rows' actual DataContexts should be assigned immediately; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetRowFadeInAnimationDuration(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetScrollingAnimationDuration(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreFootersSticky">
      <summary>Gets or sets a value indicating whether the view's footers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupFootersSticky">
      <summary>Gets or sets a value indicating whether the view's group footers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupHeadersSticky">
      <summary>Gets or sets a value indicating whether the view's group headers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupsFlattened">
      <summary>Gets or sets a value indicating whether the view's child groups are flattened (not indented) in relation to the parent group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreHeadersSticky">
      <summary>Gets or sets a value indicating whether the view's headers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreParentRowsSticky">
      <summary>Gets or sets a value indicating whether the view's parent rows are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.ContainerHeight">
      <summary>Gets or sets the height of all containers in the ItemsHost.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.IsAnimatedColumnReorderingEnabled">
      <summary>Gets or sets a value indicating whether columns are animated as they are moved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.IsDeferredLoadingEnabled">
      <summary>Gets or sets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.RowFadeInAnimationDuration">
      <summary>Gets or sets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.ScrollingAnimationDuration">
      <summary>Gets or sets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreColumnsBeingReorderedProperty">
      <summary>Identifies the AreColumnsBeingReordered attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreFootersStickyProperty">
      <summary>Identifies the AreFootersSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupFootersStickyProperty">
      <summary>Identifies the AreGroupFootersSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupHeadersStickyProperty">
      <summary>Identifies the AreGroupHeadersSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupsFlattenedProperty">
      <summary>Identifies the AreGroupsFlattened dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreHeadersStickyProperty">
      <summary>Identifies the AreHeadersSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreParentRowsStickyProperty">
      <summary>Identifies the AreParentRowsSticky dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.ContainerHeightProperty">
      <summary>Identifies the ContainerHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.IsAnimatedColumnReorderingEnabledProperty">
      <summary>Identifies the IsAnimatedColumnReorderingEnabled
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.IsDeferredLoadingEnabledProperty">
      <summary>Identifies the IsDeferredLoadingEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.RowFadeInAnimationDurationProperty">
      <summary>Identifies the RowFadeInAnimationDuration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.ScrollingAnimationDurationProperty">
      <summary>Identifies the ScrollingAnimationDuration dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the items.</summary>
      <param name="finalSize">
        <para>The final area within the parent that this element should use to arrange itself and its children.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.CreateChildCollection">
      <summary>Creates an empty list of <strong>UIElements</strong> that will contain the containers that are generated for data items and items contained in non-fixed header
and footer sections.</summary>
      <returns>An empty <strong>IList&lt;UIElement</strong>&gt; collection that will contain the containers that are generated for data items and items contained in the
non-fixed header and footer sections.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.MeasureOverride(System.Windows.Size)">
      <summary>Arranges the contents of <strong>TableflowViewItemsHost</strong>.</summary>
      <returns>The size of the <strong>TableflowViewItemsHost</strong>.</returns>
      <param name="availableSize">The Size this element uses to arrange its child elements.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.#ctor">
      <summary>Initializes a new instance of the TableView class.<br />
Initializes a new instance of the TableView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid when it is in a table-view layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetAutoScrollInterval(System.Windows.DependencyObject)">
      <summary>Gets the auto scroll interval.</summary>
      <returns>A value representing the auto scroll interval.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetCanScrollHorizontally(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the item to which the property is attached can scroll with the content of a grid.</summary>
      <returns>
        <strong>true</strong> if the item can scroll with the content of a grid; <strong>false</strong> otherwise (the item will stay fix).</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetColumnStretchMinWidth(System.Windows.DependencyObject)">
      <summary>Gets the minimum width that a column in stretch mode can have.</summary>
      <returns>A value representing the minimum width that a column in stretch mode can have. By default, 50d.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetColumnStretchMode(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that indicates which columns are in stretch mode.</para>
      </summary>
      <returns>
        <para>A ColumnStretchMode value indicating which
columns are in stretch mode. By default, <strong>None</strong>.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The widths of the columns are not stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>First</strong>
            </term>
            <description class="DescriptionCell">Only the width of the first column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Last</strong>
            </term>
            <description class="DescriptionCell">Only the width of the last column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>All</strong>
            </term>
            <description class="DescriptionCell">The widths of all the columns are stretched so that they evenly occupy the available space.</description>
          </item>
        </list>
        <para></para>
      </returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetDetailIndicatorWidth(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the width of the DetailIndicators when a grid is
in table-view.</para>
      </summary>
      <returns>
        <para>A value indicating the width of the DetailIndicators
when a grid is in table-view. By default, <strong>double.NaN</strong>.</para>
      </returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnCount(System.Windows.DependencyObject)">
      <summary>Gets the number of columns that are fixed.</summary>
      <returns>A value representing the number of columns that are fixed. By default, 0.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnDropMarkPen(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
      <returns>The <strong>Pen</strong> used to draw the fixed-column drop-mark.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetGroupLevelIndicatorWidth(System.Windows.DependencyObject)">
      <summary>Gets the width of the GroupLevelIndicators when a
grid is in table-view.</summary>
      <returns>A value indicating the width of the GroupLevelIndicators when a grid is in table-view. By default, <strong>double.NaN</strong>.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetHorizontalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
      <returns>The <strong>Brush</strong> used to paint the horizontal grid lines. By default, a null reference (<b>Nothing</b> in Visual Basic).</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetHorizontalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the horizontal grid lines.</summary>
      <returns>A value indicating the thickness of the horizontal grid lines. By default, <strong>double.NaN</strong>.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetIsAlternatingRowStyleEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether an alternate style is applied to every other row.</summary>
      <returns>
        <strong>true</strong> if an alternate style is applied to every other row; <strong>false</strong> otherwise. The default value of this property is usually
<strong>false</strong>; however, for some themes, alternate row styles may be enabled by default.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetIsColumnVirtualizationEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether column virtualization is enabled.</summary>
      <returns>
        <strong>true</strong> if column virtualization is enabled; <strong>false</strong> otherwise. By default, <strong>true</strong>.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetRemoveColumnStretchingOnResize(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether column stretching is removed when columns are resized.</summary>
      <returns>
        <strong>true</strong> if column stretching is removed when columns are resized; <strong>false</strong> otherwise. By default, <strong>false</strong>.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetVerticalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
      <returns>The <strong>Brush</strong> used to paint the vertical grid lines. By default, a null reference (<b>Nothing</b> in Visual Basic).</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetVerticalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the vertical grid lines.</summary>
      <returns>A value indicating the thickness of the vertical grid lines. By default, <strong>double.NaN</strong>.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetAutoScrollInterval(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the auto scroll interval.</summary>
      <param name="obj">
        <para>The dependency object from which the property value is read.</para>
      </param>
      <param name="value">A value representing the auto scroll interval.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetCanScrollHorizontally(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the item to which the property is attached can scroll with the content of a grid.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if the item can scroll with the content of a grid; <strong>false</strong> otherwise (the item will stay fix).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetColumnStretchMinWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the minimum width that a column in stretch mode can have.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <para>A value representing the minimum width that a column in stretch mode can have. By default, 50d.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetColumnStretchMode(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ColumnStretchMode)">
      <summary>
        <para>Sets a value that indicates which columns are in stretch mode.</para>
      </summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <para>A ColumnStretchMode value indicating which columns are in stretch mode. By
default, <strong>None</strong>.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The widths of the columns are not stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>First</strong>
            </term>
            <description class="DescriptionCell">Only the width of the first column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Last</strong>
            </term>
            <description class="DescriptionCell">Only the width of the last column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>All</strong>
            </term>
            <description class="DescriptionCell">The widths of all the columns are stretched so that they evenly occupy the available space.</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetDetailIndicatorWidth(System.Windows.DependencyObject,System.Double)">
      <summary>
        <para>Sets the width of the DetailIndicators when a grid is
in table-view.</para>
      </summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <para>A value indicating the width of the DetailIndicators
when a grid is in table-view. By default, <strong>double.NaN</strong>.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnCount(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets a value indicating the thickness of the vertical grid lines.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the thickness of the vertical grid lines. By default, <strong>double.NaN</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnDropMarkPen(System.Windows.DependencyObject,System.Windows.Media.Pen)">
      <summary>Sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">The <strong>Pen</strong> used to draw the fixed-column drop-mark.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetGroupLevelIndicatorWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the width of the GroupLevelIndicators when a
grid is in table-view.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the width of the GroupLevelIndicators when a grid is in table-view. By default, <strong>double.NaN</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetHorizontalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">The <strong>Brush</strong> used to paint the horizontal grid lines. By default, a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetHorizontalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the horizontal grid lines.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the thickness of the horizontal grid lines. By default, <strong>double.NaN</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetIsAlternatingRowStyleEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether an alternate style is applied to every other row.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if an alternate style is applied to every other row; <strong>false</strong> otherwise. The default value of this property is usually
<strong>false</strong>; however, for some themes, alternate row styles may be enabled by default.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetIsColumnVirtualizationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether column virtualization is enabled.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if column virtualization is enabled; <strong>false</strong> otherwise. By default, <strong>true</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetRemoveColumnStretchingOnResize(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether column stretching is removed when columns are resized.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if column stretching is removed when columns are resized; <strong>false</strong> otherwise. By default, <strong>false</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetVerticalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">The <strong>Brush</strong> used to paint the vertical grid lines. By default, a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetVerticalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the vertical grid lines.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">A value indicating the thickness of the vertical grid lines. By default, <strong>double.NaN</strong>.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.AllowRowResize">
      <summary>Gets or sets a value indicating whether rows can be resized through the row selector pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.DetailIndicatorWidth">
      <summary>Gets or sets the width of the DetailIndicators when a grid is in table-view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnCount">
      <summary>Gets or sets the number of columns that are fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnDropMarkPen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.GroupLevelIndicatorWidth">
      <summary>Gets or sets the width of the GroupLevelIndicators when a grid is in table-view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the horizontal grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.IsAlternatingRowStyleEnabled">
      <summary>Gets or sets a value indicating whether an alternate style is applied to every other row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RemoveColumnStretchingOnResize">
      <summary>Gets or sets a value indicating whether column stretching is removed when columns are resized.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorPaneWidth">
      <summary>Gets or sets the width of the row-selector pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeNorthSouthCursor">
      <summary>Gets or sets the image used for the mouse pointer when the RowSelector is used to resize a Row in TableView when the
Orientation property of the
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.TableViewItemsHost">TableViewItemsHost</see> is <strong>Orientation.Vertical</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeWestEastCursor">
      <summary>Gets or sets the image used for the mouse pointer when the RowSelector is used to resize a Row in TableView when the
Orientation property of the
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.TableViewItemsHost">TableViewItemsHost</see> is <strong>Orientation.Horizontal</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.ShowRowSelectorPane">
      <summary>Gets or sets a value indicating whether the RowSelectorPane is visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the vertical grid lines.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.AllowRowResizeProperty">
      <summary>Identifies the AllowRowResize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.AutoScrollIntervalProperty">
      <summary>Identifies the <strong>AutoScrollInterval</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.CanScrollHorizontallyProperty">
      <summary>Identifies the <strong>CanScrollHorizontally</strong> attached property</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ColumnStretchMinWidthProperty">
      <summary>Identifies the ColumnStretchMinWidth attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ColumnStretchModeProperty">
      <summary>Identifies the ColumnStretchMode attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.DetailIndicatorWidthProperty">
      <summary>Identifies the <strong>DetailIndicatorWidth</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnCountProperty">
      <summary>Identifies the FixedColumnCount attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnDropMarkPenProperty">
      <summary>Identifies the FixedColumnDropMarkPen attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.GroupLevelIndicatorWidthProperty">
      <summary>Identifies the GroupLevelIndicatorWidth attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineBrushProperty">
      <summary>Identifies the HorizontalGridLineBrush attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineThicknessProperty">
      <summary>Identifies the HorizontalGridLineThickness attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.IsAlternatingRowStyleEnabledProperty">
      <summary>Identifies the IsAlternatingRowStyleEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RemoveColumnStretchingOnResizeProperty">
      <summary>Identifies the RemoveColumnStretchingOnResize
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorPaneWidthProperty">
      <summary>Identifies the RowSelectorPaneWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeNorthSouthCursorProperty">
      <summary>Identifies the RowSelectorResizeNorthSouthCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeWestEastCursorProperty">
      <summary>Identifies the RowSelectorResizeWestEastCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ShowRowSelectorPaneProperty">
      <summary>Identifies the ShowRowSelectorPane dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineBrushProperty">
      <summary>Identifies the VerticalGridLineBrush attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineThicknessProperty">
      <summary>Identifies the VerticalGridLineThickness attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel.#ctor">
      <summary>Initializes a new instance of the <strong>TableViewHeaderFooterPanel</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel.ArrangeOverride(System.Windows.Size)">
      <param name="arrangeSize">
        <para>The final area within the parent that this element should use to arrange itself and its children.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>Measures the child element in anticipation of arranging it during the <strong>ArrangeOverride</strong> pass.</para>
      </summary>
      <param name="availableSize">
        <para>An upper limit <strong>Size</strong> that should not be exceeded.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewItemsHost.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the items.</summary>
      <param name="finalSize">
        <para>The final area within the parent that this element should use to arrange itself and its children.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewItemsHost.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass</para>
      </summary>
      <returns>
        <para>The <strong>Size</strong> that represents the desired size of the element.</para>
      </returns>
      <param name="availableSize">
        <para>An upper limit <strong>Size</strong> that should not be exceeded.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.ShowRowSelectorPane">
      <summary>Gets or sets a value indicating whether the RowSelectorPane should be shown.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.RowSelectorPaneWidthProperty">
      <summary>Identifies the RowSelectorPaneWidth dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.ShowRowSelectorPaneProperty">
      <summary>Identifies the ShowRowSelectorPane dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TargetViewAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the TargetViewAttribute class.</summary>
      <param name="viewType">The type of the view for which the theme applies.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TargetViewAttribute.ViewType">
      <summary>Gets the view for which the theme applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <strong>true</strong> if the view is supported; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported(System.Type)">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <strong>true</strong> if the view type is supported; <strong>false</strong> otherwise.</returns>
      <param name="viewType">The type of the view to query</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported(System.Type,System.Type)">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <para>
          <strong>true</strong> if the view type is supported<strong>; false</strong> otherwise.</para>
      </returns>
      <param name="viewType">
        <para>The type of the view to query</para>
      </param>
      <param name="themeType">
        <para>The type of the theme that will be used when the view is queried.</para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetDropMarkOrientation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>DropMarkOrientation</strong> attached property for the specified dependency object.</summary>
      <returns>The DropMarkOrientation value for the dependency object.</returns>
      <param name="obj">
        <para>The dependency object from which the property value is read. By default, <strong>DropMarkOrientation.Default</strong>.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>Default</strong>
            </term>
            <description class="DescriptionCell">The orientation of the drop-mark will be the default orientation depending on a grid's view.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Vertical</strong>
            </term>
            <description class="DescriptionCell">The drop-mark will have a vertical orientation.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Horizontal</strong>
            </term>
            <description class="DescriptionCell">The drop-mark will have a horizontal orientation.</description>
          </item>
        </list>
        <para></para>
      </param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetDropMarkPen(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>DropMarkPen</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>Pen</strong> property value for the dependency object.</returns>
      <param name="obj">The dependency object from which the property value is read. By default, a null reference (<b>Nothing</b> in Visual Basic).</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetDropMarkOrientation(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.DropMarkOrientation)">
      <summary>Sets the value of the <strong>DropMarkOrientation</strong> attached property to the specified dependency object.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>Default</strong>
            </term>
            <description class="DescriptionCell">The orientation of the drop-mark will be the default orientation depending on a grid's view.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Vertical</strong>
            </term>
            <description class="DescriptionCell">The drop-mark will have a vertical orientation.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Horizontal</strong>
            </term>
            <description class="DescriptionCell">The drop-mark will have a horizontal orientation.</description>
          </item>
        </list>
        <para></para>
      </param>
      <param name="value">The needed DropMarkOrientation value.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetDropMarkPen(System.Windows.DependencyObject,System.Windows.Media.Pen)">
      <summary>Sets the value of the <strong>DropMarkPen</strong> attached property to the specified dependency object.</summary>
      <param name="obj">The dependency object to which the attached property is written.</param>
      <param name="value">The needed <em>Pen</em> value.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.BusyCursor">
      <summary>Gets or sets the image used for the mouse pointer when the datagrid is busy while a FilterCell or AutoFilterControl is being used.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.CannotDropDraggedElementCursor">
      <summary>Gets or sets the image used for the mouse pointer when an element cannot be dropped on its target.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnResizeWestEastCursor">
      <summary>
        <para>Gets or sets the image used for the mouse pointer when a column is resized.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateCommittingGlyph">
      <summary>Gets or sets the glyph to display when the underlying virtualized data collection is committing data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateErrorGlyph">
      <summary>Gets or sets the glyph to display when an error has occurred in the underlying virtualized data collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateLoadingGlyph">
      <summary>Gets or sets the glyph to display when the underlying virtualized data collection is loading data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.CurrentItemGlyph">
      <summary>Gets or sets the glyph to display when an item is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkOrientation">
      <summary>Gets or sets the default orientation of the drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkPen">
      <summary>Gets or sets the default <strong>Pen</strong> used to draw the drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.EditingRowGlyph">
      <summary>Gets or sets the glyph to display when a row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.IsConnectionStateGlyphEnabled">
      <summary>Gets or sets a value indicating whether the connection state glyphs that indicate the status of the underlying virtualized data collection are enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.RemovingGroupCursor">
      <summary>
        <para>Gets or sets the image used for the mouse pointer when a GroupByItem is dragged out of a
<see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.GroupByControl">GroupByControl</see> to ungroup it.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the scroll tip's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different scroll-tip content template based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ShowScrollTip">
      <summary>Gets or sets a value indicating whether the scroll tip is visible when a grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ValidationErrorGlyph">
      <summary>Gets or sets the glyph that is displayed when a validation error occurs.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.BusyCursorProperty">
      <summary>Identifies the BusyCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.CannotDropDraggedElementCursorProperty">
      <summary>Identifies the CannotDropDraggedElementCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnResizeWestEastCursorProperty">
      <summary>Identifies the ColumnResizeWestEastCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateCommittingGlyphProperty">
      <summary>Identifies the ConnectionStateCommittingGlyph
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateErrorGlyphProperty">
      <summary>Identifies the ConnectionStateErrorGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateLoadingGlyphProperty">
      <summary>Identifies the ConnectionStateLoadingGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.CurrentItemGlyphProperty">
      <summary>Identifies the CurrentItemGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkOrientationProperty">
      <summary>Identifies the DefaultDropMarkOrientation dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkPenProperty">
      <summary>Identifies the DefaultDropMarkPen dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DropMarkOrientationProperty">
      <summary>Identifies the <strong>DropMarkOrientation</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DropMarkPenProperty">
      <summary>Identifies the <strong>DropMarkPen</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.EditingRowGlyphProperty">
      <summary>Identifies the EditingRowGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.IsConnectionStateGlyphEnabledProperty">
      <summary>Identifies the IsConnectionStateGlyphEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.RemovingGroupCursorProperty">
      <summary>Identifies the RemovingGroupCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateProperty">
      <summary>Identifies the ScrollTipTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateSelectorProperty">
      <summary>Identifies the ScrollTipTemplateSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ShowScrollTipProperty">
      <summary>Identifies the ShowScrollTip dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ValidationErrorGlyphProperty">
      <summary>Identifies the ValidationErrorGlyph dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.GetIsLastItem(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the item to which the property is attached is the last element in a grid.</summary>
      <returns>
        <strong>true</strong> if the item is the last item in a grid; <strong>false</strong> otherwise.</returns>
      <param name="obj">The dependency object from which the property value is read.</param>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the item to which the property is attached is the last item in a grid.</summary>
      <param name="obj">
        <para>The dependency object to which the attached property is written.</para>
      </param>
      <param name="value">
        <strong>true</strong> if the item is the last item in a grid; <strong>false</strong> otherwise.</param>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.AscendingSortGlyph">
      <summary>Gets or sets the glyph to display when a column is sorted in an ascending direction.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.CollapseGroupGlyph">
      <summary>Gets or sets the glyph to display when a group is expanded to allow it to be collapsed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.DescendingSortGlyph">
      <summary>Gets or sets the glyph to display when a column is sorted in an descending direction.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.ExpandGroupGlyph">
      <summary>Gets or sets the glyph to display when a group is collapsed to allow it to be expanded.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.FixedFooters">
      <summary>Gets a collection that contains the items that are located in the fixed, non-scrollable footer section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.FixedHeaders">
      <summary>Gets a collection that contains the items that are located in the fixed, non-scrollable header section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Footers">
      <summary>Gets a collection that contains the items that are located in the footer section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Headers">
      <summary>Gets a collection that contains the items that are located in the header section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Theme">
      <summary>Gets or sets the theme that determines which styles are applied to the elements in a grid for this specific view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.UseDefaultHeadersFooters">
      <summary>Gets or sets a value indicating whether the default header and footer items are automatically added to a grid's fixed, and non-fixed, header and footer
sections.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.AscendingSortGlyphProperty">
      <summary>
        <para align="left">Identifies the AscendingSortGlyph dependency
property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.CollapseGroupGlyphProperty">
      <summary>Identifies the GroupCollapseGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.DescendingSortGlyphProperty">
      <summary>Identifies the DescendingSortGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.ExpandGroupGlyphProperty">
      <summary>Identifies the GroupExpandGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FixedFootersProperty">
      <summary>Identifies the FixedFooters dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FixedHeadersProperty">
      <summary>Identifies the FixedHeaders dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.IsLastItemProperty">
      <summary>Identifies the <strong>IsLastItem</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.ThemeProperty">
      <summary>
        <para>Identifies the Theme dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <strong>ViewPropertyAttribute</strong> class specifying the ViewPropertyMode that determines how or if the property on which the attribute is set
can be accessed through a <see cref="Xceed.Wpf.DataGrid~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute.ViewPropertyMode">
      <summary>Gets a value that determines how or if the property on which the attribute is set can be accessed through a ViewBinding.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Windows7Theme.#ctor">
      <summary>Initializes a new instance of the Windows7Theme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ZuneNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the <strong>ZuneNormalColorTheme</strong> class.</summary>
    </member>
  </members>
</doc>