<UserControl x:Class="PrintCostCalculator3d.Views.SettingsGeneralView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:validators="clr-namespace:PrintCostCalculator3d.Validators"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:viewModels="clr-namespace:PrintCostCalculator3d.ViewModels"
             xmlns:converters="clr-namespace:PrintCostCalculator3d.Converters"
             xmlns:localization="clr-namespace:PrintCostCalculator3d.Resources.Localization"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:CSMS="clr-namespace:PrintCostCalculator3d"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModels:SettingsGeneralViewModel}"
             >
    <UserControl.Resources>
        <converters:ApplicationNameToTranslatedStringConverter x:Key="ApplicationNameToTranslatedStringConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer Style="{StaticResource DefaultScrollViewer}">
            <StackPanel Grid.Row="0">
                <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.StartupApplication}" />
                <TextBlock Text="{x:Static localization:Strings.ShowFollowingApplicationOnStartup}" Style="{DynamicResource DefaultTextBlock}" Margin="0,0,0,10" />
                <ComboBox ItemsSource="{Binding ApplicationsVisible}" IsSynchronizedWithCurrentItem="False" SelectedItem="{Binding DefaultApplicationSelectedItem}" Width="250" HorizontalAlignment="Left"  Margin="0,0,0,20">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, Converter={StaticResource ApplicationNameToTranslatedStringConverter}}"
                                       d:DataContext="{d:DesignInstance CSMS:ApplicationViewInfo}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.VisibleApplicationsInTheBar}" />
                <Grid Margin="0,0,0,10" Width="520" MaxHeight="300" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource BoldTextBlock}"  Text="{x:Static localization:Strings.VisibleApplications}" />
                    <ListBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding ApplicationsVisible}" SelectedItem="{Binding VisibleApplicationSelectedItem}" MouseDoubleClick="ListBoxVisibleToHide_OnMouseDoubleClick" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, Converter={StaticResource ApplicationNameToTranslatedStringConverter}}" d:DataContext="{d:DesignInstance CSMS:ApplicationViewInfo}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Column="2" Grid.Row="2" VerticalAlignment="Center">
                        <Button Command="{Binding VisibleToHideApplicationCommand}" ToolTip="{x:Static localization:Strings.Hide}" IsEnabled="{Binding IsVisibleToHideApplicationEnabled}" Style="{StaticResource CleanButton}" Margin="0,0,0,10">
                            <Rectangle Width="20" Height="20">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=ChevronDoubleRight}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                        <Button Command="{Binding HideToVisibleApplicationCommand}" ToolTip="{x:Static localization:Strings.Show}" IsEnabled="{Binding IsHideToVisibleApplicationEnabled}" Style="{StaticResource CleanButton}">
                            <Rectangle Width="20" Height="20">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=ChevronDoubleLeft}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                    <TextBlock Grid.Column="4" Grid.Row="0" Style="{StaticResource BoldTextBlock}" Text="{x:Static localization:Strings.HiddenApplications}"/>
                    <ListBox Grid.Column="4" Grid.Row="2" ItemsSource="{Binding ApplicationsHidden}" SelectedItem="{Binding HiddenApplicationSelectedItem}" MouseDoubleClick="ListBoxHideToVisible_OnMouseDoubleClick" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, Converter={StaticResource ApplicationNameToTranslatedStringConverter}}" d:DataContext="{d:DesignInstance CSMS:ApplicationViewInfo}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <Grid Margin="0,10,0,0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ApplicationsVisible.Count}" Value="1">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="24" Height="24" Fill="{DynamicResource MahApps.Brushes.Accent}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=InformationVariant}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="2" Text="{x:Static localization:Strings.AtLeastOneApplicationMustBeVisible}" Style="{StaticResource AccentTextBlock}" />
                </Grid>
                <!-- Default PrintServer -->

                <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.CurrencySymbol}" Margin="0,10"/>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <CheckBox Content="{x:Static localization:Strings.OverwriteDefaultCurrencySymbol}" Style="{DynamicResource DefaultCheckBox}" 
                              IsChecked="{Binding OverwriteCurrencySymbol}"/>
                    <Rectangle Width="24" Height="24" ToolTip="{x:Static localization:Strings.HelpMessage_OverwriteCurrencySymbol}" Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                        <Rectangle.Resources>
                            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                        </Rectangle.Resources>
                    </Rectangle>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0,0,0,10"
                            Visibility="{Binding OverwriteCurrencySymbol, Converter={StaticResource BooleanToVisibilityConverter}}"
                            >
                    <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{x:Static localization:Strings.LabelSpecifiyNewCurrencySymbol}" Margin="0,10"/>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="cbCultures" 
                                  IsEditable="True"
                                  ItemsSource="{Binding Cultures}" 
                                  SelectedItem="{Binding SelectedCulture}" 
                                  DisplayMemberPath="DisplayName"
                                  Width="250" HorizontalAlignment="Left"  Margin="0,0,0,20">

                        </ComboBox>
                        <TextBox x:Name="tbSelectedCultureName"  Width="250" 
                                 IsReadOnly="True" HorizontalAlignment="Left"  Margin="20,0,0,20"
                             Text="{Binding SelectedCulture.Name, Mode=OneWay}"
                             Style="{StaticResource DefaultTextBox}"
                             />
                    </StackPanel>
                    <TextBox x:Name="tbNewCurrencySymbol"  Width="250" IsReadOnly="True" HorizontalAlignment="Left"  Margin="0,0,0,20"
                             Text="{Binding CurrencySymbol}"
                             Style="{StaticResource DefaultTextBox}"
                             />
                    
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="{x:Static localization:Strings.OverwriteCompleteNumberFormats}" Style="{DynamicResource DefaultCheckBox}" 
                                  IsChecked="{Binding OverwriteNumberFormats}"/>
                        <Rectangle Width="24" Height="24" ToolTip="{x:Static localization:Strings.HelpMessage_OverwriteNumberFormat}" Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                            <Rectangle.Resources>
                                <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                            </Rectangle.Resources>
                        </Rectangle>
                    </StackPanel>
                    <!-- Example -->
                    <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{x:Static localization:Strings.LabelExamples}" Margin="0,10"/>
                    <Grid MaxWidth="500" HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- Currency -->
                        <TextBlock Style="{StaticResource DefaultTextBlock}" Grid.Row="0"
                                   Text="{x:Static localization:Strings.LabelExampleCurrency}" 
                                   Margin="20,4"/>
                        <mah:NumericUpDown Culture="{Binding SelectedCulture}" Grid.Row="1"
                                           Value="{Binding ExampleValue}" 
                                           StringFormat="C2" 
                                           Margin="20,4"/>
                        
                        <!-- Date time -->
                        <TextBlock Style="{StaticResource DefaultTextBlock}" Grid.Row="0" Grid.Column="1"
                                   Text="{x:Static localization:Strings.LabelExampleDateTime}" 
                                   Margin="20,4"/>
                        <mah:DateTimePicker SelectedDateTime="{Binding ExampleDateTime}"  Grid.Row="1" Grid.Column="1"
                                            Margin="20,4">
                            <mah:DateTimePicker.Style>
                                <Style TargetType="{x:Type mah:DateTimePicker}">
                                    <Setter Property="Culture" Value="{Binding CurrentCulture}" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding OverwriteNumberFormats}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Culture" Value="{Binding SelectedCulture}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mah:DateTimePicker.Style>
                        </mah:DateTimePicker>
                    </Grid>

                </StackPanel>
                
                <!--
                <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.DefaultPrintServer}" Margin="0,10"/>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="{x:Static localization:Strings.SelectYourDefaultPrintServer}" Style="{DynamicResource DefaultTextBlock}" />
                        <Rectangle Width="24" Height="24" ToolTip="{x:Static localization:Strings.HelpMessage_DefaultPrintServer}" Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                        <Rectangle.Resources>
                            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                        </Rectangle.Resources>
                    </Rectangle>
                </StackPanel>
                <ComboBox x:Name="cbMaterialKind" ItemsSource="{Binding Source={StaticResource AvailablePrintServers}}" SelectedItem="{Binding DefaultPrinterServer}" Width="250" HorizontalAlignment="Left"  Margin="0,0,0,20">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                -->
                <!-- Background Job -->
            <!-- 
            <TextBlock Style="{StaticResource HeaderTextBlock}" Text="Background Job" Margin="0,10"/>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <TextBlock Text="RunBackgroundJobEveryXMinute" Style="{DynamicResource DefaultTextBlock}" />
                <Rectangle Width="24" Height="24" ToolTip="HelpMessage_BackgroundJob" Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                    <Rectangle.Resources>
                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                    </Rectangle.Resources>
                </Rectangle>
            </StackPanel>
            <mah:NumericUpDown Value="{Binding BackgroundJobInterval}" Maximum="120" Minimum="0" Interval="1" />
            -->
            <!-- History -->
            <!-- 
            <TextBlock Style="{StaticResource HeaderTextBlock}" Text="History" Margin="0,10"/>
            <TextBlock Text="NumberOfStoredEntries" Style="{DynamicResource DefaultTextBlock}" Margin="0,0,0,10" />
            <mah:NumericUpDown Value="{Binding HistoryListEntries}" Maximum="25" Minimum="0" Interval="1" />
            -->
        </StackPanel>
        </ScrollViewer>
        <Grid Grid.Row="1" Visibility="{Binding RestartRequired, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,10,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Width="24" Height="24" Fill="{DynamicResource MahApps.Brushes.Accent}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=InformationVariant}" />
                </Rectangle.OpacityMask>
            </Rectangle>
            <TextBlock Grid.Column="2" Text="{x:Static localization:Strings.RestartTheApplicationSoThatAllChangesAreApplied}" VerticalAlignment="Center" Style="{StaticResource AccentTextBlock}" />
        </Grid>
    </Grid>
</UserControl>
