<UserControl x:Class="PrintCostCalculator3d.Views.SettingsSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:localization="clr-namespace:PrintCostCalculator3d.Resources.Localization"
             xmlns:viewModels="clr-namespace:PrintCostCalculator3d.ViewModels"
             xmlns:converters="clr-namespace:PrintCostCalculator3d.Converters"
             xmlns:validators="clr-namespace:PrintCostCalculator3d.Validators"
             
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="800"
             Loaded="UserControl_Loaded" d:DataContext="{d:DesignInstance viewModels:SettingsSettingsViewModel}"
             >
    <UserControl.Resources>
        <!-- Converter -->
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:IsDefaultSettingsLocationToBooleanConverter x:Key="IsDefaultSettingsLocationToBoolConverter" />
        <converters:IsSettingsLocationToBooleanConverter x:Key="IsSettingsLocationToBoolConverter" />
        <converters:ValidateSettingsResetConverter x:Key="ValidateSettingsResetConverter" />
    </UserControl.Resources>
    <StackPanel >
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Location}" />
        <TextBox x:Name="TextBoxLocation" mah:TextBoxHelper.Watermark="{x:Static localization:Strings.EnterLocationDots}" mah:TextBoxHelper.ButtonCommand="{Binding BrowseFolderCommand}" AllowDrop="True" Drop="TextBoxLocation_Drop" PreviewDragOver="TextBoxLocation_PreviewDragOver" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="LocationSelectedPath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        <validators:SettingsFolderExistsValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BrowseFolderTextBox}">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ToggleSwitchIsPortable,Path=IsOn}" Value="True" >
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <StackPanel Margin="0,0,0,20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="{x:Static localization:Strings.Default}" Command="{Binding RestoreDefaultSettingsLocationCommand}" Margin="0,0,10,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ToggleSwitchIsPortable,Path=IsOn}" Value="False" >
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Value="False">
                                        <DataTrigger.Binding>
                                            <Binding Converter="{StaticResource IsDefaultSettingsLocationToBoolConverter}" ElementName="TextBoxLocation" Path="Text"/>
                                        </DataTrigger.Binding>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="{x:Static localization:Strings.Change}" Command="{Binding ChangeSettingsCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ToggleSwitchIsPortable, Path=IsOn}" Value="False" />
                                            <Condition Binding="{Binding ElementName=TextBoxLocation, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=TextBoxLocation, Path=Text, Converter={StaticResource IsSettingsLocationToBoolConverter}}" Value="False" />
                                            <Condition Binding="{Binding MovingFiles}" Value="False" />
                                            <Condition Binding="{Binding MakingPortable}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <Button Grid.Column="2" Command="{Binding OpenLocationCommand}" Style="{StaticResource ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=FolderOpen}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.OpenLocation}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <mahAppsControls:MetroProgressBar IsIndeterminate="True" Foreground="{DynamicResource MahApps.Brushes.Accent}"  Visibility="{Binding MovingFiles, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,10,0,0"/>
        </StackPanel>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Portable}" />
        <StackPanel Margin="0,0,0,20">
            <mahAppsControls:ToggleSwitch 
                x:Name="ToggleSwitchIsPortable" Header="{x:Static localization:Strings.SaveSettingsInApplicationFolder}"   
                IsOn="{Binding IsPortable}" IsEnabled="{Binding MakingPortable, Converter={StaticResource BooleanReverseConverter}}">
                <mahAppsControls:ToggleSwitch.Style>
                    <Style TargetType="{x:Type mahAppsControls:ToggleSwitch}" BasedOn="{StaticResource DefaultToggleSwitch}">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding MovingFiles}" Value="False" />
                                    <Condition Binding="{Binding MakingPortable}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </mahAppsControls:ToggleSwitch.Style>
            </mahAppsControls:ToggleSwitch>
            <mahAppsControls:MetroProgressBar IsIndeterminate="True" Foreground="{DynamicResource MahApps.Brushes.Accent}" Visibility="{Binding MakingPortable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,10,0,0"/>
        </StackPanel>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Reset}" />
        <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{x:Static localization:Strings.LabelSelectTheSettingsYouWantToReset}" Margin="0,0,0,10" />
        <RadioButton x:Name="RadioButtonResetEverything" Content="{x:Static localization:Strings.Everything}" IsChecked="{Binding ResetEverything}" Margin="0,0,0,10"/>
        <RadioButton x:Name="RadioButtonResetCustom" Content="{x:Static localization:Strings.Custom}" Margin="0,0,0,10"/>
        <GroupBox Margin="20,0,0,10" MinWidth="250" HorizontalAlignment="Left">
            <GroupBox.Style>
                <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource WithoutHeaderGroupBox}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=RadioButtonResetCustom, Path=IsChecked}" Value="True">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <StackPanel>
                <CheckBox Content="{x:Static localization:Strings.Settings}" IsEnabled="{Binding SettingsExists}" IsChecked="{Binding ResetSettings}" Margin="0,0,0,10" />
                <!--
                <CheckBox Content="{x:Static localization:Strings.Profiles}" IsEnabled="{Binding ProfilesExists}" IsChecked="{Binding ResetProfiles}" />
                -->
            </StackPanel>
        </GroupBox>
        <Button Content="{x:Static localization:Strings.Reset}" Command="{Binding ResetSettingsCommand}" HorizontalAlignment="Left">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ResetEverything}" Value="True">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ValidateSettingsResetConverter}">
                                    <Binding Path="ResetEverything" />
                                    <Binding Path="ResetSettings" />
                                    <Binding Path="ResetProfiles" />
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter  Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </StackPanel>
</UserControl>
