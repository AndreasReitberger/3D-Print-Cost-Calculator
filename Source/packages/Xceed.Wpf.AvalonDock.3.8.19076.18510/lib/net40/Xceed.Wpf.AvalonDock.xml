<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Wpf.AvalonDock</name>
  </assembly>
  <members>
    <member name="T:Xceed.Wpf.AvalonDock.DockingManager">
      <summary>The core control of AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.DocumentClosedEventArgs">
      <summary>Represents event data for the DocumentClosed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.DocumentClosingEventArgs">
      <summary>Represents event data for the DocumentClosing event.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.#ctor">
      <summary>Initializes a new instance of the DockingManager class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.ArrangeOverride(System.Windows.Size)">
      <summary>Clears the DockingManager's drop areas.</summary>
      <returns>The actual size used.</returns>
      <param name="arrangeBounds">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.CreateFloatingWindow(Xceed.Wpf.AvalonDock.Layout.LayoutContent,System.Boolean)">
      <summary>
        <span id="BugEvents">Creates a Floating Window based on the received content model.</span>
      </summary>
      <returns>The new floating window if the creation succeeded, otherwise <strong>null</strong>.</returns>
      <param name="contentModel">The content model to use.</param>
      <param name="isContentImmutable">
        <strong>true</strong> if the content of the floating window is immutable, otherwise <strong>false</strong>.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.GetLayoutItemFromModel(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Returns the LayoutItem wrapper for the content passed as argument.</summary>
      <returns>Either a LayoutAnchorableItem or <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.html">LayoutDocumentItem</see> that contains the LayoutContent passed as argument.</returns>
      <param name="content">The LayoutContent to search.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnApplyTemplate">
      <summary>Invoked whenever application code or internal processes call ApplyTemplate, setting up AutoHideWindow.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnInitialized(System.EventArgs)">
      <summary>Initializes the LayoutRootPanel and the various "side" panel
properties (e.g., <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.DockingManager~LeftSidePanel.html">LeftSidePanel</see>).</summary>
      <param name="e">An EventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled Keyboard.PreviewKeyDown attached event reaches an element in its route that is derived from this class. Implement this method to add
class handling for this event.</summary>
      <param name="e">A KeyEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.SetAutoHideWindow(Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl)">
      <summary>Provides a secure method for setting the AutoHideWindow property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnActiveContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ActiveContent property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorableHeaderTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorableHeaderTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorableHeaderTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorableHeaderTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorablePaneControlStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorablePaneControlStyle property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorablePaneTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorablePaneTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorablesSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorablesSource property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorableTitleTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorableTitleTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAnchorableTitleTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AnchorableTitleTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnAutoHideWindowChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AutoHideWindow property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnBottomSidePanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the BottomSidePanel property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentHeaderTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentHeaderTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentHeaderTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentHeaderTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentPaneControlStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentPaneControlStyle property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentPaneMenuItemHeaderTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentPaneMenuItemHeaderTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentPaneMenuItemHeaderTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentPaneMenuItemHeaderTemplateSelector
property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentPaneTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentPaneTemplate property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentsSource property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentTitleTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentTitleTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnDocumentTitleTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DocumentTitleTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutChanged(Xceed.Wpf.AvalonDock.Layout.LayoutRoot,Xceed.Wpf.AvalonDock.Layout.LayoutRoot)">
      <summary>Provides derived classes an opportunity to handle changes to the  property.</summary>
      <param name="oldLayout">The old value.</param>
      <param name="newLayout">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutItemContainerStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LayoutItemContainerStyle property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutItemContainerStyleSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LayoutItemContainerStyleSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutItemTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LayoutItemTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutItemTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LayoutItemTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLayoutRootPanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LayoutRootPanel property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnLeftSidePanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the LeftSidePanel property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnRightSidePanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the RightSidePanel property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnThemeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Theme
property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DockingManager.OnTopSidePanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the TopSidePanel property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.ActiveContent">
      <summary>Gets or sets the currently active content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AllowMixedOrientation">
      <summary>Gets or sets whether the docking manager should allow mixed orientation for document panes.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorableContextMenu">
      <summary>Gets or sets the context menu to display for anchorables.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorableHeaderTemplate">
      <summary>
        <para>Gets or sets the data template to use for the headers of anchorables.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorableHeaderTemplateSelector">
      <summary>Gets or sets the selector to use when selecting the data template for the headers of anchorables.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorablePaneControlStyle">
      <summary>
        <para>Gets or sets the style to apply to LayoutAnchorablePaneControl.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorablePaneTemplate">
      <summary>Gets or sets the ControlTemplate used to render LayoutAnchorablePaneControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorablesSource">
      <summary>Gets or sets the source collection of LayoutAnchorable objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorableTitleTemplate">
      <summary>Gets or sets the data template to use for anchorable titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorableTitleTemplateSelector">
      <summary>Gets or sets the selector to use when selecting the data template for anchorable titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorGroupTemplate">
      <summary>Gets or sets the ControlTemplate used to render the LayoutAnchorGroupControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorSideTemplate">
      <summary>Gets or sets the ControlTemplate used to render LayoutAnchorSideControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AnchorTemplate">
      <summary>Gets or sets the ControlTemplate used to render LayoutAnchorControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.AutoHideWindow">
      <summary>Gets the currently shown autohide window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.BottomSidePanel">
      <summary>Gets or sets the bottom side panel control.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.CacheDocumentTabItems">
      <summary>Gets or sets if the LayoutDocumentTabItems will be cached or reloaded while switching the selected LayoutDocumentTabItems.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentContextMenu">
      <summary>Gets or sets the context menu to show for documents.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentHeaderTemplate">
      <summary>Gets or sets the data template to use for document headers.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentHeaderTemplateSelector">
      <summary>Gets or sets the template selector that is used when selecting the data template for document headers.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneControlStyle">
      <summary>Gets or sets the style of LayoutDocumentPaneControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneMenuItemHeaderTemplate">
      <summary>
        <para>Gets or sets the DataTemplate to use when creating menu items in dropdowns on document panes.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneMenuItemHeaderTemplateSelector">
      <summary>Gets or sets the data template selector to use for the menu items shown when the user selects the LayoutDocumentPaneControl's document switch context menu.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneTemplate">
      <summary>Gets or sets the ControlTemplate used to render LayoutDocumentPaneControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentsSource">
      <summary>Gets or sets the source collection of LayoutDocument objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentTitleTemplate">
      <summary>
        <para>Gets or sets the data template to use for document titles when floating.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.DocumentTitleTemplateSelector">
      <summary>Gets or sets the data template selector to use when creating the data template for the title.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.FloatingWindows">
      <summary>Gets the floating windows.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.GridSplitterHeight">
      <summary>Gets or sets the height of grid splitters.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.GridSplitterWidth">
      <summary>Gets or sets the width of grid splitters.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.IconContentTemplate">
      <summary>Gets or sets the data template to use on the icon extracted from the layout model.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.IconContentTemplateSelector">
      <summary>Gets or sets the data template selector to use when selecting the datatamplate for content icons.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.Layout">
      <summary>Gets or sets the root of the layout tree.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemContainerStyle">
      <summary>Gets or sets the style to apply to LayoutDocumentItem objects.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemContainerStyleSelector">
      <summary>Gets or sets the style selector of LayoutDocumentItemStyle.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemTemplate">
      <summary>
        <para>Gets or sets the template used to render anchorable and document content.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemTemplateSelector">
      <summary>
        <para>Gets or sets the template selector to use for anchorable and document templates.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutRootPanel">
      <summary>Gets or sets the layout panel control which is attached to the Layout.Root property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LayoutUpdateStrategy">
      <summary>Gets or sets the strategy class to call when AvalonDock needs to position an anchorable inside an existing layout model.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LeftSidePanel">
      <summary>Gets or sets the left side panel control.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.LogicalChildren">
      <summary>Gets the logical children of the docking manager.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.RightSidePanel">
      <summary>Gets or sets the right side panel control.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.ShowSystemMenu">
      <summary>Gets or sets whether floating windows should show the system menu when a custom context menu is not defined.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.Theme">
      <summary>Gets or sets the theme to use for AvalonDock controls.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DockingManager.TopSidePanel">
      <summary>Gets or sets the top side panel control.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.ActiveContentProperty">
      <summary>ActiveContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AllowMixedOrientationProperty">
      <summary>AllowMixedOrientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorableContextMenuProperty">
      <summary>AnchorableContextMenu dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorableHeaderTemplateProperty">
      <summary>AnchorableHeaderTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorableHeaderTemplateSelectorProperty">
      <summary>AnchorableHeaderTemplateSelector Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorablePaneControlStyleProperty">
      <summary>AnchorablePaneControlStyle Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorablePaneTemplateProperty">
      <summary>AnchorablePaneTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorablesSourceProperty">
      <summary>AnchorablesSource Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorableTitleTemplateProperty">
      <summary>AnchorableTitleTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorableTitleTemplateSelectorProperty">
      <summary>AnchorableTitleTemplateSelector Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorGroupTemplateProperty">
      <summary>AnchorGroupTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorSideTemplateProperty">
      <summary>AnchorSideTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AnchorTemplateProperty">
      <summary>AnchorTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.AutoHideWindowProperty">
      <summary>AutoHideWindow dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.BottomSidePanelProperty">
      <summary>BottomSidePanel Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.CacheDocumentTabItemsProperty">
      <summary>CacheDocumentTabItems Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentContextMenuProperty">
      <summary>DocumentContextMenu Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentHeaderTemplateProperty">
      <summary>DocumentHeaderTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentHeaderTemplateSelectorProperty">
      <summary>DocumentHeaderTemplateSelector Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneControlStyleProperty">
      <summary>DocumentPaneControlStyle Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneMenuItemHeaderTemplateProperty">
      <summary>DocumentPaneMenuItemHeaderTemplate Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneMenuItemHeaderTemplateSelectorProperty">
      <summary>DocumentPaneMenuItemHeaderTemplateSelector
Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentPaneTemplateProperty">
      <summary>DocumentPaneTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentsSourceProperty">
      <summary>DocumentsSource Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentTitleTemplateProperty">
      <summary>DocumentTitleTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.DocumentTitleTemplateSelectorProperty">
      <summary>DocumentTitleTemplateSelector Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.GridSplitterHeightProperty">
      <summary>GridSplitterHeight Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.GridSplitterWidthProperty">
      <summary>GridSplitterWidth Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.IconContentTemplateProperty">
      <summary>IconContentTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.IconContentTemplateSelectorProperty">
      <summary>IconContentTemplateSelector Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemContainerStyleProperty">
      <summary>LayoutItemContainerStyle Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemContainerStyleSelectorProperty">
      <summary>LayoutItemContainerStyleSelector Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemTemplateProperty">
      <summary>LayoutItemTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutItemTemplateSelectorProperty">
      <summary>LayoutItemTemplateSelector Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutProperty">
      <summary>Layout Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutRootPanelProperty">
      <summary>LayoutRootPanel Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LayoutUpdateStrategyProperty">
      <summary>LayoutUpdateStrategy Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.LeftSidePanelProperty">
      <summary>LeftSidePanel Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.RightSidePanelProperty">
      <summary>RightSidePanel Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.ShowSystemMenuProperty">
      <summary>ShowSystemMenu Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.ThemeProperty">
      <summary>Theme Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.DockingManager.TopSidePanelProperty">
      <summary>TopSidePanel Dependency Property</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.DockingManager.ActiveContentChanged">
      <summary>Raised when ActiveContent changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.DockingManager.DocumentClosed">
      <summary>Raised after a document is closed</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.DockingManager.DocumentClosing">
      <summary>Raised when a document is about to be closed</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.DockingManager.LayoutChanged">
      <summary>Raised when  changes</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.DockingManager.LayoutChanging">
      <summary>Raised when  is about to be changed</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DocumentClosedEventArgs.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutDocument)">
      <summary>Initializes a new instance of the DocumentClosedEventArgs class.</summary>
      <param name="document">The document that has been closed.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DocumentClosedEventArgs.Document">
      <summary>Gets the document that has been closed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.DocumentClosingEventArgs.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutDocument)">
      <summary>Initializes a new instance of the DocumentClosingEventArgs class.</summary>
      <param name="document">The document that is about to be closed.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.DocumentClosingEventArgs.Document">
      <summary>Gets the document that is about to be closed.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.IDropArea">
      <summary>Provides properties for classes related to drop areas.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.IDropArea.DetectionRect">
      <summary>Gets the detection rectangle of the FrameworkElement associated with the drop area.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.IDropArea.Type">
      <summary>Gets the drop area type.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DropAreaType">
      <summary>Indicates the type of a drop area.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropAreaType.DockingManager">
      <summary>The drop area is the docking manager.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropAreaType.DocumentPane">
      <summary>The drop area is a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropAreaType.DocumentPaneGroup">
      <summary>The drop area is a document pane group.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropAreaType.AnchorablePane">
      <summary>The drop area is an anchorable pane.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DropTargetType">
      <summary>
        <para>Represents the type of a drop target.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DockingManagerDockLeft">
      <summary>Drop target is to the left of all of the other document or anchorable panes.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DockingManagerDockTop">
      <summary>Drop target is above all of the other document or anchorable panes.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DockingManagerDockRight">
      <summary>Drop target is to the right of all of the other document or anchorable panes.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DockingManagerDockBottom">
      <summary>Drop target is below all of the other document or anchorable panes.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockLeft">
      <summary>Drop target is to the left of a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockTop">
      <summary>Drop target is above a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockRight">
      <summary>Drop target is to the right of a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockBottom">
      <summary>Drop target is below a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockInside">
      <summary>Drop target is inside a document. (Document will be added to the containing pane.)</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneGroupDockInside">
      <summary>Drop target is within a document group pane. (Document will be added to the pane group.)</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.AnchorablePaneDockLeft">
      <summary>Drop target is to the left of an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.AnchorablePaneDockTop">
      <summary>Drop target is above an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.AnchorablePaneDockRight">
      <summary>Drop target is to the right of an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.AnchorablePaneDockBottom">
      <summary>Drop target is below an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.AnchorablePaneDockInside">
      <summary>Drop target is inside an anchorable pane. (Anchorable will be added to the containing pane.)</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockAsAnchorableLeft">
      <summary>Drop target is to the left of a document pane. Dropped item will be docked as an anchorable.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockAsAnchorableTop">
      <summary>Drop target is above a document pane. Dropped item will be docked as an anchorable.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockAsAnchorableRight">
      <summary>Drop target is to the right of a document pane. Dropped item will be docked as an anchorable.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropTargetType.DocumentPaneDockAsAnchorableBottom">
      <summary>Drop target is below a document pane. Dropped item will be docked as an anchorable.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType">
      <summary>Indicates the type of the drop target.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DockingManagerDockLeft">
      <summary>Drop target is on the left of the docking manager.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DockingManagerDockTop">
      <summary>Drop target is at the top of the docking manager.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DockingManagerDockRight">
      <summary>Drop target is on the right of the docking manager.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DockingManagerDockBottom">
      <summary>Drop target is at the bottom of the docking manager.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DocumentPaneDockLeft">
      <summary>Drop target is to the left of a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DocumentPaneDockTop">
      <summary>Drop target is above a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DocumentPaneDockRight">
      <summary>Drop target is to the right of a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DocumentPaneDockBottom">
      <summary>Drop target is below a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.DocumentPaneDockInside">
      <summary>Drop target is inside a document pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.AnchorablePaneDockLeft">
      <summary>Drop target is to the left of an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.AnchorablePaneDockTop">
      <summary>Drop target is above an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.AnchorablePaneDockRight">
      <summary>Drop target is to the right of an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.AnchorablePaneDockBottom">
      <summary>Drop target is below an anchorable pane.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTargetType.AnchorablePaneDockInside">
      <summary>Drop target is inside an anchorable pane.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneControlOverlayArea">
      <summary>Represents the overlay area of LayoutAnchorablePaneControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTabPanel">
      <summary>
        <para>Represents the area of an anchorable pane containing tabs.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle">
      <summary>Represents the header/title of an anchorable.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.ContextMenuEx">
      <summary>
        <para>Represents a context menu.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DockingManagerOverlayArea">
      <summary>Represents the overlay area of DockingManager.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DocumentPaneControlOverlayArea">
      <summary>Represents the overlay area of LayoutDocumentPaneControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DocumentPaneTabPanel">
      <summary>Represents the area of a document pane containing tabs.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DropArea`1">
      <summary>Represents the drop area of a FrameworkElement.</summary>
      <typeparam name="T">Type is FrameworkElement.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DropDownButton">
      <summary>Represents a dropdown button used in LayoutDocumentPaneControl,
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.html">AnchorablePaneTitle</see>, and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.html">LayoutAnchorableFloatingWindowControl</see>.<br /></summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea">
      <summary>Represents the area of the drop-down control. Used for right-click context menus.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.Extentions">
      <summary>Provides various extension methods.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl">
      <summary>Represents the view control of the corresponding LayoutAnchorable
belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl">
      <summary>Represents the view control of the corresponding LayoutAnchorableFloatingWindow belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem">
      <summary>Represents an anchorable item contained in a docking manager.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl">
      <summary>Represents the view control of the corresponding LayoutAnchorablePane
belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneGroupControl">
      <summary>Represents the view control of the corresponding LayoutAnchorablePaneGroup belonging to the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.DockingManager~Layout.html">layout model</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem">
      <summary>
        <para>Represents the tab of an anchorable contained in a layout.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl">
      <summary>
        <para>Represents an autohide window.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorGroupControl">
      <summary>Represents the view control of the corresponding LayoutAnchorGroup
belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl">
      <summary>Represents the view control of the corresponding LayoutAnchorSide
belonging to the layout model</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl">
      <summary>Represents an autohide window that hosts a LayoutAnchorableControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl">
      <summary>Represents the view of the corresponding LayoutDocument belonging to the
layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl">
      <summary>Represents the view control of the corresponding LayoutDocumentFloatingWindow belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem">
      <summary>Represents a document item contained in a docking manager.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl">
      <summary>Represents the view control of the corresponding LayoutDocumentPane
belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneGroupControl">
      <summary>Represents the view of the corresponding LayoutDocumentPaneGroup
belonging to the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem">
      <summary>
        <para>Represents the tab of a document contained in a layout.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl">
      <summary>Base class of LayoutAnchorableFloatingWindowControl
and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.html">LayoutDocumentFloatingWindowControl</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutGridControl`1">
      <summary>Base class of various pane group and panel classes.</summary>
      <typeparam name="T">The type to use.</typeparam>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl">
      <summary>Represents the layout grid resizer.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutItem">
      <summary>Base class of LayoutAnchorableItem and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.html">LayoutDocumentItem</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.LayoutPanelControl">
      <summary>Represents the view control of the corresponding LayoutPanel belonging to the
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.DockingManager~Layout.html">layout model</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.MenuItemEx">
      <summary>
        <para>Represents a menu item.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow">
      <summary>
        <para>Represents a window that presents a list of anchorables and documents, as well as which one is selected.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.OverlayArea">
      <summary>Base class of the overlay area classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.OverlayWindow">
      <summary>Represents the window that appears on top of anchorables and documents when an item is being dragged.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Controls.OverlayWindowDropTarget">
      <summary>
        <para>Represents a drop target in an overlay window.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTabPanel.#ctor">
      <summary>Initializes a new instance of the AnchorablePaneTabPanel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the children of an AnchorablePaneTabPanel.</summary>
      <returns>The size of the content.</returns>
      <param name="finalSize">Size used to arrange the content.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Re-measures the panel.</summary>
      <returns>The size that this element needs during layout, based on its calculations of child element sizes.</returns>
      <param name="availableSize">A Size representing the available size.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTabPanel.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Verifies whether an anchorable is being dragged by its tab panel, and if so, transforms it into a floating window that can be moved.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.#ctor">
      <summary>Initializes a new instance of the AnchorablePaneTitle class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.OnModelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the Model property has changed.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Verifies whether an anchorable is being dragged by its tab panel, and if so, transforms it into a floating window that can be moved.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Prepares the anchorable pane for dragging.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the layout anchorable contained in
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle~Model.html">Model</see> to <strong>true</strong>.</summary>
      <param name="e">A MouseButtonEventArgs.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled Mouse.MouseMove attached event reaches an element in its route that is derived from this class.</summary>
      <param name="e">A MouseEventArgs.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.SetLayoutItem(Xceed.Wpf.AvalonDock.Controls.LayoutItem)">
      <summary>Provides a secure method for setting the LayoutItem property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.LayoutItem">
      <summary>
        <para>Gets the LayoutItem attached to this tab item.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.Model">
      <summary>Gets or sets the layout model attached to this view.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.LayoutItemProperty">
      <summary>LayoutItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle.ModelProperty">
      <summary>Model Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.ContextMenuEx.#ctor">
      <summary>Initializes a new instance of the ContextMenuEx class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.ContextMenuEx.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.ContextMenuEx.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>Called when the Opened event occurs.</summary>
      <param name="e">The event data for the Opened event.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DocumentPaneTabPanel.#ctor">
      <summary>Initializes a new instance of the DocumentPaneTabPanel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DocumentPaneTabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the children of a DocumentPaneTabPanel.</summary>
      <returns>The size of the content.</returns>
      <param name="finalSize">Size used to arrange the content.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DocumentPaneTabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Re-measures the panel.</summary>
      <returns>The size that this element needs during layout, based on its calculations of child element sizes.</returns>
      <param name="availableSize">A Size representing the available size.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DocumentPaneTabPanel.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Verifies whether a document is being dragged by its tab panel, and if so, transforms it into a floating window that can be moved.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropArea`1.AreaElement">
      <summary>Gets the FrameworkElement associated with the drop area.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropArea`1.DetectionRect">
      <summary>Gets the detection rectangle of the FrameworkElement associated with the drop area.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropArea`1.Type">
      <summary>Gets the drop area type.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownButton.#ctor">
      <summary>Initializes a new instance of the DropDownButton class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownButton.OnClick">
      <summary>Called when the drop-down button is clicked.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownButton.OnDropDownContextMenuChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DropDownContextMenu property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropDownButton.DropDownContextMenu">
      <summary>Gets or sets the drop down menu to show up when user click on an anchorable or document menu pin.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropDownButton.DropDownContextMenuDataContext">
      <summary>Gets or sets the data context for the drop-down context menu.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropDownButton.DropDownContextMenuDataContextProperty">
      <summary>DropDownContextMenuDataContext Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropDownButton.DropDownContextMenuProperty">
      <summary>DropDownContextMenu Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.#ctor">
      <summary>Initializes a new instance of the DropDownControlArea class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled MouseRightButtonDown routed event reaches an element in its route that is derived from this class.</summary>
      <param name="e">The MouseButtonEventArgs that contains the event data. The event data reports that the right mouse button was pressed.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled PreviewMouseRightButtonUp routed event reaches an element in its route that is derived from this class.</summary>
      <param name="e">The MouseButtonEventArgs that contains the event data. The event data reports that the right mouse button was released.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.DropDownContextMenu">
      <summary>Gets or sets the context menu to show when a right-click is detected over the area occupied by the control.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.DropDownContextMenuDataContext">
      <summary>Gets or sets the data context to attach when the context menu is shown.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.DropDownContextMenuDataContextProperty">
      <summary>DropDownContextMenuDataContext Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.DropDownControlArea.DropDownContextMenuProperty">
      <summary>DropDownContextMenu Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.Extentions.FindLogicalAncestor``1(System.Windows.DependencyObject)">
      <summary>Finds the logical ancenster</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.Extentions.FindLogicalChildren``1(System.Windows.DependencyObject)">
      <summary>Find the logical children.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.Extentions.FindVisualAncestor``1(System.Windows.DependencyObject)">
      <summary>Finds the visual ancestor.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.Extentions.FindVisualChildren``1(System.Windows.DependencyObject)">
      <summary>Finds the visual children.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.Extentions.FindVisualTreeRoot(System.Windows.DependencyObject)">
      <summary>Finds the visual tree root.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorableControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Sets the IsActive property of the
layout anchorable contained in <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.AnchorablePaneTitle~Model.html">Model</see> to <strong>true</strong>.</summary>
      <param name="e">A KeyboardFocusChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.SetLayoutItem(Xceed.Wpf.AvalonDock.Controls.LayoutItem)">
      <summary>Provides a secure method for setting the LayoutItem
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.OnModelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Model property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.LayoutItem">
      <summary>Gets the LayoutItem attached to this tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.Model">
      <summary>Gets or sets the layout model attached to this view control.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.LayoutItemProperty">
      <summary>LayoutItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableControl.ModelProperty">
      <summary>Model Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.FilterMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>
        <para>Filters mouse window messages and reacts accordingly.</para>
      </summary>
      <param name="hwnd">The handle.</param>
      <param name="msg">The message to act upon.</param>
      <param name="wParam">Message parameter.</param>
      <param name="lParam">Message parameter.</param>
      <param name="handled">Whether mouse window message was handled.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.OnClosed(System.EventArgs)">
      <summary>Cleans up resources and raises the OnClosed base method.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Hides the contained content and calls the base OnClosing.</summary>
      <param name="e">A CancelEventArgs representing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.OnInitialized(System.EventArgs)">
      <summary>
        <para>Initializes various properties and creates UI elements for the associated layout model.</para>
      </summary>
      <param name="e">An EventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.OnSingleContentLayoutItemChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SingleContentLayoutItem property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.CloseWindowCommand">
      <summary>Gets the Close Command for the LayoutAnchorableFloatingWindowControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.HideWindowCommand">
      <summary>Gets the command to execute when a floating windw is hidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.Model">
      <summary>Gets or sets the model attached to this view.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.SingleContentLayoutItem">
      <summary>Gets or sets the layout item of the selected content when a single anchorable pane is shown.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableFloatingWindowControl.SingleContentLayoutItemProperty">
      <summary>SingleContentLayoutItem
Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.ClearDefaultBindings">
      <summary>Removes the default bindings from the HideCommand,
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem~AutoHideCommand.html">AutoHideCommand</see>, and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem~DockCommand.html">DockCommand</see> properties.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.Close">
      <summary>Closes the corresponding LayoutAnchorable and its content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.InitDefaultCommands">
      <summary>Initializes the default Hide, AutoHide, and Dock command properties</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.OnVisibilityChanged">
      <summary>Called when the Visibility property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.SetDefaultBindings">
      <summary>Sets the default bindings from the HideCommand, <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem~AutoHideCommand.html">AutoHideCommand</see>, and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem~DockCommand.html">DockCommand</see> properties.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.OnAutoHideCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the AutoHideCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.OnCanHideChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the CanHide property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.OnDockCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DockCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.OnHideCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the HideCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.AutoHideCommand">
      <summary>Gets or sets the command to execute when a user clicks the AutoHide button.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.CanHide">
      <summary>Gets or sets whether the user can hide the anchorable item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.DockCommand">
      <summary>Gets or sets the command to execute when a user clicks the Dock button.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.HideCommand">
      <summary>Gets or sets the command to execute when an anchorable is hidden.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.AutoHideCommandProperty">
      <summary>AutoHideCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.CanHideProperty">
      <summary>CanHide Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.DockCommandProperty">
      <summary>DockCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem.HideCommandProperty">
      <summary>HideCommand Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane)">
      <summary>Initializes a new instance of the LayoutAnchorablePaneControl class using the specified LayoutAnchorablePane instance as its associated layout model.</summary>
      <param name="model">The LayoutAnchorablePane instance to use as its associated layout model.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Sets the IsActive property of the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane~SelectedContent.html">selected content</see> of the associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.html">LayoutAnchorablePane</see> to true.</summary>
      <param name="e">A KeyboardFocusChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane~SelectedContent.html">selected content</see> of the
associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.html">LayoutAnchorablePane</see> to true,
if possible.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane~SelectedContent.html">selected content</see> of the
associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.html">LayoutAnchorablePane</see> to true.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneControl.Model">
      <summary>
        <para>Gets or sets the layout model attached to this view control.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorablePaneGroupControl.OnFixChildrenDockLengths">
      <summary>Sets up DockWidth and DockHeight for its children.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorableTabItem class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <para>Called when another LayoutAnchorableTabItem is dragged onto this one.</para>
      </summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Sets the dragged item as necessary.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Occurs when the left mouse button is pressed down. Prepares potential dragging item.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.html">LayoutAnchorable</see> in <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem~Model.html">Model</see> to <strong>true</strong>.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Cancels this LayoutAnchorableTabItem as a potential drag item.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle this event.</summary>
      <param name="e">A KeyboardFocusChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.SetLayoutItem(Xceed.Wpf.AvalonDock.Controls.LayoutItem)">
      <summary>Provides a secure method for setting the LayoutItem
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.OnModelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Model property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.LayoutItem">
      <summary>Gets the LayoutItem attached to this tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.Model">
      <summary>
        <para>Gets or sets the layout model attached to the anchorable tab item.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.LayoutItemProperty">
      <summary>LayoutItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableTabItem.ModelProperty">
      <summary>Model Dependency Property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Shows the autohidden anchorable and sets the IsActive property of
its <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl~Model.html">layout model</see> to <strong>true</strong>.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Starts a timer (interval of 400 millseconds), after which the autohidden anchorable is shown.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Stops the timer used to determine when an autohidden anchorable will be shown if the timer is running.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.SetSide(Xceed.Wpf.AvalonDock.Layout.AnchorSide)">
      <summary>Provides a secure method for setting the Side property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.Model">
      <summary>Gets or sets the layout model attached to the autohidde anchorable.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.Side">
      <summary>Gets the Side property. This dependency property indicates the anchor side of the control.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorControl.SideProperty">
      <summary>Side dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorGroupControl.Children">
      <summary>The LayoutAnchorControl children of the LayoutAnchor</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorGroupControl.Model">
      <summary>Gets the corresponding LayoutAnchorGroup belonging to the layout model.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.SetIsBottomSide(System.Boolean)">
      <summary>Provides a secure method for setting the IsBottomSide property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.SetIsLeftSide(System.Boolean)">
      <summary>Provides a secure method for setting the IsLeftSide
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.SetIsRightSide(System.Boolean)">
      <summary>Provides a secure method for setting the IsRightSide
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.SetIsTopSide(System.Boolean)">
      <summary>Provides a secure method for setting the IsTopSide
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.Children">
      <summary>Gets the children of the LayoutAnchorSideControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsBottomSide">
      <summary>Gets a value indicating whether this control is anchored to bottom side.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsLeftSide">
      <summary>Gets a value indicating whether this control is anchored to left side.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsRightSide">
      <summary>Gets a value indicating whether this control is anchored to right side.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsTopSide">
      <summary>Gets a value indicating whether this control is anchored to top side.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.Model">
      <summary>Gets the corresponding LayoutAnchorSide belonging to the layout mode.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsBottomSideProperty">
      <summary>IsBottomSide dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsLeftSideProperty">
      <summary>IsLeftSide dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsRightSideProperty">
      <summary>IsRightSide dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAnchorSideControl.IsTopSideProperty">
      <summary>IsTopSide dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.ArrangeOverride(System.Windows.Size)">
      <summary>Positions child elements and determines a size for the instance.</summary>
      <returns>The actual size used.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>Creates the window to be hosted.</summary>
      <returns>
        <span>
          <span>The handle to the child Win32 window to create.</span>
        </span>
      </returns>
      <param name="hwndParent">The window handle of the parent window.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>Destroys the hosted window.</summary>
      <param name="hwnd">A structure that contains the window handle.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.HasFocusWithinCore">
      <summary>Gets a value that indicates whether the sink or one of its contained components has focus.</summary>
      <returns>
        <span>
          <span>
            <span>
              <span class="input">true</span>
            </span> if the sink or one of its contained components has focus; otherwise, <span><span class="input">false</span></span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.MeasureOverride(System.Windows.Size)">
      <summary>Returns the size of the window represented by the HwndHost object, as requested by layout engine operations.</summary>
      <returns>The size of the HwndHost object.</returns>
      <param name="constraint">The size of the HwndHost object.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.AnchorableStyle">
      <summary>Gets or sets the style to apply to the LayoutAnchorableControl
hosted in this auto-hide window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.Background">
      <summary>Gets or sets the background of the auto-hide child window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.LogicalChildren">
      <summary>Gets an enumerator for the logical children.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.Model">
      <summary>Gets the layout model of the LayoutAnchorControl contained by the
auto-hide window.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.AnchorableStyleProperty">
      <summary>AnchorableStyle Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutAutoHideWindowControl.BackgroundProperty">
      <summary>Background Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentControl class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Sets the IsActive property of the layout content contained in
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl~Model.html">Model</see> to <strong>true</strong>.</summary>
      <param name="e">A KeyboardFocusChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.SetLayoutItem(Xceed.Wpf.AvalonDock.Controls.LayoutItem)">
      <summary>Provides a secure method for setting the LayoutItem
property</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.OnModelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Model property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.LayoutItem">
      <summary>Gets the LayoutItem attached to this tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.Model">
      <summary>Gets or sets the layout model attached to this view control.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.LayoutItemProperty">
      <summary>LayoutItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentControl.ModelProperty">
      <summary>Model Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.FilterMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>
        <para>Filters mouse window messages and reacts accordingly.</para>
      </summary>
      <param name="hwnd">The handle.</param>
      <param name="msg">The message to act upon.</param>
      <param name="wParam">Message parameter.</param>
      <param name="lParam">Message parameter.</param>
      <param name="handled">Whether mouse window message was handled.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.OnClosed(System.EventArgs)">
      <summary>Cleans up resources and raises the OnClosed base method</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.OnInitialized(System.EventArgs)">
      <summary>
        <para>Initializes various properties and creates UI elements for the associated layout model.</para>
      </summary>
      <param name="e">An EventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.Model">
      <summary>Gets or sets the model attached to this view.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl.RootDocumentLayoutItem">
      <summary>Gets the root document layout item.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.Close">
      <summary>Closes the corresponding LayoutDocument and its content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.OnDescriptionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Description property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.Description">
      <summary>Gets or sets the description to display for the document item.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem.DescriptionProperty">
      <summary>Description Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane~SelectedContent.html">selected content</see> of the associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.html">LayoutDocumentPane</see> to true, if possible</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane~SelectedContent.html">selected content</see> of the
associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.html">LayoutDocumentPane</see> to true, if
possible.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Sets the IsActive property of the selected content of the associated LayoutDocumentPane to true, if possible.</summary>
      <param name="e">A SelectionChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.CachedContentTemplate">
      <summary>Gets or sets the cached ContentTemplate for the LayoutDocumentPaneControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.CacheTabItems">
      <summary>Gets or sets if the LayoutDocumentTabItems will be cached or reloaded while switching the selected LayoutDocumentTabItems.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.LogicalChildren">
      <summary>Gets the logical children of the instance.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.Model">
      <summary>Gets or sets the layout model attached to this view control.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.CachedContentTemplateProperty">
      <summary>CachedContentTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.CacheTabItemsProperty">
      <summary>CacheTabItems Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneControl.InternalTabControlProperty">
      <summary>Attached property to get/set the LayoutDocumentPaneControl of a specific Decorator.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentPaneGroupControl.OnFixChildrenDockLengths">
      <summary>Sets up DockWidth and DockHeight for children.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentTabItem class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Closes the layout item if the middle mouse button is pressed.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled Mouse.MouseEnter attached event is raised on this element.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled Mouse.MouseLeave attached event is raised on this element.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Sets the IsActive property of the layout content contained in
<see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem~Model.html">Model</see> to <strong>true</strong>.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Releases mouse capture, if possible.</summary>
      <param name="e">A MouseButtonEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Handles the MouseMove event.</summary>
      <param name="e">A MouseEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.SetLayoutItem(Xceed.Wpf.AvalonDock.Controls.LayoutItem)">
      <summary>Provides a secure method for setting the LayoutItem
property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.OnModelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Model property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.LayoutItem">
      <summary>Gets the LayoutItem attached to this tab item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.Model">
      <summary>Gets or sets the layout model attached to the document tab item.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.LayoutItemProperty">
      <summary>LayoutItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutDocumentTabItem.ModelProperty">
      <summary>Model Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.FilterMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>
        <para>Filters mouse window messages and reacts accordingly.</para>
      </summary>
      <param name="hwnd">
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl~FilterMessage:hwnd|PARAM" class="dxeditwrapper" contenteditable="true">The handle</span>
      </param>
      <param name="msg">
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl~FilterMessage:msg|PARAM" class="hsedit" contenteditable="true">The message to act upon</span>
      </param>
      <param name="wParam">
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl~FilterMessage:wParam|PARAM" class="hsedit" contenteditable="true">Message parameter</span>
      </param>
      <param name="lParam">
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Controls.LayoutDocumentFloatingWindowControl~FilterMessage:wParam|PARAM" class="hsedit" contenteditable="true">Message parameter</span>
      </param>
      <param name="handled">Whether mouse window message was handled</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.OnClosed(System.EventArgs)">
      <summary>Cleans up resources.</summary>
      <param name="e">An EventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.OnInitialized(System.EventArgs)">
      <summary>Initializes various command bindings.</summary>
      <param name="e">An EventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.OnStateChanged(System.EventArgs)">
      <summary>Sets the IsMaximized property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.SetIsDragging(System.Boolean)">
      <summary>Provides a secure method for setting the IsDragging property. This dependency property indicates that this floating window is being dragged.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.OnIsDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IsDragging property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.CloseInitiatedByUser">
      <summary>Gets whether the closing of the floating window was initiated by the user.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.IsDragging">
      <summary>Gets whether this floating window is being dragged.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.IsMaximized">
      <summary>Gets whether the window is maximized.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.Model">
      <summary>Gets the associated LayoutFloatingWindow of the layout model.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.IsDraggingProperty">
      <summary>IsDragging dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutFloatingWindowControl.IsMaximizedProperty">
      <summary>IsMaximized dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutGridControl`1.FixChildrenDockLengths">
      <summary>Sets up DockWidth and DockHeight for children.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutGridControl`1.Model">
      <summary>Gets the associated ILayoutElement-derived object in the layout model.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutGridControl`1.Orientation">
      <summary>Gets the orientation of the LayoutGridControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl.#ctor">
      <summary>Initializes a new instance of the LayoutGridResizerControl class.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl.BackgroundWhileDragging">
      <summary>Gets or sets the background of the resizer when it is being dragged..</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl.OpacityWhileDragging">
      <summary>Gets or sets the opacity of the grid resizer when it is being dragged.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl.BackgroundWhileDraggingProperty">
      <summary>BackgroundWhileDragging Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutGridResizerControl.OpacityWhileDraggingProperty">
      <summary>OpacityWhileDragging Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.ClearDefaultBindings">
      <summary>Clears the default command bindings from various properties.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.Close">
      <summary>Closes the corresponding content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.Float">
      <summary>Causes the item to be rendered as a floating window.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.InitDefaultCommands">
      <summary>Initializes various default commands.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.SetDefaultBindings">
      <summary>Sets the default command bindings.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnActivateCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ActivateCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnCanCloseChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the CanClose property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnCanFloatChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the CanFloat property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnCloseAllButThisCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the CloseAllButThisCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnCloseCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the CloseCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnContentIdChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the ContentId property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnDockAsDocumentCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the DockAsDocumentCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnFloatCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the FloatCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnIconSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IconSource property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnIsActiveChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IsActive property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnIsSelectedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IsSelected property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnMoveToNextTabGroupCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MoveToNextTabGroupCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnMoveToPreviousTabGroupCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the MoveToPreviousTabGroupCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnNewHorizontalTabGroupCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the NewHorizontalTabGroupCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnNewVerticalTabGroupCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the NewVerticalTabGroupCommand property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnTitleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the Title
property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutItem.OnVisibilityChanged">
      <summary>Closed the associated LayoutElement-derived content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.ActivateCommand">
      <summary>Gets or sets the command to execute when user wants to activate document or anchorable content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CanClose">
      <summary>Gets or sets whether the item can be closed.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CanFloat">
      <summary>Gets or sets whether the user can move the layout element and drag it to another position.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CloseAllButThisCommand">
      <summary>Gets or sets the 'Close All But This' command.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CloseCommand">
      <summary>Gets or sets the command to execute when user click the document close button.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.ContentId">
      <summary>Gets or sets the content ID used to retrieve content when deserializing layouts.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.DockAsDocumentCommand">
      <summary>Gets or sets the command to execute when user clicks the DockAsDocument button.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.FloatCommand">
      <summary>Gets or sets the command to execute when the end-users click the float button.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IconSource">
      <summary>Gets or sets the icon associated with the item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsActive">
      <summary>Gets or sets whether the item is active in the UI.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsFloatingAsTopMost">
      <summary>Gets or sets if a LayoutItem's LayoutElement will appear over all other windows when floating.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsSelected">
      <summary>Gets or sets whether the item is selected inside its container.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.LayoutElement">
      <summary>Gets the associated LayoutAnchorable or <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see> from the layout model.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.Model">
      <summary>Gets the content of the associated <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.html">LayoutAnchorable</see> or <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.MoveToNextTabGroupCommand">
      <summary>Gets or sets the 'Move to next tab group' command.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.MoveToPreviousTabGroupCommand">
      <summary>Gets or sets the 'Move to previous tab group' command.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.NewHorizontalTabGroupCommand">
      <summary>Gets or sets the 'New horizontal tab group' command.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.NewVerticalTabGroupCommand">
      <summary>Gets or sets the 'New vertical tab group' command.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.Title">
      <summary>Gets or sets the title of the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.TogglePinCommand">
      <summary>
        <span id="BugEvents">Gets or sets the command to execute when a user clicks the toggle pin button.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.LayoutItem.View">
      <summary>Gets the LayoutItem's ContentPresenter.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.ActivateCommandProperty">
      <summary>ActivateCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CanCloseProperty">
      <summary>CanClose Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CanFloatProperty">
      <summary>CanFloat Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CloseAllButThisCommandProperty">
      <summary>CloseAllButThisCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.CloseCommandProperty">
      <summary>CloseCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.ContentIdProperty">
      <summary>ContentId Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.DockAsDocumentCommandProperty">
      <summary>DockAsDocumentCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.FloatCommandProperty">
      <summary>FloatCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IconSourceProperty">
      <summary>IconSource Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsActiveProperty">
      <summary>IsActive Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsFloatingAsTopMostProperty">
      <summary>IsFloatingAsTopMost Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.IsSelectedProperty">
      <summary>IsSelected Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.MoveToNextTabGroupCommandProperty">
      <summary>MoveToNextTabGroupCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.MoveToPreviousTabGroupCommandProperty">
      <summary>MoveToPreviousTabGroupCommand Dependency
Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.NewHorizontalTabGroupCommandProperty">
      <summary>NewHorizontalTabGroupCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.NewVerticalTabGroupCommandProperty">
      <summary>NewVerticalTabGroupCommand Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.TitleProperty">
      <summary>Title Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.LayoutItem.TogglePinCommandProperty">
      <summary>TogglePinCommand Dependency Property.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.LayoutPanelControl.OnFixChildrenDockLengths">
      <summary>Sets up DockWidth and DockHeight for its children.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.#ctor">
      <summary>Initializes a new instance of the MenuItemEx class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.OnIconTemplateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IconTemplate property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.OnIconTemplateSelectorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the IconTemplateSelector property.</summary>
      <param name="e">A DependencyPropertyChangedEventArgs containing event data.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.IconTemplate">
      <summary>Gets or sets the data template for the menu item's icon.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.IconTemplateSelector">
      <summary>Gets or sets the DataTemplateSelector for the menu item's icon.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.IconTemplateProperty">
      <summary>IconTemplate Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.MenuItemEx.IconTemplateSelectorProperty">
      <summary>IconTemplateSelector Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Selects the next document if Tab is being pressed.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Activates the selected document or anchorable when any key other than Tab is pressed.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SetAnchorables(System.Collections.Generic.IEnumerable{Xceed.Wpf.AvalonDock.Controls.LayoutAnchorableItem})">
      <summary>Provides a secure method for setting the Anchorables property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SetDocuments(Xceed.Wpf.AvalonDock.Controls.LayoutDocumentItem[])">
      <summary>Provides a secure method for setting the Documents property.</summary>
      <param name="value">The new value for the property.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.OnSelectedAnchorableChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SelectedAnchorable property.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.OnSelectedDocumentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Provides derived classes an opportunity to handle changes to the SelectedDocument property.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.Anchorables">
      <summary>Gets a list of anchorable items.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.Documents">
      <summary>Gets a list of document items.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SelectedAnchorable">
      <summary>Gets or sets the selected anchorable item.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SelectedDocument">
      <summary>Gets or sets the selected document.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.AnchorablesProperty">
      <summary>Anchorables dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.DocumentsProperty">
      <summary>Documents dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SelectedAnchorableProperty">
      <summary>SelectedAnchorable Dependency Property</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Controls.NavigatorWindow.SelectedDocumentProperty">
      <summary>SelectedDocument Dependency Property</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.OverlayArea.SetScreenDetectionArea(System.Windows.Rect)">
      <summary>Sets the screen detection area for the overlay.</summary>
      <param name="rect">The Rect to use.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.OverlayWindow.OnApplyTemplate">
      <summary>Invoked whenever ApplyTemplate is called.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Controls.OverlayWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the Closing event.</summary>
      <param name="e">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Converters.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Converters.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Converters.InverseBoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Converters.InverseBoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <returns>A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutAnchorablePane">
      <summary>Provides various members related to anchorable panes in the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutContainer">
      <summary>Provides properties and methods related to layout model containers (e.g., the "Group" and the "Pane" classes, as well as floating windows and LayoutRoot).</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutContentSelector">
      <summary>Provides properties and methods related to the selection of anchorable and document content in LayoutAnchorablePane and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.html">LayoutDocumentPane</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutControl">
      <summary>Provides the Model property for the view controls.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutDocumentPane">
      <summary>Provides various members related to document panes in the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutElement">
      <summary>Provides properties related to parent and root of an element.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutElementWithVisibility">
      <summary>Provides a method to calculate whether a layout element is visible.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup">
      <summary>Provides methods and events related to child manipulation within the various "Group" classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutOrientableGroup">
      <summary>Provides an Orientation property.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutPane">
      <summary>Provides methods related to moving and removing children within the various "Pane" classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutPanelElement">
      <summary>Provides a visibility property.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot">
      <summary>Provides various properties and methods for LayoutRoot.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ILayoutUpdateStrategy">
      <summary>
        <para>Represents the strategy class to call when AvalonDock needs to position an anchorable inside an existing layout model.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutContainer.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Removes the specified child ILayoutElement.</summary>
      <param name="element">The child ILayoutElement to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutContainer.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces a child ILayoutElement with a new one.</summary>
      <param name="oldElement">The old ILayoutElement child.</param>
      <param name="newElement">The new ILayoutElement child.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutContainer.Children">
      <summary>Gets an enumerator of type ILayoutElement.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutContainer.ChildrenCount">
      <summary>Gets the number of children contained in the ILayoutContainer.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutContentSelector.IndexOf(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Returns the index of the specified anchorable of document content.</summary>
      <returns>The index of the specified anchorable of document content.</returns>
      <param name="content">The content whose index will be returned.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutContentSelector.SelectedContent">
      <summary>Gets the selected content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutContentSelector.SelectedContentIndex">
      <summary>Gets or sets the index of the selected content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutControl.Model">
      <summary>
        <para>Gets the corresponding ILayoutElement-derived object from the layout model associated with the view control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutElement.Parent">
      <summary>Gets the parent container of the layout element.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutElement.Root">
      <summary>Gets the root of the layout element.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutElementWithVisibility.ComputeVisibility">
      <summary>Determines whether an element is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup.IndexOfChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Returns the index of the specified child layout element.</summary>
      <returns>The index of the child layout element.</returns>
      <param name="element">The child layout element whose index will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup.InsertChildAt(System.Int32,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Inserts the specified child layout element at the specified index.</summary>
      <param name="index">The index at which the child element will be inserted.</param>
      <param name="element">The element that will be inserted.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup.RemoveChildAt(System.Int32)">
      <summary>Removes the child element at the specified index.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup.ReplaceChildAt(System.Int32,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces the child element at the specified index with the specified element.</summary>
      <param name="index">The index of the child element that will be replaced</param>
      <param name="element">The replacement element.</param>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.ILayoutGroup.ChildrenCollectionChanged">
      <summary>Raised when Children changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutOrientableGroup.Orientation">
      <summary>Gets or sets the orientation of the class implementing ILayoutOrientableGroup.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutPane.MoveChild(System.Int32,System.Int32)">
      <summary>Moves a child from an old index to a new index within a pane.</summary>
      <param name="oldIndex">The old index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutPane.RemoveChildAt(System.Int32)">
      <summary>Removes the child at the specified index.</summary>
      <param name="childIndex">The index at which to remove the child.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutPanelElement.IsVisible">
      <summary>Gets whether the layout panel element is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.CollectGarbage">
      <summary>Removes any empty container not directly referenced by other layout items.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.ActiveContent">
      <summary>Gets or sets the active content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.BottomSide">
      <summary>Gets the bottom LayoutAnchorSide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.FloatingWindows">
      <summary>Gets the LayoutRoot's floating windows.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.Hidden">
      <summary>Gets the LayoutRoot's hidden windows.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.LeftSide">
      <summary>Gets the left LayoutAnchorSide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.Manager">
      <summary>Gets the associated docking manager.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.RightSide">
      <summary>Gets the right LayoutAnchorSide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.RootPanel">
      <summary>Gets the root panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.ILayoutRoot.TopSide">
      <summary>Gets the top LayoutAnchorSide.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutUpdateStrategy.AfterInsertAnchorable(Xceed.Wpf.AvalonDock.Layout.LayoutRoot,Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable)">
      <summary>Performs actions after an anchorable has been inserted.</summary>
      <param name="layout">The LayoutRoot involved.</param>
      <param name="anchorableShown">The anchorable that is being shown.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutUpdateStrategy.AfterInsertDocument(Xceed.Wpf.AvalonDock.Layout.LayoutRoot,Xceed.Wpf.AvalonDock.Layout.LayoutDocument)">
      <summary>Performs actions after a document has been inserted.</summary>
      <param name="layout">The LayoutRoot involved.</param>
      <param name="anchorableShown">The document that has been shown.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutUpdateStrategy.BeforeInsertAnchorable(Xceed.Wpf.AvalonDock.Layout.LayoutRoot,Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Performs actions before an anchorable is to be inserted.</summary>
      <param name="layout">The LayoutRoot involved.</param>
      <param name="anchorableToShow">The document that will be shown.</param>
      <param name="destinationContainer">The destination container.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.ILayoutUpdateStrategy.BeforeInsertDocument(Xceed.Wpf.AvalonDock.Layout.LayoutRoot,Xceed.Wpf.AvalonDock.Layout.LayoutDocument,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Performs actions before a document is to be inserted.</summary>
      <param name="layout">The LayoutRoot involved.</param>
      <param name="anchorableToShow">The document that will be shown.</param>
      <param name="destinationContainer">The destination container.</param>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy">
      <summary>
        <para>Indicates where an anchorable that is added manually will be attempted to be shown.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy.Most">
      <summary>Anchorable is as large as possible.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy.Left">
      <summary>Anchorable is shown to the left.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy.Right">
      <summary>Anchorable is shown to the right.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy.Top">
      <summary>Anchorable is shown at the top.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy.Bottom">
      <summary>Anchorable is shown at the bottom.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.AnchorSide">
      <summary>
        <para>Indicates the side to which an element is anchored.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorSide.Left">
      <summary>Anchor is to the left.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorSide.Top">
      <summary>Anchor is to the top.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorSide.Right">
      <summary>Anchor is to the right.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.AnchorSide.Bottom">
      <summary>Anchor is to the bottom.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ChildrenTreeChange">
      <summary>Indicates the manner in which changes to the children tree are made.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.ChildrenTreeChange.DirectChildrenChanged">
      <summary>Direct insert/remove operation has been perfomed on the group.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.ChildrenTreeChange.TreeChanged">
      <summary>An element below in the hierarchy has been added/removed.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.ChildrenTreeChangedEventArgs">
      <summary>Represents event data related to changes in the children tree.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.Extensions">
      <summary>Provides various extension methods.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable">
      <summary>
        <para>Represents an anchorable in the layout model.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow">
      <summary>Represents a floating window containing one or more anchorables in the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane">
      <summary>Represents a layout element that contains a collection of LayoutAnchorable
obiects.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup">
      <summary>Represents an element in the layout model that can contain and arrange multiple LayoutAnchorablePane elements, which in turn contain <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.html">LayoutAnchorable</see> elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorGroup">
      <summary>Represents an autohidden group of one or more LayoutAnchorable elements
that can be anchored to one of the four sides of the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.DockingManager.html">DockingManager</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide">
      <summary>Represents a "side" in a DockingManager.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutContent">
      <summary>Base class of the LayoutAnchorable and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see> classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutDocument">
      <summary>
        <para>Represents a document in the layout model</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow">
      <summary>Represents a floating window containing one or more documents in the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane">
      <summary>Represents a layout element that contains a collection of LayoutDocument
obiects.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup">
      <summary>Represents an element in the layout model that can contain and organize multiple LayoutDocumentPane elements, which in turn contain <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see> elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutElement">
      <summary>Base class of all elements of the layout model.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutElementEventArgs">
      <summary>Provides event data for adding and removing layout elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow">
      <summary>Base class of the two types of floating windows (LayoutAnchorableFloatingWindow and LayoutDocumentFloatingWindow).</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1">
      <summary>Base class of various group layout model classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutGroupBase">
      <summary>Base class of the generic LayoutGroup class.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutPanel">
      <summary>Represents a panel that arranges child panes (e.g., LayoutAnchorablePane and <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.html">LayoutDocumentPane</see>), which in turn contain the actual content (that is, <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.html">LayoutAnchorable</see> or <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see> elements), using a specified <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutPanel~Orientation.html">Orientation</see> and adding a resizer between them.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1">
      <summary>
        <para>Base class of panel, pane, and pane group classes.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Layout.LayoutRoot">
      <summary>Represents the root of the layout model.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.ContainsChildOfType">
      <summary>Indicates whether a child of a specified type is contained in the ILayoutContainer.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.Descendents(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Returns the descendents of the specified ILayoutElement.</summary>
      <returns>The descendents of the specified ILayoutElement.</returns>
      <param name="element">The ILayoutElement whose descendents will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.FindParent``1(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Finds the parent of the specified type of the specified ILayoutElement.</summary>
      <returns>The returned parent.</returns>
      <typeparam name="T">The type of the parent.</typeparam>
      <param name="element">The ILayoutElement whose parent of type T will returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.GetRoot(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Returns the root of the specified ILayoutElement.</summary>
      <returns>The root of the specified ILayoutElement.</returns>
      <param name="element">The ILayoutElement whose root will be returned. If <em>element</em> is root, <em>element</em> itself is returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.GetSide(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Returns the anchor side of the specified ILayoutElement.</summary>
      <returns>The anchor side of the specified element.</returns>
      <param name="element">The ILayoutElement whose anchor side will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.IsOfType``2(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Returns whether the specified container is of either of the specified types.</summary>
      <returns>
        <strong>true</strong> if the specified container is of either of the specified types.</returns>
      <typeparam name="T">A type to verify.</typeparam>
      <typeparam name="S">A type to verify.</typeparam>
      <param name="container">The container whose type will be verified.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.ContainsChildOfType``1(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Indicates whether a child of a specified type is contained in the ILayoutContainer.</summary>
      <typeparam name="T">The type to search for.</typeparam>
      <param name="element">The container to search.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.Extensions.ContainsChildOfType``2(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Indicates whether a child of a either one of the specified type is contained in the ILayoutContainer.</summary>
      <typeparam name="T">A type to search</typeparam>
      <typeparam name="S">A type to search for.</typeparam>
      <param name="container">The container to search.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorable class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.AddToLayout(Xceed.Wpf.AvalonDock.DockingManager,Xceed.Wpf.AvalonDock.Layout.AnchorableShowStrategy)">
      <summary>Add the anchorable to a DockingManager layout</summary>
      <param name="manager">The DockingManager to whose layout the anchorable will be added.</param>
      <param name="strategy">The strategy (relative position, such as left, right, bottom, top) used for the anchorable.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.Hide(System.Boolean)">
      <summary>Hide this content and add it to the  collection of parent root.</summary>
      <param name="cancelable">
        <strong>true</strong> if the hide action can be canceled; <strong>false</strong> otherwise.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.InternalDock">
      <summary>
        <para>Docks the anchorable.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.OnHiding(System.ComponentModel.CancelEventArgs)">
      <summary>Handles the Hiding event.</summary>
      <param name="args">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Called when Parent has changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Reads serialized layout information using the specified XmlReader.</para>
      </summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.Show">
      <summary>Shows the content if it was previously hidden.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.ToggleAutoHide">
      <summary>Toggles autohide state.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para>Writes serialized layout information using the specified XmlWriter.</para>
      </summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.AutoHideHeight">
      <summary>Gets or sets the height to use when auto-hidden anchorables are shown for the first time.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.AutoHideMinWidth">
      <summary>Gets or sets the width to use when auto-hidden anchorables are shown for the first time.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.CanAutoHide">
      <summary>Gets or sets whether an anchorable can be autohidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.CanDockAsTabbedDocument">
      <summary>
        <span id="BugEvents">Gets or sets if the LayoutAnchorable can be docked as a LayoutDocument.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.CanHide">
      <summary>
        <para>Gets or sets whether an anchorable can be hidden.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.IsAutoHidden">
      <summary>Gets whether the anchorable is anchored to a border in an autohidden state.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.IsHidden">
      <summary>Gets whether the anchorable can be hidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.IsVisible">
      <summary>Gets or sets whether the anchorable is visible.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.Hiding">
      <summary>Raised when the anchorable has been hidden (usually by the end-user clicking on the "X" button).</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable.IsVisibleChanged">
      <summary>Raised when the IsVisible property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorableFloatingWindow class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>
        <para>Removes the child element.</para>
      </summary>
      <param name="element">The child element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces a specified child element with a specified new element.</summary>
      <param name="oldElement">The old element.</param>
      <param name="newElement">The new element.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.Children">
      <summary>Gets the children of the floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.ChildrenCount">
      <summary>Gets the number of children.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.IsSinglePane">
      <summary>Gets whether the floating window contains a single pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.IsValid">
      <summary>Gets whether the floating window is valid (whether RootPanel is null).</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.IsVisible">
      <summary>Gets</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.RootPanel">
      <summary>
        <para>Gets or sets the root panel contained in the floating window.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.SinglePane">
      <summary>Gets the pane contained in a floating window that contains only one pane.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorableFloatingWindow.IsVisibleChanged">
      <summary>Raised when IsVisible has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorablePane class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorablePane class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutAnchorable)">
      <summary>Initializes a new instance of the LayoutAnchorablePane class using the specified LayoutAnchorable as its first child.</summary>
      <param name="anchorable">The first LayoutAnchorable child.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.ChildMoved(System.Int32,System.Int32)">
      <summary>
        <para>Called when a child has been moved.</para>
      </summary>
      <param name="oldIndex">The old index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.GetVisibility">
      <summary>Gets whether the elment is visible.</summary>
      <returns>
        <strong>true</strong> if the element is visible; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.IndexOf(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Gets the index of the specified child content.</summary>
      <returns>The index.</returns>
      <param name="content">The child content whose index is returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.OnChildrenCollectionChanged">
      <summary>Called when Children has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Called when Parent has changed.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.CanClose">
      <summary>Gets whether the pane can be closed.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.CanHide">
      <summary>Gets whether the pane can be hidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.IsDirectlyHostedInFloatingWindow">
      <summary>Gets whether the pane is hosted directly in a floating window (not in a LayoutAnchorablePaneGroup).</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.IsHostedInFloatingWindow">
      <summary>Gets whether the pane is hosted in a floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.Name">
      <summary>
        <para>Gets the name of the pane.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.SelectedContent">
      <summary>Gets the selected content in the pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.SelectedContentIndex">
      <summary>Gets or sets the index of the selected content in the pane.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorablePaneGroup class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorablePaneGroup class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane)">
      <summary>Initializes a new instance of the LayoutAnchorablePaneGroup class using the specified LayoutAnchorablePane instance as its first child element.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.GetVisibility">
      <summary>Gets whether any of the child LayoutAnchorablePane elements are
visible.</summary>
      <returns>
        <strong>true</strong> if any of the child LayoutAnchorablePane elements are visible; <strong>false</strong> if not (or if there are no child elements).</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.OnDockHeightChanged">
      <summary>
        <para>Called when the DockHeight property has
changed.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.OnDockWidthChanged">
      <summary>Called when the DockWidth property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.OnIsVisibleChanged">
      <summary>
        <para>Called when the IsVisible has changed.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWiter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePaneGroup.Orientation">
      <summary>Gets or sets the orientation of the pane group.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorGroup.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorGroup class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorGroup.GetVisibility">
      <summary>Gets whether the instance is visible.</summary>
      <returns>
        <strong>true</strong> if the instance is visible; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorGroup.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide.GetVisibility">
      <summary>Gets whether the instance is visible.</summary>
      <returns>
        <strong>true</strong> if the instance is visible; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Called when Parent has changed, updating the <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide~Side.html">Side</see> property.</summary>
      <param name="oldValue">The old container.</param>
      <param name="newValue">The new container.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutAnchorSide.Side">
      <summary>Gets the</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Close">
      <summary>Close the content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.CompareTo(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Compares the content of the current instance with the content of the specified object. If it the content cannot be compared, the titles are compared.</summary>
      <returns>Whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</returns>
      <param name="other">Content with which the calling instance will be compared.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Dock">
      <summary>Re-dock the content to its previous container</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.DockAsDocument">
      <summary>Dock the content as document</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Float">
      <summary>Programmatically creates a floating window of the content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.GetSchema">
      <summary>Returns <strong>null</strong>.</summary>
      <returns>
        <strong>null</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.InternalDock">
      <summary>Docks the content.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnClosed">
      <summary>Called when the Closed event has been raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Called when the Closing event has been raised.</summary>
      <param name="args">Event data.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnIsActiveChanged(System.Boolean,System.Boolean)">
      <summary>Provides derived classes an opportunity to handle changes to the IsActive property.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnIsSelectedChanged(System.Boolean,System.Boolean)">
      <summary>Provides derived classes an opportunity to handle changes to the IsSelected property.</summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Called when Parent has changed.</summary>
      <param name="oldValue">The old container.</param>
      <param name="newValue">The new container.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.OnParentChanging(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Provides an opportunity to execute code before Parent changes.</summary>
      <param name="oldValue">The old container.</param>
      <param name="newValue">The new container.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.TogglePin">
      <summary>
        <span id="BugEvents">Modifies the pin status of the LayoutDocument/LayoutAnchorable from unpinned to pinned (or vice-versa) in a LayoutDocumentPane.</span>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutContent.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.CanClose">
      <summary>Gets or sets whether the content can be closed definitively (removed from the layout and not just hidden).</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.CanFloat">
      <summary>Gets whether the content can be moved to a floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.CanTogglePin">
      <summary>
        <span id="BugEvents">Gets or sets if the LayoutDocument/LayoutAnchorable can use the toggle pin button when placed in a LayoutDocumentPane.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Content">
      <summary>Gets or sets the content of the LayoutContent instance.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.ContentId">
      <summary>
        <para>Gets or sets the ID of the content, which is used to identify the content during serialization/deserialization.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.FloatingHeight">
      <summary>Gets or sets the height that will be initially used when the content is dragged and then displayed in a floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.FloatingLeft">
      <summary>Gets or sets the left edge of a floating window that will contain this content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.FloatingTop">
      <summary>Gets or sets the top edge of a floating window that will contain this content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.FloatingWidth">
      <summary>Gets or sets the width that will be initially used when the content is dragged and then displayed in a floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IconSource">
      <summary>Gets the icon source of the content (displayed next on the tab).</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsActive">
      <summary>Gets whether the content is active.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsEnabled">
      <summary>
        <para>Gets or sets a value indicating whether the LayoutDocument or LayoutAnchorable is enabled.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsFloating">
      <summary>Gets or sets whether the content is in a floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsFloatingAsTopMost">
      <summary>Gets or sets if the LayoutAnchorable or LayoutDocument will appear over all other windows when floating.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsLastFocusedDocument">
      <summary>Gets whether the content is the last focused document.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsMaximized">
      <summary>Gets or sets whether a content element is maximized.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsPinned">
      <summary>
        <span id="BugEvents">Gets if the LayoutDocument/LayoutAnchorable is currently pinned in a LayoutDocumentPane.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsSelected">
      <summary>Gets or sets whether a content element is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.LastActivationTimeStamp">
      <summary>Gets or sets the date and time of the last activation of the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.PreviousContainer">
      <summary>Gets or sets the previous container of the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.PreviousContainerId">
      <summary>Gets or sets the ID of the previous container.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.PreviousContainerIndex">
      <summary>Gets or sets the index of the previous container.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Title">
      <summary>Gets or sets the title of the content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutContent.ToolTip">
      <summary>Gets or sets the tooltip of the content.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.LayoutContent.ContentIdProperty">
      <summary>Identifies the ContentId dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.AvalonDock.Layout.LayoutContent.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Closed">
      <summary>Raised when the content is closed (i.e., removed definitively from the layout).</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutContent.Closing">
      <summary>Raised when the content is about to be closed (i.e. removed definitively from the layout).</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsActiveChanged">
      <summary>Raised when the IsActive property has changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutContent.IsSelectedChanged">
      <summary>Raised when the IsSelected property has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.#ctor">
      <summary>Initializes a new instance of the LayoutDocument class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.InternalDock">
      <summary>
        <para>Docks the layout document.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Reads serialized layout information using the specified XmlReader</para>
      </summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para>Writes serialized layout information using the specified XmlWriter</para>
      </summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.CanMove">
      <summary>
        <span id="BugEvents">Gets or sets if the LayoutDocument can be re-ordered with the other LayoutDocuments.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.Description">
      <summary>
        <para>Gets or sets the document's description.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocument.IsVisible">
      <summary>Gets or sets whether the document is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.#ctor">
      <summary>Initializes a new instance of the LayoutAnchorableFloatingWindow class</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Removes the child element</summary>
      <param name="element">The child element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces a specified child element with a specified new element.</summary>
      <param name="oldElement">The old element.</param>
      <param name="newElement">The new element.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.Children">
      <summary>Gets the children of the floating window.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.ChildrenCount">
      <summary>Gets the number of children.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.IsValid">
      <summary>Gets whether the floating window is valid (whether RootDocument is null).</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.RootDocument">
      <summary>
        <para>Gets or sets the root document contained in the floating window.</para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentFloatingWindow.RootDocumentChanged">
      <summary>Raised when RootDocument has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentPane class</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentPane class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Initializes a new instance of the LayoutDocumentPane class using the specified content as its first child.</summary>
      <param name="firstChild">The content (LayoutAnchorable or <see cref="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocument.html">LayoutDocument</see>) to use as its first child.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.ChildMoved(System.Int32,System.Int32)">
      <summary>
        <para>Called when a child has been moved.</para>
      </summary>
      <param name="oldIndex">The old index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.GetVisibility">
      <summary>Gets whether the elment is visible.</summary>
      <returns>
        <strong>true</strong> if the element is visible; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.IndexOf(Xceed.Wpf.AvalonDock.Layout.LayoutContent)">
      <summary>Gets the index of the specified child content</summary>
      <returns>The index.</returns>
      <param name="content">The child content whose index is returned</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.OnChildrenCollectionChanged">
      <summary>Called when Children has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.OnIsVisibleChanged">
      <summary>Called when IsVisible has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane~ReadXml:reader|PARAM" class="dxeditwrapper" contenteditable="true">The XmlReader</span>
      </param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlReader.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.ChildrenSorted">
      <summary>Gets whether the child documents are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.SelectedContent">
      <summary>
        <span style="width: 100%;" id="ContentItemType|Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane~SelectedContent|SUMMARY" class="dxeditwrapper" contenteditable="true">Gets the selected content in the pane</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.SelectedContentIndex">
      <summary>Gets or sets the index of the selected content in the pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.ShowHeader">
      <summary>Gets or sets a value indicating whether the tab header should be shown.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentPaneGroup class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.#ctor">
      <summary>Initializes a new instance of the LayoutDocumentPaneGroup class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane)">
      <summary>Initializes a new instance of the LayoutDocumentPaneGroup class using the specified LayoutDocumentPane as its child.</summary>
      <param name="documentPane">The child document.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.GetVisibility">
      <summary>Gets whether any of the child LayoutDocumentPane elements are visible</summary>
      <returns>
        <strong>true</strong> if any of the child LayoutDocumentPane elements are visible; <strong>false</strong> if not (or if there are no child elements).</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>Reads serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPaneGroup.Orientation">
      <summary>Gets or sets the orientation of the pane group.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElement.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Provides derived classes an opportunity to handle changes to the Parent property.</summary>
      <param name="oldValue">The old container</param>
      <param name="newValue">The new container</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElement.OnParentChanging(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Provides derived classes an opportunity to execute code before the Parent property changes.</summary>
      <param name="oldValue">The old container.</param>
      <param name="newValue">The new container.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElement.OnRootChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutRoot,Xceed.Wpf.AvalonDock.Layout.ILayoutRoot)">
      <summary>Provides derived classes an opportunity to handle changes to the Root
property.</summary>
      <param name="oldRoot">The old root.</param>
      <param name="newRoot">The new root.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElement.RaisePropertyChanged(System.String)">
      <summary>Raises the PropertyChanged event for the specified
property name.</summary>
      <param name="propertyName">The property that has changed.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElement.RaisePropertyChanging(System.String)">
      <summary>Raises the PropertyChanging event for the specified
property name.</summary>
      <param name="propertyName">The property that is changing.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutElement.Parent">
      <summary>Gets or sets the parent container of the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutElement.Root">
      <summary>Gets or sets the root of the element.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutElement.PropertyChanged">
      <summary>Raised when a property has changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutElement.PropertyChanging">
      <summary>Raised when a property is about to change.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutElementEventArgs.#ctor(Xceed.Wpf.AvalonDock.Layout.LayoutElement)">
      <summary>Initializes a new instance of the LayoutElementEventArgs class.</summary>
      <param name="element">The layout element that is being acted upon.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutElementEventArgs.Element">
      <summary>Gets or sets the layout element that is being acted upon.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Removes the specified element.</summary>
      <param name="element">The element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces one element with another.</summary>
      <param name="oldElement">The old element.</param>
      <param name="newElement">The new, replacement element.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow.Children">
      <summary>Gets the floating windows child layout elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow.ChildrenCount">
      <summary>Gets the number of child layout elements the floating window contains.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutFloatingWindow.IsValid">
      <summary>Gets whether the floating window is valid.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ChildMoved(System.Int32,System.Int32)">
      <summary>
        <para>Called when a child has been moved.</para>
      </summary>
      <param name="oldIndex">The old index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ComputeVisibility">
      <summary>Determines whether an element is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.GetSchema">
      <summary>Returns null.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.GetVisibility">
      <summary>Gets whether the instance is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.IndexOfChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Returns the index of the specified child layout element.</summary>
      <returns>The index of the child layout element.</returns>
      <param name="element">The child layout element whose index will be returned.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.InsertChildAt(System.Int32,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Inserts the specified child layout element at the specified index.</summary>
      <param name="index">The index at which the child element will be inserted.</param>
      <param name="element">The element that will be inserted.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.MoveChild(System.Int32,System.Int32)">
      <summary>Moves a child from an old index to a new index within a pane</summary>
      <param name="oldIndex">The old index.</param>
      <param name="newIndex">The new index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.OnIsVisibleChanged">
      <summary>Called when IsVisible has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.OnParentChanged(Xceed.Wpf.AvalonDock.Layout.ILayoutContainer,Xceed.Wpf.AvalonDock.Layout.ILayoutContainer)">
      <summary>Called when Parent has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The specified XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Removes the specified child ILayoutElement.</summary>
      <param name="element">The child element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.RemoveChildAt(System.Int32)">
      <summary>Removes the child element at the specified index.</summary>
      <param name="childIndex">The index.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces a child ILayoutElement with a new one.</summary>
      <param name="oldElement">The old child element.</param>
      <param name="newElement">The replacement child element.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ReplaceChildAt(System.Int32,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces the child element at the specified index with the specified element.</summary>
      <param name="index">The index of the child element that will be replaced.</param>
      <param name="element">The replacement element.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.Children">
      <summary>Gets the child elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.ChildrenCount">
      <summary>Gets the number of child elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutGroup`1.IsVisible">
      <summary>Gets whether the layout group is visible.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroupBase.OnChildrenCollectionChanged">
      <summary>Called when the ChildrenCollectionChanged
event is raised.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutGroupBase.OnChildrenTreeChanged(Xceed.Wpf.AvalonDock.Layout.ChildrenTreeChange)">
      <summary>Called when the ChildrenTreeChanged event is raised.</summary>
      <param name="change">The manner in which changes to the children tree are made.</param>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutGroupBase.ChildrenCollectionChanged">
      <summary>Raised when the child collection changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutGroupBase.ChildrenTreeChanged">
      <summary>Raised when the children tree changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.#ctor">
      <summary>Initializes a new instance of the LayoutPanel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.#ctor">
      <summary>Initializes a new instance of the LayoutPanel class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.#ctor(Xceed.Wpf.AvalonDock.Layout.ILayoutPanelElement)">
      <summary>Initializes a new instance of the LayoutPanel class using the specified element as the first child.</summary>
      <param name="firstChild">The first child added to the panel.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.GetVisibility">
      <summary>Gets whether the panel is visible.</summary>
      <returns>
        <strong>true</strong> if the panel is visible; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPanel.Orientation">
      <summary>Gets or sets the orientation of the panes the panel contains.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.OnDockHeightChanged">
      <summary>Called when DockHeight has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.OnDockWidthChanged">
      <summary>Called when DockWidth has changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.ReadXml(System.Xml.XmlReader)">
      <summary>Reads serialized layout information using the specified XmlReader.</summary>
      <param name="reader">The XmlReader.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.WriteXml(System.Xml.XmlWriter)">
      <summary>Writes serialized layout information using the specified XmlWriter.</summary>
      <param name="writer">The XmlWriter.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.AllowDuplicateContent">
      <summary>&lt;P&gt;Gets or sets if&amp;nbsp;&lt;A href="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutDocumentPane.html"&gt;LayoutDocumentPane&lt;/A&gt;
(or&amp;nbsp;&lt;A href="Xceed.Wpf.AvalonDock~Xceed.Wpf.AvalonDock.Layout.LayoutAnchorablePane.html"&gt;LayoutAnchorablePane&lt;/A&gt;) allows the dropping of
duplicate contents (according to its Title and ContentId).&lt;/P&gt;&lt;innovasys:widget type="Note Box" layout="block"&gt;&lt;innovasys:widgetproperty
layout="block" name="Content"&gt;When set to false, the LayoutDocumentPane (or LayoutAnchorablePane) hides the OverlayWindow.DropInto button to prevent
dropping of duplicate content.&lt;/innovasys:widgetproperty&gt;&lt;/innovasys:widget&gt;</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.CanRepositionItems">
      <summary>Gets or sets a value indicating whether the <strong>LayoutDocuments</strong> can be repositioned in the <strong>LayoutDocumentPane</strong> via a drag of the
<strong>LayoutDocumentTabItems</strong>, or if the <strong>LayoutAnchorables</strong> can be repositioned in the <strong>LayoutAnchorablePane</strong> via a
drag of the <strong>LayoutAnchorableTabItems</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.DockHeight">
      <summary>Gets or sets the initial height of the dock.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.DockMinHeight">
      <summary>Gets or sets the minimum dock height.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.DockMinWidth">
      <summary>Gets or sets the minimum dock width.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.DockWidth">
      <summary>Gets or sets the initial width of the dock.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.FloatingHeight">
      <summary>
        <para>Gets or sets the initial height of floating windows.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.FloatingLeft">
      <summary>
        <para>Gets the initial position of the left side of a floating window.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.FloatingTop">
      <summary>
        <para>Gets the initial position of the topside of a floating window.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.FloatingWidth">
      <summary>Gets or sets the initial width of floating windows.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.IsFloatingAsTopMost">
      <summary>Gets or sets if a pane or group will appear over all other windows when floating.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutPositionableGroup`1.IsMaximized">
      <summary>Gets whether the element is maximized.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.#ctor">
      <summary>Initializes a new instance of the LayoutRoot class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.CollectGarbage">
      <summary>Removes any empty containers not directly referenced by other layout items.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.RemoveChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Removes the specified child element.</summary>
      <param name="element">The child element to remove.</param>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.ReplaceChild(Xceed.Wpf.AvalonDock.Layout.ILayoutElement,Xceed.Wpf.AvalonDock.Layout.ILayoutElement)">
      <summary>Replaces on child element with another.</summary>
      <param name="oldElement">The child element that will be replaced.</param>
      <param name="newElement">The replacement child element.</param>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.ActiveContent">
      <summary>Gets the active LayoutContent-derived element.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.BottomSide">
      <summary>Gets or sets the bottom side of the layout root.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.Children">
      <summary>Gets the child elements of the layout root.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.ChildrenCount">
      <summary>Gets the number of child elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.FloatingWindows">
      <summary>Gets the floating windows that are in the layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.Hidden">
      <summary>Gets the hidden anchorables in the layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.LastFocusedDocument">
      <summary>Gets the last focused content.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.LeftSide">
      <summary>Gets or sets the left side of the layout root.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.Manager">
      <summary>Gets the DockingManager that arranges the panes it contains and handles autohide anchorables and floating windows.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.RightSide">
      <summary>Gets or sets the right side of the layout root.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.RootPanel">
      <summary>Gets or sets the root layout panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.TopSide">
      <summary>Gets or sets the top side of the layout root.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.ElementAdded">
      <summary>Raised when an element is added to the layout.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.ElementRemoved">
      <summary>Raised when an element is removed from the layout.</summary>
    </member>
    <member name="E:Xceed.Wpf.AvalonDock.Layout.LayoutRoot.Updated">
      <summary>Raised when the layout is updated.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Properties.Resources">
      <summary>A strongly-typed resource class, for looking up localized strings, etc.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_AutoHide">
      <summary>Looks up a localized string similar to Auto Hide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_BtnAutoHide_Hint">
      <summary>Looks up a localized string similar to Auto Hide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_BtnClose_Hint">
      <summary>Looks up a localized string similar to Hide.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_CxMenu_Hint">
      <summary>Looks up a localized string similar to Window Position.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_Dock">
      <summary>Looks up a localized string similar to Dock.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_DockAsDocument">
      <summary>Looks up a localized string similar to Dock as Tabbed Document.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_Float">
      <summary>Looks up a localized string similar to Float.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Anchorable_Hide">
      <summary>Looks up a localized string similar to Close.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Culture">
      <summary>Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_Close">
      <summary>Looks up a localized string similar to Close.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_CloseAllButThis">
      <summary>Looks up a localized string similar to Close All But This.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_CxMenu_Hint">
      <summary>Looks up a localized string similar to Window Position.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_DockAsDocument">
      <summary>Looks up a localized string similar to Dock as Tabbed Document.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_Float">
      <summary>Looks up a localized string similar to Float.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_MoveToNextTabGroup">
      <summary>Looks up a localized string similar to Move To Next Tab Group.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_MoveToPreviousTabGroup">
      <summary>Looks up a localized string similar to Move To Previous Tab Group.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_NewHorizontalTabGroup">
      <summary>Looks up a localized string similar to New Horizontal Tab Group.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Document_NewVerticalTabGroup">
      <summary>Looks up a localized string similar to New Vertical Tab Group.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.ResourceManager">
      <summary>Returns the cached ResourceManager instance used by this class.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Window_Maximize">
      <summary>Looks up a localized string similar to Maximize.</summary>
    </member>
    <member name="P:Xceed.Wpf.AvalonDock.Properties.Resources.Window_Restore">
      <summary>Looks up a localized string similar to Restore.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Themes.GenericTheme">
      <summary>The generic theme for AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.Themes.Theme">
      <summary>Base class of the AvalonDock themes.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Themes.GenericTheme.#ctor">
      <summary>Initializes a new instance of the GenericTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Themes.GenericTheme.GetResourceUri">
      <summary>Returns the URI of the resource.</summary>
    </member>
    <member name="M:Xceed.Wpf.AvalonDock.Themes.Theme.GetResourceUri">
      <summary>Returns the URI of the resource.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.DockingManagerAutomationPeer">
      <summary>The AutomationPeer class used for DockingManagers in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.GenericAutomationPeer">
      <summary>The AutomationPeer class used to set the default Names, class names and AutomationIds in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.LayoutAnchorAutomationPeer">
      <summary>The AutomationPeer class used for LayoutAnchorControls in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.LayoutAnchorSideAutomationPeer">
      <summary>The AutomationPeer class used for LayoutAnchorSideControls in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.LayoutAutoHideAutomationPeer">
      <summary>The AutomationPeer class used for LayoutAutoHideWindowControls in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.TabControlAutomationPeer">
      <summary>The AutomationPeer class used for TabControls in AvalonDock.</summary>
    </member>
    <member name="T:Xceed.Wpf.AvalonDock.UIAutomation.WindowAutomationPeer">
      <summary>The AutomationPeer class used for Windows in AvalonDock.</summary>
    </member>
  </members>
</doc>